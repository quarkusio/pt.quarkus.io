# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy, no-wrap
msgid "How to Use Kafka, Schema Registry and Avro with Quarkus"
msgstr "Como utilizar o Kafka, o Schema Registry e o Avro com o Quarkus"

#. type: YAML Front Matter: synopsis
#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy, no-wrap
msgid "How to Use Kafka, Schema Registry, and Avro with Quarkus"
msgstr "Como utilizar o Kafka, o Schema Registry e o Avro com o Quarkus"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"In the Kafka world, Apache Avro is by far the most used serialization protocol.\n"
"Avro is a data serialization system.\n"
"Combined with Kafka, it provides schema-based, robust, and fast binary serialization."
msgstr "No mundo do Kafka, o Apache Avro é, de longe, o protocolo de serialização mais usado. O Avro é um sistema de serialização de dados. Combinado com o Kafka, ele fornece serialização binária rápida, robusta e baseada em esquema."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"In this blog post, we will see how you can use Avro with a schema registry in a Quarkus application.\n"
"This blog focuses on the JVM mode.\n"
"We will cover the native mode in another post."
msgstr "Nesta postagem do blog, veremos como usar o Avro com um registro de esquema em um aplicativo Quarkus. Este blog se concentra no modo JVM. Abordaremos o modo nativo em outro post."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"We will write a simple application receiving HTTP requests, writing the payload into Kafka, and reading them from Kafka.\n"
"For simplicity, the same application will write into Kafka and read from it, but obviously, it would be different applications in the real world."
msgstr "Vamos escrever um aplicativo simples que recebe solicitações HTTP, grava a carga útil no Kafka e a lê no Kafka. Para simplificar, o mesmo aplicativo escreverá no Kafka e lerá dele, mas, obviamente, seriam aplicativos diferentes no mundo real."

#. type: Plain text
#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-avro/architecture.png[]"
msgstr "image:/assets/images/posts/kafka-avro/architecture.png[alt=architecture]"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "How to start"
msgstr "Como começar"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"Well, let's start from the beginning.\n"
"Go to https://code.quarkus.io to create your project, and select the following extension:"
msgstr "Bem, vamos começar do início. Acesse https://code.quarkus.io para criar seu projeto e selecione a seguinte extensão:"

#. type: Plain text
#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "RESTEasy JSON-B"
msgstr "RESTEasy JSON-B"

#. type: Plain text
#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "SmallRye Reactive Messaging - Kafka Connector"
msgstr "SmallRye Reactive Messaging - Conector Kafka"

#. type: Plain text
#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Apache Avro"
msgstr "Apache Avro"

#. type: Plain text
#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-avro/project.png[]"
msgstr "image:/assets/images/posts/kafka-avro/project.png[alt=project]"

#. type: Plain text
#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Download the project and open it in your favorite IDE."
msgstr "Descarregue o projeto e abra-o no seu IDE favorito."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"We need to add a few more content to the generated `pom.xml`.\n"
"Open the `pom.xml` file and add the following `dependency`:"
msgstr "Precisamos adicionar mais alguns conteúdos ao arquivo gerado `pom.xml` . Abra o arquivo `pom.xml` e adicione o seguinte `dependency` :"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"This dependency provides Avro serializer and deserializer.\n"
"There are multiple versions of this _serde_.\n"
"In this blog post, we use the ones provided by Apicurio.\n"
"You can also use Confluent's one (the artifact is not on Maven Central, so you need to add an extra repository)."
msgstr "Essa dependência fornece o serializador e desserializador Avro. Há várias versões desse _serializador_ . Nesta postagem do blog, usamos as fornecidas pela Apicurio. O senhor também pode usar a do Confluent (o artefato não está no Maven Central, portanto, é necessário adicionar um repositório extra)."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"We also need to add the `avro-maven-plugin`.\n"
"Under `<build><plugins>`, add:"
msgstr "Também precisamos adicionar o `avro-maven-plugin` . Em `<build><plugins>` , adicione:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"This plugin generates the code from Avro schema files located in the `src/main/avro` directory.\n"
"With this setup, we can finally start to write some code."
msgstr "Esse plug-in gera o código a partir dos arquivos de esquema Avro localizados no diretório `src/main/avro` . Com essa configuração, podemos finalmente começar a escrever algum código."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "The Avro schema"
msgstr "O esquema Avro"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"First, we need to write the schema representing the object we will read and write in Kafka.\n"
"Create the `src/main/avro/movie.avsc` file with the following content:"
msgstr "Primeiro, precisamos escrever o esquema que representa o objeto que leremos e escreveremos no Kafka. Crie o arquivo `src/main/avro/movie.avsc` com o seguinte conteúdo:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"The `avro-maven-plugin`, configured in the `pom.xml` file, generates the `me.escoffier.quarkus.Movie` class with the `title` and `year` attributes.\n"
"To generate the class, run:"
msgstr "O `avro-maven-plugin` , configurado no arquivo `pom.xml` , gera a classe `me.escoffier.quarkus.Movie` com os atributos `title` e `year` . Para gerar a classe, execute:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "The Movie Resource"
msgstr "O recurso do filme"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"The first class we will write receives HTTP requests and writes the (Movie) payload into Kafka.\n"
"Create the `src/main/java/me/escoffier/MovieResource.java` with the following content:"
msgstr "A primeira classe que escreveremos recebe solicitações HTTP e grava o payload (Movie) no Kafka. Crie o site `src/main/java/me/escoffier/MovieResource.java` com o seguinte conteúdo:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"This JAX-RS resource is straightforward.\n"
"It has a single endpoint method, receiving JSON payload on `/movies`.\n"
"RESTEasy maps the JSON document into `Movie` objects automatically.\n"
"As described in the `avsc` file, the expected JSON contains two fields: `title` and `year`."
msgstr "Esse recurso JAX-RS é simples. Ele tem um único método de endpoint, que recebe a carga útil JSON em `/movies` . O RESTEasy mapeia automaticamente o documento JSON em objetos `Movie` . Conforme descrito no arquivo `avsc` , o JSON esperado contém dois campos: `title` e `year` ."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"When using Quarkus with Reactive Messaging, you don't interact with Kafka directly.\n"
"You inject an `Emitter`, which sends an object (our movie) to a _channel_.\n"
"The application configuration maps this channel to a Kafka topic."
msgstr "Ao usar o Quarkus com mensagens reativas, o senhor não interage diretamente com o Kafka. O senhor injeta um `Emitter` , que envia um objeto (nosso filme) para um _canal_ . A configuração do aplicativo mapeia esse canal para um tópico do Kafka."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Speaking about configuration, open the `src/main/resources/application.properties`, and add:"
msgstr "Falando em configuração, abra o site `src/main/resources/application.properties` e adicione:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"This configuration requires a bit of an explanation.\n"
"First, `mp.messaging.connector.smallrye-kafka.apicurio.registry.url` configure the schema registry URL.\n"
"If you use the Confluent _serde_, instead of the Apicurio one, the property is named `mp.messaging.connector.smallrye-kafka.schema.registry.url`."
msgstr "Essa configuração requer um pouco de explicação. Primeiro, `mp.messaging.connector.smallrye-kafka.apicurio.registry.url` configure o URL de registro do esquema. Se o senhor usar o _serviço_ Confluent, em vez do Apicurio, a propriedade terá o nome `mp.messaging.connector.smallrye-kafka.schema.registry.url` ."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"The `mp.messaging.outgoing.movies` configure the `movies` channel.\n"
"The `connector` attribute indicates that the SmallRye Kafka connector manages the channel.\n"
"The `topic` attribute (which we could omit in this case as it matches the channel name) specifies the topic's name.\n"
"`value.serializer` sets the serializer to use.\n"
"Here we use `io.apicurio.registry.utils.serde.AvroKafkaSerializer` provided by Apicurio.\n"
"The `registry.*` properties configure how the registry handles the schema."
msgstr "O atributo `mp.messaging.outgoing.movies` configura o canal `movies` . O atributo `connector` indica que o conector SmallRye Kafka gerencia o canal. O atributo `topic` (que poderíamos omitir neste caso, pois corresponde ao nome do canal) especifica o nome do tópico. `value.serializer` define o serializador a ser usado. Aqui usamos o `io.apicurio.registry.utils.serde.AvroKafkaSerializer` fornecido pela Apicurio. As propriedades `registry.*` configuram como o registro lida com o esquema."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "The movie consumer"
msgstr "O consumidor de filmes"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"The second half of the application is even simpler.\n"
"It just logs the received movies."
msgstr "A segunda parte do aplicativo é ainda mais simples. Ela apenas registra os filmes recebidos."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Creates the `src/main/java/me/escoffier/MovieConsumer.java` with the following content:"
msgstr "Cria o site `src/main/java/me/escoffier/MovieConsumer.java` com o seguinte conteúdo:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"The `@Incoming` annotation indicates that the method is called for each `Movie` object transiting on the `movies-from-kafka` channel.\n"
"In this case, we simply write a log message."
msgstr "A anotação `@Incoming` indica que o método é chamado para cada objeto `Movie` em trânsito no canal `movies-from-kafka` . Nesse caso, simplesmente escrevemos uma mensagem de registro."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"We are almost there.\n"
"We need to configure the reception from Kafka.\n"
"Re-open the `application.properties` and add:"
msgstr "Estamos quase lá. Precisamos configurar a recepção do Kafka. Abra novamente o site `application.properties` e adicione:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"These properties map the `movies-from-kafka` to the `movies` Kafka topic.\n"
"It also configures the deserializer (`io.apicurio.registry.utils.serde.AvroKafkaDeserializer`).\n"
"We disable Kafka auto-commit (`enable.auto.commit=false`), as Reactive Messaging handles the offset commit for you."
msgstr "Essas propriedades mapeiam o `movies-from-kafka` para o tópico `movies` do Kafka. Elas também configuram o desserializador ( `io.apicurio.registry.utils.serde.AvroKafkaDeserializer` ). Desativamos o auto-compromisso do Kafka ( `enable.auto.commit=false` ), pois o Reactive Messaging lida com o compromisso de deslocamento para o senhor."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Because the sender and receiver are colocalized in the same application, we cannot use the same channel name."
msgstr "Como o emissor e o receptor estão localizados no mesmo aplicativo, não podemos usar o mesmo nome de canal."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "A bit of infrastructure"
msgstr "Um pouco de infraestrutura"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Before running the application, we need:"
msgstr "Antes de executar o aplicativo, precisamos:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "A Kafka broker"
msgstr "Um corretor Kafka"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "The Apicurio schema registry"
msgstr "O registro do esquema Apicurio"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Create the `docker-compose.yaml` file at the root of your project with the following content:"
msgstr "Crie o arquivo `docker-compose.yaml` na raiz do seu projeto com o seguinte conteúdo:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"This `docker-compose` file starts everything we need.\n"
"You may wonder about some of the properties of the Apicurio registry.\n"
"Actually, the Apicurio registry is also a Quarkus application."
msgstr "Esse arquivo `docker-compose` inicia tudo o que precisamos. O senhor pode se perguntar sobre algumas das propriedades do registro do Apicurio. Na verdade, o registro do Apicurio também é um aplicativo Quarkus."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Time to run"
msgstr "Hora de correr"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"Alright, let's get this rolling.\n"
"First, start the infrastructure with:"
msgstr "Muito bem, vamos começar a trabalhar. Primeiro, inicie a infraestrutura com:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Stop the infrastructure with `docker-compose down; docker-compose rm`"
msgstr "Interrompa a infraestrutura com `docker-compose down; docker-compose rm`"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Then, start the application:"
msgstr "Em seguida, inicie o aplicativo:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Once start, open another terminal and _post_ movies:"
msgstr "Depois de iniciar, abra outro terminal e _publique_ os filmes:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "In the application log, you should see:"
msgstr "No registro do aplicativo, o senhor deve ver:"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Conclusion"
msgstr "Conclusão"

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid ""
"Done!\n"
"In just a few code lines and a bit of configuration, we can integrate Kafka, Avro, and a schema registry in a Quarkus application!\n"
"You can found the code of this demo on https://github.com/cescoffier/quarkus-kafka-and-avro. The readme file contains the instructions to run it."
msgstr "Pronto! Com apenas algumas linhas de código e um pouco de configuração, podemos integrar o Kafka, o Avro e um registro de esquema em um aplicativo Quarkus! O senhor pode encontrar o código dessa demonstração em link:https://github.com/cescoffier/quarkus-kafka-and-avro[https://github.com/cescoffier/quarkus-kafka-and-avro.] O arquivo readme contém as instruções para executá-la."

#: _posts/2020-09-22-kafka-avro.adoc
#, fuzzy
msgid "Quarkus 1.9 will be a lots of new goodies around messaging and reactive in general. Stay tuned!"
msgstr "O Quarkus 1.9 trará muitas novidades em relação a mensagens e reativo em geral. Fique ligado!"
