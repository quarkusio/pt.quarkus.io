# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy, no-wrap
msgid "Unused Beans and Why We Remove Them"
msgstr "Feijões não utilizados e por que os removemos"

#. type: YAML Front Matter: synopsis
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy, no-wrap
msgid "Why does Quarkus detect and remove unused beans by default?"
msgstr "Porque é que o Quarkus detecta e remove feijões não utilizados por defeito?"

#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid ""
"Quarkus is a build-time oriented stack, i.e. it tries to do as much as possible at build time to improve the startup time and memory usage of your application.\n"
"However, it's not always so easy and straightforward as many existing frameworks and libraries do not take this design choice into account.\n"
"And CDI is one of them."
msgstr "O Quarkus é uma pilha orientada para o tempo de compilação, ou seja, ele tenta fazer o máximo possível no tempo de compilação para melhorar o tempo de inicialização e o uso de memória do seu aplicativo. No entanto, isso nem sempre é tão fácil e direto, pois muitas estruturas e bibliotecas existentes não levam em conta essa escolha de design. E o CDI é um deles."

#. type: Title ==
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy, no-wrap
msgid "Why Bother"
msgstr "Porquê incomodar"

#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid ""
"A traditional CDI container attempts to find all beans during the application bootstrap.\n"
"For each bean a metadata object is created and kept for the lifetime of the application.\n"
"This allows for certain degree of dynamicity at runtime but it's suboptimal when it comes to memory consumption and application startup time.\n"
"Quarkus, on the other hand, attempts to detect and remove all _unused_ beans, interceptors and decorators during build by default.\n"
"And the reason is simple.\n"
"This optimization helps to minimize the amount of generated classes and the number of metadata objects used at runtime, thus conserving memory."
msgstr "Um contêiner CDI tradicional tenta encontrar todos os beans durante a inicialização do aplicativo. Para cada bean, um objeto de metadados é criado e mantido durante o tempo de vida do aplicativo. Isso permite um certo grau de dinamismo no tempo de execução, mas não é o ideal quando se trata de consumo de memória e tempo de inicialização do aplicativo. O Quarkus, por outro lado, tenta detectar e remover todos os beans, interceptores e decoradores _não utilizados_ durante a compilação por padrão. E o motivo é simples. Essa otimização ajuda a minimizar a quantidade de classes geradas e o número de objetos de metadados usados no tempo de execução, conservando assim a memória."

#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid ""
"Speaking of generated classes.\n"
"The bean discovery, validation and wiring all components together - all this is perfomed at build time.\n"
"Quarkus then stores the collected metadata in the bytecode, i.e. for each bean one or more classes are generated.\n"
"In order to fullfill some basic CDI API requirements, a bean has at least a corresponding `javax.enterprise.inject.spi.Bean` implementation.\n"
"If it's a normal scoped bean then a client proxy class must be also generated.\n"
"Finally, intercepted and decorated beans require some more internal constructs."
msgstr "Falando em classes geradas. A descoberta do bean, a validação e a conexão de todos os componentes - tudo isso é realizado no momento da construção. Em seguida, o Quarkus armazena os metadados coletados no bytecode, ou seja, para cada bean são geradas uma ou mais classes. Para atender a alguns requisitos básicos da API CDI, um bean tem pelo menos uma implementação `javax.enterprise.inject.spi.Bean` correspondente. Se for um bean com escopo normal, uma classe proxy de cliente também deverá ser gerada. Por fim, os beans interceptados e decorados exigem mais algumas construções internas."

#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid ""
"Imagine that your application contains 50 beans that are actually not used anywhere.\n"
"If they have a normal scope (e.g. `@ApplicationScoped`) and are intercepted (e.g. declare a method annotated with `@Transactional`) you can expect more than 150 generated classes.\n"
"And these classes are completely useless.\n"
"Still, the container would have to instantiate and hold a reference on those 50+ bean metadata classes.\n"
"Needless to say, that the bean classes and any referenced classes cannot be a subject to dead code elimination when a native image is generated.\n"
"Therefore, Quarkus implements an algorithm to get rid of all these classes."
msgstr "Imagine que seu aplicativo contenha 50 beans que, na verdade, não são usados em lugar algum. Se eles tiverem um escopo normal (por exemplo, `@ApplicationScoped` ) e forem interceptados (por exemplo, declarar um método anotado com `@Transactional` ), o senhor pode esperar mais de 150 classes geradas. E essas classes são completamente inúteis. Ainda assim, o contêiner teria que instanciar e manter uma referência a essas mais de 50 classes de metadados do bean. Não é preciso dizer que as classes de bean e quaisquer classes referenciadas não podem estar sujeitas à eliminação de código morto quando uma imagem nativa é gerada. Portanto, o Quarkus implementa um algoritmo para se livrar de todas essas classes."

#. type: Title ==
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy, no-wrap
msgid "What’s Actually Removed?"
msgstr "O que é efetivamente removido?"

#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid ""
"Quarkus first identifies so-called _unremovable_ beans that form the roots in the dependency tree.\n"
"Unremovable beans:"
msgstr "O Quarkus identifica primeiro os chamados beans _não removíveis_ que formam as raízes da árvore de dependência. Beans não removíveis:"

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "declare an observer method, or"
msgstr "declarar um método de observador, ou"

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "have a name designated via `@Named`, or"
msgstr "têm um nome designado através de `@Named`, ou"

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "are annotated with `@io.quarkus.arc.Unremovable`, or"
msgstr "são anotadas com `@io.quarkus.arc.Unremovable`, ou"

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "are excluded via the `quarkus.arc.unremovable-types` config property, or"
msgstr "são excluídos através da propriedade de configuração `quarkus.arc.unremovable-types`, ou"

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "are otherwise identified by Quarkus extensions."
msgstr "são identificados de outra forma por extensões Quarkus."

#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid ""
"The last point is probably most important, because this is how application entry points are made unremovable.\n"
"A good example is a JAX-RS resource class, identified by the RESTEasy extension.\n"
"Another example is a bean which declares a `@Scheduled` method, identified by the Scheduler extension."
msgstr "O último ponto é provavelmente o mais importante, pois é assim que os pontos de entrada do aplicativo se tornam inamovíveis. Um bom exemplo é uma classe de recurso JAX-RS, identificada pela extensão RESTEasy. Outro exemplo é um bean que declara um método `@Scheduled` , identificado pela extensão Scheduler."

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "An _unused_ bean:"
msgstr "Um feijão _não utilizado_:"

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "is not unremovable, and"
msgstr "não é inamovível, e"

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "is not eligible for injection to any injection point in the dependency tree, and"
msgstr "não é elegível para injeção em qualquer ponto de injeção na árvore de dependências, e"

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "does not declare any producer which is eligible for injection to any injection point in the dependency tree, and"
msgstr "não declara qualquer produtor que seja elegível para injeção em qualquer ponto de injeção na árvore de dependências, e"

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "is not eligible for injection into any `javax.enterprise.inject.Instance` or `javax.inject.Provider` injection point."
msgstr "não é elegível para injeção em qualquer ponto de injeção `javax.enterprise.inject.Instance` ou `javax.inject.Provider`."

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "Finally, unused interceptors and decorators are not associated with any bean."
msgstr "Por fim, os interceptores e decoradores não utilizados não estão associados a nenhum bean."

#. type: Plain text
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid "When using the dev mode (e.g. running `./mvnw quarkus:dev`), you can see more information about which beans are being removed in the Dev UI."
msgstr "Ao usar o modo de desenvolvimento (por exemplo, executando `./mvnw quarkus:dev`), é possível ver mais informações sobre quais beans estão sendo removidos na interface de desenvolvimento."

#. type: Title ==
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy, no-wrap
msgid "Main Drawback"
msgstr "Principal desvantagem"

#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid ""
"But there's one problem.\n"
"Quarkus can't detect the programmatic lookup performed via the `CDI.current()` static method.\n"
"Therefore, it is possible that a certain bean removal results in a false positive error, i.e. a bean is removed although it's actually used.\n"
"In such cases, you'll notice a big warning in the log.\n"
"Of course, users and extension authors have several options how to eliminate these errors.\n"
"For users, the easiest way is to add a special annotation: `@io.quarkus.arc.Unremovable` or use the `quarkus.arc.unremovable-types` config property.\n"
"Finally, it's also possible to disable this optimization via the `quarkus.arc.remove-unused-beans=false` config property."
msgstr "Mas há um problema. O Quarkus não consegue detectar a pesquisa programática realizada por meio do método estático `CDI.current()` . Portanto, é possível que uma determinada remoção de bean resulte em um erro falso positivo, ou seja, um bean é removido embora seja realmente usado. Nesses casos, o senhor notará um grande aviso no log. Obviamente, os usuários e os autores de extensões têm várias opções para eliminar esses erros. Para os usuários, a maneira mais fácil é adicionar uma anotação especial: `@io.quarkus.arc.Unremovable` ou usar a propriedade de configuração `quarkus.arc.unremovable-types` . Por fim, também é possível desativar essa otimização por meio da propriedade de configuração `quarkus.arc.remove-unused-beans=false` ."

#. type: Title ==
#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#: _posts/2021-09-23-unused-beans.adoc
#, fuzzy
msgid ""
"Quarkus detects and removes unused beans to help you on your way to a subatomic application.\n"
"And if something goes wrong, there are options that make it possible to configure the behavior of this optimization."
msgstr "O Quarkus detecta e remove beans não utilizados para ajudá-lo no caminho para um aplicativo subatômico. E se algo der errado, há opções que possibilitam configurar o comportamento dessa otimização."
