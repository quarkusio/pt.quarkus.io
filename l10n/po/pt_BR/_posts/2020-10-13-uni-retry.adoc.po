# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy, no-wrap
msgid "Mutiny - How does retry... retries?"
msgstr "Mutiny - Como é que o retry... volta a tentar?"

#. type: YAML Front Matter: synopsis
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy, no-wrap
msgid "How does `retry` actually work?"
msgstr "Como é que o `retry` funciona realmente?"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"Last week, David, a Quarkus user, asked me about retrying an asynchronous operation.\n"
"David has a _picky_ remote HTTP service, which sometimes misbehaves.\n"
"Easy answer!\n"
"Just do: `uni.onFailure().retry().atMost(x)`.\n"
"But, David is curious, and asked me a second question: how does retry work?\n"
"Well, that’s simple; it just retries...\n"
"As you can imagine, that did not satisfy David’s curiosity."
msgstr "Na semana passada, David, um usuário do Quarkus, perguntou-me sobre tentar novamente uma operação assíncrona. David tem um serviço HTTP remoto _exigente_ , que às vezes se comporta mal. Resposta fácil! Basta fazer: `uni.onFailure().retry().atMost(x)` . Mas David está curioso e me fez uma segunda pergunta: como funciona o retry? Bem, isso é simples; ele apenas tenta novamente... Como o senhor pode imaginar, isso não satisfez a curiosidade de David."

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"While I was answering to David, I realized that retrying is not that simple and deserves more explanation.\n"
"That’s what we are going to see in this blog post."
msgstr "Enquanto respondia a David, percebi que a repetição não é tão simples e merece mais explicações. É isso que veremos nesta postagem do blog."

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "Disclaimer about retries"
msgstr "Isenção de responsabilidade sobre novas tentativas"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"Okay, if you are the kind of reader who skips the terms and conditions, you can jump to the next section.\n"
"But, for others, I need to warn you about retries.\n"
"Retries may not be the solution to your problem, as it can be terrible.\n"
"Retrying can only be done if your system can handle duplicated requests or messages.\n"
"In other words, you can only retry if your system is idempotent, i.e., sending a request or a message multiple times does not change the overall state.\n"
"In doubt, check before implementing a retry, as it can harm your system."
msgstr "Certo, se o senhor for o tipo de leitor que pula os termos e condições, pode pular para a próxima seção. Mas, para os outros, preciso avisá-lo sobre novas tentativas. As novas tentativas podem não ser a solução para o seu problema, pois podem ser terríveis. As novas tentativas só podem ser feitas se o seu sistema puder lidar com solicitações ou mensagens duplicadas. Em outras palavras, o senhor só pode tentar novamente se o sistema for idempotente, ou seja, enviar uma solicitação ou uma mensagem várias vezes não altera o estado geral. Em caso de dúvida, verifique antes de implementar uma nova tentativa, pois isso pode prejudicar o sistema."

#. type: Plain text
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "Disclaimer said! Let’s look under the hood of retry."
msgstr "Aviso legal dito! Vamos dar uma olhadela nos bastidores do retry."

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "Retry is about resubscribing"
msgstr "O Retry se refere à nova assinatura"

#. type: Plain text
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "Let’s imagine you have a `Uni` representing your asynchronous action, like in David’s case, an invocation of a remote service:"
msgstr "Imaginemos que tem um `Uni` que representa a sua ação assíncrona, como no caso do David, uma invocação de um serviço remoto:"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"Unis are lazy.\n"
"Until someone subscribes to them, nothing happens.\n"
"In our case, the request is only sent to the remote service when someone subscribes to the `uni`.\n"
"So to execute the request, we need to subscribe:"
msgstr "As Unis são preguiçosas. Até que alguém se inscreva nelas, nada acontece. No nosso caso, a solicitação só é enviada ao serviço remoto quando alguém se inscreve no `uni` . Portanto, para executar a solicitação, precisamos nos inscrever:"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"In Quarkus, most of the time, you return the `Uni`, and Quarkus subscribes to it.\n"
"So, don't be mistaken, there is a subscription, you may not see it."
msgstr "No Quarkus, na maioria das vezes, o senhor devolve o `Uni` , e o Quarkus o assina. Portanto, não se engane, há uma assinatura, mas o senhor pode não vê-la."

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"This laziness is the retry secret.\n"
"In the following sequence diagram, you can see that the request is sent when we get a subscriber:"
msgstr "Essa preguiça é o segredo do retry. No diagrama de sequência a seguir, o senhor pode ver que a solicitação é enviada quando recebemos um assinante:"

#. type: Plain text
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "image:/assets/images/posts/mutiny-retry/subscription.png[]"
msgstr "image:/assets/images/posts/mutiny-retry/subscription.png[alt=subscription]"

#. type: Plain text
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "An interesting consequence of this is that if you subscribe twice, you emit two requests, and so get two responses:"
msgstr "Uma consequência interessante deste facto é que se subscrever duas vezes, emite dois pedidos e recebe duas respostas:"

#. type: Plain text
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "image:/assets/images/posts/mutiny-retry/double-subscription.png[]"
msgstr "image:/assets/images/posts/mutiny-retry/double-subscription.png[alt=double subscription]"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"But let’s go back to retry.\n"
"What’s a retry?\n"
"A retry is a reaction to a failure, so you are going to write: `uni.onFailure().retry()`.\n"
"You also need to indicate how long do you want to retry:"
msgstr "Mas vamos voltar ao retry. O que é um retry? Um retry é uma reação a uma falha, portanto, o senhor escreverá: `uni.onFailure().retry()` . O senhor também precisa indicar por quanto tempo deseja tentar novamente:"

#. type: Plain text
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "In this snippet, we retry _indefinitely_ until we get a successful result."
msgstr "Neste snippet, tentamos _indefinidamente_ até obtermos um resultado bem-sucedido."

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"But, how does it work under the hood?\n"
"It’s quite simple.\n"
"If it gets a failure, it just re-subscribes:"
msgstr "Mas como ele funciona por baixo do capô? É muito simples. Se houver uma falha, ele simplesmente volta a se inscrever:"

#. type: Plain text
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "image:/assets/images/posts/mutiny-retry/retry.png[]"
msgstr "image:/assets/images/posts/mutiny-retry/retry.png[alt=retry]"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"It resubscribes until it gets a successful response.\n"
"In other words, retrying is resubscribing."
msgstr "Ele se inscreve novamente até obter uma resposta bem-sucedida. Em outras palavras, tentar novamente é assinar novamente."

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "How many times should I retry?"
msgstr "Quantas vezes devo tentar novamente?"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"That’s always a good question.\n"
"Should I retry _indefinitely_?\n"
"Most probably, not.\n"
"Indefinitely can be very long, and it could never end if the called service fails continuously."
msgstr "Essa é sempre uma boa pergunta. Devo tentar novamente por tempo _indeterminado_ ? Muito provavelmente, não. Indefinidamente pode ser muito longo e pode nunca terminar se o serviço chamado falhar continuamente."

#. type: Plain text
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "You can configure the number of retries using `atMost`:"
msgstr "É possível configurar o número de tentativas utilizando `atMost`:"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"`atMost` indicates that at most `n` attempts will be done before failing.\n"
"If we still get a failure after that number of resubscription, the last failure is sent to the subscriber."
msgstr "`atMost` indica que no máximo `n` tentativas serão feitas antes de falhar. Se ainda assim houver uma falha após esse número de reinscrições, a última falha será enviada ao assinante."

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "image:/assets/images/posts/mutiny-retry/retry-failed.png[]"
msgstr "image:/assets/images/posts/mutiny-retry/retry-failed.png[alt=\"retry failed\"]"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "You can also use `until` and decide to retry by looking at the received failure:"
msgstr "O senhor também pode usar o site `until` e decidir tentar novamente observando a falha recebida:"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "Bonus: Exponential backoff"
msgstr "Bônus: backoff exponencial"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"So far, our retries happen immediately.\n"
"It might not be very wise, and separating a bit our retries may give better results, especially when facing intermittent failures due to the load or other external causes.\n"
"Using exponential backoff provides a reasonable tradeoff.\n"
"Retrying with exponential backoff:"
msgstr "Até o momento, nossas novas tentativas acontecem imediatamente. Isso pode não ser muito sábio, e separar um pouco nossas novas tentativas pode dar melhores resultados, especialmente quando se enfrentam falhas intermitentes devido à carga ou a outras causas externas. O uso do backoff exponencial oferece uma compensação razoável. Repetição de tentativas com backoff exponencial:"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "retries after an initial delay,"
msgstr "tenta novamente após um atraso inicial,"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "on every failure, it doubles the previous delay, with an optional maximum,"
msgstr "Em cada falha, ele dobra o atraso anterior, com um máximo opcional,"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "it can use a jitter to add a random duration to the delay,"
msgstr "ele pode usar um jitter para adicionar uma duração aleatória ao atraso,"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "it can have a max delay if needed,"
msgstr "ele pode ter um atraso máximo, se necessário,"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "it is still constrained by `atMost`"
msgstr "ele ainda é limitado por `atMost`"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"This last snippet configures the retry with exponential backoff.\n"
"The first retry happens after 1 second, and then it doubles every time without an upper limit.\n"
"Random jitter is applied to delays.\n"
"If, unfortunately, after ten attempts, it still fails, the failure is sent to the subscriber."
msgstr "Esse último snippet configura a nova tentativa com backoff exponencial. A primeira tentativa ocorre após 1 segundo e, em seguida, dobra a cada vez sem um limite superior. O jitter aleatório é aplicado aos atrasos. Se, infelizmente, após dez tentativas, ele ainda falhar, a falha será enviada ao assinante."

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "Demo time!"
msgstr "Hora da demonstração!"

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"Ok, enough talking.\n"
"I’ve built a simple playground where you can adjust and try the various retry policies: https://gist.github.com/cescoffier/e9abce907a1c3d05d70bea3dae6dc3d5.\n"
"You can _jbang_ the script by downloading it and running `jbang Retry.java`, or just run:"
msgstr "Ok, chega de conversa. Criei um playground simples em que o senhor pode ajustar e experimentar as várias políticas de repetição: link:https://gist.github.com/cescoffier/e9abce907a1c3d05d70bea3dae6dc3d5[https://gist.github.com/cescoffier/e9abce907a1c3d05d70bea3dae6dc3d5.] O senhor pode fazer o _jbang_ do script baixando-o e executando `jbang Retry.java` , ou simplesmente executar:"

#. type: Plain text
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "The called service fails 50% of the time (well, it uses a random, so statistically 50% of the time)."
msgstr "O serviço chamado falha 50% das vezes (bem, usa um aleatório, portanto estatisticamente 50% das vezes)."

#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid ""
"That concludes this blog post.\n"
"Again, before using retry, please verify that your system can support it.\n"
"Retrying is resubscribing.\n"
"You can configure how long, how many times, and when retrying should be attempted.\n"
"There are many more options offered by Mutiny, like `when` or using deadlines (`expireIn` and `expireAt`) when using exponential backoff.\n"
"You can try all these with the provided playground."
msgstr "Isso conclui esta postagem do blog. Novamente, antes de usar o retry, verifique se o seu sistema é compatível com ele. Repetir é fazer uma nova assinatura. O senhor pode configurar por quanto tempo, quantas vezes e quando deve ser tentada a nova tentativa. Há muitas outras opções oferecidas pelo Mutiny, como `when` ou o uso de prazos ( `expireIn` e `expireAt` ) ao usar o backoff exponencial. O senhor pode experimentar todas elas com o playground fornecido."

#. type: Plain text
#: _posts/2020-10-13-uni-retry.adoc
#, fuzzy
msgid "Stay tuned! We have plenty of other gems to discuss here!"
msgstr "Fiquem atentos! Temos muitas outras jóias para discutir aqui!"
