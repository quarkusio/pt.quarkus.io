# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:1
#, fuzzy, no-wrap
msgid "gsmet"
msgstr "gsmet"

#. type: YAML Front Matter: date
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:1
#, fuzzy, no-wrap
msgid "2022-08-30"
msgstr "2022-08-30"

#. type: YAML Front Matter: layout
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "posto"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:1
#, fuzzy, no-wrap
msgid "The unique build infrastructure of Quarkus allows you to solve complex issues in a very simple way by developing custom extensions."
msgstr "A infraestrutura de construção única do Quarkus permite-lhe resolver problemas complexos de uma forma muito simples, desenvolvendo extensões personalizadas."

#. type: YAML Front Matter: tags
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:1
#, fuzzy, no-wrap
msgid "extensions development-tips"
msgstr "extensões dicas de desenvolvimento"

#. type: YAML Front Matter: title
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:1
#, fuzzy, no-wrap
msgid "Solving problems with Quarkus extensions (2/n)"
msgstr "Resolução de problemas com extensões Quarkus (2/n)"

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:13
#, fuzzy
msgid "We are all good: 2 posts make a series!"
msgstr "Somos todos bons: 2 posts fazem uma série!"

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:15
#, fuzzy
msgid "If you haven't looked at the first post of this series, I invite you to link:/blog/solving-problems-with-extensions/[read it]!"
msgstr "Se ainda não viram o primeiro post desta série, convido-vos a  link:/blog/solving-problems-with-extensions/[lê-lo]!"

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:18
#, fuzzy, no-wrap
msgid ""
"**Problem of the day:** A library is using the `@Inject` annotation to handle its internal injection and, when used on beans, that will conflict with the CDI injection we have in Quarkus.\n"
"Leading to the impossibility for the CDI layer to inject these objects as they are not CDI beans.\n"
msgstr "*Problema do dia:* Uma biblioteca está a utilizar a anotação `@Inject` para tratar da sua injeção interna e, quando utilizada em beans, entra em conflito com a injeção CDI que temos no Quarkus. Isto leva à impossibilidade de a camada CDI injetar estes objectos, uma vez que não são beans CDI."

#. type: Title ==
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:19
#, fuzzy, no-wrap
msgid "Some context"
msgstr "Algum contexto"

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:23
#, fuzzy
msgid "As for the first post of the series, this post is based on my work on https://github.com/quarkiverse/quarkus-github-app[the Quarkus GitHub App extension] that allows you to develop GitHub Apps based on Quarkus at light speed with very little boilerplate."
msgstr "Quanto ao primeiro post da série, este post baseia-se no meu trabalho na  link:https://github.com/quarkiverse/quarkus-github-app[extensão Quarkus GitHub App] que permite desenvolver aplicações GitHub baseadas no Quarkus à velocidade da luz e com muito pouco boilerplate."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:26
#, fuzzy
msgid "The newest feature of this extension is the ability to easily develop comment-based commands in your GitHub apps.  For instance, do something when a user posts a `@bot do-something` in a comment of a pull request."
msgstr "A mais recente funcionalidade desta extensão é a capacidade de desenvolver facilmente comandos baseados em comentários nas suas aplicações GitHub. Por exemplo, fazer algo quando um utilizador publica um `@bot do-something` num comentário de um pull request."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:29
#, fuzzy
msgid "While it is possible to implement it all by yourself with the standard features of Quarkus GitHub App, we developed an additional extension to make things even easier."
msgstr "Embora seja possível implementá-lo sozinho com as funcionalidades padrão da aplicação Quarkus GitHub, desenvolvemos uma extensão adicional para tornar as coisas ainda mais fáceis."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:31
#, fuzzy
msgid "Implementing a comment-based command with this extension is as easy as:"
msgstr "Implementar um comando baseado em comentários com esta extensão é tão fácil como:"

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:36
#, no-wrap
msgid ""
"@Cli(name = \"@bot\", commands = { DoSomething.class }) \n"
"public class MyFirstCli {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:39
#, no-wrap
msgid ""
"    @Command(name = \"do-something\") \n"
"    static class DoSomething implements Runnable { \n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:46
#, no-wrap
msgid ""
"        @Override\n"
"        public void run() { \n"
"            // do something\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:49
#, fuzzy
msgid "The `run()` method of the `DoSomething` class will be called any time a user posts `@bot do-something` as a comment in an issue or pull request."
msgstr "O método `run()` da classe `DoSomething` será chamado sempre que um usuário postar `@bot do-something` como um comentário em um problema ou pull request."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:51
#, fuzzy
msgid "These are the basics but the extension has a ton of other features such as reaction-based feedback, scopes, permissions..."
msgstr "Estes são os princípios básicos, mas a extensão tem muitas outras funcionalidades, como feedback baseado em reacções, âmbitos de aplicação, permissões..."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:55
#, fuzzy
msgid "This extension is based on the https://rvesse.github.io/airline/[Airline library].  This library is designed to easily parse and execute command lines.  While originally designed to develop CLI applications, it is a perfect fit for our usage."
msgstr "Esta extensão é baseada na  link:https://rvesse.github.io/airline/[biblioteca Airline]. Esta biblioteca foi concebida para analisar e executar facilmente linhas de comando. Embora tenha sido originalmente concebida para desenvolver aplicações CLI, é perfeita para a nossa utilização."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:57
#, fuzzy
msgid "One problem that we have with this library is that it uses the `@Inject` annotation for injecting some objects into commands such as `GlobalMetadata`:"
msgstr "Um problema que temos com esta biblioteca é que ela utiliza a anotação `@Inject` para injetar alguns objectos em comandos como `GlobalMetadata`:"

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:62
#, no-wrap
msgid ""
"@Command(name = \"do-something\") \n"
"static class DoSomething implements Runnable { \n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:65
#, no-wrap
msgid ""
"    @Inject\n"
"    GlobalMetadata metadata;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:71
#, no-wrap
msgid ""
"    @Override\n"
"    public void run() { \n"
"        // do something\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:75
#, fuzzy
msgid "This is a problem for us as this `@Inject` annotation is used by CDI injection and, in the context of our extension, the `@Command` classes are CDI beans.  Thus, this particular `@Inject` annotation will also be interpreted by ArC, our CDI implementation, and ArC will try to inject `GlobalMetadata` as a CDI bean... and fail because it is not a CDI bean."
msgstr "Isto é um problema para nós, uma vez que esta anotação `@Inject` é utilizada pela injeção CDI e, no contexto da nossa extensão, as classes `@Command` são beans CDI. Assim, esta anotação `@Inject` em particular também será interpretada pelo ArC, a nossa implementação CDI, e o ArC tentará injetar `GlobalMetadata` como um bean CDI... e falhará porque não é um bean CDI."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:77
#, fuzzy
msgid "Suffice to say it won't work very well and we need to fix it."
msgstr "Basta dizer que não vai funcionar muito bem e que temos de o corrigir."

#. type: delimited block =
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:81
#, fuzzy
msgid "Not making `@Command` classes CDI beans is NOT an option as we want regular CDI injection to work."
msgstr "Não tornar `@Command` classes CDI beans NÃO é uma opção, uma vez que queremos que a injeção CDI normal funcione."

#. type: Title ==
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:83
#, fuzzy, no-wrap
msgid "How can we work around this?"
msgstr "Como é que podemos contornar esta situação?"

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:87
#, fuzzy
msgid "Ideally, the Airline library wouldn't use the `@Inject` annotation for its internal purpose and the good news is, in the latest versions, the annotation used for injection can be specified."
msgstr "Idealmente, a biblioteca Airline não utilizaria a anotação `@Inject` para o seu objetivo interno e a boa notícia é que, nas versões mais recentes, a anotação utilizada para injeção pode ser especificada."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:89
#, fuzzy
msgid "But for the sake of the exercise, let's stick to the previous Airline version."
msgstr "Mas, para efeitos do exercício, vamos cingir-nos à versão anterior da companhia aérea."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:91
#, fuzzy
msgid "So now what?"
msgstr "E agora?"

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:94
#, fuzzy
msgid "The set of classes the Airline library is susceptible to inject is limited: it is used to inject a limited number of classes and to handle composition (i.e. sharing components across several commands)."
msgstr "O conjunto de classes que a biblioteca Airline é suscetível de injetar é limitado: é utilizada para injetar um número limitado de classes e para tratar a composição (ou seja, partilhar componentes entre vários comandos)."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:96
#, fuzzy
msgid "For these use cases, we somehow need ArC to ignore the injection points."
msgstr "Para estes casos de utilização, precisamos que o ArC ignore os pontos de injeção."

#. type: Title ==
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:97
#, fuzzy, no-wrap
msgid "AnnotationTransformers to the rescue"
msgstr "AnotaçãoTransformers para o resgate"

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:101
#, fuzzy
msgid "If you are familiar with Quarkus, you are probably familiar with the notion of Jandex index.  In Quarkus, we build indexes of the project annotations and these indexes are used by our core and extensions to find annotations (and more)."
msgstr "Se está familiarizado com o Quarkus, provavelmente está familiarizado com a noção de índice Jandex. No Quarkus, criamos índices das anotações do projeto e estes índices são utilizados pelo nosso núcleo e pelas extensões para encontrar anotações (e muito mais)."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:103
#, fuzzy
msgid "ArC, our CDI implementation, is one of the components that consumes the Jandex indexes."
msgstr "O ArC, a nossa implementação CDI, é um dos componentes que consome os índices Jandex."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:105
#, fuzzy
msgid "Interestingly though, ArC does not consume the Jandex index as is:"
msgstr "Curiosamente, porém, o ArC não consome o índice Jandex tal como está:"

#. type: Target for macro image
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:106
#, no-wrap
msgid "annotations-transformers.svg"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:110
#, fuzzy
msgid "Annotations transformers can add, remove, update existing annotations before consumption by ArC.  These are used by several features in Quarkus, for instance Hibernate Validator interceptor support."
msgstr "Os transformadores de anotações podem adicionar, remover ou atualizar anotações existentes antes de serem consumidas pelo ArC. Estas são utilizadas por várias funcionalidades do Quarkus, por exemplo, o suporte do intercetor Hibernate Validator."

#. type: delimited block =
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:114
#, fuzzy
msgid "Annotations transformers do NOT modify the original classes, nor do they modify the Jandex indexes."
msgstr "Os transformadores de anotações NÃO modificam as classes originais, nem modificam os índices Jandex."

#. type: delimited block =
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:116
#, fuzzy
msgid "Using annotations transfomers will solely impact ArC, our CDI implementation."
msgstr "A utilização de transfomadores de anotações terá apenas impacto no ArC, a nossa implementação de CDI."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:121
#, fuzzy
msgid "This behavior is of great interest to us: we could hide the annotations from ArC using an annotations transformer while keeping them available for Airline to consume them via reflection."
msgstr "Esse comportamento é de grande interesse para nós: poderíamos esconder as anotações do ArC usando um transformador de anotações enquanto as mantemos disponíveis para o Airline consumi-las via reflexão."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:123
#, fuzzy
msgid "Let's create our annotations transformer:"
msgstr "Vamos criar o nosso transformador de anotações:"

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:127
#, no-wrap
msgid "public class HideAirlineInjectAnnotationsTransformer implements AnnotationsTransformer { <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:129
#, no-wrap
msgid "    private final IndexView index;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:133
#, no-wrap
msgid ""
"    HideAirlineInjectAnnotationsTransformer(IndexView index) { <2>\n"
"        this.index = index;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:138
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean appliesTo(Kind kind) {\n"
"        return Kind.FIELD == kind; <3>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:142
#, no-wrap
msgid ""
"    @Override\n"
"    public void transform(TransformationContext transformationContext) {\n"
"        FieldInfo fieldInfo = transformationContext.getTarget().asField();\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:146
#, no-wrap
msgid ""
"        if (!fieldInfo.hasAnnotation(DotNames.INJECT)) { <4>\n"
"            return;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:156
#, no-wrap
msgid ""
"        if (fieldInfo.hasAnnotation(ARGUMENTS) ||\n"
"                fieldInfo.hasAnnotation(OPTION) ||\n"
"                GLOBAL_METADATA.equals(fieldInfo.type().name()) || <5>\n"
"                COMMAND_GROUP_METADATA.equals(fieldInfo.type().name()) ||\n"
"                COMMAND_METADATA.equals(fieldInfo.type().name()) ||\n"
"                isComposition(fieldInfo)) { <6>\n"
"            transformationContext.transform().remove(ai -> DotNames.INJECT.equals(ai.name())).done(); <7>\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:159
#, no-wrap
msgid ""
"    private boolean isComposition(FieldInfo fieldInfo) { <8>\n"
"        Type fieldType = fieldInfo.type();\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:163
#, no-wrap
msgid ""
"        if (fieldType.kind() != Type.Kind.CLASS) {\n"
"            return false;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:165
#, no-wrap
msgid "        ClassInfo fieldClass = index.getClassByName(fieldType.asClassType().name());\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:169
#, no-wrap
msgid ""
"        if (fieldClass == null) {\n"
"            return false;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:171
#, no-wrap
msgid "        Set<DotName> fieldClassAnnotations = fieldClass.annotationsMap().keySet();\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:175
#, no-wrap
msgid ""
"        return fieldClassAnnotations.contains(ARGUMENTS) || fieldClassAnnotations.contains(OPTION);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:177
#, fuzzy
msgid "Our class implements `AnnotationsTransformer`."
msgstr "A nossa classe implementa `AnnotationsTransformer`."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:178
#, fuzzy
msgid "We inject the Jandex index in our transformer as we will need it to detect composition."
msgstr "Injectamos o índice Jandex no nosso transformador, uma vez que vamos precisar dele para detetar a composição."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:179
#, fuzzy
msgid "We are only interested in fields so let's apply our transformer to fields only."
msgstr "Só estamos interessados nos campos, por isso vamos aplicar o nosso transformador apenas aos campos."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:180
#, fuzzy
msgid "If the field is not annotated with `@Inject`, it is of no interest to us."
msgstr "Se o campo não for anotado com `@Inject`, não tem interesse para nós."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:181
#, fuzzy
msgid "If the field type is `GlobalMetadata`, `GroupMetadata` or `CommandMetadata`, we know it is the responsibility of Airline to inject it."
msgstr "Se o tipo de campo for `GlobalMetadata`, `GroupMetadata` ou `CommandMetadata`, sabemos que é da responsabilidade da companhia aérea injectá-lo."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:182
#, fuzzy
msgid "We are also detecting composition."
msgstr "Estamos também a detetar a composição."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:184
#, fuzzy
msgid "We remove the `@Inject` annotation from the transformed view visible to ArC.  Make sure you don't forget to finalize the transformation with `.done()`."
msgstr "Removemos a anotação `@Inject` da vista transformada visível para o ArC. Certifique-se de que não se esquece de finalizar a transformação com `.done()`."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:185
#, fuzzy
msgid "For composition, we detect if the field is of a type that contains `@Arguments` or `@Option` annotations."
msgstr "Para a composição, detectamos se o campo é de um tipo que contém anotações `@Arguments` ou `@Option`."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:188
#, fuzzy
msgid "Now that we have created our annotations transformer, we need to make sure Quarkus knows about it."
msgstr "Agora que criámos o nosso transformador de anotações, temos de nos certificar que o Quarkus o conhece."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:190
#, fuzzy
msgid "As usual, for the Quarkus build process, you just need to produce a `BuildItem` to register the annotations transformer:"
msgstr "Como de costume, para o processo de construção do Quarkus, basta produzir um `BuildItem` para registar o transformador de anotações:"

#. type: delimited block -
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:199
#, no-wrap
msgid ""
"@BuildStep\n"
"public void beanConfig(CombinedIndexBuildItem index,\n"
"        BuildProducer<AnnotationsTransformerBuildItem> annotationsTransformer) {\n"
"    annotationsTransformer\n"
"            .produce(new AnnotationsTransformerBuildItem(new HideAirlineInjectAnnotationsTransformer(index.getIndex())));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:203
#, fuzzy
msgid "And that's it, from now on, the `@Inject` annotations consumed by the Airline library will be hidden from ArC, while still being visible from the Airline library, which uses reflection."
msgstr "E é isso, a partir de agora, as anotações `@Inject` consumidas pela biblioteca Airline serão ocultas do ArC, enquanto ainda são visíveis da biblioteca Airline, que usa reflexão."

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:205
#, fuzzy
msgid "Regular CDI injection is still supported as only the `@Inject` annotations handled by Airline are hidden from ArC."
msgstr "A injeção regular de CDI continua a ser suportada, uma vez que apenas as anotações `@Inject` tratadas pela Airline estão ocultas do ArC."

#. type: Title ==
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:206
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: upstream/_posts/2022-08-30-solving-problems-with-extensions-2.adoc:209
#, fuzzy
msgid "Once again, we have seen how the unique build infrastructure of Quarkus can solve real life issues with very little boilerplate.  And that with unified concepts that are very easy to grasp."
msgstr "Mais uma vez, vimos como a infraestrutura de construção única do Quarkus pode resolver problemas da vida real com muito pouco cliché. E isso com conceitos unificados que são muito fáceis de entender."
