# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:1
#, fuzzy, no-wrap
msgid "vazirim"
msgstr "vazirim"

#. type: YAML Front Matter: date
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:1
#, fuzzy, no-wrap
msgid "2022-06-29"
msgstr "2022-06-29"

#. type: YAML Front Matter: layout
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "posto"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:1
#, fuzzy, no-wrap
msgid "NativeJDB bridges the gap between the Java Debugger (JDB) framework available in modern IDEs and native debugging via GNU Project debugger (GDB)."
msgstr "O NativeJDB preenche a lacuna entre a estrutura do Java Debugger (JDB) disponível nos IDEs modernos e a depuração nativa através do GNU Project debugger (GDB)."

#. type: YAML Front Matter: tags
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:1
#, fuzzy, no-wrap
msgid "java debugger native cloud container"
msgstr "depurador java contentor nativo da nuvem"

#. type: YAML Front Matter: title
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:1
#, fuzzy, no-wrap
msgid "Debugging natively compiled Java code with NativeJDB"
msgstr "Depuração de código Java compilado nativamente com NativeJDB"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:11
#, fuzzy, no-wrap
msgid "NativeJDB"
msgstr "NativoJDB"

#. type: Target for macro image
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:11
#, no-wrap
msgid "nativejdb.png"
msgstr ""

#. type: Title ==
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:14
#, fuzzy, no-wrap
msgid "Co-authored by: *Ansu Varghese, Research Software Engineer, IBM*"
msgstr "Coautoria de: *Ansu Varghese, Engenheiro de Software de Investigação, IBM*"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:18
#, fuzzy, no-wrap
msgid "**In collaboration with:**\n"
msgstr "*Em colaboração com:*"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:20
#, fuzzy
msgid "_Max Andersen, Dimitris Andreadis, Andrew Dinn, Stuart Douglas, Jason Greene, David Grove, David Lloyd, Thomas Qvarnstrom, Foivos Zakkak, Galder Zamarreno (IBM Research and Red Hat)_"
msgstr "_Max Andersen, Dimitris Andreadis, Andrew Dinn, Stuart Douglas, Jason Greene, David Grove, David Lloyd, Thomas Qvarnstrom, Foivos Zakkak, Galder Zamarreno (IBM Research e Red Hat)_"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:23
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:48
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:54
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:66
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:72
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:92
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:98
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:104
#, fuzzy
msgid "{empty} +"
msgstr "<br>"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:26
#, fuzzy
msgid "https://quarkus.io/[Quarkus] is a cloud-native Java development framework, which allows Java code to be mapped to Kubernetes containers and compiled natively. https://www.graalvm.org/22.1/reference-manual/native-image/[Native compilation] is useful for serverless computing, it avoids the overhead of running a JVM in containers and lets us execute serverless code directly. Debugging natively compiled code is not an easy task. It can be very different from the original Java source code due to extensive code optimizations, as well as differences in libraries used in native vs non-natively compiled code. In some cases, it is necessary to view both the source and the assembly code in order to gain better understanding of the program, further complicating the debugging task. "
msgstr "link:https://quarkus.io/[O Quarkus] é uma estrutura de desenvolvimento Java nativa da nuvem, que permite que o código Java seja mapeado para contêineres do Kubernetes e compilado nativamente.  link:https://www.graalvm.org/22.1/reference-manual/native-image/[A compilação nativa] é útil para a computação sem servidor, pois evita a sobrecarga de executar uma JVM em contêineres e nos permite executar o código sem servidor diretamente. A depuração de código compilado nativamente não é uma tarefa fácil. Ele pode ser muito diferente do código-fonte Java original devido às extensas otimizações de código, bem como às diferenças nas bibliotecas usadas no código compilado nativamente e não nativamente. Em alguns casos, é necessário visualizar o código-fonte e o código de montagem para obter uma melhor compreensão do programa, complicando ainda mais a tarefa de depuração."

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:29
#, fuzzy
msgid "https://developers.redhat.com/blog/2020/06/25/debugging-graalvm-native-images-using-gdb[Native executables can be debugged with GDB], which is a C/C++ debugger in combination with a tool like emacs to step through the source code. However, these tools may not be familiar to a Java developer. Recently, extensions to https://marketplace.visualstudio.com/items?itemName=oracle-labs-graalvm.graalvm[VSCode] and https://plugins.jetbrains.com/plugin/19237-graalvm-native-debugger[IntelliJ] have been developed to alleviate this problem. Both these tools are specific to the IDE they extend, and need to be used in a Linux environment due to current limitations of Java native compilers. "
msgstr "link:https://developers.redhat.com/blog/2020/06/25/debugging-graalvm-native-images-using-gdb[Os executáveis nativos podem ser depurados com o GDB], que é um depurador C/C++ em combinação com uma ferramenta como o emacs para percorrer o código-fonte. No entanto, estas ferramentas podem não ser familiares para um programador Java. Recentemente, foram desenvolvidas extensões para o  link:https://marketplace.visualstudio.com/items?itemName=oracle-labs-graalvm.graalvm[VSCode] e o  link:https://plugins.jetbrains.com/plugin/19237-graalvm-native-debugger[IntelliJ] para aliviar esse problema. Ambas as ferramentas são específicas do IDE que estendem e precisam de ser utilizadas num ambiente Linux devido às actuais limitações dos compiladores nativos Java."

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:32
#, fuzzy
msgid "https://github.com/nativejdb/[NativeJDB] is an *open-source* tool that supports *remote debugging* of a natively compiled Java code. In principle, this allows debugging from any IDE that supports the Java Platform Debugger Architecture (JPDA), such as IntelliJ, Eclipse or VSCode. Attaching remotely means that the user can start a debugging session on *any O/S*, while the NativeJDB process itself runs in a Linux container. Our challenge is to bridge the gap between JPDA and the GDB, two stacks that don't typically talk to each other! To achieve this we essentially teach the GDB to speak the Java Debug Wire Protocol (JDWP), used by IDEs to communicate with Java debuggers."
msgstr "link:https://github.com/nativejdb/[O NativeJDB] é uma ferramenta de *código aberto* que suporta a *depuração remota* de um código Java compilado nativamente. Em princípio, isto permite a depuração a partir de qualquer IDE que suporte a Arquitetura de Depurador da Plataforma Java (JPDA), como o IntelliJ, o Eclipse ou o VSCode. Anexar remotamente significa que o usuário pode iniciar uma sessão de depuração em *qualquer sistema operacional*, enquanto o próprio processo NativeJDB é executado em um contêiner Linux. Nosso desafio é fazer a ponte entre o JPDA e o GDB, duas pilhas que normalmente não conversam entre si! Para conseguir isso, essencialmente ensinamos o GDB a falar o Java Debug Wire Protocol (JDWP), usado por IDEs para se comunicar com depuradores Java."

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:35
#, fuzzy
msgid "When writing Quarkus code, developers have the possibility of finding bugs with a regular Java debugger before compiling it natively. NativeJDB is useful when the observed behavior of the native executable is different than when the program is executed on a JVM. It can be used to explore optimizations and differences in libraries that account for behavioral anomalies. NativeJDB is not specific to Quarkus and can be used to debug any natively compiled Java code."
msgstr "Ao escrever código Quarkus, os programadores têm a possibilidade de encontrar erros com um depurador Java normal antes de o compilar nativamente. O NativeJDB é útil quando o comportamento observado do executável nativo é diferente do que quando o programa é executado em uma JVM. Ele pode ser usado para explorar otimizações e diferenças nas bibliotecas que respondem por anomalias comportamentais. O NativeJDB não é específico do Quarkus e pode ser usado para depurar qualquer código Java compilado nativamente."

#. type: Title ==
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:38
#, fuzzy, no-wrap
msgid "Architecture and Implementation"
msgstr "Arquitetura e implementação"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:42
#, fuzzy
msgid "NativeJDB is a Java process that wraps GDB, which itself wraps the native executable, and it acts as a server that understands the JDWP protocol. It is similar to the JDWP agent used to control and debug a running Java process. In that case, the user can attach to such a process and can start debugging it. NativeJDB is used in a similar way: once it is started, the user attaches to it using a Remote Debug configuration from the IDE."
msgstr "O NativeJDB é um processo Java que envolve o GDB, que por sua vez envolve o executável nativo, e actua como um servidor que compreende o protocolo JDWP. É semelhante ao agente JDWP utilizado para controlar e depurar um processo Java em execução. Nesse caso, o utilizador pode ligar-se a esse processo e começar a depurá-lo. O NativeJDB é usado de forma semelhante: uma vez iniciado, o usuário se conecta a ele usando uma configuração de Depuração remota do IDE."

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:45
#, fuzzy
msgid "The IDE then communicates with NativeJDB using the JDWP. After the initial handshake and pleasantries (like capabilities and set of available classes), the protocol allows a user to manipulate the IDE's interface, which triggers appropriate JDWP packets to be sent to NativeJDB. These packets are interpreted by NativeJDB and translated to https://ftp.gnu.org/old-gnu/Manuals/gdb/html_chapter/gdb_22.html[GDB-MI] commands. We use the MI interface to communicate with the GDB since it's the recommended interface to build tools on top of the GDB. The GDB then responds to these commands, and the responses are translated back into JDWP packets and sent back to the IDE."
msgstr "O IDE então se comunica com o NativeJDB usando o JDWP. Após o aperto de mão inicial e os agradecimentos (como capacidades e conjunto de classes disponíveis), o protocolo permite que um usuário manipule a interface do IDE, o que aciona pacotes JDWP apropriados a serem enviados ao NativeJDB. Esses pacotes são interpretados pelo NativeJDB e traduzidos para comandos  link:https://ftp.gnu.org/old-gnu/Manuals/gdb/html_chapter/gdb_22.html[GDB-MI]. Utilizamos a interface MI para comunicar com o GDB, uma vez que é a interface recomendada para construir ferramentas sobre o GDB. O GDB responde a esses comandos, e as respostas são traduzidas de volta para pacotes JDWP e enviadas de volta para o IDE."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:50
#, fuzzy, no-wrap
msgid "NativeJDBArchitecture_1"
msgstr "NativeJDBArchitecture_1"

#. type: Target for macro image
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:50
#, no-wrap
msgid "nativejdbarch_1.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:57
#, fuzzy
msgid "Communication between the IDE and the GDB can be both synchronous and asynchronous, including error messages. In some cases, a command from the IDE can result in both a synchronous and an asynchronous response. For example, setting a breakpoint has a synchronous response, but the corresponding breakpoint-hit is an asynchronous event that gets sent from NativeJDB to the IDE. In principle, NativeJDB can be used with any IDE that has a JDWP implementation, but it has mostly been tested and works with IntelliJ. It also does not require any changes or extensions to existing IDEs and works with the *community as well as the commercial version* of IntelliJ."
msgstr "A comunicação entre o IDE e o GDB pode ser tanto síncrona quanto assíncrona, incluindo mensagens de erro. Em alguns casos, um comando do IDE pode resultar em uma resposta síncrona e assíncrona. Por exemplo, definir um ponto de interrupção tem uma resposta síncrona, mas o breakpoint-hit correspondente é um evento assíncrono que é enviado do NativeJDB para o IDE. Em princípio, o NativeJDB pode ser usado com qualquer IDE que tenha uma implementação JDWP, mas foi testado e funciona principalmente com o IntelliJ. Também não requer quaisquer alterações ou extensões aos IDEs existentes e funciona com a *comunidade, bem como* com a *versão comercial* do IntelliJ."

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:60
#, fuzzy
msgid "Today, native-image builders in https://www.graalvm.org/[GraalVM] and https://github.com/qbicc[qbicc] produce debug information on a Linux environment with source mapping to the original Java source code (support for other platforms is in the works as well). NativeJDB's architecture allows users to start a debugging session in an IDE running on any O/S and attach to a NativeJDB process running in a Linux container. So it does not require Linux to begin with. It also works with the *community as well as the commercial version* of GraalVM."
msgstr "Atualmente, os criadores de imagens nativas no  link:https://www.graalvm.org/[GraalVM] e no  link:https://github.com/qbicc[qbicc] produzem informações de depuração em um ambiente Linux com mapeamento de código-fonte para o código-fonte Java original (o suporte para outras plataformas também está em andamento). A arquitetura do NativeJDB permite que os usuários iniciem uma sessão de depuração em um IDE em execução em qualquer sistema operacional e anexem a um processo NativeJDB em execução em um contêiner Linux. Portanto, ele não requer Linux para começar. Ele também funciona com a *comunidade, bem* como com *a versão comercial* do GraalVM."

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:63
#, fuzzy
msgid "NativeJDB consists of a few different components. We use Docker to build a native executable and produce debug information for the debuggee Java application. Our Docker setup uses Ubuntu O/S. The frontend of NativeJDB is a set of classes that parse and build JDI data structures. Its backend parses and builds data structures corresponding to communication with the GDB."
msgstr "O NativeJDB consiste em alguns componentes diferentes. Usamos o Docker para criar um executável nativo e produzir informações de depuração para o aplicativo Java de depuração. Nossa configuração do Docker usa o Ubuntu O/S. O front-end do NativeJDB é um conjunto de classes que analisam e constroem estruturas de dados JDI. Seu backend analisa e constrói estruturas de dados correspondentes à comunicação com o GDB."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:68
#, fuzzy, no-wrap
msgid "NativeJDBArchitecture_2"
msgstr "NativeJDBArchitecture_2"

#. type: Target for macro image
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:68
#, no-wrap
msgid "nativejdbarch_2.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:75
#, fuzzy
msgid "NativeJDB has been using a scaffolding JVM to help it obtain certain static information and speed up development. So currently NativeJDB starts up the program as a Java process as well, in addition to running the native executable. It attaches to that process and suspends it to obtain general static information about the program. In the future, we will remove this scaffolding and replace with information coming from the GDB, though it has been very helpful in rapid prototyping."
msgstr "O NativeJDB tem usado uma JVM scaffolding para ajudá-lo a obter certas informações estáticas e acelerar o desenvolvimento. Portanto, atualmente o NativeJDB inicia o programa como um processo Java também, além de executar o executável nativo. Ele se anexa a esse processo e o suspende para obter informações estáticas gerais sobre o programa. No futuro, removeremos essa estrutura e substituiremos por informações vindas do GDB, embora tenha sido muito útil na prototipagem rápida."

#. type: Title ==
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:78
#, fuzzy, no-wrap
msgid "NativeJDB in action!"
msgstr "NativeJDB em ação!"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:82
#, fuzzy
msgid "To get started, you'll need the following repos and follow the instructions in each:"
msgstr "Para começar, precisará dos seguintes repositórios e seguirá as instruções em cada um deles:"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:85
#, fuzzy
msgid "https://github.com/nativejdb/nativejdb"
msgstr "https://github.com/nativejdb/nativejdb"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:86
#, fuzzy
msgid "https://github.com/nativejdb/nativejdbExamples"
msgstr "https://github.com/nativejdb/nativejdbExamples"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:89
#, fuzzy
msgid "Check out the following video to see NativeJDB in action!"
msgstr "Veja o seguinte vídeo para ver o NativeJDB em ação!"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:101
#, fuzzy
msgid "And this video showing NativeJDB running on the GettingStarted Quarkus application:"
msgstr "E este vídeo mostra o NativeJDB em execução na aplicação Quarkus GettingStarted:"

#. type: Title ==
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:110
#, fuzzy, no-wrap
msgid "Features"
msgstr "Características"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:113
#, fuzzy
msgid "Ability to show Java source in the editor and step through code"
msgstr "Capacidade de mostrar a fonte Java no editor e percorrer o código"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:114
#, fuzzy
msgid "Works with https://www.jrebel.com/blog/best-java-ide[IntelliJ] and Java11"
msgstr "Funciona com  link:https://www.jrebel.com/blog/best-java-ide[IntelliJ] e Java11"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:115
#, fuzzy
msgid "Works with https://www.graalvm.org/[GraalVM’s] natively compiled images"
msgstr "Funciona com as imagens compiladas nativamente  link:https://www.graalvm.org/[do GraalVM]"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:116
#, fuzzy
msgid "Works with https://github.com/qbicc/qbicc[Qbicc’s] natively compiled images (work in progress)"
msgstr "Funciona com imagens compiladas nativamente  link:https://github.com/qbicc/qbicc[pelo Qbicc] (trabalho em andamento)"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:117
#, fuzzy
msgid "Debugging features using the IDE’s Debug Console itself:"
msgstr "Recursos de depuração usando o próprio console de depuração do IDE:"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:119
#, fuzzy
msgid "Suspend / Resume"
msgstr "Suspender / Retomar"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:120
#, fuzzy
msgid "Set Breakpoints (Insert/Enable)"
msgstr "Definir pontos de paragem (inserir/ativar)"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:121
#, fuzzy
msgid "Clear Breakpoints (Delete/Disable)"
msgstr "Limpar pontos de paragem (Eliminar/Desativar)"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:122
#, fuzzy
msgid "Step Over / Step Into / Step Return (work in progress)"
msgstr "Ultrapassar / Entrar / Regressar (trabalho em curso)"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:123
#, fuzzy
msgid "Stack Frames information in IDE debugger pane"
msgstr "Informações de quadros de pilha no painel do depurador do IDE"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:124
#, fuzzy
msgid "Variables (Local + Static) values (work in progress)"
msgstr "Valores das variáveis (locais + estáticas) (trabalho em curso)"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:125
#, fuzzy
msgid "View of assembly code within a stack frame (work in progress)"
msgstr "Vista do código de montagem numa estrutura de pilha (trabalho em curso)"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:126
#, fuzzy
msgid "Multi-threading & thread info"
msgstr "Multi-threading e informações sobre threads"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:129
#, fuzzy
msgid "NativeJDB does not support hot code replace. Also, very short running programs currently need a Thread.sleep(). This is due to the fact that NativeJDB today uses a scaffolding VM, and needs a little time to attach and suspend it. This problem will disappear when we get rid of the scaffolding in the future. There is also a known issue of breakpoints working only once in loops under some conditions (related to https://github.com/oracle/graal/issues/4379[this] graalvm issue), and the step operation sometimes continues instead."
msgstr "O NativeJDB não suporta a substituição de código quente. Além disso, programas de execução muito curta precisam atualmente de um Thread.sleep(). Isso se deve ao fato de que o NativeJDB hoje usa uma VM de scaffolding, e precisa de um pouco de tempo para anexá-la e suspendê-la. Este problema desaparecerá quando nos livrarmos do scaffolding no futuro. Há também um problema conhecido de pontos de interrupção que funcionam apenas uma vez em loops sob algumas condições (relacionado a  link:https://github.com/oracle/graal/issues/4379[esse] problema do graalvm), e a operação de passo às vezes continua."

#. type: Title ==
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:132
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:136
#, fuzzy
msgid "Through this blog, we have showcased a new debugging tool called NativeJDB that allows users to remotely attach and debug a natively compiled Java code. It provides a bridge between the Java debugging framework in modern IDEs and GDB. It does not require extensions to existing IDEs, and allows the user to start their debugging session on any O/S."
msgstr "Através deste blogue, apresentámos uma nova ferramenta de depuração chamada NativeJDB que permite aos utilizadores anexar e depurar remotamente um código Java compilado nativamente. Ela fornece uma ponte entre a estrutura de depuração Java nos IDEs modernos e o GDB. Ela não requer extensões para IDEs existentes e permite que o usuário inicie sua sessão de depuração em qualquer sistema operacional."

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:139
#, fuzzy
msgid "In the future, we can explore making NativeJDB work with other IDEs besides IntelliJ, which in principle should be possible."
msgstr "No futuro, podemos explorar a possibilidade de fazer o NativeJDB funcionar com outros IDEs além do IntelliJ, o que, em princípio, deve ser possível."

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:142
#, fuzzy
msgid "NativeJDB is currently a working prototype, and we look forward to feedback, suggestions, and contributions! "
msgstr "O NativeJDB é atualmente um protótipo funcional e aguardamos comentários, sugestões e contribuições!"

#. type: Title ==
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:145
#, fuzzy, no-wrap
msgid "References"
msgstr "Referências"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:148
#, fuzzy
msgid "https://quarkus.io/guides/building-native-image#debugging-native-executable[]"
msgstr "https://quarkus.io/guides/building-native-image#debugging-native-executable"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:149
#, fuzzy
msgid "https://docs.oracle.com/en/java/javase/11/docs/specs/jdwp/jdwp-protocol.html[]"
msgstr "https://docs.oracle.com/en/java/javase/11/docs/specs/jdwp/jdwp-protocol.html"

#. type: Plain text
#: upstream/_posts/2022-06-29-nativejdb-debugger-for-native-images.adoc:149
#, fuzzy
msgid "https://sourceware.org/gdb/onlinedocs/gdb/GDB_002fMI.html[]"
msgstr "https://sourceware.org/gdb/onlinedocs/gdb/GDB_002fMI.html"
