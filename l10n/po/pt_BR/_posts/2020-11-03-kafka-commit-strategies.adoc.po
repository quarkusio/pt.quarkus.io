# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy, no-wrap
msgid "Kafka - When to commit?"
msgstr "Kafka - Quando é que se deve fazer o commit?"

#. type: YAML Front Matter: synopsis
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy, no-wrap
msgid "Offset commiting strategies in the Kafka connector"
msgstr "Estratégias de confirmação de deslocamento no conetor Kafka"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"In a https://quarkus.io/blog/kafka-failure-strategy/[previous blog post], we have looked at failure strategies provided by the Reactive Messaging Kafka connector.\n"
"But, imagine it's our lucky day, and for once it worked.\n"
"We should inform Kafka that the processing succeeded.\n"
"In Kafka terminology, we call this: _offset commit_.\n"
"This post covers the different strategies to commit offsets with the Reactive Messaging Kafka connector."
msgstr "Em uma link:https://quarkus.io/blog/kafka-failure-strategy/[postagem anterior do blog] , analisamos as estratégias de falha fornecidas pelo conector Kafka do Reactive Messaging. Mas, imagine que este é o nosso dia de sorte e, pela primeira vez, funcionou. Devemos informar ao Kafka que o processamento foi bem-sucedido. Na terminologia do Kafka, chamamos isso de: _offset commit_ . Esta publicação aborda as diferentes estratégias para confirmar offsets com o conector Kafka de mensagens reativas."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "Kafka Consumer Group and Offsets"
msgstr "Grupo de consumidores Kafka e compensações"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"Kafka organizes records (_i.e._ messages) around _topics_.\n"
"Each topic has a name, and applications send records to topics and poll records from topics.\n"
"So far, nothing out of the ordinary."
msgstr "O Kafka organiza registros _(ou seja_ , mensagens) em _tópicos_ . Cada tópico tem um nome, e os aplicativos enviam registros para os tópicos e pesquisam registros dos tópicos. Até agora, nada fora do comum."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"Topics are divided into partitions.\n"
"Each partition is an ordered, immutable sequence of records.\n"
"Sending a message to a topic appends it to the selected partition.\n"
"Each message from a partition gets a sequential id number called _offset_.\n"
"It uniquely identifies each message within the partition.\n"
"So, with Kafka, you can identify an individual record using a `<topic, partition, offset>` tuple."
msgstr "Os tópicos são divididos em partições. Cada partição é uma sequência ordenada e imutável de registros. O envio de uma mensagem para um tópico a anexa à partição selecionada. Cada mensagem de uma partição recebe um número de identificação sequencial chamado _offset_ . Ele identifica de forma exclusiva cada mensagem dentro da partição. Portanto, com o Kafka, é possível identificar um registro individual usando uma tupla `<topic, partition, offset>` ."

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-commit-strategies/topics-partitions.png[]"
msgstr "image:/assets/images/posts/kafka-commit-strategies/topics-partitions.png[alt=topics partitions]"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"When an application consumes messages from Kafka, it uses a Kafka consumer.\n"
"With this consumer, it polls batches of messages from a specific topic, for example, `movies` or `actors`.\n"
"Retrieved messages belong to partitions assigned to this consumer.\n"
"And that aspect is essential."
msgstr "Quando um aplicativo consome mensagens do Kafka, ele usa um consumidor do Kafka. Com esse consumidor, ele pesquisa lotes de mensagens de um tópico específico, por exemplo, `movies` ou `actors` . As mensagens recuperadas pertencem a partições atribuídas a esse consumidor. E esse aspecto é essencial."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"Consumers belong to a consumer group, identified with a name (`A` and `B` in the picture above).\n"
"A group contains one or more consumers.\n"
"In general, when you scale up your application, it creates a consumer joining the same group."
msgstr "Os consumidores pertencem a um grupo de consumidores, identificado por um nome ( `A` e `B` na figura acima). Um grupo contém um ou mais consumidores. Em geral, quando o senhor amplia o aplicativo, ele cria um consumidor que se junta ao mesmo grupo."

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-commit-strategies/consumer-groups.png[]"
msgstr "image:/assets/images/posts/kafka-commit-strategies/consumer-groups.png[alt=consumer groups]"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"Each consumer group receives each record from a topic once.\n"
"To achieve this, it assigns each consumer from a group to a set of partitions.\n"
"For example, in the above picture, the consumer from the application A1 receives the records from the partitions 0 and 1.\n"
"A2 receives the records from the partition 2.\n"
"App B is the only consumer from its consumer group.\n"
"So, it gets the records from all three partitions.\n"
"Consequently (ignore rebalance or other subtilities for now), each record from a topic is only received once per consumer group, by a specific consumer from that group."
msgstr "Cada grupo de consumidores recebe cada registro de um tópico uma vez. Para isso, ele atribui cada consumidor de um grupo a um conjunto de partições. Por exemplo, na figura acima, o consumidor do aplicativo A1 recebe os registros das partições 0 e 1. A2 recebe os registros da partição 2. O aplicativo B é o único consumidor de seu grupo de consumidores. Portanto, ele recebe os registros de todas as três partições. Consequentemente (ignore o rebalanceamento ou outras subutilidades por enquanto), cada registro de um tópico é recebido apenas uma vez por grupo de consumidores, por um consumidor específico desse grupo."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"To orchestrate each consumer group's progress, each consumer periodically informs the broker of its current position - the last processed offset.\n"
"It commits the offset, indicating that all the previous records from that partition have been processed.\n"
"So, if a consumer stops and comes back later, it restarts from the last committed position (if assigned to that partition again).\n"
"Note that this behavior is configurable."
msgstr "Para orquestrar o progresso de cada grupo de consumidores, cada consumidor informa periodicamente ao corretor sua posição atual - o último deslocamento processado. Ele confirma o deslocamento, indicando que todos os registros anteriores dessa partição foram processados. Portanto, se um consumidor parar e voltar mais tarde, ele reiniciará a partir da última posição confirmada (se for atribuído a essa partição novamente). Observe que esse comportamento é configurável."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"What's important to notice is the periodic aspect of the commit.\n"
"Offset commit is expensive, and to enhance performance, we should not commit the offset after each processed record.\n"
"In this regard, Kafka behaves differently from traditional messaging solutions, such as JMS, which acknowledges each message individually.\n"
"Another important characteristic is the positional aspect of the commit.\n"
"You commit the position indicating that all the records located before that position are processed.\n"
"But is it really the case?"
msgstr "O que é importante observar é o aspecto periódico da confirmação. A confirmação do deslocamento é cara e, para melhorar o desempenho, não devemos confirmar o deslocamento após cada registro processado. Nesse aspecto, o Kafka se comporta de forma diferente das soluções tradicionais de mensagens, como o JMS, que reconhece cada mensagem individualmente. Outra característica importante é o aspecto posicional do commit. A confirmação da posição indica que todos os registros localizados antes dessa posição foram processados. Mas será que isso realmente acontece?"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "The Kafka default behavior"
msgstr "O comportamento padrão do Kafka"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"The Apache Kafka consumer uses an auto-commit approach by default.\n"
"Applications using such a consumer are structured around a polling loop:"
msgstr "O consumidor do Apache Kafka usa uma abordagem de confirmação automática por padrão. Os aplicativos que usam esse consumidor são estruturados em torno de um loop de sondagem:"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"Such a program polls a batch of records, processes them, and then polls the next set.\n"
"While calling the `poll` method, the consumer periodically commits the last offset of the previous batches transparently."
msgstr "Esse programa pesquisa um lote de registros, processa-os e, em seguida, pesquisa o próximo conjunto. Ao chamar o método `poll` , o consumidor confirma periodicamente o último deslocamento dos lotes anteriores de forma transparente."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"Quite nice, right?\n"
"If the application fails to process a message, it throws an exception, which either interrupts the while loop or is handled gracefully (within the `processRetrievedRecords` method).\n"
"In the first case, it means that it won't commit anymore (as it happens in the `poll` method, not called anymore).\n"
"If the application restarts, it resumes from the last committed offset (or apply the `auto.offset.reset` strategy, defaulting to `latest`, if there are no offsets for this group yet).\n"
"It may re-process a set of messages (it's the application's responsibility to handle duplicates), but at least nothing is lost."
msgstr "Muito bom, não é? Se o aplicativo não conseguir processar uma mensagem, ele lançará uma exceção, que interromperá o loop while ou será tratada de forma graciosa (no método `processRetrievedRecords` ). No primeiro caso, isso significa que ele não será mais confirmado (como acontece no método `poll` , que não é mais chamado). Se o aplicativo for reiniciado, ele será retomado a partir do último deslocamento confirmado (ou aplicará a estratégia `auto.offset.reset` , com o padrão `latest` , se ainda não houver deslocamentos para esse grupo). Ele pode reprocessar um conjunto de mensagens (é responsabilidade do aplicativo lidar com duplicatas), mas pelo menos nada é perdido."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"So, is there anything wrong with this?\n"
"Looks wonderful... until you add a pinch of asynchrony."
msgstr "Então, há algo de errado com isso? Parece maravilhoso... até o senhor adicionar uma pitada de assincronia."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "What if the message's processing is asynchronous"
msgstr "E se o processamento da mensagem for assíncrono?"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"If the message processing is asynchronous (offloaded to another thread, use non-blocking I/O...), failures may not interrupt the while loop from above.\n"
"Failure happens asynchronously, outside the polling thread.\n"
"If the `poll` method gets called again despite a failed processing, and _auto-commit_ is still enabled, we may commit offsets while something wrong happened.\n"
"If some processing of previously retrieved records is not completed yet, while this auto commit happens, it may consider the record as processed correctly, but the outcome is unknown at that point."
msgstr "Se o processamento da mensagem for assíncrono (transferido para outro thread, usar E/S sem bloqueio...), as falhas não poderão interromper o loop while de cima. A falha ocorre de forma assíncrona, fora do thread de sondagem. Se o método `poll` for chamado novamente apesar de uma falha no processamento e _o auto-commit_ ainda estiver ativado, poderemos confirmar os offsets enquanto algo errado aconteceu. Se algum processamento de registros recuperados anteriormente ainda não tiver sido concluído, enquanto essa confirmação automática acontece, ele poderá considerar o registro como processado corretamente, mas o resultado é desconhecido nesse momento."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"So to handle these case, we can disable the auto-commit and switch to manual commit.\n"
"In this case, it's the application's responsibility to commit the offsets regularly.\n"
"So, the application needs to track the polled records, their processing, failures, and periodically commits the offsets.\n"
"It might not look too tricky, but actually, it can become quite challenging.\n"
"Again, in asynchronous scenarios, you may complete the processing of messages in various orders.\n"
"For example, if you call a remote service for each record, the responses may not come in the same orders as the records.\n"
"You need to track messages individually and only commit the offsets if all the previous messages are processed successfully.\n"
"Without this, you may commit offsets while there is processing from previous records still in progress or even failed processing."
msgstr "Portanto, para lidar com esses casos, podemos desativar o auto-commit e mudar para o commit manual. Nesse caso, é responsabilidade do aplicativo confirmar os offsets regularmente. Portanto, o aplicativo precisa rastrear os registros pesquisados, seu processamento, falhas e confirmar periodicamente os offsets. Isso pode não parecer muito complicado, mas, na verdade, pode se tornar bastante desafiador. Novamente, em cenários assíncronos, o senhor pode concluir o processamento de mensagens em várias ordens. Por exemplo, se o senhor chamar um serviço remoto para cada registro, as respostas podem não vir na mesma ordem que os registros. O senhor precisa rastrear as mensagens individualmente e só confirmar os offsets se todas as mensagens anteriores forem processadas com êxito. Sem isso, o senhor pode confirmar os offsets enquanto houver processamento de registros anteriores ainda em andamento ou até mesmo falhas no processamento."

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "What can we do about this?"
msgstr "O que é que podemos fazer em relação a isto?"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "Kafka connector commit strategies"
msgstr "Estratégias de confirmação do conector Kafka"

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "When using Reactive Messaging and the Kafka connector, you entered an asynchronous world."
msgstr "Ao utilizar o serviço de mensagens reactivas e o conetor Kafka, entrou num mundo assíncrono."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"Message processing may not happen synchronously and sequentially.\n"
"When a Reactive Messaging `Message` processing completes, it acknowledges the message.\n"
"In the case of processing failures, it sends a negative acknowledgment.\n"
"The Kafka connector receives these acknowledgments and can decide what needs to be done, basically: to commit or not to commit."
msgstr "O processamento de mensagens pode não ocorrer de forma síncrona e sequencial. Quando um processamento do Reactive Messaging `Message` é concluído, ele confirma a mensagem. No caso de falhas no processamento, ele envia uma confirmação negativa. O conector Kafka recebe essas confirmações e pode decidir o que precisa ser feito, basicamente: confirmar ou não confirmar."

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "You can choose among three strategies:"
msgstr "Pode escolher entre três estratégias:"

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "throttled (default starting Quarkus 1.10)"
msgstr "acelerado (predefinição a partir do Quarkus 1.10)"

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "latest (default before Quarkus 1.10)"
msgstr "mais recente (predefinição antes do Quarkus 1.10)"

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "ignore (default if `enabled.auto.commit=true` is set)"
msgstr "ignorar (predefinição se `enabled.auto.commit=true` estiver definido)"

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "This is configured using the `commit-strategy` attribute:"
msgstr "Isto é configurado utilizando o atributo `commit-strategy`:"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "The throttled strategy"
msgstr "A estratégia de estrangulamento"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"The throttled strategy can be seen as an asynchronous variant of the default \"auto-commit\" behavior described above.\n"
"When enabled, the connector tracks each received message and monitors their acknowledgment.\n"
"When the connector finds out that all messages before a position are processed successfully, it commits that position.\n"
"This commit happens periodically to avoid committing too often."
msgstr "A estratégia de limitação pode ser vista como uma variante assíncrona do comportamento padrão \"auto-commit\" descrito acima. Quando ativado, o conector rastreia cada mensagem recebida e monitora sua confirmação. Quando o conector descobre que todas as mensagens antes de uma posição foram processadas com êxito, ele confirma essa posição. Essa confirmação ocorre periodicamente para evitar confirmações muito frequentes."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"This strategy provides very good throughput and can handle asynchronous processing.\n"
"To enable this strategy configures the channel with:"
msgstr "Essa estratégia oferece uma taxa de transferência muito boa e pode lidar com o processamento assíncrono. Para ativar essa estratégia, configure o canal com:"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"There is one detail to mention.\n"
"If an old message is neither acked nor nacked, the strategy cannot commit the position anymore.\n"
"It will enqueue messages forever, waiting for that missing ack to happen.\n"
"It can lead to out of memory, as the connector would never be able to commit a position and to clear the queue.\n"
"Fortunately, the strategy detects this situation and reports a failure to the connector, marking the application unhealthy.\n"
"The `throttled.unprocessed-record-max-age.ms` attribute configures the deadline for each message to be acked or nacked before being considered as a poison pill (Default is 1 minute)."
msgstr "Há um detalhe a ser mencionado. Se uma mensagem antiga não tiver recebido nem nack, a estratégia não poderá mais confirmar a posição. Ela enfileirará as mensagens para sempre, aguardando a ocorrência do ack que falta. Isso pode levar à falta de memória, pois o conector nunca conseguirá confirmar uma posição e limpar a fila. Felizmente, a estratégia detecta essa situação e informa uma falha ao conector, marcando o aplicativo como não saudável. O atributo `throttled.unprocessed-record-max-age.ms` configura o prazo para que cada mensagem seja acked ou nacked antes de ser considerada uma poison pill (o padrão é 1 minuto)."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "The Ignore strategy"
msgstr "A estratégia Ignorar"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"The connector uses this strategy by default if you explicitly enabled Kafka's auto-commit (with the `enable.auto.commit` attribute set to `true`).\n"
"In this case, the connector ignores acknowledgment and won't commit the offsets.\n"
"The Kafka consumer commits the offset periodically when polling batches, as described above.\n"
"This strategy works well if the message processing is synchronous and failures handled gracefully."
msgstr "O conector usa essa estratégia por padrão se o senhor tiver ativado explicitamente o auto-compromisso do Kafka (com o atributo `enable.auto.commit` definido como `true` ). Nesse caso, o conector ignora a confirmação e não confirma os deslocamentos. O consumidor do Kafka confirma o deslocamento periodicamente ao sondar os lotes, conforme descrito acima. Essa estratégia funciona bem se o processamento da mensagem for síncrono e as falhas forem tratadas com elegância."

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "You can enable this strategy by configured enabled-auto-commit to true:"
msgstr "Pode ativar esta estratégia configurando enabled-auto-commit para true:"

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "Be aware that starting Quarkus 1.9, auto commit is disabled by default. So you need to explicitly enable it."
msgstr "Tenha em atenção que, a partir do Quarkus 1.9, a confirmação automática está desactivada por predefinição. Por isso, é necessário activá-lo explicitamente."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"If you don't enable auto-commit, using this strategy is still possible but will never commit the offsets.\n"
"In other words, you would restart from the oldest stored records every time.\n"
"While there are use cases for this, double-check that's what you want. In this case, enable this strategy with:"
msgstr "Se o senhor não ativar o auto-commit, o uso dessa estratégia ainda é possível, mas nunca confirmará os offsets. Em outras palavras, o senhor sempre reiniciará a partir dos registros armazenados mais antigos. Embora existam casos de uso para isso, verifique novamente se é isso que o senhor deseja. Nesse caso, ative essa estratégia com:"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "The latest strategy"
msgstr "A estratégia mais recente"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"This strategy commits the offset every time a message is acknowledged.\n"
"This strategy tends to commit often, and so decrease the throughput.\n"
"However, it also reduces the risk of duplicates if the messages are processed synchronously."
msgstr "Essa estratégia confirma o deslocamento toda vez que uma mensagem é confirmada. Essa estratégia tende a ser confirmada com frequência e, portanto, diminui a taxa de transferência. Entretanto, ela também reduz o risco de duplicatas se as mensagens forem processadas de forma síncrona."

#. type: Plain text
#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "Enable this strategy with:"
msgstr "Ativar esta estratégia com:"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid "Conclusion"
msgstr "Conclusão"

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"In general, use the `throttled` strategy.\n"
"It provides high-throughput and handles the asynchronous use cases.\n"
"This strategy is becoming the default strategy in Quarkus 1.10.\n"
"You can also switch to the `ignore` strategy if the Kafka auto-commit is acceptable for you, or if you want to skip offset commit altogether."
msgstr "Em geral, use a estratégia `throttled` . Ela oferece alto rendimento e lida com os casos de uso assíncronos. Essa estratégia está se tornando a estratégia padrão no Quarkus 1.10. Também é possível mudar para a estratégia `ignore` se o auto-commit do Kafka for aceitável para você ou se quiser ignorar completamente o commit de deslocamento."

#: _posts/2020-11-03-kafka-commit-strategies.adoc
#, fuzzy
msgid ""
"That concludes this blog post.\n"
"The next one will discuss how to receive and produce Cloud Events using the Kafka connector."
msgstr "Isso conclui esta postagem do blog. Na próxima, discutiremos como receber e produzir eventos na nuvem usando o conector Kafka."
