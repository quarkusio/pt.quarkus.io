msgid ""
msgstr ""
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "When Quarkus meets LangChain4j"
msgstr "Quando Quarkus encontra LangChain4j"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Learn about the new quarkus-langchain4j extension to integrate LLMs in Quarkus applications."
msgstr "Saiba mais sobre a nova extensão quarkus-langchain4j para integrar LLMs em aplicativos Quarkus."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Large language models (LLMs) are reshaping the world of software, altering the way we interact with users and develop business logic."
msgstr "Os modelos de linguagem ampla (LLMs) estão remodelando o mundo do software, alterando a maneira como interagimos com os usuários e desenvolvemos a lógica comercial."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Popularized by https://openai.com/[OpenAI]'s https://chat.openai.com/[ChatGPT], LLMs are now available in many flavors and sizes. The https://huggingface.co/models[Hugging-Face] platform references hundreds of them, and major tech companies like Facebook, Google, Microsoft, Amazon and IBM are also providing their own models."
msgstr "Popularizados pelo link:https://chat.openai.com/[ChatGPT] da link:https://openai.com/[OpenAI] , os LLMs agora estão disponíveis em vários sabores e tamanhos. A plataforma link:https://huggingface.co/models[Hugging-Face] faz referência a centenas deles, e as principais empresas de tecnologia, como Facebook, Google, Microsoft, Amazon e IBM, também estão fornecendo seus próprios modelos."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "LLMs are not a new concept. They have been around for a while, but they were not as powerful or as accessible they became when OpenAI made ChatGPT API's publically available. Since then the Quarkus team have been thinking about what it would mean to integrate LLMs in the Quarkus ecosystem. The talk https://www.youtube.com/watch?app=desktop&v=BD1MSLbs9KE[Java Meets AI] from Lize Raes at Devoxx 2023 has been a great source of inspiration."
msgstr "Os LLMs não são um conceito novo. Eles já existem há algum tempo, mas não eram tão poderosos nem tão acessíveis como se tornaram quando a OpenAI disponibilizou publicamente as APIs do ChatGPT. Desde então, a equipe do Quarkus vem pensando no que significaria integrar os LLMs ao ecossistema do Quarkus. A palestra link:https://www.youtube.com/watch?app=desktop&v=BD1MSLbs9KE[Java Meets AI] de Lize Raes na Devoxx 2023 foi uma grande fonte de inspiração."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Since, the Quarkus team, in collaboration with Dmytro Liubarskyi and the LangChain4j team, has been working on an extension to integrate LLMs in Quarkus applications. This extension is based on the https://github.com/langchain4j[LangChain4j library], which provides a common API to interact with LLMs. The LangChain4j project is a Java re-implementation of the famous https://www.langchain.com/[langchain] library."
msgstr "Desde então, a equipe do Quarkus, em colaboração com Dmytro Liubarskyi e a equipe do LangChain4j, vem trabalhando em uma extensão para integrar LLMs em aplicativos Quarkus. Essa extensão é baseada na link:https://github.com/langchain4j[biblioteca LangChain4j] , que fornece uma API comum para interagir com LLMs. O projeto LangChain4j é uma reimplementação em Java da famosa biblioteca link:https://www.langchain.com/[langchain] ."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "In this blog post, we will see how to use the just released https://docs.quarkiverse.io/quarkus-langchain4j/dev/index.html[quarkus-langchain4j] 0.1 extension to integrate LLMs in Quarkus applications. This extension is an exploration to understand how LLMs can be used in Quarkus applications."
msgstr "Nesta postagem do blog, veremos como usar a recém-lançada extensão link:https://docs.quarkiverse.io/quarkus-langchain4j/dev/index.html[quarkus-langchain4j] 0.1 para integrar LLMs em aplicativos Quarkus. Essa extensão é uma exploração para entender como os LLMs podem ser usados nos aplicativos Quarkus."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "We recorded a live Fireside chat on this extension. You can watch it here, the blog continues <<overview,below>>."
msgstr "Gravamos um Fireside chat ao vivo sobre essa extensão. O senhor pode assisti-lo aqui, e o blog continua xref:overview[abaixo] ."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Overview"
msgstr "Visão geral"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "First, let's have a look at the big picture. When integrating an LLM into a Quarkus application, you need to describe what you want the AI to do. Unlike traditional code, you are going to explain the behavior of the AI using natural language. Of course, there are a few techniques to tame the AI, but we will explore that later."
msgstr "Primeiro, vamos dar uma olhada no panorama geral. Ao integrar um LLM a um aplicativo Quarkus, o senhor precisa descrever o que deseja que a IA faça. Diferentemente do código tradicional, o senhor explicará o comportamento da IA usando linguagem natural. É claro que existem algumas técnicas para domar a IA, mas exploraremos isso mais tarde."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Strictly relying on the LLM's knowledge might not be enough. Thus, the Quarkus LangChain4j extension provides two mechanisms to extend AI knowledge:"
msgstr "Confiar estritamente no conhecimento do LLM pode não ser suficiente. Assim, a extensão Quarkus LangChain4j oferece dois mecanismos para ampliar o conhecimento da IA:"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "_Tools_ - a tool lets the LLM execute actions in your application. For instance, you can use a tool to send an email, call a REST endpoint, or execute a database query. The LLM decides when to use the tool, the method parameters, and what to do with the result."
msgstr "_Ferramentas_ - uma ferramenta permite que o LLM execute ações em seu aplicativo. Por exemplo, o senhor pode usar uma ferramenta para enviar um e-mail, chamar um ponto de extremidade REST ou executar uma consulta ao banco de dados. O LLM decide quando usar a ferramenta, os parâmetros do método e o que fazer com o resultado."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "_Document stores_ - LLMs are not good at remembering things. In addition, their context has a size limit. Thus, the extension provides a way to store and retrieve information from document stores. Before calling the LLM, the extension can ask for relevant documents in a document store and attach them to the context. The LLM can then use this data to make a decision. For instance, you can load spreadsheet data, reports, or data from a database."
msgstr "_Armazenamento de documentos_ - Os LLMs não são bons em se lembrar de coisas. Além disso, o contexto deles tem um limite de tamanho. Assim, a extensão oferece uma maneira de armazenar e recuperar informações de armazenamentos de documentos. Antes de chamar o LLM, a extensão pode solicitar documentos relevantes em um armazenamento de documentos e anexá-los ao contexto. O LLM pode então usar esses dados para tomar uma decisão. Por exemplo, o senhor pode carregar dados de planilhas, relatórios ou dados de um banco de dados."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "The following diagram illustrates the interactions between the LLM, the tools, and the document stores:"
msgstr "O diagrama a seguir ilustra as interações entre o LLM, as ferramentas e os armazenamentos de documentos:"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Show me some code!"
msgstr "Mostre-me um código!"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Alright, enough \"bla bla\", let's see some code! We are going to use Open AI GPT-3.5 (be careful that it's not the state-of-the-art model, but it's good enough for this demo), give it some product reviews, and ask the LLM to classify them between positive and negative reviews. The full code is available in the https://github.com/quarkiverse/quarkus-langchain4j/tree/main/samples/review-triage[quarkus-langchain4j repository]."
msgstr "Muito bem, chega de \"bla bla bla\", vamos ver um pouco de código! Vamos usar o Open AI GPT-3.5 (cuidado, pois não é o modelo de última geração, mas é bom o suficiente para esta demonstração), dar a ele algumas avaliações de produtos e pedir ao LLM que as classifique entre avaliações positivas e negativas. O código completo está disponível no link:https://github.com/quarkiverse/quarkus-langchain4j/tree/main/samples/review-triage[repositório quarkus-langchain4j] ."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "First, we need the `quarkus-langchain4j-openai` extension:"
msgstr "Primeiro, precisamos da extensão `quarkus-langchain4j-openai` :"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Once we have the extension, it's time to tell the LLM what we want to do. The Quarkus LangChain4J extension provides a declarative way to describe LLM interactions. The idea is the same as the Quarkus REST client. We model the interaction using an interface annotated with `@RegisterAiService`:"
msgstr "Quando tivermos a extensão, é hora de dizer ao LLM o que queremos fazer. A extensão Quarkus LangChain4J fornece uma maneira declarativa de descrever as interações do LLM. A ideia é a mesma do cliente REST do Quarkus. Modelamos a interação usando uma interface anotada com `@RegisterAiService` :"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "The rest of the application would be able to use the LLM by injecting the `TriageService` interface and calling the methods."
msgstr "O restante do aplicativo poderá usar o LLM injetando a interface `TriageService` e chamando os métodos."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Speaking about methods, that's where the magic happens. You will describe what you want the LLM to do using natural language. First, you start with `@SystemMessage` to define the role and scope. Then, you can use `@UserMessage` to describe the task."
msgstr "Falando sobre métodos, é aí que a mágica acontece. O senhor descreverá o que deseja que o LLM faça usando linguagem natural. Primeiro, o senhor começa com `@SystemMessage` para definir a função e o escopo. Em seguida, o senhor pode usar `@UserMessage` para descrever a tarefa."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Voilà! That's all you need to do to describe the interaction with the LLM. The instructions follow a set of principles to shape the LLM response. Learn more about these techniques in https://docs.quarkiverse.io/quarkus-langchain4j/dev/prompt-engineering.html[the dedicated prompt engineering page]."
msgstr "Voilà! Isso é tudo o que o senhor precisa fazer para descrever a interação com o LLM. As instruções seguem um conjunto de princípios para moldar a resposta do LLM. Saiba mais sobre essas técnicas na link:https://docs.quarkiverse.io/quarkus-langchain4j/dev/prompt-engineering.html[página dedicada à engenharia de instruções] ."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Now, to call the LLM from the application code, just inject the `TriageService` and call the `triage` method:"
msgstr "Agora, para chamar o LLM a partir do código do aplicativo, basta injetar o endereço `TriageService` e chamar o método `triage` :"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "That's it! The LLM is now integrated into the application. The `TriageService` interface is used as an ambassador to call the LLM. This declarative approach has many advantages:"
msgstr "É isso aí! O LLM agora está integrado ao aplicativo. A interface `TriageService` é usada como um embaixador para chamar o LLM. Essa abordagem declarativa tem muitas vantagens:"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Testability - you can easily mock the LLM by providing a fake implementation of the interface."
msgstr "Testabilidade - o senhor pode facilmente simular o LLM fornecendo uma implementação falsa da interface."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Observability - you can use the Quarkus metrics annotation to monitor the LLM methods."
msgstr "Observabilidade - o senhor pode usar a anotação de métricas do Quarkus para monitorar os métodos LLM."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Resilience - you can use the Quarkus fault-tolerance annotations to handle failures, timeouts, and other transient issues."
msgstr "Resiliência - o senhor pode usar as anotações de tolerância a falhas do Quarkus para lidar com falhas, tempos limite e outros problemas transitórios."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Tools and Document loader"
msgstr "Ferramentas e carregador de documentos"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "The previous example is a bit simplistic. In the real world, you will need to extend the LLM knowledge with tools and document stores. The `@RegisterAiService` annotation lets you define the tools and document stores to use."
msgstr "O exemplo anterior é um pouco simplista. No mundo real, o senhor precisará ampliar o conhecimento do LLM com ferramentas e armazenamentos de documentos. A anotação `@RegisterAiService` permite que o senhor defina as ferramentas e os armazenamentos de documentos a serem usados."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Tools"
msgstr "Ferramentas"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Tools are methods that the LLM can invoke."
msgstr "Ferramentas são métodos que o LLM pode invocar."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "To declare a tool, just use the `@Tool` annotation on a _bean_ method:"
msgstr "Para declarar uma ferramenta, basta usar a anotação `@Tool` em um método _bean_ :"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "In this example, we are using the Panache repository pattern to access the database. We have a specific method annotated with `@Tool` to retrieve the customer name. When the LLM needs to get the customer name, it instructs Quarkus to call this method and receives the result."
msgstr "Neste exemplo, estamos usando o padrão de repositório Panache para acessar o banco de dados. Temos um método específico anotado com `@Tool` para recuperar o nome do cliente. Quando o LLM precisa obter o nome do cliente, ele instrui o Quarkus a chamar esse método e recebe o resultado."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Obviously, it's not a good idea to expose every operation to the LLM. So, in addition to `@Tool`, you need to list the set of tools you allow the LLM to invoke in the `@RegisterAiService` annotation:"
msgstr "Obviamente, não é uma boa ideia expor todas as operações ao LLM. Portanto, além de `@Tool` , é necessário listar o conjunto de ferramentas que o senhor permite que o LLM invoque na anotação `@RegisterAiService` :"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "The `chatMemoryProviderSupplier` configuration may raise questions. When using tools, a sequence of messages unfolds behind the scenes. It becomes necessary to configure the AI service's memory to adeptly track these interactions. The `chatMemoryProviderSupplier` allows configuring how the memory is handled. The value `BeanChatMemoryProviderSupplier.class` instructs Quarkus to look for a `ChatMemoryProvider` bean, like the following:"
msgstr "A configuração do site `chatMemoryProviderSupplier` pode gerar dúvidas. Ao usar ferramentas, uma sequência de mensagens se desenrola nos bastidores. Torna-se necessário configurar a memória do serviço de IA para rastrear essas interações de forma adequada. O `chatMemoryProviderSupplier` permite configurar como a memória é tratada. O valor `BeanChatMemoryProviderSupplier.class` instrui o Quarkus a procurar um bean `ChatMemoryProvider` , como o seguinte:"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "At the moment, only the OpenAI models support tools."
msgstr "No momento, apenas os modelos OpenAI suportam ferramentas."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Document stores"
msgstr "Armazenamento de documentos"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Document stores are a way to extend the LLM knowledge with your own data. This approach - called Retrieval Augmented Generation (_RAG_) - requires two processes:"
msgstr "Os armazenamentos de documentos são uma forma de ampliar o conhecimento do LLM com seus próprios dados. Essa abordagem, denominada Retrieval Augmented Generation _(RAG_ ), requer dois processos:"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "The ingestion process"
msgstr "O processo de ingestão"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "you ingest documents into a document store. The documents are not stored as-is, but an embedding is computed. This embedding is a vector representation of the document."
msgstr "O senhor ingere documentos em um armazenamento de documentos. Os documentos não são armazenados como estão, mas uma incorporação é computada. Essa incorporação é uma representação vetorial do documento."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "The RAG process"
msgstr "O processo RAG"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "in the Quarkus application, you need to declare the document store and the embedding to use. Thus, before calling the LLM, it retrieves the relevant documents from the store (that's where the vector representation is useful) and attaches them to the LLM context (which essentially means adding the retrieved information from the document to the user message)."
msgstr "No aplicativo Quarkus, o senhor precisa declarar o armazenamento de documentos e a incorporação a ser usada. Assim, antes de chamar o LLM, ele recupera os documentos relevantes do armazenamento (é aí que a representação vetorial é útil) e os anexa ao contexto do LLM (o que significa essencialmente adicionar as informações recuperadas do documento à mensagem do usuário)."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "The Quarkus LangChain4j extension provides facilities for both processes."
msgstr "A extensão Quarkus LangChain4j oferece recursos para ambos os processos."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "The following code shows how to ingest a document into a Redis document store:"
msgstr "O código a seguir mostra como ingerir um documento em um armazenamento de documentos Redis:"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Then, generally, in another application, you can use the populated document store to extend the LLM knowledge. First, create a bean implementing the `Retriever<TextSegment>` interface:"
msgstr "Então, em geral, em outro aplicativo, o senhor pode usar o armazenamento de documentos preenchido para ampliar o conhecimento do LLM. Primeiro, crie um bean que implemente a interface `Retriever<TextSegment>` :"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Then, add the document store and the retriever to the `@RegisterAiService` annotation:"
msgstr "Em seguida, adicione o armazenamento de documentos e o recuperador à anotação `@RegisterAiService` :"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "`RegisterAiService.BeanRetrieverSupplier.class` is a special value looking for the `Retriever` bean in the Quarkus application."
msgstr "`RegisterAiService.BeanRetrieverSupplier.class` é um valor especial que procura o bean `Retriever` no aplicativo Quarkus."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "Final notes"
msgstr "Notas finais"

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "This post presented the Quarkus LangChain4j extension. This is the first version of the extension, and we continue exploring and experimenting with approaches to integrate LLMs into Quarkus applications. We are looking for feedback and ideas to improve these integrations. We are working on removing some rough angles, and exploring other ways to integrate LLMs and to bring developer joy when integrating with LLMs."
msgstr "Este post apresentou a extensão LangChain4j do Quarkus. Esta é a primeira versão da extensão, e continuamos explorando e experimentando abordagens para integrar LLMs aos aplicativos Quarkus. Estamos buscando feedback e ideias para melhorar essas integrações. Estamos trabalhando para remover alguns ângulos irregulares e explorar outras maneiras de integrar LLMs e trazer alegria ao desenvolvedor ao integrar com LLMs."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "This extension would not have been possible without the fantastic work from Dmytro Liubarskyi on the LangChain4j library. Our collaboration has allowed us to provide a Quarkus-friendly approach to integrate the library (including native compilation support) and shape a new way to integrate LLMs in Quarkus applications. The current design was tailored to enable Quarkus applications to use LLM easily. You can basically hook up any of your _beans_ as tools or ingest data into a store. In addition, any of your bean can now interact with an LLM."
msgstr "Essa extensão não teria sido possível sem o trabalho fantástico de Dmytro Liubarskyi na biblioteca LangChain4j. Nossa colaboração nos permitiu fornecer uma abordagem amigável ao Quarkus para integrar a biblioteca (incluindo suporte à compilação nativa) e moldar uma nova maneira de integrar LLMs em aplicativos Quarkus. O design atual foi adaptado para permitir que os aplicativos Quarkus usem o LLM facilmente. Basicamente, o senhor pode conectar qualquer um dos seus _beans_ como ferramentas ou ingerir dados em um armazenamento. Além disso, qualquer um dos seus beans agora pode interagir com um LLM."

#: _posts/2023-11-16-quarkus-meets-langchain4j.adoc
#, fuzzy
msgid "We are looking forward to continuing this collaboration and to see what you will build with this extension."
msgstr "Estamos ansiosos para dar continuidade a essa colaboração e ver o que os senhores criarão com essa extensão."
