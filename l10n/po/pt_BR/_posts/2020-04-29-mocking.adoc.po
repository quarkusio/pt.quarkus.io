# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2020-04-29-mocking.adoc
#, fuzzy, no-wrap
msgid "Mocking CDI beans in Quarkus"
msgstr "Simulação de beans CDI no Quarkus"

#. type: YAML Front Matter: synopsis
#: _posts/2020-04-29-mocking.adoc
#, fuzzy, no-wrap
msgid "Quarkus 1.4 introduces some interesting new capabilities for mocking CDI beans."
msgstr "O Quarkus 1.4 introduz algumas capacidades novas e interessantes para a simulação de beans CDI."

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"Testing Quarkus applications has been an important part of the Quarkus Developer Joy, which is why\n"
"`@QuarkusTest` for testing JVM applications and `@NativeTest` for black-box testing of the native images have been\n"
"part of Quarkus since the first release.\n"
"A recurring request however amongst our community members has been to have Quarkus allow them to selectively\n"
"mock certain CDI beans for specific tests. This post will introduce the new mocking capabilities\n"
"that `1.4` brings which aim to address those concerns, while also providing a glimpse of additional\n"
"improvements in this are that will be part of `1.5`."
msgstr "Testar aplicativos Quarkus tem sido uma parte importante da alegria do desenvolvedor Quarkus, e é por isso que `@QuarkusTest` para testar aplicativos JVM e `@NativeTest` para testes de caixa preta das imagens nativas fazem parte do Quarkus desde a primeira versão. No entanto, uma solicitação recorrente entre os membros da nossa comunidade tem sido a de que o Quarkus permita que eles simulem seletivamente determinados beans CDI para testes específicos. Esta postagem apresentará os novos recursos de mock que o `1.4` traz e que visam a atender a essas preocupações, além de fornecer um vislumbre de outras melhorias nessa área que farão parte do `1.5` ."

#. type: Title ==
#: _posts/2020-04-29-mocking.adoc
#, fuzzy, no-wrap
msgid "Old approach"
msgstr "Abordagem antiga"

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "Let us assume that a Quarkus application contains the following (purely contrived) bean:"
msgstr "Suponhamos que uma aplicação Quarkus contém o seguinte bean (puramente artificial):"

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"When testing the `generateSendInvoice` method we most likely don't want to use the actual `InvoiceNotificationService` as it would\n"
"result in sending real notifications. With the old Quarkus approach one could \"override\"\n"
"the `InvoiceNotificationService` in tests by adding the following bean in the test sources:"
msgstr "Ao testar o método `generateSendInvoice` , provavelmente não queremos usar o `InvoiceNotificationService` real, pois isso resultaria no envio de notificações reais. Com a antiga abordagem do Quarkus, era possível \"substituir\" o `InvoiceNotificationService` nos testes adicionando o seguinte bean nos códigos-fonte de teste:"

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"When Quarkus scanned this code, the use of `@Mock` would result in `MockInvoiceNotificationService` being used as\n"
"the implementation of `InvoiceNotificationService` in every place where a `InvoiceNotificationService` bean was injected\n"
"(in CDI terms this is called an injection point)."
msgstr "Quando o Quarkus analisou esse código, o uso de `@Mock` fez com que `MockInvoiceNotificationService` fosse usado como a implementação de `InvoiceNotificationService` em todos os locais em que um bean `InvoiceNotificationService` foi injetado (em termos de CDI, isso é chamado de ponto de injeção)."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "Although this mechanism is fairly straightforward to use, it nonetheless suffers from a few problems:"
msgstr "Embora este mecanismo seja bastante simples de utilizar, apresenta, no entanto, alguns problemas:"

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"A new class (or a new CDI producer method) needs to be used for each bean type that requires a mock. In a large application where a lot of\n"
"mocks are needed, the amount of boilerplate code increases unacceptably."
msgstr "Uma nova classe (ou um novo método produtor de CDI) precisa ser usada para cada tipo de bean que requer uma simulação. Em um aplicativo grande em que são necessários muitos mocks, a quantidade de código boilerplate aumenta de forma inaceitável."

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"There is no way for a mock to be used for certain tests only. This is due to the fact that beans that are annotated with `@Mock` are normal\n"
"CDI beans (and are therefore used throughout the application).\n"
"Depending on what needs to be tested, this can be very problematic."
msgstr "Não há como usar um mock somente para determinados testes. Isso se deve ao fato de que os beans anotados com `@Mock` são beans CDI normais (e, portanto, são usados em todo o aplicativo). Dependendo do que precisa ser testado, isso pode ser muito problemático."

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"There is a no out of the box integration with https://site.mockito.org/[Mockito], which is the de-facto standard for\n"
"mocking in Java applications. Users can certainly use Mockito (most commonly by using a CDI producer method), but there\n"
"is boilerplate code involved."
msgstr "Não há integração imediata com o link:https://site.mockito.org/[Mockito] , que é o padrão de fato para a simulação em aplicativos Java. Os usuários certamente podem usar o Mockito (mais comumente usando um método produtor de CDI), mas há um código padrão envolvido."

#. type: Title ==
#: _posts/2020-04-29-mocking.adoc
#, fuzzy, no-wrap
msgid "New approach"
msgstr "Nova abordagem"

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"Starting with Quarkus `1.4`, users have the ability to create and inject per-test mocks for normal scoped CDI beans using\n"
"`io.quarkus.test.junit.QuarkusMock`. Moreover, Quarkus provides out of the box integration with Mockito\n"
"allowing for zero effort mocking of CDI beans using the `io.quarkus.test.junit.mockito.@InjectMock` annotation."
msgstr "A partir do Quarkus `1.4` , os usuários podem criar e injetar mocks por teste para beans CDI com escopo normal usando `io.quarkus.test.junit.QuarkusMock` . Além disso, o Quarkus oferece integração imediata com o Mockito, permitindo a simulação sem esforço de beans CDI usando a anotação `io.quarkus.test.junit.mockito.@InjectMock` ."

#. type: Title ===
#: _posts/2020-04-29-mocking.adoc
#, fuzzy, no-wrap
msgid "Using QuarkusMock"
msgstr "Utilização do QuarkusMock"

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"`QuarkusMock` provides the foundation for mocking normal scoped CDI beans and is also used under the hood by `@InjectMock`, so let us examine\n"
"it first. The best way to do this is using an example:"
msgstr "`QuarkusMock` fornece a base para a simulação de beans de CDI com escopo normal e também é usado por `@InjectMock` , portanto, vamos examiná-lo primeiro. A melhor maneira de fazer isso é usar um exemplo:"

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "This part of the  example uses Mockito for convenience's sake only. `QuarkusMock` is not tied to Mockito in any way."
msgstr "Esta parte do exemplo usa o Mockito apenas por conveniência. O site `QuarkusMock` não está vinculado ao Mockito de forma alguma."

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"We use `QuarkusMock.installMockForType()` because the injected bean instance is not yet available. Very important to note is that\n"
"the mock setup in a JUnit `@BeforeAll` method, is used for *all* test methods of the class (other test classes are *not* affected by this)."
msgstr "Usamos `QuarkusMock.installMockForType()` porque a instância do bean injetado ainda não está disponível. É muito importante observar que a configuração de simulação em um método JUnit `@BeforeAll` é usada para *todos os* métodos de teste da classe (outras classes de teste *não* são afetadas por isso)."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "The mock for `MockableBean1` is being used as it was defined for all test methods of the class."
msgstr "A simulação para `MockableBean1` está a ser utilizada tal como foi definida para todos os métodos de teste da classe."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "Since no mock has been set up for `MockableBean2`, the CDI bean is being used."
msgstr "Uma vez que não foi criada uma simulação para `MockableBean2`, está a ser utilizado o bean CDI."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "We use `QuarkusMock.installMockForInstance()` here because inside the test method, the injected bean instance is available."
msgstr "Utilizamos `QuarkusMock.installMockForInstance()` aqui porque dentro do método de teste, a instância do bean injetado está disponível."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "As we used `BonjourMockableBean2` as a mock `MockableBean2`, this class is now used."
msgstr "Como utilizámos `BonjourMockableBean2` como uma simulação `MockableBean2`, esta classe é agora utilizada."

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"`QuarkusMock` can be used for any normal scoped CDI bean - the most common of which are `@ApplicationScoped` and `@RequestScoped`.\n"
"This means that beans with `@Singleton` and `@Dependent` scope *cannot* be used with `QuarkusMock`."
msgstr "`QuarkusMock` pode ser usado para qualquer bean CDI com escopo normal - os mais comuns são `@ApplicationScoped` e `@RequestScoped` . Isso significa que os beans com escopo `@Singleton` e `@Dependent` *não podem* ser usados com `QuarkusMock` ."

#. type: delimited block =
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "Furthermore, `QuarkusMock` will not work properly when it's used in tests that run parallel in the same JVM."
msgstr "Além disso, o `QuarkusMock` não funcionará corretamente quando for utilizado em testes que são executados em paralelo na mesma JVM."

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"Returning to the original example of the blog post, we could get rid of the `MockInvoiceNotificationService` class and\n"
"instead use something like the following:"
msgstr "Voltando ao exemplo original da postagem do blog, poderíamos nos livrar da classe `MockInvoiceNotificationService` e, em vez disso, usar algo como o seguinte:"

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"Note that in this case we don't need to create a new class implementing `InvoiceNotificationService`.\n"
"Moreover, we have full and per test control over the mock, something which grants up a lot of flexibility when writing tests."
msgstr "Observe que, nesse caso, não precisamos criar uma nova classe implementando `InvoiceNotificationService` . Além disso, temos controle total e por teste sobre o mock, o que proporciona muita flexibilidade ao escrever testes."

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"For example, if we had some other test where we did want to use the real `InvoiceNotificationService`, then in that test\n"
"we would simply not do any mocking of `InvoiceNotificationService`."
msgstr "Por exemplo, se tivéssemos algum outro teste em que quiséssemos usar o `InvoiceNotificationService` real, nesse teste simplesmente não faríamos nenhuma simulação do `InvoiceNotificationService` ."

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"If yet another test needed to mock `InvoiceNotificationService` in some other way, then it would be perfectly free to do so,\n"
"using the same method `OrderServiceTest` uses, without causing any problems to the other tests."
msgstr "Se outro teste precisasse simular o `InvoiceNotificationService` de alguma outra forma, seria perfeitamente livre para fazê-lo, usando o mesmo método que o `OrderServiceTest` usa, sem causar problemas aos outros testes."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "Finally, note in the example above we didn't mock `InvoiceService`, which meant that the real `InvoiceService` was being used in `OrderServiceTest`."
msgstr "Finalmente, note que no exemplo acima não simulámos `InvoiceService`, o que significa que o `InvoiceService` real estava a ser utilizado em `OrderServiceTest`."

#. type: Title ===
#: _posts/2020-04-29-mocking.adoc
#, fuzzy, no-wrap
msgid "Using @InjectMock"
msgstr "Utilizar @InjectMock"

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"Hopefully the previous section convinced you of the merits of `QuarkusMock` over the old approach. You might also be wondering\n"
"however if there is a way to reduce boilerplate code even further and provide tighter integration with Mockito. That is\n"
"where `@InjectMock` comes in handy."
msgstr "Esperamos que a seção anterior tenha convencido o senhor dos méritos do `QuarkusMock` em relação à abordagem antiga. No entanto, o senhor também deve estar se perguntando se há uma maneira de reduzir ainda mais o código boilerplate e fornecer uma integração mais estreita com o Mockito. É aí que o site `@InjectMock` se torna útil."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "To demonstrate `@InjectMock` let's rewrite the `MockTestCase` from the previous section."
msgstr "Para demonstrar `@InjectMock`, vamos reescrever o `MockTestCase` da secção anterior."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "First of all, we need to add the following dependency:"
msgstr "Antes de mais, precisamos de adicionar a seguinte dependência:"

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "Now we can rewrite the `MockTestCase` like so:"
msgstr "Agora podemos reescrever o `MockTestCase` da seguinte forma:"

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "`@InjectMock` results in a mock being created and being available in *all* test methods of the test class (other test classes are *not* affected by this)"
msgstr "`@InjectMock` resulta na criação de uma simulação e na sua disponibilidade em *todos os* métodos de teste da classe de teste (outras classes de teste *não* são afectadas por isto)"

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "The `mockableBean1` is configured here for all test methods of the class"
msgstr "O `mockableBean1` é configurado aqui para todos os métodos de teste da classe"

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "Configure `mockableBean2` for this test only"
msgstr "Configurar `mockableBean2` apenas para este teste"

#. type: delimited block =
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "Since `@InjectMock` uses `QuarkusMock` under the hood, the same limitations apply to its use."
msgstr "Uma vez que o `@InjectMock` utiliza o `QuarkusMock` como base, aplicam-se as mesmas limitações à sua utilização."

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"Additionally, `@InjectMock` works like an injection point for the bean, so for it to work properly when\n"
"the target bean uses CDI qualifiers, those qualifiers also need to be added to the field.\n"
"We will see an example of this in next section about mocking a `@RestClient` bean."
msgstr "Além disso, o site `@InjectMock` funciona como um ponto de injeção para o bean, portanto, para que ele funcione corretamente quando o bean de destino usar qualificadores CDI, esses qualificadores também precisam ser adicionados ao campo. Veremos um exemplo disso na próxima seção sobre a simulação de um bean `@RestClient` ."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "As a final example, we can rewrite the `OrderServiceTest` test like so:"
msgstr "Como exemplo final, podemos reescrever o teste `OrderServiceTest` da seguinte forma:"

#. type: Title ====
#: _posts/2020-04-29-mocking.adoc
#, fuzzy, no-wrap
msgid "Using @InjectMock with @RestClient"
msgstr "Usando @InjectMock com @RestClient"

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"A very common need is to mock `@RestClient` beans. Thankfully it's a need well covered by `@InjectMock` - as long\n"
"as two principles are followed:"
msgstr "Uma necessidade muito comum é simular o `@RestClient` beans. Felizmente, essa é uma necessidade bem atendida pelo `@InjectMock` , desde que dois princípios sejam seguidos:"

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "The bean is made `@ApplicationScoped` (instead of accepting the default scope which `@RegisterRestClient` implies, i.e. `@Dependent`)"
msgstr "O bean passa a ser `@ApplicationScoped` (em vez de aceitar o âmbito por defeito que `@RegisterRestClient` implica, ou seja, `@Dependent`)"

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "The `@RestClient` CDI qualifier is used when injecting the bean into the test."
msgstr "O qualificador `@RestClient` CDI é utilizado para injetar o bean no teste."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "As usual, an example best demonstrates these requirements. Say we have a `GreetingService` which we wish to use to build a rest client:"
msgstr "Como de costume, um exemplo demonstra melhor estes requisitos. Digamos que temos um `GreetingService` que queremos utilizar para construir um cliente de repouso:"

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "`@ApplicationScoped` needs to be used to make `GreetingService` mockable."
msgstr "`@ApplicationScoped` precisa de ser utilizado para tornar `GreetingService` passível de ser simulado."

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "An example test class could be:"
msgstr "Um exemplo de classe de teste poderia ser:"

#. type: Plain text
#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid "We need to use the `@RestClient` CDI qualifier, since Quarkus creates the `GreetingService` bean with this qualifier."
msgstr "É necessário utilizar o qualificador `@RestClient` CDI, uma vez que o Quarkus cria o bean `GreetingService` com este qualificador."

#. type: Title ==
#: _posts/2020-04-29-mocking.adoc
#, fuzzy, no-wrap
msgid "More Mocking in Quarkus 1.5"
msgstr "Mais simulações no Quarkus 1.5"

#: _posts/2020-04-29-mocking.adoc
#, fuzzy
msgid ""
"Quarkus 1.5 will ship with a new testing module (`quarkus-panache-mock`) that will make mocking Panache entities a breeze.\n"
"If you are eager to see what this feature is all about, check out https://github.com/quarkusio/quarkus/blob/3a5680ea367c5dad60655dcef0ca9765f14d5efe/docs/src/main/asciidoc/getting-started-testing.adoc#73-mocking-with-panache[this]\n"
"and feel free to give us early feedback."
msgstr "O Quarkus 1.5 virá com um novo módulo de teste ( `quarkus-panache-mock` ) que facilitará a simulação de entidades Panache. Se o senhor estiver ansioso para ver do que se trata esse recurso, dê uma olhada no link:https://github.com/quarkusio/quarkus/blob/3a5680ea367c5dad60655dcef0ca9765f14d5efe/docs/src/main/asciidoc/getting-started-testing.adoc#73-mocking-with-panache[site] e fique à vontade para nos dar um feedback antecipado."
