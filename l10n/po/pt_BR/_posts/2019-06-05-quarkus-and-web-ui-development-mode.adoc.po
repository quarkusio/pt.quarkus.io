# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Quarkus and Web UI Development"
msgstr "Quarkus e desenvolvimento de interfaces Web"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "In this blog post we will take advantage of the respective development modes of both Quarkus and Angular CLI and see how we can develop a zero turnaround web application backed by a RESTful API on Quarkus. While I am using Angular, *the concepts are the same for other modern web application frameworks.*"
msgstr "Neste post vamos tirar partido dos respectivos modos de desenvolvimento do Quarkus e do Angular CLI e ver como podemos desenvolver uma aplicação web de retorno zero suportada por uma API RESTful no Quarkus. Embora eu esteja a usar o Angular, *os conceitos são os mesmos para outras estruturas modernas de aplicações web.*"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "The source code for this blog can be found at https://github.com/kabir/blog-quarkus-ui-development. It contains a README which explains in detail how the application was set up and how we implemented each step, addressing problems we uncovered along our way."
msgstr "O código fonte deste blogue pode ser encontrado em  https://github.com/kabir/blog-quarkus-ui-development  Contém um README que explica em pormenor como a aplicação foi configurada e como implementámos cada passo, abordando os problemas que descobrimos pelo caminho."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "You need to have https://nodejs.org/en/download/package-manager/[Node], https://yarnpkg.com/en/docs/install[Yarn] and https://cli.angular.io[Angular CLI] installed on your system, and familiarity with Angular and Quarkus is assumed."
msgstr "É necessário ter  link:https://nodejs.org/en/download/package-manager/[o Node], o  link:https://yarnpkg.com/en/docs/install[Yarn] e o  link:https://cli.angular.io[Angular CLI] instalados no seu sistema e pressupõe-se que esteja familiarizado com o Angular e o Quarkus."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Clone the https://github.com/kabir/blog-quarkus-ui-development[project], and go into its folder. First run:"
msgstr "Clone o  link:https://github.com/kabir/blog-quarkus-ui-development[projeto] e vá para a sua pasta. Primeira execução:"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
msgid "$mvn -Dui.deps compile"
msgstr ""

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "This downloads all the dependencies needed to build our web application. Then run:"
msgstr "Isto descarrega todas as dependências necessárias para construir a nossa aplicação web. Em seguida, execute:"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
msgid "$mvn package -Dui.dev -Dui.proxy quarkus:dev"
msgstr ""

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "The `-Dui` system property enables a Maven profile to build the web application. The output directory for the web application `webapp/dist/webapp` gets bundled into the Quarkus application. We will talk about `-Dui.proxy` later on."
msgstr "A propriedade de sistema `-Dui` ativa um perfil Maven para construir a aplicação Web. O diretório de saída da aplicação Web `webapp/dist/webapp` é incluído na aplicação Quarkus. Falaremos sobre `-Dui.proxy` mais adiante."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Go to http://localhost:8080 in your browser and take a look at our sample application. It contains a few different pages. Go to the one called `Rest` which makes a REST call. We can change the return value of the https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/SampleResource.java[`SampleServlet.hello()`] method. If you refresh the page you will see the changes made reflected automatically!"
msgstr "Aceda a  http://localhost:8080  no seu browser e veja a nossa aplicação de amostra. Ela contém algumas páginas diferentes. Vá para a página chamada `Rest`, que faz uma chamada REST. Podemos alterar o valor de retorno do método  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/SampleResource.java[`SampleServlet.hello()`] do método. Se atualizar a página, verá as alterações efectuadas reflectidas automaticamente!"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "With what we have so far, if we were to make changes to the user interface in our web application, we would need to stop Quarkus and run the above command to build the web application again and restart quarkus. This is not what we want, so we take advantage of Angular's https://angular.io/guide/build#proxying-to-a-backend-server[proxy]. https://facebook.github.io/create-react-app/docs/proxying-api-requests-in-development[React] and https://cli.vuejs.org/config/#devserver-proxy[Vue] have something similar."
msgstr "Com o que temos até agora, se fizéssemos alterações na interface do utilizador na nossa aplicação web, teríamos de parar o Quarkus e executar o comando acima para construir novamente a aplicação web e reiniciar o quarkus. Isso não é o que queremos, então aproveitamos o  link:https://angular.io/guide/build#proxying-to-a-backend-server[proxy] do Angular.  link:https://facebook.github.io/create-react-app/docs/proxying-api-requests-in-development[O React] e  link:https://cli.vuejs.org/config/#devserver-proxy[o Vue] têm algo semelhante."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "In another terminal window go into the `webapp/` folder of the cloned project, and run:"
msgstr "Em outra janela de terminal, vá para a pasta `webapp/` do projeto clonado e execute:"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
msgid "$yarn proxy"
msgstr ""

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "This will start the Angular development server in proxy mode on port 4200. Go to http://localhost:4200 and you will see the same application as you saw earlier on port 8080, but served by the Angular development server while accessing the REST endpoints from the running Quarkus application. If you make any changes to any of the Angular components set up in https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/src/app/app.component.ts[`app.component.ts`] you will see your changes reflected."
msgstr "Isso iniciará o servidor de desenvolvimento Angular no modo proxy na porta 4200. Vá para  http://localhost:4200  e verá a mesma aplicação que viu anteriormente na porta 8080, mas servida pelo servidor de desenvolvimento Angular enquanto acede aos pontos finais REST a partir da aplicação Quarkus em execução. Se você fizer qualquer alteração em qualquer um dos componentes do Angular configurados em  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/src/app/app.component.ts[`app.component.ts`] você verá suas alterações refletidas."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "This is great!!! We can now be super-productive and make changes in both our front-end and our back-end, and see the changes immediately without needing to rebuild, repackage and restart our application!"
msgstr "Isto é ótimo!!! Agora podemos ser super produtivos e fazer alterações tanto no nosso front-end como no nosso back-end, e ver as alterações imediatamente sem precisar de reconstruir, reempacotar e reiniciar a nossa aplicação!"

#. type: Title ==
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Adjustments Summary"
msgstr "Resumo dos ajustamentos"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "The example project has already been set up with the needed adjustments to work properly both as a bundled application and in development mode. These are the main tweaks:"
msgstr "O projeto de exemplo já foi configurado com os ajustes necessários para funcionar corretamente tanto como uma aplicação integrada como em modo de desenvolvimento. Estes são os principais ajustes:"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Handle the Angular routes in the UI rather than on the back-end. This is important for the bundled version (running on port 8080)."
msgstr "Lidar com as rotas do Angular na interface do usuário em vez de no back-end. Isso é importante para a versão empacotada (executada na porta 8080)."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Enable the Angular proxy to allow for the UI to call REST endpoints served by Quarkus."
msgstr "Active o proxy Angular para permitir que a IU chame pontos de extremidade REST servidos pelo Quarkus."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Signal to the back-end that the front-end is running in a proxy, i.e. not served by us. This is important if the back-end needs to redirect to a page in the front-end."
msgstr "Sinaliza para o back-end que o front-end está a ser executado num proxy, ou seja, não é servido por nós. Isto é importante se o back-end precisar de redirecionar para uma página no front-end."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "We will focus on the changes needed to make this work well, and not go into the details of how the application is set up."
msgstr "Concentrar-nos-emos nas alterações necessárias para que isto funcione bem e não entraremos em pormenores sobre a forma como a aplicação é configurada."

#. type: Title ===
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Handle Angular Routes"
msgstr "Manipular rotas angulares"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Add a filter, https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/AngularRouteFilter.java[AngularRouteFilter]. The essence of its `doFilter()` method is:"
msgstr "Adicionar um filtro,  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/AngularRouteFilter.java[AngularRouteFilter]. A essência do seu método `doFilter()` é:"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "This filter is only needed when running the application bundled in Quarkus (port 8080). It is not needed when connecting to the application running in Angular (port 4200). It's purpose is to allow us to **bookmark pages** in the application. All the server knows about are things like:"
msgstr "Este filtro só é necessário quando se executa a aplicação integrada no Quarkus (porta 8080). Não é necessário quando se liga à aplicação executada em Angular (porta 4200). O seu objetivo é permitir-nos *marcar páginas* na aplicação. Tudo o que o servidor sabe é sobre coisas como:"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "the REST endpoints"
msgstr "os pontos de extremidade REST"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "deployed servlets"
msgstr "servlets implantados"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "the resources in the `META-INF/resources/` folder of the application"
msgstr "os recursos na pasta `META-INF/resources/` da aplicação"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "The `META-INF/resources/` in our case contains the application's index.html and the transpiled resources."
msgstr "O `META-INF/resources/`, no nosso caso, contém o index.html da aplicação e os recursos transpilados."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Without this filter, if you go to one of the Angular routes directly (e.g if you try to refresh when on http://localhost:8080/rest which is the `Rest` page we saw earlier) Quarkus will think it is a file, a REST endpoint or a servlet. Since Quarkus has no knowledge of anything called `/rest` you end up with a 404 (Not Found) status. The filter checks the status code of the request after calling `chain.doFilter()`. If the status is 404 and does not seem to be a file, we forward this request to `/`, which in turn serves up the `index.html` file. By doing a forward the path and parameters of the request are preserved. Angular then figures out that `/rest` is one of its known routes and displays the appropriate page of the application. Once the web application is loaded in the browser, Angular takes over and handles all the internal links to other routes in the web application (as an example, if you are on http://localhost:8080 and click on the link taking you to http://localhost:8080/other there is no round-trip to the server)."
msgstr "Sem este filtro, se for diretamente a uma das rotas Angular (por exemplo, se tentar atualizar quando estiver em  http://localhost:8080/rest , que é a página `Rest` que vimos anteriormente), o Quarkus pensará que é um ficheiro, um ponto final REST ou um servlet. Uma vez que o Quarkus não tem conhecimento de nada chamado `/rest`, o utilizador acaba por receber o estado 404 (Não encontrado). O filtro verifica o código de estado do pedido depois de chamar `chain.doFilter()`. Se o estado for 404 e não parecer ser um ficheiro, reencaminhamos este pedido para `/`, que por sua vez serve o ficheiro `index.html`. Ao fazer um encaminhamento, o caminho e os parâmetros da solicitação são preservados. O Angular então descobre que `/rest` é uma de suas rotas conhecidas e exibe a página apropriada da aplicação. Depois que a aplicação Web é carregada no navegador, o Angular assume o controle e lida com todos os links internos para outras rotas na aplicação Web (por exemplo, se você estiver em  http://localhost:8080  e clicar no link que o leva para  http://localhost:8080/other , não há ida e volta para o servidor)."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "There are other ways you can handle this too, e.g. by checking the path against a set of hard-coded known paths that are to be handled by the back-end, but for my purposes the above has worked very well. The key is to invoke:"
msgstr "Também há outras formas de lidar com isto, por exemplo, verificando o caminho em relação a um conjunto de caminhos conhecidos codificados que devem ser tratados pelo back-end, mas para os meus propósitos o acima descrito funcionou muito bem. A chave é invocar:"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
msgid "request.getRequestDispatcher(\"/\").forward(request, response);"
msgstr ""

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "if it is something that should be handled by Angular."
msgstr "se for algo que deva ser tratado pelo Angular."

#. type: Title ===
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Set up the Angular proxy"
msgstr "Configurar o proxy Angular"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "The proxy is configured in https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/proxy.conf.json[proxy.conf.json]. All REST calls to anything under `/api` will be passed to the back-end running on port 8080. To run the Angular development server with this configuration, we have added a `proxy` configuration to the `scripts` section of https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/package.json[`package.json`]."
msgstr "O proxy é configurado em  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/proxy.conf.json[proxy.conf.json]. Todas as chamadas REST para qualquer coisa em `/api` serão passadas para o back-end em execução na porta 8080. Para executar o servidor de desenvolvimento Angular com essa configuração, adicionamos uma configuração `proxy` à seção `scripts` do arquivo  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/package.json[`package.json`]."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "In our case, we have a servlet which needs to redirect back to the front-end (something I found I needed to implement OAuth in my main project). That has a check for the `-Dui.proxy` system property we saw earlier when handling the `/callback` path in https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/SampleServlet.java[`SampleServlet`]. If this property is set, we prepend `https://localhost:4200` (the address of the Angular proxy) to the redirect URL if we find the proxy is running on port 4200."
msgstr "No nosso caso, temos um servlet que precisa redirecionar de volta para o front-end (algo que descobri que precisava para implementar o OAuth no meu projeto principal). Isso tem uma verificação para a propriedade do sistema `-Dui.proxy` que vimos anteriormente ao manipular o caminho `/callback` em  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/SampleServlet.java[`SampleServlet`]. Se essa propriedade for definida, nós anexamos `&lt;a href=\"https://localhost:4200\" class=\"bare\"&gt;https://localhost:4200&lt;/a&gt;` (o endereço do proxy Angular) ao URL de redirecionamento se descobrirmos que o proxy está sendo executado na porta 4200."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Finally, `DefaultComponent` in https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/src/app/app.component.ts[`app.component.ts`] has a direct link to our servlet running in the back-end. It has a check to see if the web application is running in the proxy (i.e. its port is 4200), and if this is the case it adjusts the url from `/servlet/make-external-call` to point to the Quarkus back-end running on port 8080."
msgstr "Finalmente, `DefaultComponent` em  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/src/app/app.component.ts[`app.component.ts`] tem uma ligação direta ao nosso servlet em execução no back-end. Verifica se a aplicação Web está a ser executada no proxy (ou seja, se a sua porta é 4200) e, se for esse o caso, ajusta o URL de `/servlet/make-external-call` para apontar para o back-end do Quarkus que está a ser executado na porta 8080."

#. type: Title ==
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Last words"
msgstr "Últimas palavras"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "We have seen how with a minimum amount of configuration we can have both the back-end and front-end of our application running in Quarkus's and Angular's respective development modes. During development this removes the need to rebuild the application when we change something. You can just code away, and see the changes when you refresh your browser. This is done by starting Quarkus with:"
msgstr "Vimos como, com um mínimo de configuração, podemos ter tanto o back-end quanto o front-end da nossa aplicação rodando nos respectivos modos de desenvolvimento do Quarkus e do Angular. Durante o desenvolvimento, isso elimina a necessidade de reconstruir a aplicação quando alteramos algo. Você pode simplesmente codificar e ver as alterações quando atualizar o navegador. Isso é feito iniciando o Quarkus com:"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "and starting the Angular application (from the `webapp/` folder) with"
msgstr "e iniciar a aplicação Angular (a partir da pasta `webapp/` ) com"

#. type: Title ===
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Packaging for development"
msgstr "Embalagem para desenvolvimento"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "If you want to do a rebuild now and again to package the application and run it all in Quarkus run"
msgstr "Se quiser fazer uma reconstrução de vez em quando para empacotar a aplicação e executá-la toda no Quarkus, execute"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
msgid "$mvn package -Dui.dev quarkus:dev"
msgstr ""

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "By not passing in -Dui.proxy we disable the checks for whether the front-end runs in a proxy. `-Dui.dev` builds the web application so it is part of the Quarkus application."
msgstr "Ao não passar em -Dui.proxy, desactivamos as verificações para saber se o front-end é executado num proxy. `-Dui.dev` constrói a aplicação web para que faça parte da aplicação Quarkus."

#. type: Title ===
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Packaging for production"
msgstr "Embalagem para produção"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "To package the application for production, use"
msgstr "Para empacotar a aplicação para produção, utilize"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
msgid "$mvn package -Dui"
msgstr ""

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "`-Dui` builds the web application just like `-Dui.dev`, but it does more optimisations for production. Those optimisations take some time."
msgstr "`-Dui` constrói a aplicação web tal como `-Dui.dev`, mas faz mais optimizações para produção. Estas optimizações demoram algum tempo."

#. type: Title ===
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Packaging for cloud native"
msgstr "Empacotamento para nuvem nativa"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Finally to build a native image, make sure you have set up GraalVM as outlined https://quarkus.io/guides/building-native-image[here]. Then build the application to generate the native executable."
msgstr "Finalmente, para construir uma imagem nativa, certifique-se de ter configurado o GraalVM conforme descrito  link:https://quarkus.io/guides/building-native-image[aqui]. Em seguida, construa o aplicativo para gerar o executável nativo."

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
msgid "$mvn package -Dui -Pnative"
msgstr ""

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Running this we see the super-fast startup time Quarkus gives us in native mode:"
msgstr "Ao fazer isto, vemos o tempo de arranque super-rápido que o Quarkus nos dá em modo nativo:"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
msgid ""
"$./target/blog-quarkus-ui-development-0.1.0-runner\n"
"2019-06-06 10:57:02,254 INFO  [io.quarkus] (main) Quarkus 0.15.0 started in 0.005s. Listening on: http://[::]:8080\n"
"2019-06-06 10:57:02,464 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy, resteasy-jsonb]"
msgstr ""
