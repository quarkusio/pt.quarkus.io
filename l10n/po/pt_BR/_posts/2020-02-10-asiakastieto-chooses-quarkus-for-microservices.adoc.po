# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Suomen Asiakastieto Oy chooses Quarkus for their microservices development"
msgstr "A Suomen Asiakastieto Oy escolhe a Quarkus para o desenvolvimento dos seus microsserviços"

#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid ""
"Based in Helsinki, Finland, The Asiakastieto Group is a leading provider of innovative, digital business and consumer information services in the Nordic region. In the banking, financial services, and retail industries, Asiakastieto’s products and services support risk management, finance and business administration, credit or loan-related  decision-making, sales and marketing.\n"
"When the EU introduced its revised Payment Services Directive (PSD2) in 2018 to increase competition, promote innovation, and improve security in the payments industry, Asiakastieto began evaluating how to help its customers manage the impact of the directive. This initiative aligned with one of the company’s key corporate social responsibility goals: to increase trust in society. The Asiakastieto Group has many brands such as UC AB, Intellia Oy, and Suomen Asiakastieto Oy, the latter being the one that we cover in this user story."
msgstr "Com sede em Helsinque, na Finlândia, o Asiakastieto Group é um dos principais fornecedores de serviços inovadores e digitais de informações comerciais e de consumo na região nórdica. Nos setores bancário, de serviços financeiros e de varejo, os produtos e serviços do Asiakastieto apoiam o gerenciamento de riscos, a administração financeira e comercial, a tomada de decisões relacionadas a crédito ou empréstimos, vendas e marketing. Quando a UE introduziu sua Diretiva de Serviços de Pagamento (PSD2) revisada em 2018 para aumentar a concorrência, promover a inovação e melhorar a segurança no setor de pagamentos, a Asiakastieto começou a avaliar como ajudar seus clientes a gerenciar o impacto da diretiva. Essa iniciativa se alinhou a uma das principais metas de responsabilidade social corporativa da empresa: aumentar a confiança na sociedade. O Grupo Asiakastieto tem muitas marcas, como UC AB, Intellia Oy e Suomen Asiakastieto Oy, sendo esta última a que abordamos nesta história de usuário."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Why microservices?"
msgstr "Porquê microserviços?"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Suomen Asiakastieto Oy has many different departments: Risk Decision, SME & Consumer, Customer Data Management, Digital Processes. Real Estate and Collateral Information, which operates within Digital Processes, had deployed to their application server instance a new application, which happened to have issues while running in production affecting the stability of the application server and hence other applications running on it. This resulted in the need to reboot the application server every time this anomaly occurred leading to unexpected downtime and to a negative customer satisfaction."
msgstr "A Suomen Asiakastieto Oy tem muitos departamentos diferentes: Decisão de risco, PME e consumidores, gestão de dados de clientes e processos digitais. O departamento de Informações sobre bens imobiliários e garantias, que opera no âmbito dos processos digitais, tinha implementado na instância do seu servidor de aplicações uma nova aplicação que, por acaso, apresentava problemas durante a execução em produção, afectando a estabilidade do servidor de aplicações e, consequentemente, de outras aplicações nele executadas. Isto resultou na necessidade de reiniciar o servidor de aplicações sempre que esta anomalia ocorria, o que levou a um tempo de inatividade inesperado e a uma satisfação negativa do cliente."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Because of this, they decided to adopt microservice architectures to introduce better resilience and high-availability into their solutions so that if a microservice or an application went awry, it would not affect the entire system. So, when the time came to start developing their PSD2 project, they decided to start implementing microservices in Thorntail, which is an open source application assembler - similar to Spring Boot - that also implements MicroProfile, an community-driven open source specification for Java microservices. They decided on Thorntail because its functionality and capabilities were close to the application server capabilities they were familiar with. After being in production for a few months, they learned about Quarkus and its innovative approach that rethinks Java for containers, cloud and Kubernetes. Around the same time, they also learned about the end-of-life of Thorntail. Their continued desire to develop new microservices as well as to break their monolithic application servers into microservices made them evaluate Quarkus more in depth."
msgstr "Por isso, decidiram adotar arquitecturas de microsserviços para introduzir uma melhor resiliência e alta disponibilidade nas suas soluções, de modo a que, se um microsserviço ou uma aplicação falhar, não afecte todo o sistema. Assim, quando chegou a altura de começar a desenvolver o seu projeto PSD2, decidiram começar a implementar microsserviços no Thorntail, que é um montador de aplicações de código aberto - semelhante ao Spring Boot - que também implementa o MicroProfile, uma especificação de código aberto orientada para a comunidade para microsserviços Java. Optaram pelo Thorntail porque a sua funcionalidade e capacidades estavam próximas das capacidades do servidor de aplicações com que estavam familiarizados. Depois de estar em produção por alguns meses, eles aprenderam sobre o Quarkus e sua abordagem inovadora que repensa o Java para contêineres, nuvem e Kubernetes. Na mesma época, eles também ficaram sabendo do fim da vida útil do Thorntail. O seu desejo contínuo de desenvolver novos microsserviços, bem como de transformar os seus servidores de aplicações monolíticos em microsserviços, levou-os a avaliar a Quarkus de forma mais aprofundada."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Their monoliths and existing microservices"
msgstr "Os seus monólitos e os microsserviços existentes"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "With respect to their monoliths, they have about twelve JBoss EAP instances, each running dozens of their applications. As a first step to make the entire system more distributed, they decided to start moving some of these workloads to OpenShift by running many instances of JBoss EAP, each containing a single application. As a result, they experienced high memory consumption. At this point, they started looking into ways to reduce the footprint of these applications running on OpenShift."
msgstr "Com relação aos seus monólitos, eles têm cerca de doze instâncias do JBoss EAP, cada uma executando dezenas de seus aplicativos. Como um primeiro passo para tornar todo o sistema mais distribuído, eles decidiram começar a mover algumas dessas cargas de trabalho para o OpenShift, executando muitas instâncias do JBoss EAP, cada uma contendo uma única aplicação. Como resultado, eles experimentaram um alto consumo de memória. Nesse ponto, eles começaram a procurar maneiras de reduzir a pegada desses aplicativos em execução no OpenShift."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "With respect to their existing Thorntail microservices, which they needed to migrate to Quarkus, they noticed that spinning up a Thorntail container was taking about 1 minute to start up. When they migrated it to Quarkus, the service now starts in 0.4 seconds! With this improved startup time, they could scale up their services faster so that they could be readily available faster to process extra traffic leading to a better customer experience during peak times since customers would not have to wait on the browser to have their requests serviced, for example."
msgstr "No que diz respeito aos seus microsserviços Thorntail existentes, que precisavam de migrar para a Quarkus, repararam que o arranque de um contentor Thorntail estava a demorar cerca de 1 minuto. Quando o migraram para a Quarkus, o serviço arranca agora em 0,4 segundos! Com este tempo de arranque melhorado, puderam aumentar a escala dos seus serviços mais rapidamente para que pudessem estar disponíveis mais rapidamente para processar tráfego extra, o que levou a uma melhor experiência do cliente durante as horas de ponta, uma vez que os clientes não teriam de esperar no browser para que os seus pedidos fossem atendidos, por exemplo."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "In fact, before going into production with Quarkus, Eero Arvonen, Solution Architect at IT Development Finland Asiakasieto Oy, made a comparative analysis between the Thorntail and Quarkus versions of a microservice. This first chart shows a comparison between the original version of one of their Thortail microservices, which used JAX-WS, next to different Quarkus versions of the same microservice."
msgstr "De facto, antes de entrar em produção com o Quarkus, Eero Arvonen, arquiteto de soluções na IT Development Finland Asiakasieto Oy, fez uma análise comparativa entre as versões Thorntail e Quarkus de um microsserviço. Este primeiro gráfico mostra uma comparação entre a versão original de um dos seus microsserviços Thortail, que utilizava JAX-WS, ao lado de diferentes versões Quarkus do mesmo microsserviço."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "This next chart shows the performance and startup time results for the same combinations of microservice versions as the previous graph."
msgstr "O gráfico seguinte mostra os resultados de desempenho e tempo de arranque para as mesmas combinações de versões de microsserviços que o gráfico anterior."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "According to Eero, _“migrating from Thorntail to JVM-Quarkus was trivial and memory consumption went down by about 75% while CPU consumption was reduced by about 70%. This was accompanied by a 40% increase in throughput resulting in a faster response time. Migrating to Quarkus native, we found that the application ran at a better throughput even with 50MB of memory which is 95% less than with Thorntail. We also identified a space-time tradeoff between different native Quarkus setups: deploying it with 200MB of memory instead of 50MB will reduce its CPU requirements by two thirds. Thus, if we ever had to balance CPU vs memory within our OpenShift cluster, this would prove useful.”_"
msgstr "Segundo Eero, _\"a migração da Thorntail para a JVM-Quarkus foi trivial e o consumo de memória diminuiu cerca de 75%, enquanto o consumo de CPU foi reduzido em cerca de 70%. Isto foi acompanhado por um aumento de 40% na taxa de transferência, resultando num tempo de resposta mais rápido. Ao migrar para o Quarkus nativo, verificámos que a aplicação funcionava com um melhor débito mesmo com 50 MB de memória, o que é 95% menos do que com o Thorntail. Também identificámos uma troca de espaço-tempo entre diferentes configurações nativas do Quarkus: implementá-lo com 200 MB de memória em vez de 50 MB reduzirá os seus requisitos de CPU em dois terços. Assim, se alguma vez tivéssemos de equilibrar CPU vs. memória no nosso cluster OpenShift, isto revelar-se-ia útil.\"_"

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, no-wrap
msgid "Live Coding"
msgstr "Codificação ao vivo"

#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid ""
"They use and like the Quarkus development mode, also known as live coding, a lot. Before Quarkus, they used to use JRebel, for hot replacing but it was unreliable. According to Eero _“Quarkus development mode has by far a better track record.”_  Now that they are writing new microservices, they have made it a best practice to use live coding. With Thorntail, there were manual steps to deploy changes to try them out whereas with Quarkus, the changes are automatically applied to the running process so that the developer can immediately test the application. This makes developers more productive in that they can verify and troubleshoot their code faster.\n"
"Eero took it upon himself to deliver a small internal Quarkus workshop, which got developers very excited about this new and innovative technology, _“people are looking forward to working with Quarkus”_, mentioned Eero. Quarkus is getting developers excited and this has led to other developers across the organization to use Quarkus for their projects."
msgstr "Eles usam e gostam muito do modo de desenvolvimento do Quarkus, também conhecido como live coding. Antes do Quarkus, eles costumavam usar o JRebel, para substituição a quente, mas ele não era confiável. De acordo com Eero _, \"o modo de desenvolvimento do Quarkus tem, de longe, um histórico melhor\"._ Agora que estão escrevendo novos microsserviços, eles adotaram como prática recomendada o uso de codificação em tempo real. Com o Thorntail, havia etapas manuais para implementar alterações para testá-las, enquanto com o Quarkus, as alterações são aplicadas automaticamente ao processo em execução para que o desenvolvedor possa testar imediatamente o aplicativo. Isso torna os desenvolvedores mais produtivos, pois eles podem verificar e solucionar problemas do código com mais rapidez. Eero se encarregou de ministrar um pequeno workshop interno sobre o Quarkus, que deixou os desenvolvedores muito entusiasmados com essa tecnologia nova e inovadora: _\"As pessoas estão ansiosas para trabalhar com o Quarkus\",_ disse Eero. O Quarkus está deixando os desenvolvedores entusiasmados e isso fez com que outros desenvolvedores da organização usassem o Quarkus em seus projetos."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Learning Quarkus"
msgstr "Aprender Quarkus"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "_“Quarkus was very easy to pick up”_, according to Eero. In his opinion, the Quarkus guides on https://quarkus.io/ are very good, thorough and comprehensive with great code examples. In addition, he found a very active community in Quarkus. When they ran into problems, they were able to search the internet for the error messages and easily found answers online. In addition, the Quarkus community and Quarkus engineers are very active even on external forums answering questions and helping folks inquiring for help."
msgstr "\" _O Quarkus foi muito fácil de aprender\",_ de acordo com Eero. Na sua opinião, os guias do Quarkus em  https://quarkus.io/  são muito bons, completos e abrangentes, com óptimos exemplos de código. Além disso, encontrou uma comunidade muito ativa no Quarkus. Quando se depararam com problemas, puderam pesquisar na Internet as mensagens de erro e encontraram facilmente respostas em linha. Além disso, a comunidade Quarkus e os engenheiros da Quarkus são muito activos mesmo em fóruns externos, respondendo a perguntas e ajudando as pessoas que pedem ajuda."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Some pain points"
msgstr "Alguns pontos problemáticos"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "As awesome as Quarkus is, this constantly evolving and innovative technology had some areas for improvement. For example, Eero mentioned that Java API for XML Web Services (JAX-WS) didn’t work on native mode. Also SSL, by default, is disabled but available for HTTP/S, which he needed to use and got it to work following the configuration instructions, which he found complex. In addition, he would like to see improvements in how reflection is currently configured, which was time-consuming to configure because he had to use a trial-and-error approach to get it to work. He’d like to see a way to make this reflection configuration process easier to carry out."
msgstr "Por muito espetacular que o Quarkus seja, esta tecnologia inovadora e em constante evolução tinha algumas áreas a melhorar. Por exemplo, Eero mencionou que a API Java para serviços Web XML (JAX-WS) não funcionava no modo nativo. Além disso, o SSL, por defeito, está desativado mas disponível para HTTP/S, que ele precisou de utilizar e conseguiu que funcionasse seguindo as instruções de configuração, que considerou complexas. Além disso, ele gostaria de ver melhorias na forma como a reflexão é atualmente configurada, o que consumiu muito tempo a configurar porque teve de utilizar uma abordagem de tentativa e erro para a fazer funcionar. Ele gostaria de ver uma maneira de tornar esse processo de configuração do reflection mais fácil de ser realizado."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Lessons Learned"
msgstr "Lições aprendidas"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Because Quarkus takes the approach of a closed world for application development, there needs to be a bit of a mind shift when writing applications. As an example, for their existing applications, Asiakastieto used a configuration manager to read in configuration information (connection URLs, DB connections strings, etc.) at application startup. Since with Quarkus, in native mode, part of the application startup happens during build time, they had to reconfigure the configuration manager to read in the configuration information when the application was run. Although the change was easy to make, it highlights the importance of understanding how Quarkus applications need to be implemented under this new paradigm."
msgstr "Como o Quarkus adopta a abordagem de um mundo fechado para o desenvolvimento de aplicações, é necessário mudar um pouco a mentalidade ao escrever aplicações. Por exemplo, para as suas aplicações existentes, a Asiakastieto utilizava um gestor de configuração para ler as informações de configuração (URLs de ligação, cadeias de ligações à BD, etc.) no arranque da aplicação. Uma vez que com o Quarkus, no modo nativo, parte do arranque da aplicação ocorre durante o tempo de compilação, tiveram de reconfigurar o gestor de configuração para ler as informações de configuração quando a aplicação era executada. Embora a alteração tenha sido fácil de efetuar, salienta a importância de compreender como as aplicações Quarkus têm de ser implementadas sob este novo paradigma."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Current state of Quarkus projects"
msgstr "Estado atual dos projectos Quarkus"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "As mentioned earlier, the Asiakastieto Oy PSD2 project had been implemented in Thorntail microservices and when they learned about Quarkus, the decision was made to migrate their Thorntail microservices to Quarkus. As of this writing, out of the 7 Thorntail microservices in their PSD2 application, one has been migrated to Quarkus and is running in production."
msgstr "Como mencionado anteriormente, o projeto PSD2 da Asiakastieto Oy tinha sido implementado em microsserviços Thorntail e, quando tomaram conhecimento da Quarkus, foi tomada a decisão de migrar os seus microsserviços Thorntail para a Quarkus. No momento em que escrevo este artigo, dos 7 microsserviços Thorntail da sua aplicação PSD2, um foi migrado para a Quarkus e está a funcionar em produção."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Two more microservices have been migrated from Thorntail to Quarkus (native mode) and are currently being tested and will be deployed during their next incremental application update during February 2020."
msgstr "Mais dois microsserviços foram migrados do Thorntail para o Quarkus (modo nativo) e estão atualmente a ser testados e serão implantados durante a próxima atualização incremental da aplicação em fevereiro de 2020."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "What’s next"
msgstr "O que se segue"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "When their microservices initiative started one and a half years ago, Asiakastieto Oy decided to use Thorntail as their main technology for Java microservices. With the news of the sunsetting of Thorntail and the introduction of Quarkus, they have established a new policy that every new project will be implemented in Quarkus in JVM mode as a minimum and when feasible use Quarkus in native mode. There are already two new projects that are being implemented in Quarkus at present with more coming in the future."
msgstr "Quando sua iniciativa de microsserviços começou há um ano e meio, a Asiakastieto Oy decidiu usar o Thorntail como sua principal tecnologia para microsserviços Java. Com a notícia do fim da Thorntail e a introdução do Quarkus, a empresa estabeleceu uma nova política segundo a qual todos os novos projectos serão implementados no Quarkus em modo JVM, no mínimo, e, quando possível, utilizarão o Quarkus em modo nativo. Atualmente, já existem dois novos projectos a serem implementados no Quarkus e outros virão no futuro."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "Para mais informações sobre o Quarkus:"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "Sítio Web da Quarkus:  http://quarkus.io"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Projeto Quarkus GitHub:  https://github.com/quarkusio/quarkus"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "Quarkus Twitter:  https://twitter.com/QuarkusIO"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Chat do Quarkus:  https://quarkusio.zulipchat.com/"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Lista de correio eletrónico Quarkus:  https://groups.google.com/forum/#!forum/quarkus-dev"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[Canal do YouTube da Quarkus]"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Quatro razões para utilizar o Quarkus]"
