# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy, no-wrap
msgid "Ideas on Quarkus command-mode, UI-based apps and releasing via GitHub Actions"
msgstr "Ideias sobre o modo de comando do Quarkus, aplicações baseadas na IU e lançamento através do GitHub Actions"

#. type: YAML Front Matter: synopsis
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy, no-wrap
msgid "Ideas on how to use Quarkus command-mode to develop native applications with web frontends; built with GitHub Actions."
msgstr "Ideias sobre como utilizar o modo de comando do Quarkus para desenvolver aplicações nativas com front-ends Web; construído com o GitHub Actions."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Quarkus is advertised as a cloud-native runtime for Microservices but the link:https://quarkus.io/blog/quarkus-1-4-final-released/[introduction of command-mode] might have opened up new and interesting spaces where it could find adoption."
msgstr "O Quarkus é anunciado como um tempo de execução nativo da nuvem para microsserviços, mas a  link:https://quarkus.io/blog/quarkus-1-4-final-released/[introdução do modo de comando] pode ter aberto novos e interessantes espaços onde ele poderia ser adotado."

#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid ""
"In this blog post I will present a few ideas about the possible usage of command-mode in Quarkus that you might find useful to consider when developing your next tool.\n"
"If you have not heard about command-mode, I suggest to start reading link:https://quarkus.io/blog/introducing-command-mode/[this introduction] first and then come back."
msgstr "Nesta postagem do blog, apresentarei algumas ideias sobre o possível uso do modo de comando no Quarkus que o senhor pode achar útil considerar ao desenvolver sua próxima ferramenta. Se o senhor ainda não ouviu falar sobre o modo de comando, sugiro que comece a ler link:https://quarkus.io/blog/introducing-command-mode/[esta introdução] primeiro e depois volte."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Ready? Ok, let's continue."
msgstr "Pronto? Ok, vamos continuar."

#. type: Title ==
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy, no-wrap
msgid "Cross-platform builds via GitHub Actions"
msgstr "Compilações multiplataforma através do GitHub Actions"

#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid ""
"Command-line tools like `kubectl` are often written in languages like C, Go or Rust and compiled to native executables for various target platforms.\n"
"This is great because you don't need to rely on Java installed; or being installed in a wrong version."
msgstr "Ferramentas de linha de comando como `kubectl` são geralmente escritas em linguagens como C, Go ou Rust e compiladas em executáveis nativos para várias plataformas de destino. Isso é ótimo porque o senhor não precisa depender da instalação do Java ou da instalação de uma versão incorreta."

#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid ""
"With GraalVM native-images, this argument against Java does not hold anymore. Quarkus supports the build of native executables via GraalVM; mainly for building natively for Linux containers but there is experimental support for OS X and Windows as well.\n"
"Using the native build in combination with command-mode sounds like a very interesting and productive choice to write command-line tools."
msgstr "Com as imagens nativas do GraalVM, esse argumento contra o Java não se sustenta mais. O Quarkus oferece suporte à criação de executáveis nativos por meio do GraalVM, principalmente para a criação nativa de contêineres Linux, mas também há suporte experimental para OS X e Windows. Usar a compilação nativa em combinação com o modo de comando parece ser uma opção muito interessante e produtiva para escrever ferramentas de linha de comando."

#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid ""
"But how do you build your native executables for Linux, Mac and Windows?\n"
"If you are hosting your sources as a GitHub project, I can tell you that it is super-simple to get started. GitHub offers link:https://help.github.com/en/actions/building-and-testing-code-with-continuous-integration/setting-up-continuous-integration-using-github-actions[ Actions] which is a free service like link:https://travis-ci.org/[Travis CI] but fully integrated into the GitHub experience. Also, it offers runners (i.e. the build agents) for Linux, Mac and Windows."
msgstr "Mas como o senhor cria seus executáveis nativos para Linux, Mac e Windows? Se o senhor estiver hospedando seus códigos-fonte como um projeto do GitHub, posso lhe dizer que é muito simples começar. O GitHub oferece o link:https://help.github.com/en/actions/building-and-testing-code-with-continuous-integration/setting-up-continuous-integration-using-github-actions[Actions] , que é um serviço gratuito como o link:https://travis-ci.org/[Travis CI] , mas totalmente integrado à experiência do GitHub. Além disso, ele oferece runners (ou seja, os agentes de compilação) para Linux, Mac e Windows."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "To provide a native release-build for linux, place the following file under `.github/workflows` in your repo:"
msgstr "Para fornecer um release-build nativo para linux, coloque o seguinte ficheiro em `.github/workflows` no seu repo:"

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "This build-job is triggered when a new release is triggered. If your are the owner, you will have the button \"Draft a new release\" under link:https://github.com/38leinaD/quarkus-native-app-starter/releases[releases]"
msgstr "Esta tarefa de criação é activada quando é ativado um novo lançamento. Se for o proprietário, terá o botão \"Elaborar um novo lançamento\" em  link:https://github.com/38leinaD/quarkus-native-app-starter/releases[lançamentos]"

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Uses a ubuntu runner. See link:https://github.com/actions/virtual-environments[GitHub Actions Virtual Environments] for a list of all supported environments/runners."
msgstr "Usa um executor do ubuntu. Veja  link:https://github.com/actions/virtual-environments[GitHub Actions Virtual Environments] para uma lista de todos os ambientes/runners suportados."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Set version in `pom.xml` based on specified release version"
msgstr "Definir a versão em `pom.xml` com base na versão de lançamento especificada"

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Build the native executable"
msgstr "Construir o executável nativo"

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Upload/attach the artifact to the release"
msgstr "Carregar/anexar o artefacto à versão"

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Building for Mac just means to provide another job with `runs-on: macos-latest`."
msgstr "Construir para Mac significa apenas fornecer outro trabalho com `runs-on: macos-latest`."

#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid ""
"Windows is essentially the same but requires a little more attention and knowledge about the tooling. Getting it working required some investigation on how the native build depends on Visual Studio. Also,the Windows runners on GitHub Actions have a too small page-file by default. That needs increasing as the memory consumption is rather high when running the GraalVMs `native-image` command.\n"
"An full example of a working native-image build under windows can be found link:https://github.com/38leinaD/quarkus-native-app-starter/blob/master/.github/workflows/release-build-native-win64.yml[here]."
msgstr "O Windows é essencialmente o mesmo, mas requer um pouco mais de atenção e conhecimento sobre as ferramentas. Para fazê-lo funcionar, foi necessário investigar como a compilação nativa depende do Visual Studio. Além disso, os executores do Windows no GitHub Actions têm um arquivo de página muito pequeno por padrão. Isso precisa ser aumentado, pois o consumo de memória é bastante alto ao executar o comando GraalVMs `native-image` . Um exemplo completo de uma construção de imagem nativa funcional no Windows pode ser encontrado link:https://github.com/38leinaD/quarkus-native-app-starter/blob/master/.github/workflows/release-build-native-win64.yml[aqui] ."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "After triggering a release from the GitHub UI, the jobs for all target environments are triggered. The artifacts for all platforms are will be available within minutes and can be consumed by your users. Building, hosting: 100% free and no external service or registration needed."
msgstr "Depois de ativar um lançamento a partir da IU do GitHub, os trabalhos para todos os ambientes alvo são activados. Os artefactos para todas as plataformas estarão disponíveis em minutos e podem ser consumidos pelos seus utilizadores. Construção, alojamento: 100% gratuito e sem necessidade de serviço externo ou registo."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "image:github-actions.jpg[]"
msgstr "image:github-actions.jpg[alt=github actions]"

#. type: Title ==
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy, no-wrap
msgid "Command-mode for UI-based applications"
msgstr "Modo de comando para aplicações baseadas na IU"

#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid ""
"Another exciting thing about command-mode is that it not only allows to write nice command-line tools (using e.g. link:https://picocli.info/[Picocli], link:http://aeshell.github.io/[Aesh] or link:https://commons.apache.org/proper/commons-cli/[Apache Commons CLI]) but in general allows to have more control over the lifecycle of an application.\n"
"With the possibility to embed your HTML/Javascript frontend, we can even build link:https://www.electronjs.org/[Electron-style] desktop application with rich user interfaces for our tools. As even JSF most likely will be link:https://github.com/adminfaces/quarkus-admin-starter[coming to Quarkus], there is a great variety of choices on how to build a frontend."
msgstr "Outra coisa interessante sobre o modo de comando é que ele não só permite escrever boas ferramentas de linha de comando (usando, por exemplo, link:https://picocli.info/[Picocli] , link:http://aeshell.github.io/[Aesh] ou link:https://commons.apache.org/proper/commons-cli/[Apache Commons CLI] ), mas, em geral, permite ter mais controle sobre o ciclo de vida de um aplicativo. Com a possibilidade de incorporar seu frontend de HTML/Javascript, podemos até mesmo criar aplicativos de desktop link:https://www.electronjs.org/[no estilo Electron] com interfaces de usuário avançadas para nossas ferramentas. Como até mesmo o JSF provavelmente chegará link:https://github.com/adminfaces/quarkus-admin-starter[ao Quarkus] , há uma grande variedade de opções sobre como criar um frontend."

#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid ""
"A very simple scaffold does not require much. If you have `quarkus-resteasy` as a dependency, the embedded server will be started on port `8080` just like in any regular Quarkus backend application.\n"
"As your tools might be running on a developer system alongside other app-servers or Quarkus instances, it is a good idea to choose a different port to not run into conflicts."
msgstr "Um scaffold muito simples não exige muito. Se o senhor tiver `quarkus-resteasy` como uma dependência, o servidor incorporado será iniciado na porta `8080` , como em qualquer aplicativo backend normal do Quarkus. Como suas ferramentas podem ser executadas em um sistema de desenvolvedor junto com outros servidores de aplicativos ou instâncias do Quarkus, é uma boa ideia escolher uma porta diferente para evitar conflitos."

#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid ""
"Configuring `quarkus.http.port=0` in your `application.properties` will make Quarkus choose a random but free port.\n"
"How to know from within your application which port it is? When injecting the config-property via `@ConfigProperty(name = \"quarkus.http.port\")`, you will get the assigned port."
msgstr "A configuração de `quarkus.http.port=0` em seu `application.properties` fará com que o Quarkus escolha uma porta aleatória, mas livre. Como saber de dentro do seu aplicativo qual é a porta? Ao injetar a propriedade de configuração via `@ConfigProperty(name = \"quarkus.http.port\")` , o senhor obterá a porta atribuída."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Assuming you have your front-end under `src/main/resources/META-INF/resources` (in my example it is plain HTML with Javascript) and using a very old Java API (`Desktop.getDesktop().browse(...)`), you can spin up the default browser to your app like this:"
msgstr "Partindo do princípio que tem o seu front-end em `src/main/resources/META-INF/resources` (no meu exemplo é HTML simples com Javascript) e utilizando uma API Java muito antiga ( `Desktop.getDesktop().browse(…​)`), pode ativar o browser predefinido para a sua aplicação da seguinte forma:"

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Get the assigned port"
msgstr "Obter a porta atribuída"

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Open the `index.html` of your webapp with the default browser."
msgstr "Abra o site `index.html` da sua aplicação Web com o browser predefinido."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "Do not exit immediately but wait until the browser/tab is closed. See below for options how to do this."
msgstr "Não saia imediatamente, mas espere até que o navegador/aba seja fechado. Veja abaixo as opções de como fazer isso."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "There are some more considerations here to make it work reliably."
msgstr "Há mais algumas considerações a ter em conta para que funcione de forma fiável."

#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid ""
"Ending the application when the browser window closes requires some feedback. There are simple ways to achieve this in a semi-reliabe way (see the usage of link:https://developer.mozilla.org/en-US/docs/Web/API/Window/unload_event[unload] in link:https://github.com/38leinaD/quarkus-native-app-starter/blob/master/src/main/resources/META-INF/resources/index.html#L89[index.html] by calling link:https://github.com/38leinaD/quarkus-native-app-starter/blob/master/src/main/java/org/acme/LsResource.java#L38[a rest endpoint]).\n"
"For Desktop-class applications, one might have to control the browser process more closely; or, like Electron, even package an own version of Chrome."
msgstr "Finalizar o aplicativo quando a janela do navegador é fechada requer algum feedback. Há maneiras simples de conseguir isso de forma semirresponsável (veja o uso de link:https://developer.mozilla.org/en-US/docs/Web/API/Window/unload_event[unload] em link:https://github.com/38leinaD/quarkus-native-app-starter/blob/master/src/main/resources/META-INF/resources/index.html#L89[index.html] chamando link:https://github.com/38leinaD/quarkus-native-app-starter/blob/master/src/main/java/org/acme/LsResource.java#L38[um endpoint de descanso] ). Para aplicativos da classe Desktop, talvez seja necessário controlar o processo do navegador mais de perto ou, como o Electron, até mesmo empacotar uma versão própria do Chrome."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "A problem I was facing is that `Desktop.getDesktop().browse(...)` does not seem to work reliably when run in native mode with the GraalVM version I was using (link:https://github.com/oracle/graal/issues/2430[issue]). The alternative, like already stated before, is to control the browser more directly and for example open a Chrome window via link:https://docs.oracle.com/javase/7/docs/api/java/lang/Runtime.html#exec(java.lang.String)[Runtime.exec(...)]. See the link:https://github.com/38leinaD/quarkus-native-app-starter/blob/master/src/main/java/org/acme/LsMain.java[main method] of the starter project for some possibilities to experiment with."
msgstr "Um problema com que me deparei é que o `Desktop.getDesktop().browse(…​)` não parece funcionar de forma fiável quando executado em modo nativo com a versão do GraalVM que estava a utilizar link:https://github.com/oracle/graal/issues/2430[(issue]). A alternativa, como já foi dito antes, é controlar o navegador mais diretamente e, por exemplo, abrir uma janela do Chrome via  link:https://docs.oracle.com/javase/7/docs/api/java/lang/Runtime.html#exec(java.lang.String)[Runtime.exec(...)]. Vê o  link:https://github.com/38leinaD/quarkus-native-app-starter/blob/master/src/main/java/org/acme/LsMain.java[método principal] do projeto de arranque para algumas possibilidades a experimentar."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "image:quarkus-native-webui.gif[]"
msgstr "image:quarkus-native-webui.gif[alt=quarkus native webui]"

#. type: Title ==
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumo"

#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid ""
"It will be interesting to see where people are taking command-mode. Maybe we will be seeing Electron-style Desktop applications being developed based on Quarkus?\n"
"At least to me, this sounds promising and productive. No wasting of time to learn a completely different stack just to write a small tool. Instead, use the same stack and API I am familar with from backend development anyway."
msgstr "Será interessante ver onde as pessoas estão levando o modo de comando. Talvez vejamos aplicativos de desktop no estilo do Electron sendo desenvolvidos com base no Quarkus? Pelo menos para mim, isso parece promissor e produtivo. O senhor não perderá tempo aprendendo uma pilha completamente diferente apenas para escrever uma pequena ferramenta. Em vez disso, o senhor pode usar a mesma pilha e API com as quais já estou familiarizado no desenvolvimento de back-end."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "We have seen that making a tool available in a way that is easy to consume by people can be achived with GitHub and GitHub Actions alone."
msgstr "Vimos que a disponibilização de uma ferramenta de uma forma que seja fácil de consumir pelas pessoas pode ser conseguida apenas com o GitHub e o GitHub Actions."

#. type: Plain text
#: _posts/2020-05-12-native-command-mode-tools.adoc
#, fuzzy
msgid "In case you are interested in a more complete tool where I have used the ideas presented here, check out my link:https://github.com/38leinaD/bpmn-diff[bpmn-diff] project which is a Git difftool for BPMN files. As an added benefit, it uses Gradle as opposed to Maven and thus provides additional examples on the use of GitHub Actions."
msgstr "Caso esteja interessado numa ferramenta mais completa em que usei as ideias aqui apresentadas, veja o meu projeto  link:https://github.com/38leinaD/bpmn-diff[bpmn-diff], que é uma ferramenta de difusão Git para ficheiros BPMN. Como benefício adicional, ele usa o Gradle em vez do Maven e, portanto, fornece exemplos adicionais sobre o uso das Ações do GitHub."
