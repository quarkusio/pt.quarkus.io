# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:1
#, fuzzy, no-wrap
msgid "gsmet"
msgstr "gsmet"

#. type: YAML Front Matter: date
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:1
#, fuzzy, no-wrap
msgid "2022-04-20"
msgstr "2022-04-20"

#. type: YAML Front Matter: layout
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "posto"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:1
#, fuzzy, no-wrap
msgid "The unique build infrastructure of Quarkus allows you to solve complex issues in a very simple way by developing custom extensions."
msgstr "A infraestrutura de construção única do Quarkus permite-lhe resolver problemas complexos de uma forma muito simples, desenvolvendo extensões personalizadas."

#. type: YAML Front Matter: tags
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:1
#, fuzzy, no-wrap
msgid "extensions development-tips"
msgstr "extensões dicas de desenvolvimento"

#. type: YAML Front Matter: title
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:1
#, fuzzy, no-wrap
msgid "Solving problems with Quarkus extensions (1/n)"
msgstr "Resolução de problemas com extensões Quarkus (1/n)"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:11
#, fuzzy
msgid "This is the first post of what I hope will be a series of several articles showing how you can solve complex problems by leveraging the unique Quarkus build infrastructure and extension framework."
msgstr "Este é o primeiro post do que eu espero que seja uma série de vários artigos mostrando como você pode resolver problemas complexos aproveitando a infraestrutura de construção e a estrutura de extensão exclusivas do Quarkus."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:14
#, fuzzy
msgid "First things first, bootstraping a Quarkus extension is easy: in one command, you can get it scaffolded and get started on the actual implementation.  But that's not the subject of this post!"
msgstr "Em primeiro lugar, arrancar com uma extensão Quarkus é fácil: com um só comando, pode obter um andaime e começar a implementação propriamente dita. Mas esse não é o assunto deste post!"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:17
#, fuzzy
msgid "An extension, apart from providing some runtime code to your application, also allows to tweak the build of your application and do all sorts of things at the build level.  This is what we will focus on in this series."
msgstr "Uma extensão, para além de fornecer algum código de tempo de execução à sua aplicação, também permite ajustar a construção da sua aplicação e fazer todo o tipo de coisas ao nível da construção. É nisto que nos vamos concentrar nesta série."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:19
#, fuzzy, no-wrap
msgid "**Problem of the day:** to ensure binary compatibility, the Hub4j GitHub API introduces some bridge methods that confuse Mockito and more specifically ByteBuddy and ultimately make our tests unreliable. How can we solve that?\n"
msgstr "*Problema do dia:* para garantir a compatibilidade binária, a API GitHub do Hub4j introduz alguns métodos bridge que confundem o Mockito e, mais especificamente, o ByteBuddy e, em última análise, tornam os nossos testes pouco fiáveis. Como podemos resolver isso?"

#. type: Title ==
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:20
#, fuzzy, no-wrap
msgid "Some context"
msgstr "Algum contexto"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:25
#, fuzzy
msgid "You might have heard about https://github.com/quarkiverse/quarkus-github-app[my Quarkus GitHub App extension] that allows you to develop GitHub Apps based on Quarkus at light speed with very little boilerplate (shameless ad: it is awesome!)."
msgstr "Já deve ter ouvido falar da  link:https://github.com/quarkiverse/quarkus-github-app[minha extensão Quarkus GitHub App] que lhe permite desenvolver aplicações GitHub baseadas no Quarkus à velocidade da luz com muito pouco boilerplate (anúncio sem vergonha: é espetacular!)."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:30
#, fuzzy
msgid "My dear colleague https://github.com/yrodiere[Yoann Rodière] (he is awesome too!) wrote some test infrastructure for it based on https://site.mockito.org[Mockito] (which uses https://bytebuddy.net/[ByteBuddy] under the hood).  That was all good until we started noticing confusing and non reproducible failures in our tests with Mockito sometimes not actually calling the method we would expect."
msgstr "O meu querido colega  link:https://github.com/yrodiere[Yoann Rodière] (ele também é espetacular!) escreveu algumas infra-estruturas de teste para o mesmo, baseadas no  link:https://site.mockito.org[Mockito] (que utiliza  link:https://bytebuddy.net/[o ByteBuddy] ). Estava tudo bem até começarmos a notar falhas confusas e não reproduzíveis nos nossos testes, com o Mockito por vezes a não chamar o método que esperávamos."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:32
#, fuzzy
msgid "The source of the problem is that, to ensure binary compatibility, the https://github.com/hub4j/github-api[Hub4j GitHub API] we use in Quarkus GitHub App introduces bridge methods in the bytecode."
msgstr "A origem do problema é que, para garantir a compatibilidade binária, a  link:https://github.com/hub4j/github-api[API GitHub do Hub4j] que utilizamos na aplicação GitHub da Quarkus introduz métodos de ponte no bytecode."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:34
#, fuzzy
msgid "For instance, let's take this method of the `GitHub` class of the GitHub API:"
msgstr "Por exemplo, vamos utilizar este método da classe `GitHub` da API do GitHub:"

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:42
#, no-wrap
msgid ""
"    @WithBridgeMethods(value = GHUser.class)\n"
"    public GHMyself getMyself() throws IOException {\n"
"        client.requireCredential();\n"
"        return setMyself();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:46
#, fuzzy
msgid "Historically, it used to return a `GHUser` but, in newer versions, it returns a `GHMyself`, which broke the binary compatibility."
msgstr "Historicamente, costumava devolver um `GHUser` mas, nas versões mais recentes, devolve um `GHMyself`, o que quebrou a compatibilidade binária."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:51
#, fuzzy
msgid "To restore it and with the help of the `@WithBridgeMethods` annotation, the GitHub API build will create two methods in the bytecode: one returning `GHMyself` and one returning `GHUser`.  This is very useful if you have compiled your application with an old version of the GitHub API and you just want to use the new version without recompiling your application.  Typically, in the case of Jenkins, you can switch to a new version of the GitHub API without having to recompile all the Jenkins plugins using GitHub API."
msgstr "Para restaurá-lo e com a ajuda da anotação `@WithBridgeMethods`, a compilação da API do GitHub criará dois métodos no bytecode: um que retorna `GHMyself` e outro que retorna `GHUser`. Isto é muito útil se tiver compilado a sua aplicação com uma versão antiga da API do GitHub e quiser apenas utilizar a nova versão sem recompilar a sua aplicação. Normalmente, no caso do Jenkins, é possível mudar para uma nova versão da API do GitHub sem ter de recompilar todos os plugins do Jenkins que usam a API do GitHub."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:53
#, fuzzy
msgid "At the bytecode level, you end up with something equivalent to the following:"
msgstr "Ao nível do bytecode, obtém-se algo equivalente ao seguinte:"

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:60
#, no-wrap
msgid ""
"    public GHMyself getMyself() throws IOException {\n"
"        client.requireCredential();\n"
"        return setMyself();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:64
#, no-wrap
msgid ""
"    public GHUser getMyself() throws IOException {\n"
"        return getMyself(); <1>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:66
#, fuzzy
msgid "`invokevirtual` of `getMyself()` that returns `GHMyself`"
msgstr "`invokevirtual` de `getMyself()` que devolve `GHMyself`"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:68
#, fuzzy
msgid "And if your existing compiled code calls `GHUser getMyself()`, it will still work after the change of return type."
msgstr "E se o seu código compilado atual chamar `GHUser getMyself()`, continuará a funcionar após a alteração do tipo de retorno."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:72
#, fuzzy
msgid "This bridge methods approach solves a real problem and it's not that big of a deal as it's fully transparent for the developer...  except when you start using Mockito due to https://github.com/raphw/byte-buddy/issues/1162[a ByteBuddy issue]: ByteBuddy can get confused if there are several methods with the same signature but different return types."
msgstr "Esta abordagem de métodos de ponte resolve um problema real e não é assim tão importante, uma vez que é totalmente transparente para o programador... exceto quando se começa a utilizar o Mockito devido a  link:https://github.com/raphw/byte-buddy/issues/1162[um problema com o ByteBuddy]: O ByteBuddy pode ficar confuso se houver vários métodos com a mesma assinatura mas com tipos de retorno diferentes."

#. type: delimited block =
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:77
#, fuzzy
msgid "ByteBuddy is an amazing library and this blog post should not be seen as a critique of ByteBuddy.  This is an extreme corner case that doesn't happen with standard bytecode."
msgstr "O ByteBuddy é uma biblioteca fantástica e esta publicação no blogue não deve ser vista como uma crítica ao ByteBuddy. Este é um caso extremo que não acontece com o bytecode padrão."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:80
#, fuzzy
msgid "This issue was causing our tests to be unreliable because sometimes ByteBuddy was choosing the wrong method to apply Mockito magic."
msgstr "Este problema estava a fazer com que os nossos testes não fossem fiáveis porque, por vezes, o ByteBuddy estava a escolher o método errado para aplicar a magia do Mockito."

#. type: Title ==
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:81
#, fuzzy, no-wrap
msgid "How can we work around this?"
msgstr "Como é que podemos contornar esta situação?"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:86
#, fuzzy
msgid "In the case of Quarkus GitHub App, we don't really care about binary compatibility: when upgrading to a new version of the GitHub API, users will rebuild their application."
msgstr "No caso da aplicação GitHub da Quarkus, não nos preocupamos muito com a compatibilidade binária: ao atualizar para uma nova versão da API GitHub, os utilizadores irão reconstruir a sua aplicação."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:89
#, fuzzy
msgid "So given these bridge methods are problematic, one solution would be to get rid of them."
msgstr "Assim, dado que estes métodos de ponte são problemáticos, uma solução seria suprimi-los."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:91
#, fuzzy
msgid "Obviously, we could fork the GitHub API and avoid generating the bridge methods."
msgstr "Obviamente, poderíamos bifurcar a API do GitHub e evitar a geração dos métodos de ponte."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:94
#, fuzzy
msgid "But forking and maintaining a fork forever is definitely not something we should consider if we can avoid it.  Especially since we want to continue benefiting from all the future improvements of the GitHub API."
msgstr "Mas bifurcar e manter uma bifurcação para sempre não é definitivamente algo que devemos considerar se pudermos evitar. Especialmente porque queremos continuar a beneficiar de todas as melhorias futuras da API do GitHub."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:96
#, fuzzy
msgid "So could we somehow keep the library standard but have Quarkus adjust the bytecode when building the application?"
msgstr "Poderíamos, então, manter a biblioteca padrão, mas fazer com que o Quarkus ajustasse o bytecode ao construir a aplicação?"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:99
#, fuzzy
msgid "If you are in a rush, the short answer is yes.  Now let's go for the (not so) long answer."
msgstr "Se estiver com pressa, a resposta curta é sim. Agora vamos à resposta (não tão) longa."

#. type: Title ===
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:100
#, fuzzy, no-wrap
msgid "Let's identify the methods"
msgstr "Vamos identificar os métodos"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:105
#, fuzzy
msgid "In Quarkus, we can index the annotations with Jandex so, in a perfect world, we would index the GitHub API jar with Jandex (which we already do for other purposes)  and interrogate Jandex to get all the methods annotated with `@WithBridgeMethods`:"
msgstr "No Quarkus, podemos indexar as anotações com o Jandex, pelo que, num mundo perfeito, indexaríamos o jar da API do GitHub com o Jandex (o que já fazemos para outros fins) e interrogaríamos o Jandex para obter todos os métodos anotados com `@WithBridgeMethods`:"

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:110
#, no-wrap
msgid ""
"Collection<AnnotationInstance> withBridgeMethodsAnnotations =\n"
"    index.getAnnotations(DotName.createSimple(WithBridgeMethods.class.getName));\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:113
#, fuzzy
msgid "Unfortunately, `@WithBridgeMethods` has a `CLASS` retention policy"
msgstr "Infelizmente, `@WithBridgeMethods` tem uma política de retenção `CLASS`"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:115
#, fuzzy
msgid "which makes perfect sense for its usage - and Jandex only considers annotations with a `RUNTIME` retention policy."
msgstr "o que faz todo o sentido para a sua utilização - e o Jandex apenas considera anotações com uma política de retenção `RUNTIME`."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:118
#, fuzzy
msgid "This limitation will be alleviated in Jandex 3 but, for the time being, we cannot use Jandex."
msgstr "Esta limitação será atenuada no Jandex 3 mas, de momento, não podemos utilizar o Jandex."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:121
#, fuzzy
msgid "Unfortunately, until then, we don't have many options here: we have to list the methods manually."
msgstr "Infelizmente, até lá, não temos muitas opções: temos de listar os métodos manualmente."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:123
#, fuzzy
msgid "For more flexibility, we introduced a `BuildItem`:"
msgstr "Para maior flexibilidade, introduzimos um `BuildItem`:"

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:127
#, no-wrap
msgid "public final class GitHubApiClassWithBridgeMethodsBuildItem extends MultiBuildItem {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:130
#, no-wrap
msgid ""
"    private final String className;\n"
"    private final Set<String> methodNames;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:135
#, no-wrap
msgid ""
"    GitHubApiClassWithBridgeMethodsBuildItem(String className, String... methodsWithBridges) {\n"
"        this.className = className;\n"
"        this.methodNames = new HashSet<>(Arrays.asList(methodsWithBridges));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:139
#, no-wrap
msgid ""
"    public String getClassName() {\n"
"        return className;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:144
#, no-wrap
msgid ""
"    public Set<String> getMethodsWithBridges() {\n"
"        return methodNames;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:147
#, fuzzy
msgid "And we will produce a `GitHubApiClassWithBridgeMethodsBuildItem` for each class:"
msgstr "E produziremos um `GitHubApiClassWithBridgeMethodsBuildItem` para cada turma:"

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:151
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:156
#, no-wrap
msgid "// ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:154
#, no-wrap
msgid ""
"classesWithBridgeMethods.produce(new GitHubApiClassWithBridgeMethodsBuildItem(\n"
"        \"org.kohsuke.github.GHPullRequestCommitDetail$Commit\", \"getAuthor\", \"getCommitter\"));\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:160
#, fuzzy
msgid "Once this is done, we are able to consume the `GitHubApiClassWithBridgeMethodsBuildItem` from any Quarkus `@BuildStep` so this list is generally available to the Quarkus build."
msgstr "Uma vez feito isto, podemos consumir o `GitHubApiClassWithBridgeMethodsBuildItem` a partir de qualquer Quarkus `@BuildStep` para que esta lista esteja geralmente disponível para a construção Quarkus."

#. type: delimited block =
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:164
#, fuzzy
msgid "I won't go into detail on the Quarkus build process but the principle of it is extremely simple:"
msgstr "Não vou entrar em pormenores sobre o processo de construção do Quarkus, mas o seu princípio é extremamente simples:"

#. type: delimited block =
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:166
#, fuzzy
msgid "It is composed of build steps (methods annotated with `@BuildStep`)."
msgstr "É composto por etapas de construção (métodos anotados com `@BuildStep`)."

#. type: delimited block =
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:167
#, fuzzy
msgid "A build step can consume build items."
msgstr "Um passo de construção pode consumir itens de construção."

#. type: delimited block =
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:168
#, fuzzy
msgid "A build step produces build items."
msgstr "Um passo de construção produz itens de construção."

#. type: delimited block =
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:169
#, fuzzy
msgid "Then it is just a matter of resolving the dependencies of the build steps to get to the final result: your application."
msgstr "Depois, é apenas uma questão de resolver as dependências das etapas de compilação para chegar ao resultado final: a sua aplicação."

#. type: delimited block =
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:171
#, fuzzy
msgid "You can learn more about it in the link:/guides/writing-extensions#build-step-processors[Writing extensions guide]."
msgstr "Pode obter mais informações sobre este assunto no  link:/guides/writing-extensions#build-step-processors[Guia de extensões de escrita]."

#. type: Title ===
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:173
#, fuzzy, no-wrap
msgid "Removing the methods"
msgstr "Remoção dos métodos"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:176
#, fuzzy
msgid "Now that we have the list of methods handy, the next step is to remove them."
msgstr "Agora que temos a lista de métodos à mão, o próximo passo é removê-los."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:179
#, fuzzy
msgid "To manipulate bytecode during the build, Quarkus offers the `BytecodeTransformerBuildItem`.  Adjusting the bytecode of a class is just a matter of producing one for the given class."
msgstr "Para manipular o bytecode durante a construção, o Quarkus oferece o `BytecodeTransformerBuildItem`. Ajustar o bytecode de uma classe é apenas uma questão de produzir um para a classe dada."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:182
#, fuzzy
msgid "For instance, to remove the bridge methods from our GitHub API methods, we add the following build step to our extension:"
msgstr "Por exemplo, para remover os métodos de ponte dos nossos métodos da API do GitHub, adicionamos a seguinte etapa de compilação à nossa extensão:"

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:189
#, no-wrap
msgid ""
"@BuildStep\n"
"void removeCompatibilityBridgeMethodsFromGitHubApi(\n"
"        BuildProducer<BytecodeTransformerBuildItem> bytecodeTransformers, <1>\n"
"        List<GitHubApiClassWithBridgeMethodsBuildItem> gitHubApiClassesWithBridgeMethods) { <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:199
#, no-wrap
msgid ""
"    for (GitHubApiClassWithBridgeMethodsBuildItem gitHubApiClassWithBridgeMethods : gitHubApiClassesWithBridgeMethods) {\n"
"        bytecodeTransformers.produce(new BytecodeTransformerBuildItem.Builder()\n"
"                .setClassToTransform(gitHubApiClassWithBridgeMethods.getClassName())\n"
"                .setVisitorFunction((ignored, visitor) -> new RemoveBridgeMethodsClassVisitor(visitor,\n"
"                        gitHubApiClassWithBridgeMethods.getClassName(),\n"
"                        gitHubApiClassWithBridgeMethods.getMethodsWithBridges()))\n"
"                .build());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:201
#, fuzzy
msgid "We are going to produce ``BytecodeTransformerBuildItem``s."
msgstr "Vamos produzir `BytecodeTransformerBuildItem`s."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:202
#, fuzzy
msgid "We consume the previously produced ``GitHubApiClassWithBridgeMethodsBuildItem``s."
msgstr "Consumimos o `GitHubApiClassWithBridgeMethodsBuildItem`s produzido anteriormente."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:204
#, fuzzy
msgid "`RemoveBridgeMethodsClassVisitor` is a classic https://asm.ow2.io[ASM] `ClassVisitor` that will modify the bytecode:"
msgstr "`RemoveBridgeMethodsClassVisitor` é um  link:https://asm.ow2.io[ASM] clássico `ClassVisitor` que modificará o bytecode:"

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:208
#, no-wrap
msgid "class RemoveBridgeMethodsClassVisitor extends ClassVisitor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:211
#, no-wrap
msgid ""
"    private final String className;\n"
"    private final Set<String> methodsWithBridges;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:214
#, no-wrap
msgid ""
"    public RemoveBridgeMethodsClassVisitor(ClassVisitor visitor, String className, Set<String> methodsWithBridges) {\n"
"        super(Gizmo.ASM_API_VERSION, visitor);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:218
#, no-wrap
msgid ""
"        this.className = className;\n"
"        this.methodsWithBridges = methodsWithBridges;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:223
#, no-wrap
msgid ""
"    @Override\n"
"    public MethodVisitor visitMethod(int access, String name, String descriptor, String signature, String[] exceptions) {\n"
"        if (methodsWithBridges.contains(name) && ((access & Opcodes.ACC_BRIDGE) != 0)\n"
"                && ((access & Opcodes.ACC_SYNTHETIC) != 0)) { <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:226
#, no-wrap
msgid ""
"            return null; <2>\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:230
#, no-wrap
msgid ""
"        return super.visitMethod(access, name, descriptor, signature, exceptions); <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:232
#, fuzzy
msgid "If the method name matches and the method is a bridge and synthetic method..."
msgstr "Se o nome do método corresponder e o método for uma ponte e um método sintético..."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:233
#, fuzzy
msgid "... we remove it from the bytecode by returning `null`."
msgstr "<li> <p>removemo-lo do bytecode devolvendo `null`.</p> </li>"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:234
#, fuzzy
msgid "If not, we just delegate to the superclass method that will incorporate the method in the bytecode."
msgstr "Caso contrário, limitamo-nos a delegar no método da superclasse que irá incorporar o método no bytecode."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:236
#, fuzzy
msgid "And that's it!"
msgstr "E pronto!"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:240
#, fuzzy
msgid "During the build process, Quarkus will create a class file containing the modified bytecode and will use it instead of the class coming from the GitHub API jar.  Thus the bridge methods we wanted to remove will never be visible to ByteBuddy."
msgstr "Durante o processo de compilação, o Quarkus criará um arquivo de classe contendo o bytecode modificado e o usará em vez da classe proveniente do jar da API do GitHub. Assim, os métodos bridge que queríamos remover nunca serão visíveis para o ByteBuddy."

#. type: Title ==
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:241
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:245
#, fuzzy
msgid "At conferences, we often say that Quarkus is doing things differently from other frameworks and that the magic relies in its innovative build process."
msgstr "Nas conferências, dizemos frequentemente que o Quarkus está a fazer coisas diferentes das outras estruturas e que a magia reside no seu processo de construção inovador."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:247
#, fuzzy
msgid "This build process is the key to the low memory footprint and fast startup times of Quarkus."
msgstr "Este processo de compilação é a chave para o baixo consumo de memória e os tempos de arranque rápidos do Quarkus."

#. type: Plain text
#: upstream/_posts/2022-04-20-solving-problems-with-extensions.adoc:249
#, fuzzy, no-wrap
msgid "**But it is also a very powerful tool to customize the build of your applications.**\n"
msgstr "*Mas é também uma ferramenta muito poderosa para personalizar a construção das suas aplicações.*"
