# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:1
#, fuzzy, no-wrap
msgid "aureamunoz"
msgstr "aureamunoz"

#. type: YAML Front Matter: date
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:1
#, fuzzy, no-wrap
msgid "2022-02-17"
msgstr "2022-02-17"

#. type: YAML Front Matter: layout
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "posto"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:1
#, fuzzy, no-wrap
msgid "How to configure Smallrye Stork in a client-side microservice for using Kubernetes Service Discovery strategy"
msgstr "Como configurar o Smallrye Stork em um microsserviço do lado do cliente para usar a estratégia Kubernetes Service Discovery"

#. type: YAML Front Matter: tags
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:1
#, fuzzy, no-wrap
msgid "extension smallrye-stork"
msgstr "extensão cegonha-pequena"

#. type: YAML Front Matter: title
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:1
#, fuzzy, no-wrap
msgid "Kubernetes Service Discovery and Selection with Stork"
msgstr "Descoberta e seleção de serviços Kubernetes com o Stork"

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:12
#, fuzzy
msgid "As we already described in the https://quarkus.io/blog/smallrye-stork-intro/[previous post], SmallRye Stork is a service discovery and client-side load-balancing framework that brings out-of-the-box integration with Kubernetes, among others. This post will explain this integration, how to configure Stork in a client-side microservice, and how it differs from the classic Kubernetes service discovery and load-balancing."
msgstr "Como já descrevemos no  link:https://quarkus.io/blog/smallrye-stork-intro/[post anterior], SmallRye Stork é um framework de descoberta de serviços e balanceamento de carga do lado do cliente que traz integração out-of-the-box com Kubernetes, entre outros. Este post explicará essa integração, como configurar o Stork em um microserviço do lado do cliente e como ele difere da descoberta de serviços e do balanceamento de carga clássicos do Kubernetes."

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:14
#, fuzzy
msgid "This post has been updated to use the `quarkus.` prefix when configuring stork properties. This prefix is required since Quarkus 2.8."
msgstr "Este post foi atualizado para utilizar o prefixo `quarkus.` ao configurar as propriedades do stork. Este prefixo é necessário desde o Quarkus 2.8."

#. type: Title ==
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:16
#, fuzzy, no-wrap
msgid "Kubernetes service discovery and load balancing"
msgstr "Descoberta de serviços Kubernetes e balanceamento de carga"

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:19
#, fuzzy
msgid "Kubernetes has built-in service discovery and load balancing."
msgstr "O Kubernetes tem descoberta de serviços e balanceamento de carga integrados."

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:21
#, fuzzy
msgid "Let's imagine you have an application deployed in Kubernetes and exposing an HTTP API. You declare a Kubernetes service that delegates the calls to your application. This service acts as a proxy in front of a set of pods (often application replicas). When another application calls our HTTP API, it uses DNS to locate the Kubernetes service and uses the resolved address. It's important to understand that it does not locate and call the application instance but the Kubernetes service. This service then delegates the call to the actual application and implements a round-robin when there are multiple replicas."
msgstr "Imaginemos que tem uma aplicação implantada em Kubernetes e que expõe uma API HTTP. Declara um serviço Kubernetes que delega as chamadas para a sua aplicação. Este serviço actua como um proxy em frente a um conjunto de pods (frequentemente réplicas de aplicações). Quando outra aplicação chama a nossa API HTTP, utiliza o DNS para localizar o serviço Kubernetes e utiliza o endereço resolvido. É importante entender que ele não localiza e chama a instância da aplicação, mas o serviço Kubernetes. Este serviço delega então a chamada para a aplicação real e implementa um round-robin quando existem várias réplicas."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:22
#, fuzzy, no-wrap
msgid "Kubernetes"
msgstr "Kubernetes"

#. type: Target for macro image
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:22
#, no-wrap
msgid "kubernetes-service-discovery.png"
msgstr ""

#. type: Title ==
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:24
#, fuzzy, no-wrap
msgid "What does Stork bring for Kubernetes?"
msgstr "O que é que o Stork traz para o Kubernetes?"

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:27
#, fuzzy
msgid "Even though Kubernetes has built-in support for service discovery, sometimes we need more flexibility in the service instance selection. As we have seen, the Kubernetes service implements a round-robin.  With Stork, you can customize the selection."
msgstr "Embora o Kubernetes tenha suporte integrado para a descoberta de serviços, às vezes precisamos de mais flexibilidade na seleção da instância de serviço. Como vimos, o serviço Kubernetes implementa um round-robin. Com o Stork, é possível personalizar a seleção."

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:29
#, fuzzy
msgid "Unlike in the previous example, Stork does not use DNS to locate the Kubernetes service. It uses the Kubernetes API to retrieve the set of pods behind a Kubernetes service. Then, you can apply any Stork service selection or even implement your own."
msgstr "Ao contrário do exemplo anterior, o Stork não usa o DNS para localizar o serviço Kubernetes. Ele usa a API do Kubernetes para recuperar o conjunto de pods por trás de um serviço do Kubernetes. Em seguida, você pode aplicar qualquer seleção de serviço do Stork ou até mesmo implementar a sua própria."

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:31
#, fuzzy
msgid "The following figure depicts the architecture and how Stork locates and selects the service instance."
msgstr "A figura seguinte descreve a arquitetura e a forma como o Stork localiza e selecciona a instância de serviço."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:32
#, fuzzy, no-wrap
msgid "Service"
msgstr "Serviço"

#. type: Target for macro image
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:32
#, no-wrap
msgid "service-instances-location.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:35
#, fuzzy
msgid "As shown in the architecture above, the Kubernetes rest-service is backed by two pods.  While classic Kubernetes service discovery would ensure that requests to the rest-service are load-balanced across these two pods, Stork retrieves the pods' addresses directly. Thus it can handle the service selection (using a round-robin for now)."
msgstr "Como mostrado na arquitetura acima, o serviço de repouso do Kubernetes é apoiado por dois pods. Enquanto a descoberta clássica de serviços do Kubernetes garantiria que as solicitações ao serviço de repouso fossem balanceadas entre esses dois pods, o Stork recupera os endereços dos pods diretamente. Assim, ele pode lidar com a seleção do serviço (usando um round-robin por enquanto)."

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:37
#, fuzzy
msgid "Note that while applications using Stork do not use the Kubernetes service delegation, they still require a Kubernetes service to discover the backed pods. So, it does not change your Kubernetes deployment."
msgstr "Observe que, embora os aplicativos que usam o Stork não usem a delegação de serviço do Kubernetes, eles ainda precisam de um serviço do Kubernetes para descobrir os pods com suporte. Portanto, ele não altera sua implantação do Kubernetes."

#. type: Title ==
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:39
#, fuzzy, no-wrap
msgid "Configuring and Using Stork Kubernetes Service Discovery"
msgstr "Configurar e usar a descoberta de serviço do Stork Kubernetes"

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:42
#, fuzzy
msgid "On the client-side, our Quarkus application uses the REST Client Reactive to interact with the REST API exposed by the `rest-service`. The Client app uses Stork to discover the rest-service instances. The easiest way to enable Stork is to add the corresponding Jar to the classpath of your project:"
msgstr "No lado do cliente, a nossa aplicação Quarkus utiliza o Cliente REST Reativo para interagir com a API REST exposta pelo `rest-service`. A aplicação Cliente utiliza o Stork para descobrir as instâncias do serviço de repouso. A forma mais fácil de ativar o Stork é adicionar o Jar correspondente ao classpath do seu projeto:"

#. type: Block title
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:43
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:99
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:50
#, no-wrap
msgid ""
"    <dependency>\n"
"        <groupId>io.smallrye.stork</groupId>\n"
"        <artifactId>stork-service-discovery-kubernetes</artifactId>\n"
"    </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:53
#, fuzzy
msgid "With Stork and the Stork Kubernetes Service Discovery on the classpath, we need to tell Stork how to locate and select the service. To achieve this, we just add `stork.[service-name].[kebab-cased-property-name]` into the Quarkus application configuration. In our case, to configure the rest-service and indicate to Stork that it should use Kubernetes, we add:"
msgstr "Com o Stork e o Stork Kubernetes Service Discovery no classpath, precisamos de dizer ao Stork como localizar e selecionar o serviço. Para isso, basta adicionar `stork.[service-name].[kebab-cased-property-name]` à configuração da aplicação Quarkus. No nosso caso, para configurar o serviço de repouso e indicar ao Stork que ele deve usar o Kubernetes, adicionamos:"

#. type: Block title
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:55
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:111
#, fuzzy, no-wrap
msgid "application.properties"
msgstr "application.properties"

#. type: delimited block -
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:59
#, no-wrap
msgid ""
"quarkus.stork.rest-service.service-discovery.type=kubernetes\n"
"quarkus.stork.rest-service.service-discovery.k8s-namespace=my-namespace\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:62
#, fuzzy
msgid "Note that you can also configure them via annotations, check the `@ServiceDiscoveryType` and `@ServiceDiscoveryAttribute` annotations."
msgstr "Note que também pode configurá-los através de anotações, consulte as anotações `@ServiceDiscoveryType` e `@ServiceDiscoveryAttribute`."

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:64
#, fuzzy
msgid "We also can limit the service lookup to our namespace. We can also use the `all` value to look for services in all namespaces."
msgstr "Também podemos limitar a pesquisa de serviços ao nosso namespace. Também podemos usar o valor `all` para procurar serviços em todos os namespaces."

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:66
#, fuzzy
msgid "There are a few more properties that we can configure to tune the service discovery:"
msgstr "Existem mais algumas propriedades que podemos configurar para ajustar a descoberta do serviço:"

#. type: Table
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:69
#, fuzzy, no-wrap
msgid "Property"
msgstr "Imóveis"

#. type: Table
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:71
#, fuzzy, no-wrap
msgid "Description"
msgstr "Descrição"

#. type: Table
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:71
#, fuzzy, no-wrap
msgid "quarkus.stork.service-name.service-discovery.k8s-host"
msgstr "quarkus.stork.service-name.service-discovery.k8s-host"

#. type: Table
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:72
#, fuzzy, no-wrap
msgid "The Kubernetes API url"
msgstr "O url da API Kubernetes"

#. type: Table
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:72
#, fuzzy, no-wrap
msgid "quarkus.stork.service-name.service-discovery.application"
msgstr "quarkus.stork.service-name.service-discovery.application"

#. type: Table
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:73
#, fuzzy, no-wrap
msgid "The name of the target application"
msgstr "O nome da aplicação de destino"

#. type: Table
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:73
#, fuzzy, no-wrap
msgid "quarkus.stork.service-name.service-discovery.refresh-period"
msgstr "quarkus.stork.service-name.service-discovery.refresh-period"

#. type: Table
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:74
#, fuzzy, no-wrap
msgid "Service discovery cache refresh period"
msgstr "Período de atualização da cache de pesquisa de serviços"

#. type: Table
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:74
#, fuzzy, no-wrap
msgid "quarkus.stork.service-name.service-discovery.secure"
msgstr "quarkus.stork.service-name.service-discovery.secure"

#. type: Table
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:76
#, fuzzy, no-wrap
msgid "Use a secure connection (e.g. HTTPS)"
msgstr "Utilizar uma ligação segura (por exemplo, HTTPS)"

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:79
#, fuzzy
msgid "That's how easy it is to have Stork Kubernetes service discovery."
msgstr "É assim que é fácil ter a descoberta de serviços Stork Kubernetes."

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:81
#, fuzzy
msgid "Once Stork is configured, we need to configure the REST Client to use it. It can be done in the `@RegisterRestClient` annotated interface by adding the `baseUri` attribute with the `stork://` scheme:"
msgstr "Depois que o Stork estiver configurado, precisamos configurar o cliente REST para usá-lo. Isso pode ser feito na interface anotada `@RegisterRestClient`, adicionando o atributo `baseUri` com o esquema `stork://`:"

#. type: delimited block -
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:91
#, no-wrap
msgid ""
"@Path(\"/test\")\n"
"@RegisterRestClient(baseUri = \"stork://rest-service\")\n"
"public interface Client {\n"
"@GET\n"
"@Path(\"/\")\n"
"Uni<String> get();\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:93
#, fuzzy, no-wrap
msgid "Customizing the service selection"
msgstr "Personalização da seleção de serviços"

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:96
#, fuzzy
msgid "Now that the service is located, we need to select the _best_ instance. For example, you can use the least-response-time load-balancer implementation. This selection strategy monitors the interactions and selects the fastest instance to improve the response time."
msgstr "Agora que o serviço está localizado, precisamos de selecionar a _melhor_ instância. Por exemplo, você pode usar a implementação do balanceador de carga de menor tempo de resposta. Esta estratégia de seleção monitoriza as interacções e selecciona a instância mais rápida para melhorar o tempo de resposta."

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:98
#, fuzzy
msgid "To achieve this, you need to add the load-balancer implementation on your classpath:"
msgstr "Para isso, é necessário adicionar a implementação do balanceador de carga no classpath:"

#. type: delimited block -
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:106
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.smallrye.stork</groupId>\n"
"    <artifactId>smallrye-stork-load-balancer-response-time</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:109
#, fuzzy
msgid "Then, in the application configuration, add:"
msgstr "Em seguida, na configuração da aplicação, adicione:"

#. type: delimited block -
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:114
#, no-wrap
msgid "quarkus.stork.my-service.load-balancer.type=least-response-time\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:117
#, fuzzy
msgid "Obviously, you can pick any load-balancing strategy or even implement your own one!"
msgstr "Obviamente, pode escolher qualquer estratégia de balanceamento de carga ou mesmo implementar a sua própria estratégia!"

#. type: Title ==
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:118
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumo"

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:121
#, fuzzy
msgid "This post shows how you can use Stork in a Kubernetes environment to customize the service selection. While Kubernetes offers built-in service discovery and load-balancing, Stork adds another level of flexibility."
msgstr "Este post mostra como você pode usar o Stork em um ambiente Kubernetes para personalizar a seleção de serviços. Embora o Kubernetes ofereça descoberta de serviço e balanceamento de carga integrados, o Stork adiciona outro nível de flexibilidade."

#. type: Plain text
#: upstream/_posts/2022-02-17-stork-kubernetes-discovery.adoc:122
#, fuzzy
msgid "You can check the code of the example in https://github.com/michalszynkiewicz/rest-client-reactive-stork/tree/kubernetes[this repo] for the client-side, and https://github.com/michalszynkiewicz/configurable-rest-service/tree/kubernetes[this one] for the HTTP service."
msgstr "Pode consultar o código do exemplo neste  link:https://github.com/michalszynkiewicz/rest-client-reactive-stork/tree/kubernetes[repositório] para o lado do cliente e  link:https://github.com/michalszynkiewicz/configurable-rest-service/tree/kubernetes[neste] para o serviço HTTP."
