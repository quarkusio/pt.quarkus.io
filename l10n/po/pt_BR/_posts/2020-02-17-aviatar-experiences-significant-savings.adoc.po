# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "Lufthansa Technik AVIATAR experiences significant cloud resources savings by moving to Kubernetes-native Quarkus"
msgstr "A Lufthansa Technik AVIATAR regista poupanças significativas de recursos na nuvem ao mudar para o Quarkus nativo de Kubernetes"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Lufthansa Technik, the world’s largest independent provider of airline maintenance, repair, and overhaul (MRO) services, runs a SaaS digital platform, called AVIATAR, for the aviation industry. This platform helps airlines avoid delays and cancellations by using data to better organize and schedule maintenance. The company built and operated AVIATAR using a hybrid cloud infrastructure based on enterprise open source software from Red Hat."
msgstr "A Lufthansa Technik, o maior fornecedor independente do mundo de serviços de manutenção, reparação e revisão geral (MRO) para companhias aéreas, gere uma plataforma digital SaaS, denominada AVIATAR, para o sector da aviação. Esta plataforma ajuda as companhias aéreas a evitar atrasos e cancelamentos, utilizando dados para organizar e programar melhor a manutenção. A empresa construiu e operou a AVIATAR utilizando uma infraestrutura de nuvem híbrida baseada em software empresarial de código aberto da Red Hat."

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "In the last 3 years, AVIATAR business has been growing fast and they needed to accommodate the growing demand from their customers. To this end, they had to grow their development force from 5 developers when they first started to over 100 at present. As they grew, they realized that one single large team was not the most productive and efficient way to organize their software development efforts because many developers had to spend time waiting for each other’s work to be finished due to the many interdependencies in the overall system. To address this situation, they decided to split development from one team to several cross-functional teams. At the same time, they also started working on ways to make the newly created smaller development teams more independent by giving each team autonomy to run their own services. This resulted in their evolution into a microservices architecture, where most of their microservices were based on Spring Boot and Java EE. They have gone from 10 services in the beginning to over 100 as of this writing."
msgstr "Nos últimos 3 anos, o negócio da AVIATAR tem vindo a crescer rapidamente e a empresa precisava de acomodar a procura crescente dos seus clientes. Para tal, tiveram de aumentar a sua equipa de desenvolvimento de 5 programadores, quando começaram, para mais de 100 atualmente. À medida que cresciam, aperceberam-se de que uma única equipa grande não era a forma mais produtiva e eficiente de organizar os seus esforços de desenvolvimento de software, porque muitos programadores tinham de passar tempo à espera que o trabalho dos outros estivesse concluído devido às muitas interdependências no sistema global. Para resolver esta situação, decidiram dividir o desenvolvimento de uma equipa em várias equipas multifuncionais. Ao mesmo tempo, começaram também a trabalhar em formas de tornar mais independentes as recém-criadas equipas de desenvolvimento mais pequenas, dando a cada equipa autonomia para executar os seus próprios serviços. Isto resultou na sua evolução para uma arquitetura de microsserviços, em que a maioria dos seus microsserviços se baseava em Spring Boot e Java EE. Passaram de 10 serviços no início para mais de 100 no momento da redação deste documento."

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "The small and autonomous development teams have been able to take responsibility for their own services from development all the way to production to achieve more agility and respond faster to the business."
msgstr "As equipas de desenvolvimento pequenas e autónomas puderam assumir a responsabilidade pelos seus próprios serviços, desde o desenvolvimento até à produção, para obter maior agilidade e responder mais rapidamente às necessidades da empresa."

#. type: Title ==
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "High consumption of cloud resources for existing services"
msgstr "Elevado consumo de recursos da nuvem para os serviços existentes"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Lufthansa Technik run their microservices on OpenShift on Azure and, as they were looking at different ways to scale their development efforts, they were also looking at ways to save cloud resource consumption. As they were migrating to microservices, they noticed microservices were consuming high memory and compute cloud resources. For high-availability and emergency procedure purposes, they run at least 3 instances of each microservice on the cloud which means that for each of these microservices, there’s a 3x cloud resource consumption rate. For example, one of their microservices was consuming ½ core plus 1 GB of RAM per instance, which required 1.5 cores and 3 GB of RAM when running it in HA on the cloud (3 instances)."
msgstr "A Lufthansa Technik executa os seus microsserviços no OpenShift no Azure e, à medida que procurava diferentes formas de escalar os seus esforços de desenvolvimento, também procurava formas de poupar o consumo de recursos da cloud. Quando estavam a migrar para microsserviços, repararam que os microsserviços estavam a consumir muita memória e recursos de computação na nuvem. Para fins de alta disponibilidade e procedimentos de emergência, eles executam pelo menos 3 instâncias de cada microsserviço na nuvem, o que significa que, para cada um desses microsserviços, há uma taxa de consumo de recursos da nuvem de 3x. Por exemplo, um dos seus microsserviços estava a consumir ½ núcleo mais 1 GB de RAM por instância, o que exigia 1,5 núcleos e 3 GB de RAM ao executá-lo em HA na nuvem (3 instâncias)."

#. type: Title ==
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "Optimizing cloud resource consumption with Quarkus"
msgstr "Otimização do consumo de recursos na nuvem com o Quarkus"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Thorsten Pohl, Product Owner Automation & Platform Architect at Digital Product Division AVIATAR, first heard about Quarkus and its benefits in April 2019 at Red Hat Summit. Among its many benefits, the ones that piqued his interest were its low memory consumption and fast times to first response, both in JVM and native modes. He took this information back to AVIATAR and they decided to try it out. There were two initial microservices that their Technology Council recommended for a Quarkus tryout. The first one would be a brand new microservice called the _“Customer Configuration”_ service, and the second one would be the _“Service Discovery”_ service which would be a migration from a service running in an application server to Quarkus."
msgstr "Thorsten Pohl, Product Owner Automation &amp; Platform Architect na Digital Product Division AVIATAR, ouviu falar pela primeira vez do Quarkus e dos seus benefícios em abril de 2019 na Red Hat Summit. Entre os muitos benefícios, os que despertaram seu interesse foram o baixo consumo de memória e os tempos rápidos para a primeira resposta, tanto no modo JVM quanto no nativo. Ele levou essas informações para a AVIATAR e eles decidiram experimentá-lo. Havia dois microsserviços iniciais que o seu Conselho de Tecnologia recomendou para um teste com o Quarkus. O primeiro seria um novo microsserviço chamado serviço _\"Configuração do cliente\"_ e o segundo seria o serviço _\"Descoberta de serviços\"_, que seria uma migração de um serviço executado num servidor de aplicações para o Quarkus."

#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
msgid "The Customer Configuration service"
msgstr ""

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "This service is for a customer to set up their own settings, e.g. desired level of prediction. This service is targeted for their managed customers and it was selected to be developed in Quarkus because it was low risk. From their perspective, if this service went down, there would be no major impact to customers. It was developed by 2 developers using Quarkus 0.20 in a single sprint (approximately 3 weeks) and they are planning to upgrade it to Quarkus v1.x. This service is currently running in native mode in production."
msgstr "Este serviço permite que um cliente defina as suas próprias definições, por exemplo, o nível de previsão pretendido. Este serviço destina-se aos seus clientes geridos e foi selecionado para ser desenvolvido no Quarkus por ser de baixo risco. Do ponto de vista da empresa, se este serviço fosse interrompido, não haveria grande impacto para os clientes. Foi desenvolvido por 2 programadores utilizando o Quarkus 0.20 num único sprint (aproximadamente 3 semanas) e estão a planear actualizá-lo para o Quarkus v1.x. Este serviço está atualmente a funcionar em modo nativo na produção."

#. type: Title ===
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "The Service Discovery service"
msgstr "O serviço Service Discovery"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "The Service Discovery service is used to allow automatic discovery between the microservices AVIATAR consist of. It is considered high risk because if it breaks down, it would have a major impact on customers. Also, the original version of this service ran in production as a highly available service in an application server, consuming a lot of cloud resources. The Quarkus version of this service has been running in native mode in Development for about 3 months with no problems and on January 18, 2020, it was deployed to production to replace the instance running on the application server. It should also be mentioned that this Quarkus service started in JVM mode because it was using MongoDB and there was no MongoDB client Quarkus extension when its development started. But as soon as the MongoDB client Quarkus extension became available, they were able to switch the entire service to native mode. This speaks to the fast innovation and new contributions that are part of the Quarkus open source community project."
msgstr "O serviço Service Discovery é utilizado para permitir a descoberta automática entre os microsserviços que compõem o AVIATAR. É considerado de alto risco porque, em caso de avaria, teria um grande impacto nos clientes. Além disso, a versão original deste serviço foi executada em produção como um serviço altamente disponível num servidor de aplicações, consumindo muitos recursos da nuvem. A versão Quarkus deste serviço tem estado a funcionar em modo nativo no Desenvolvimento há cerca de 3 meses sem problemas e, em 18 de janeiro de 2020, foi implementada na produção para substituir a instância que estava a funcionar no servidor de aplicações. Também deve ser mencionado que este serviço Quarkus começou em modo JVM porque estava a utilizar MongoDB e não havia nenhuma extensão Quarkus cliente MongoDB quando o seu desenvolvimento começou. Mas assim que a extensão Quarkus do cliente MongoDB ficou disponível, foi possível mudar todo o serviço para o modo nativo. Isto demonstra a rápida inovação e as novas contribuições que fazem parte do projeto comunitário de código aberto Quarkus."

#. type: Title ==
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "Why not Spring Boot?"
msgstr "Porque não o Spring Boot?"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Lufthansa Technik sees Quarkus as a great fit in their journey to running their services in a serverless mode. They have many services that aren’t invoked that often but they still need to have 3 instances of each up and running all the time for high-availability requirements leading to high cloud resource consumption costs. They plan to turn these seldom accessed services to Function-as-a-service calls so that they can be invoked on demand leading to a reduction of cloud. If they were using Spring Boot, it would take too long to boot up, making it prohibitive to use in a serverless mode."
msgstr "A Lufthansa Technik vê a Quarkus como uma ótima opção em sua jornada para executar seus serviços em um modo sem servidor. Eles têm muitos serviços que não são invocados com tanta frequência, mas ainda precisam ter 3 instâncias de cada um funcionando o tempo todo para requisitos de alta disponibilidade, o que leva a altos custos de consumo de recursos na nuvem. A empresa planeia transformar estes serviços raramente acedidos em chamadas de função como serviço, para que possam ser invocados a pedido, o que levará a uma redução da nuvem. Se estivessem a utilizar o Spring Boot, este demoraria demasiado tempo a arrancar, tornando proibitiva a sua utilização num modo sem servidor."

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Likewise, they have experienced lower memory and compute cloud resource consumption when using Quarkus - plus its use of GraalVM - and according to Thorsten, _“with Quarkus, they could run 3 times denser deployments without sacrificing availability and response times of services”_, as the denser deployments come from the combination of the two technologies."
msgstr "Do mesmo modo, registaram um menor consumo de memória e de recursos de computação na nuvem quando utilizaram o Quarkus - para além da utilização do GraalVM - e, segundo Thorsten, _\"com o Quarkus, puderam executar implementações três vezes mais densas sem sacrificar a disponibilidade e os tempos de resposta dos serviços\",_ uma vez que as implementações mais densas resultam da combinação das duas tecnologias."

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Their developers are Spring Boot developers with Java EE experience as well, so the learning curve for Quarkus was very small since its syntax and approach was _“close to what our developers are already doing and it’s familiar to them. This is a big benefit”_, Thorsten affirmed."
msgstr "Os seus programadores são programadores Spring Boot com experiência em Java EE, por isso a curva de aprendizagem para a Quarkus foi muito pequena, uma vez que a sua sintaxe e abordagem estavam _\"perto do que os nossos programadores já estão a fazer e é-lhes familiar. Esta é uma grande vantagem\",_ afirmou Thorsten."

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "With respect to the recently introduced Spring API compatibility feature in Quarkus, Thorsten said that _“they may use the Spring API compatibility in Quarkus when migrating their current Spring Boot microservices to Quarkus. However, for developing new microservices, they plan to use just the Quarkus APIs directly because it would be awkward to use another API within Quarkus.”_"
msgstr "Com relação ao recurso de compatibilidade da API do Spring recentemente introduzido no Quarkus, Thorsten disse que _\"eles podem usar a compatibilidade da API do Spring no Quarkus ao migrar seus atuais microserviços Spring Boot para o Quarkus. No entanto, para desenvolver novos microsserviços, eles planejam usar apenas as APIs do Quarkus diretamente porque seria estranho usar outra API dentro do Quarkus\"._"

#. type: Title ==
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "The Quarkus Benefits"
msgstr "As vantagens do Quarkus"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Among the many benefits that Quarkus provides to Lufthansa Technik, Thorsten mentioned that _“they could cut cloud resource costs threefold.\"_ And the same goes with OpenShift because of the higher density you can achieve on each core using Quarkus. For example, they had a microservice that was consuming ½ core plus 1 GB of RAM per instance, which required 1.5 cores and 3 GB of RAM when running it in HA on the cloud (3 instances). When using the Quarkus version of the same microservice, its consumption was of 200 millicores plus 200-400 MB of RAM per instance. This translates to 0.6 cores plus 600 MB – 1.2 GB of RAM for an HA deployment of 3 instances of the microservice _“. They could run 3 times denser deployments without sacrificing availability and response times of services”_, Thornsten reiterated. These are the types of optimizations that can only be achieved by the symbiotic combination of Quarkus and GraalVM."
msgstr "Entre os muitos benefícios que o Quarkus oferece à Lufthansa Technik, Thorsten mencionou que _\"eles poderiam reduzir os custos de recursos de nuvem em três vezes\"._ E o mesmo acontece com o OpenShift devido à maior densidade que pode ser alcançada em cada núcleo usando o Quarkus. Por exemplo, eles tinham um microservice que estava consumindo ½ núcleo mais 1 GB de RAM por instância, o que exigia 1,5 núcleos e 3 GB de RAM ao executá-lo em HA na nuvem (3 instâncias). Ao utilizar a versão Quarkus do mesmo microsserviço, o seu consumo foi de 200 milicores mais 200-400 MB de RAM por instância. Isto traduz-se em 0,6 núcleos mais 600 MB - 1,2 GB de RAM para uma implementação HA de 3 instâncias do microsserviço _\". Podem executar implementações três vezes mais densas sem sacrificar a disponibilidade e os tempos de resposta dos serviços\",_ reiterou Thornsten. Estes são os tipos de optimizações que só podem ser alcançados pela combinação simbiótica de Quarkus e GraalVM."

#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
msgid ""
"Thorsten also described Quarkus live coding capabilities as a _“really good thing”_. Many of their applications have web-based user interfaces and _“making changes and reloading pages instantaneously is a great feature”_, Thorsten affirmed.\n"
"Another benefit, already mentioned earlier, was the small Quarkus learning curve experienced by their developers, who are Spring Boot developers with Java EE experience. What makes this possible is the stack of technologies included in Quarkus, composed of best-of-breed and familiar technologies for Kubernetes-native microservices. Some of the Quarkus extensions used by the AVIATAR developers are: Java Web Token (JWT), JAX-RS, MongoDB client, MicroProfile Rest Client, Keycloak (security), Hibernate ORM (for relational databases), MicroProfile Metrics, and MicroProfile Health Check."
msgstr ""

#. type: Title ==
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "Looking into the future"
msgstr "Olhando para o futuro"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "They plan to use Quarkus for the development of new services per the guidance of their Technology Council. In general, for new services they’d like to first work on the ones that are low or no risk to customers. They also plan to upgrade their Service Discovery service to Quarkus v1.x and deploy it to production, which actually took place on January 18, 2020. Lastly, they will use the Quarkus APIs directly and for migrating Spring Boot services to Quarkus, they may leverage the Quarkus Spring API compatibility feature."
msgstr "A empresa planeia utilizar o Quarkus para o desenvolvimento de novos serviços, de acordo com as orientações do seu Conselho Tecnológico. Em geral, para os novos serviços, gostariam de começar por trabalhar naqueles que apresentam um risco baixo ou nulo para os clientes. A empresa também planeia atualizar o serviço Service Discovery para o Quarkus v1.x e colocá-lo em produção, o que aconteceu em 18 de janeiro de 2020. Por fim, eles usarão as APIs do Quarkus diretamente e, para migrar os serviços do Spring Boot para o Quarkus, poderão aproveitar o recurso de compatibilidade da API do Spring do Quarkus."

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "They look forward to continuing to optimize their cloud resource consumption by using the Quarkus stack in their services."
msgstr "Esperam continuar a otimizar o seu consumo de recursos na nuvem, utilizando a pilha Quarkus nos seus serviços."

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "Para mais informações sobre o Quarkus:"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "Sítio Web da Quarkus:  http://quarkus.io"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Projeto Quarkus GitHub:  https://github.com/quarkusio/quarkus"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "Quarkus Twitter:  https://twitter.com/QuarkusIO"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Chat do Quarkus:  https://quarkusio.zulipchat.com/"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Lista de correio eletrónico Quarkus:  https://groups.google.com/forum/#!forum/quarkus-dev"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[Canal do YouTube da Quarkus]"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Quatro razões para utilizar o Quarkus]"
