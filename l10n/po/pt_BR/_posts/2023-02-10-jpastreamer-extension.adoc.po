# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy, no-wrap
msgid "Express Hibernate Queries as Type-Safe Java Streams"
msgstr "Expressar consultas do Hibernate como fluxos Java seguros quanto ao tipo"

#. type: YAML Front Matter: synopsis
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy, no-wrap
msgid "Writing Hibernate queries using the Criteria API can be anything but intuitive and comes at the expense of wordiness. In this article, you will learn how the JPAStreamer Quarkus extension facilitates type-safe Hibernate queries without unnecessary complexity."
msgstr "Escrever consultas do Hibernate utilizando a API Criteria pode ser tudo menos intuitivo e é feito à custa do palavreado. Neste artigo, aprenderá como a extensão JPAStreamer Quarkus facilita as consultas Hibernate seguras em termos de tipo sem complexidade desnecessária."

#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Writing Hibernate queries using the Criteria API can be anything but intuitive and comes at the expense of wordiness. In this article, you will learn how the  Quarkus extension facilitates type-safe Hibernate queries without unnecessary complexity."
msgstr "Escrever consultas do Hibernate usando a API de critérios pode ser tudo, menos intuitivo, e isso se dá às custas de palavras. Neste artigo, o senhor aprenderá como a extensão Quarkus facilita as consultas do Hibernate com segurança de tipo sem complexidade desnecessária."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "As much as the JPA Criteria builder is expressive, JPA queries are often equally verbose, and the API itself can be unintuitive to use, especially for newcomers. In the Quarkus ecosystem, Panache is a partial remedy for these problems when using Hibernate ORM. Still, I find myself juggling the Panache’s helper methods, preconfigured Enums and raw Strings when composing anything but the simplest of queries. You could claim I am just inexperienced and impatient or instead acknowledge that the perfect API is frictionless to use for everyone. Thus, the user experience of writing JPA queries can be further improved in that direction."
msgstr "Por muito expressivo que seja o construtor de critérios JPA, as consultas JPA são muitas vezes igualmente verbosas e a própria API pode ser pouco intuitiva de utilizar, especialmente para os recém-chegados. No ecossistema Quarkus, o Panache é uma solução parcial para esses problemas quando se usa o Hibernate ORM. Ainda assim, dou por mim a fazer malabarismos com os métodos auxiliares do Panache, Enums pré-configuradas e Strings em bruto quando componho qualquer coisa que não seja a mais simples das consultas. Poder-se-ia dizer que sou apenas inexperiente e impaciente ou, em vez disso, reconhecer que a API perfeita é fácil de usar para toda a gente. Assim, a experiência do utilizador na escrita de consultas JPA pode ser melhorada nesse sentido."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "One of the remaining shortcomings is that raw Strings are inherently not type-safe, meaning my IDE rejects me the helping hand of code completion and wish me good luck at best. On the upside, Quarkus facilitates application relaunches in a split second to issue quick verdicts on my code. And nothing beats the heart-felt joy and genuine surprise when I have composed a working query on the fifth, rather than the tenth, attempt..."
msgstr "Uma das deficiências restantes é que as Strings brutas não são inerentemente seguras quanto ao tipo, o que significa que o meu IDE rejeita a ajuda da conclusão do código e deseja-me boa sorte na melhor das hipóteses. Por outro lado, o Quarkus facilita o relançamento de aplicações numa fração de segundo para emitir veredictos rápidos sobre o meu código. E nada supera a alegria sentida e a surpresa genuína quando consigo compor uma consulta funcional na quinta, e não na décima, tentativa..."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "With this in mind, we built the open source library JPAStreamer to make the process of writing Hibernate queries more intuitive and less time-consuming, while leaving your existing codebase intact. It achieves this goal by allowing queries to be expressed as standard Java Streams. Upon execution, JPAStreamer translates the Stream pipeline to a HQL query for efficient execution and thereby avoids materialising anything but the relevant results."
msgstr "Com isto em mente, construímos a biblioteca de código aberto JPAStreamer para tornar o processo de escrita de consultas Hibernate mais intuitivo e menos demorado, deixando a sua base de código existente intacta. Ela atinge esse objetivo permitindo que as consultas sejam expressas como fluxos Java padrão. Após a execução, o JPAStreamer traduz o pipeline Stream para uma consulta HQL para uma execução eficiente e, assim, evita materializar tudo exceto os resultados relevantes."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Let me take an example - in some random database exists a table called person represented in a Hibernate application by the following standard `@Entity`:"
msgstr "Vejamos um exemplo: numa base de dados aleatória existe uma tabela chamada pessoa, representada numa aplicação Hibernate pela seguinte norma `@Entity`:"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "To fetch the `Person` with an `Id` of 1 using JPAStreamer and Hibernate ORM, all you need is the following:"
msgstr "Para ir buscar o `Person` com um `Id` de 1 utilizando o JPAStreamer e o Hibernate ORM, só precisa do seguinte:"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Initialize JPAStreamer in one line, the underlying JPA provider handles the DB configuration."
msgstr "Inicializa o JPAStreamer em uma linha, o provedor JPA subjacente lida com a configuração do banco de dados."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "The Stream source is set to be the Person table."
msgstr "A fonte de fluxo é definida como a tabela Pessoa."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "The filter operation is treated as a SQL WHERE clause and the condition is expressed type-safely with JPAStreamer predicates (more on this to follow)."
msgstr "A operação de filtragem é tratada como uma cláusula SQL WHERE e a condição é expressa de forma segura com predicados JPAStreamer (mais sobre isto a seguir)."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Despite it looking as if JPAStreamer operates on all `Person` objects, the pipeline is optimized to a single query, in this case:"
msgstr "Apesar de parecer que o JPAStreamer opera em todos os objectos `Person`, o pipeline está optimizado para uma única consulta, neste caso:"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Thus, only the `Person` matching the search criteria is ever materialized."
msgstr "Assim, apenas o `Person` que corresponde aos critérios de pesquisa é materializado."

#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Next, we can look at a more complex example in which I am searching  for persons with a first name ending with an “A” and a last name that starts with “B”. The matches are sorted primarily by the first name and secondly by last name. I further decide to apply an offset of 5, excluding the first five results, and to limit the total results to 10. Here is the Stream pipeline to achieve this task:"
msgstr "Em seguida, podemos ver um exemplo mais complexo no qual estou pesquisando pessoas com um primeiro nome que termina com \"A\" e um sobrenome que começa com \"B\". As correspondências são classificadas principalmente pelo primeiro nome e, em segundo lugar, pelo sobrenome. Decidi ainda aplicar um deslocamento de 5, excluindo os cinco primeiros resultados, e limitar o total de resultados a 10. Aqui está o pipeline do Stream para realizar essa tarefa:"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Filters can be combined with the and/or operators"
msgstr "Os filtros podem ser combinados com os operadores e/ou"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Easily filter on one or more properties"
msgstr "Filtrar facilmente uma ou mais propriedades"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Skip the first 5 Persons"
msgstr "Saltar as primeiras 5 pessoas"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Return at most 10 Persons"
msgstr "Devolver no máximo 10 pessoas"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "In the context of queries, the Stream operators filter, sort, limit, and skip all have a natural mapping that makes the resulting query expressive and intuitive to read while remaining compact."
msgstr "No contexto das consultas, os operadores de fluxo filtram, ordenam, limitam e saltam, todos têm um mapeamento natural que torna a consulta resultante expressiva e de leitura intuitiva, mantendo-se compacta."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "The Stream above is translated by JPAStreamer to the following HQL statement:"
msgstr "O Stream acima é traduzido pelo JPAStreamer para a seguinte instrução HQL:"

#. type: Title ==
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy, no-wrap
msgid "How JPAStreamer works"
msgstr "Como funciona o JPAStreamer"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Okay, it looks simple. But how does it work? JPAstreamer uses an annotation processor to form a meta-model at compile time. It inspects any classes marked with the standard JPA annotation `@Entity`, and for every entity `Foo.class`, a corresponding `Foo$.class` is created. The generated classes represent entity attributes as Fields used to form predicates on the form `User$.firstName.startsWith(\"A\")` that can be interpreted by JPAStreamer's query optimizer."
msgstr "Ok, parece simples. Mas como é que funciona? O JPAstreamer utiliza um processador de anotações para formar um meta-modelo em tempo de compilação. Inspecciona todas as classes marcadas com a anotação JPA padrão `@Entity` e, para cada entidade `Foo.class`, é criada uma `Foo$.class` correspondente. As classes geradas representam atributos de entidades como campos utilizados para formar predicados no formulário `User$.firstName.startsWith(\"A\")` que podem ser interpretados pelo optimizador de consultas do JPAStreamer."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "It is worth repeating that JPAStreamer does not alter or disturb the existing codebase but merely extends the API to handle Java Stream queries."
msgstr "Vale a pena repetir que o JPAStreamer não altera ou perturba a base de código existente, mas apenas estende a API para lidar com consultas Java Stream."

#. type: Title ==
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy, no-wrap
msgid "Installing the JPAstreamer Extension"
msgstr "Instalar a extensão JPAstreamer"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "JPAStreamer is installed as any other Quarkus extension, using a Maven dependency:"
msgstr "O JPAStreamer é instalado como qualquer outra extensão Quarkus, usando uma dependência Maven:"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "After the dependency is added, rebuild your Quarkus application to trigger JPAStreamer’s annotation processor. The installation is complete once the generated fields reside in `/target/generated-sources`; you’ll recognise them by the trailing $ in the classnames, e.g. `Person$.class`."
msgstr "Após a adição da dependência, reconstrua a sua aplicação Quarkus para acionar o processador de anotações do JPAStreamer. A instalação está concluída quando os campos gerados residirem em `/target/generated-sources`; reconhecê-los-á pelo $ final nos nomes das classes, por exemplo, `Person$.class`."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "JPAStreamer requires an underlying JPA provider, such as Hibernate ORM. For this reason, JPAStreamer needs no additional configuration as the database integration is taken care of by the JPA provider."
msgstr "O JPAStreamer requer um fornecedor JPA subjacente, como o Hibernate ORM. Por este motivo, o JPAStreamer não necessita de qualquer configuração adicional, uma vez que a integração da base de dados é efectuada pelo fornecedor JPA."

#. type: Title ==
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy, no-wrap
msgid "JPAStreamer and Panache"
msgstr "JPAStreamer e Panache"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Any Panache fan will note that JPAStreamer shares some of its objectives with Panache, in simplifying many common queries. Still, JPAStreamer distinguishes itself by instilling more confidence in the queries with its type-safe Stream interface. Luckily however, no one if forced to take a pick as Panache and JPAStreamer work seamlessly alongside each other."
msgstr "Qualquer fã do Panache notará que o JPAStreamer partilha alguns dos seus objectivos com o Panache, ao simplificar muitas consultas comuns. Ainda assim, o JPAStreamer distingue-se por incutir mais confiança nas consultas com a sua interface Stream type-safe. Felizmente, no entanto, ninguém é forçado a escolher, pois o Panache e o JPAStreamer funcionam perfeitamente um ao lado do outro."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "link:https://github.com/speedment/jpa-streamer-demo/tree/master/quarkus-hibernate-panache[Here] is an example Quarkus application that uses both JPAStreamer and Panache."
msgstr "link:https://github.com/speedment/jpa-streamer-demo/tree/master/quarkus-hibernate-panache[Aqui] está um exemplo de aplicação Quarkus que utiliza tanto o JPAStreamer como o Panache."

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "At the time of writing, JPAStreamer does not have support for Panache’s Active Record Pattern, as it relies on standard JPA Entities to generate its meta model. This will likely change in the near future."
msgstr "No momento em que escrevo, o JPAStreamer não tem suporte para o Active Record Pattern do Panache, uma vez que se baseia em entidades JPA padrão para gerar o seu meta-modelo. Isto provavelmente mudará num futuro próximo."

#. type: Title ==
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumo"

#. type: Plain text
#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "JPA in general, and Hibernate ORM in particular, has greatly simplified application database access, but its API sometimes forces unnecessary complexity. With JPAstreamer, you can utilize JPA while keeping your codebase clean and maintainable."
msgstr "A JPA em geral, e o Hibernate ORM em particular, simplificou bastante o acesso à base de dados das aplicações, mas a sua API força por vezes uma complexidade desnecessária. Com o JPAstreamer, pode utilizar a JPA mantendo a sua base de código limpa e de fácil manutenção."

#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "Resources"
msgstr "Recursos"

#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "**GitHub:** link:https://github.com/quarkiverse/quarkus-jpastreamer[github.com/quarkiverse/quarkus-jpastreamer]"
msgstr "*GitHub:* link:https://github.com/quarkiverse/quarkus-jpastreamer[github.com/quarkiverse/quarkus-jpastreamer]"

#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "**Homepage:** link:https://jpastreamer.org[jpastreamer.org]"
msgstr "Página *inicial:* link:https://jpastreamer.org[jpastreamer.org]"

#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "**JPAStreamer Quarkus Demo:** link:https//github.com/speedment/jpa-streamer-demo/tree/master/quarkus-hibernate-panache[github.com/speedment/jpa-streamer-demo/tree/master/quarkus-hibernate-panache]"
msgstr "*Demonstração do JPAStreamer Quarkus:* link:https//github.com/speedment/jpa-streamer-demo/tree/master/quarkus-hibernate-panache[github.com/speedment/jpa-streamer-demo/tree/master/quarkus-hibernate-panache]"

#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "**Documentation:** link:https://speedment.github.io/jpa-streamer[speedment.github.io/jpa-streamer]"
msgstr "*Documentação:* link:https://speedment.github.io/jpa-streamer[speedment.github.io/jpa-streamer]"

#: _posts/2023-02-10-jpastreamer-extension.adoc
#, fuzzy
msgid "**Gitter Support Chat:** link:https://gitter.im/jpa-streamer[gitter.im/jpa-streamer]"
msgstr "*Bate-papo de suporte do Gitter:* link:https://gitter.im/jpa-streamer[gitter.im/jpa-streamer]"
