# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-22 08:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:1
#, no-wrap
msgid "cescoffier"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:1
#, no-wrap
msgid "2023-10-20"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:1
#, no-wrap
msgid "Learn about the  CVE-2023-44487, a security vulnerability affecting HTTP/2 servers, and the solution implemented in Quarkus"
msgstr ""

#. type: YAML Front Matter: tags
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:1
#, no-wrap
msgid "security http"
msgstr ""

#. type: YAML Front Matter: title
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:1
#, no-wrap
msgid "Addressing CVE-2023-44487: An Overview and Quarkus Solution"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:10
msgid "You may have encountered the infamous https://nvd.nist.gov/vuln/detail/CVE-2023-44487[CVE-2023-44487], a security vulnerability directly affecting HTTP/2 servers. This CVE exploits a specific weakness within the HTTP/2 protocol, causing a ripple effect across all HTTP/2 servers."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:12
msgid "However, the impact of this CVE is not uniform across all servers; it varies depending on the server's underlying technology and execution model."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:14
msgid "The consequences can range from severe, such as potential Distributed Denial of Service (DDoS) attacks or even server crashes, to relatively minor, manifesting as only a slight increase in CPU usage. This variance in impact is the reason behind the differing CVE scores, ranging from _7.3_ for the former scenario to https://github.com/netty/netty/security/advisories/GHSA-xpw8-rcwv-8f8p[_5.3_] for the latter."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:16
msgid "Quarkus falls into the _5.3_ category, where the impact is less pronounced in practice."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:18
msgid "Nevertheless, we take all security-related issues seriously and, following our https://quarkus.io/security/#supported-versions[security policy], we have released the following version updates for Quarkus platform:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:20
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:62
msgid "Latest 3.x: https://quarkus.io/blog/quarkus-3-4-3-released/[Quarkus 3.4.3] (latest 3.x)"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:21
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:63
msgid "3.2 LTS: https://quarkus.io/blog/quarkus-3-4-3-released/[Quarkus 3.2.7] (3.2 LTS)"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:22
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:64
msgid "Latest 2.x: https://quarkus.io/blog/quarkus-2-16-12-final-released/[Quarkus 2.16.12.Final]"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:24
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:66
msgid "Similarly, Red Hat Build of Quarkus includes the CVE fixes in its current release cycle:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:26
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:68
msgid "https://access.redhat.com/documentation/en-us/red_hat_build_of_quarkus/quarkus-3.2/guide/4ea39096-72be-4ccf-a22e-7e42063d29ec#_163a1086-6b80-4441-81b4-cc358d2efaaa[Red Hat Build of Quarkus 3.2.6]"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:27
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:69
msgid "https://access.redhat.com/documentation/en-us/red_hat_build_of_quarkus/rhbq-documentation-2-13/guide/0f24d6b4-7032-4601-99cb-fbdefec89f6d#_192608e2-e41d-43bd-908d-c2e5e23c642c[Red Hat Build of Quarkus 2.13.8]"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:29
msgid "Let's delve deeper into the problem to understand better the distinctions and our approach to resolving it."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:30
#, no-wrap
msgid "Understanding the HTTP/2 CVE"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:33
msgid "When you browse a website that supports HTTP/2, such as https://quarkus.io, it enables the use of a single connection to fetch numerous resources, including the index page, images, JavaScript scripts, fonts, CSS files, and more. This eliminates the need for the browser to repeatedly establish new connections for each resource, resulting in a more efficient and faster browsing experience. Furthermore, HTTP/2 doesn't require the browser to wait for a response before sending another request."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:35
msgid "This streaming capability of HTTP/2 enhances application concurrency and minimizes network costs, as it reduces the need for numerous connections. Nevertheless, this feature can pose challenges, as a single connection can generate a multitude of requests. To address this, HTTP/2 offers a means of restraining the number of active concurrent streams to prevent clients from overburdening the server. This control is a server-side setting. When a client connects, the server communicates its maximum allowable concurrency. In Quarkus, the ceiling for concurrent streams is set at 100 by default. This limit can be customized using the `quarkus.http.limits.max-concurrent-streams` property."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:37
msgid "When a client exceeds the permitted stream limit, the server responds with an `RST_STREAM` frame, closing the specific stream without severing the connection, safeguarding against stream flooding."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:39
msgid "But there's more to the story. In HTTP/2, both the client and server maintain stream status, eventually syncing. Unlike HTTP 1.1, HTTP/2 permits clients to gracefully cancel in-flight requests using the `RST_STREAM` frame. On the client side, the stream closes upon frame transmission, while the server-side closure happens upon processing. This cancellation doesn't impact other streams in the same connection."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:41
msgid "The CVE-2023-44487 attack capitalizes on rapid stream cancellations. While the client closes streams, the server-side closure lags, effectively bypassing the client's stream limit. This allows the client to open an excessive number of streams, up to 1,073,741,824. During the attack, the client initiates a request via a `HEADERS` frame in a new stream and immediately dispatches the `RST_STREAM` frame. From the client's viewpoint, the stream closes. However, the server must allocate resources to process the `RST_STREAM` frame, ultimately closing the associated stream."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:42
#, no-wrap
msgid "Threads vs event-loops"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:45
msgid "As the client repeatedly opens and cancels streams in quick succession, the server grapples with handling `RST_STREAM` frames and associated bookkeeping. The severity of the attack differs between server technologies. In a one-thread-per-request model, it can be catastrophic, as it consumes all available worker threads, leading to queued `HEADERS` and `RST_STREAM` frames and negatively impacting concurrent legitimate requests, thus significantly affecting service availability (CVE score: 7.3/10)."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:47
msgid "In the case of Netty-based servers (like Quarkus) and other event loop-based servers, the issue is less severe. The incoming frames are placed in the event loop queue, causing higher CPU usage but no thread starvation. Also, Netty handles `RST_STREAM` frames very efficiently. This may result in higher response times, with the server appearing busy but still managing concurrent legitimate requests. While a problem, its impact on availability is relatively lower (CVE score: 5.3/10)."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:48
#, no-wrap
msgid "The Quarkus solution"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:51
msgid "Due to the high-profile nature of the CVE, Quarkus has taken measures to address this concern. We've implemented a solution based on the Netty fix. The system monitors `RST_STREAM` frames sent per connection, imposing a 200-frame limit within a 30-second window. If the threshold is exceeded, Quarkus takes action by closing the connection and issuing a `GOAWAY` frame. This procedure closes the connection and all currently active streams associated with it."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:53
msgid "While these default settings effectively counter the attack, we understand the need for flexibility. In the upcoming Quarkus 3 release, users will have the option to fine-tune these thresholds, allowing you to customize the configuration to meet your specific requirements, including reducing the maximum number of concurrent streams (already possible today), adjusting the number of `RST_STREAM` frames, and modifying the time window for attack detection."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:54
#, no-wrap
msgid "Summary"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:57
msgid "The HTTP/2 CVE is serious and can be used for Distributed Denial of Service attacks, especially if the implementation is thread based. Quarkus is using Netty which is based on an event loop model and thus Quarkus is not as badly affected."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:59
msgid "We take all security-related issues seriously and following our security policy, we have released the following version updates for Quarkus platform:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:72
msgid "All these versions contain the fix described in this article."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-10-20-cve-2023-44487.adoc:75
msgid "We strongly recommend updating your application to one of these versions."
msgstr ""
