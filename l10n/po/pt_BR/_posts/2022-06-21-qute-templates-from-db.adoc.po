# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:1
#, fuzzy, no-wrap
msgid "gwenneg"
msgstr "gwenneg"

#. type: YAML Front Matter: date
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:1
#, fuzzy, no-wrap
msgid "2022-06-21"
msgstr "2022-06-21"

#. type: YAML Front Matter: layout
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "posto"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:1
#, fuzzy, no-wrap
msgid "We moved our Qute templates from the file storage to a database to improve the tenants experience in a multitenant Quarkus app."
msgstr "Transferimos os nossos modelos Qute do armazenamento de ficheiros para uma base de dados para melhorar a experiência dos inquilinos numa aplicação Quarkus multitenant."

#. type: YAML Front Matter: tags
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:1
#, fuzzy, no-wrap
msgid "qute development-tips"
msgstr "dicas de desenvolvimento de qute"

#. type: YAML Front Matter: title
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:1
#, fuzzy, no-wrap
msgid "Using Qute with templates from a database"
msgstr "Utilizar o Qute com modelos de uma base de dados"

#. type: Title ==
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:11
#, fuzzy, no-wrap
msgid "Introduction"
msgstr "Introdução"

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:16
#, fuzzy
msgid "I'm part of a Red Hat team that created a multitenant notifications service which sends the notifications from many https://console.redhat.com[Red Hat Hybrid Cloud Console] apps (the tenants).  Our service can be used to send several kinds of notifications, including emails.  Each tenant can create as many email templates as they need and link them with the events that will trigger the notifications."
msgstr "Faço parte de uma equipa da Red Hat que criou um serviço de notificações multilocatário que envia as notificações de muitas aplicações  link:https://console.redhat.com[da Consola do Red Hat Hybrid Cloud] (os locatários). O nosso serviço pode ser utilizado para enviar vários tipos de notificações, incluindo mensagens de correio eletrónico. Cada inquilino pode criar tantos modelos de correio eletrónico quantos forem necessários e associá-los aos eventos que irão desencadear as notificações."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:22
#, fuzzy
msgid "We implemented that with the amazing https://quarkus.io/guides/qute-reference[Qute templating engine] and templates stored as files in the `src/main/resources/templates` folder.  It allowed our tenants to design templates tailored to fit their needs with minimal knowledge of Qute.  However, we quickly realized that editing the templates was a slow and heavy process for the tenants.  Indeed, they had to create a GitHub pull request in our repository, wait for a review and then wait again for a deployment before the templates could be tested.  We needed to make that process easier for the tenants, ideally even self-serviced."
msgstr "Implementámos isso com o fantástico  link:https://quarkus.io/guides/qute-reference[motor de criação de modelos Qute] e modelos armazenados como ficheiros na pasta `src/main/resources/templates`. Permitiu aos nossos inquilinos conceber modelos adaptados às suas necessidades com um conhecimento mínimo do Qute. No entanto, rapidamente percebemos que a edição dos modelos era um processo lento e pesado para os inquilinos. De facto, tinham de criar um pedido pull no GitHub no nosso repositório, esperar por uma revisão e depois esperar novamente por uma implementação antes de os modelos poderem ser testados. Precisávamos de tornar esse processo mais fácil para os inquilinos e, idealmente, até mesmo autónomo."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:25
#, fuzzy
msgid "Then we decided to move the templates from the file storage to a database using Qute's `TemplateLocator`.  It helped us offer the tenants an easier, frictionless and self-serviced way of editing the templates."
msgstr "Decidimos então transferir os modelos do armazenamento de ficheiros para uma base de dados, utilizando o site `TemplateLocator` da Qute, o que nos ajudou a oferecer aos inquilinos uma forma mais fácil, sem atritos e com serviço próprio de editar os modelos."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:27
#, fuzzy
msgid "image:/assets/images/posts/qute-templates-from-db/before-after.png[]"
msgstr "image:/assets/images/posts/qute-templates-from-db/before-after.png[alt=before after]"

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:29
#, fuzzy
msgid "Here's how we did it."
msgstr "Eis como o fizemos."

#. type: Title ==
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:30
#, fuzzy, no-wrap
msgid "The obvious part: persisting the templates into the database"
msgstr "A parte óbvia: persistir os modelos na base de dados"

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:36
#, fuzzy
msgid "Before using templates from the DB with Qute, the templates obviously need to be persisted.  It doesn't matter how this is performed.  Any flavor of Hibernate (reactive or not, with Panache or not) will work.  This post will show examples based on https://quarkus.io/guides/hibernate-orm-panache[Hibernate with Panache]."
msgstr "Antes de utilizar os modelos da base de dados com o Qute, é óbvio que os modelos têm de ser persistidos. Não importa como isso é feito. Qualquer tipo de Hibernate (reativo ou não, com Panache ou não) funcionará. Este post mostrará exemplos baseados no  link:https://quarkus.io/guides/hibernate-orm-panache[Hibernate com Panache]."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:38
#, fuzzy
msgid "The next sections will make use of this JPA entity:"
msgstr "As secções seguintes utilizarão esta entidade JPA:"

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:42
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:69
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:135
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:168
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:199
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:230
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:44
#, no-wrap
msgid "import io.quarkus.hibernate.orm.panache.PanacheEntityBase;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:47
#, no-wrap
msgid ""
"import javax.persistence.Entity;\n"
"import javax.persistence.Id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:50
#, no-wrap
msgid ""
"@Entity\n"
"public class DbTemplate extends PanacheEntityBase {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:53
#, no-wrap
msgid ""
"    @Id\n"
"    public String name; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:56
#, no-wrap
msgid ""
"    public String content;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:58
#, fuzzy
msgid "The template name will be the DB primary key."
msgstr "O nome do modelo será a chave primária da BD."

#. type: Title ==
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:59
#, fuzzy, no-wrap
msgid "The interesting part: connecting Qute to the database"
msgstr "A parte interessante: ligar o Qute à base de dados"

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:63
#, fuzzy
msgid "Now that templates can be persisted, we need a way to use them from Qute.  Fortunately, Qute comes with a very interesting interface called `TemplateLocator` that can be used to load templates from any location, including from a DB."
msgstr "Agora que os modelos podem ser persistidos, precisamos de uma maneira de usá-los no Qute. Felizmente, o Qute vem com uma interface muito interessante chamada `TemplateLocator` que pode ser usada para carregar modelos de qualquer local, inclusive de um banco de dados."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:65
#, fuzzy
msgid "Here's how it can be used with the `DbTemplate` entity we defined earlier:"
msgstr "Eis como pode ser utilizada com a entidade `DbTemplate` que definimos anteriormente:"

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:74
#, no-wrap
msgid ""
"import io.quarkus.logging.Log;\n"
"import io.quarkus.qute.EngineBuilder;\n"
"import io.quarkus.qute.TemplateLocator;\n"
"import io.quarkus.qute.Variant;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:80
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.enterprise.event.Observes;\n"
"import java.io.Reader;\n"
"import java.io.StringReader;\n"
"import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:83
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class DbTemplateLocator implements TemplateLocator {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:95
#, no-wrap
msgid ""
"    @Override\n"
"    public Optional<TemplateLocation> locate(String name) {\n"
"        DbTemplate template = DbTemplate.findById(name);\n"
"        if (template == null) {\n"
"            Log.tracef(\"Template with [name=%s] not found in the database\", name);\n"
"            return Optional.empty();\n"
"        } else {\n"
"            Log.tracef(\"Template with [name=%s] found in the database\", name);\n"
"            return Optional.of(buildTemplateLocation(template.getContent()));\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:100
#, no-wrap
msgid ""
"    @Override\n"
"    public int getPriority() { <1>\n"
"        return DEFAULT_PRIORITY - 1;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:104
#, no-wrap
msgid ""
"    void configureEngine(@Observes EngineBuilder builder) { <2>\n"
"        builder.addLocator(this);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:107
#, no-wrap
msgid ""
"    private TemplateLocation buildTemplateLocation(String templateContent) {\n"
"        return new TemplateLocation() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:112
#, no-wrap
msgid ""
"            @Override\n"
"            public Reader read() {\n"
"                return new StringReader(templateContent);\n"
"            }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:120
#, no-wrap
msgid ""
"            @Override\n"
"            public Optional<Variant> getVariant() {\n"
"                return Optional.empty();\n"
"            }\n"
"        };\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:122
#, fuzzy
msgid "If your Quarkus app contains templates loaded from both the file system and a database, you will need to override the template locator default priority. Otherwise, Quarkus will try to load templates from the file system using `DbTemplateLocator` which could lead to exceptions or unpredictable behaviors."
msgstr "Se a sua aplicação Quarkus contiver modelos carregados a partir do sistema de ficheiros e de uma base de dados, terá de substituir a prioridade predefinida do localizador de modelos. Caso contrário, o Quarkus tentará carregar modelos a partir do sistema de ficheiros utilizando `DbTemplateLocator`, o que pode levar a excepções ou comportamentos imprevisíveis."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:123
#, fuzzy
msgid "Before Quarkus 2.10, integrating `DbTemplateLocator` with the Qute engine instance provided by Quarkus could only be done with a CDI observer like this."
msgstr "Antes do Quarkus 2.10, a integração do `DbTemplateLocator` com a instância do motor Qute fornecida pelo Quarkus só podia ser efectuada com um observador CDI como este."

#. type: delimited block =
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:127
#, fuzzy
msgid "Quarkus 2.10 recently introduced a new `@Locate` annotation that makes the https://quarkus.io/version/main/guides/qute-reference#template-locator-registration[Template Locator Registration] even simpler."
msgstr "O Quarkus 2.10 introduziu recentemente uma nova anotação `@Locate` que torna o  link:https://quarkus.io/version/main/guides/qute-reference#template-locator-registration[registo do Localizador de Modelos] ainda mais simples."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:131
#, fuzzy
msgid "Now that the template locator is registered, we're ready to compile and render templates from the database with Qute.  As you can see in the following example, DB templates are used exactly like file templates:"
msgstr "Agora que o localizador de modelos está registado, estamos prontos para compilar e renderizar modelos da base de dados com o Qute. Como pode ver no exemplo seguinte, os modelos da base de dados são utilizados exatamente como os modelos de ficheiros:"

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:138
#, no-wrap
msgid ""
"import io.quarkus.qute.Engine;\n"
"import io.quarkus.qute.Template;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:141
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:173
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:205
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:144
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class EmailSender {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:147
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:179
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:211
#, no-wrap
msgid ""
"    @Inject\n"
"    Engine engine;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:156
#, no-wrap
msgid ""
"    public void sendEmail(String templateName) {\n"
"        Template template = engine.getTemplate(templateName);\n"
"        if (template != null) {\n"
"            String rendered = template.render();\n"
"            // Send an email using the template.\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:158
#, fuzzy, no-wrap
msgid "Beware of Qute's internal cache"
msgstr "Cuidado com a cache interna do Qute"

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:162
#, fuzzy
msgid "Whenever Qute loads a template, it is stored into an internal `ConcurrentHashMap` and stays in memory forever, unless Qute is instructed otherwise.  This means that you will need to remove a DB template from the Qute internal cache after it's been updated or deleted in the database."
msgstr "Sempre que o Qute carrega um modelo, ele é armazenado em um `ConcurrentHashMap` interno e permanece na memória para sempre, a menos que o Qute receba instruções em contrário. Isso significa que será necessário remover um modelo de BD do cache interno do Qute depois que ele for atualizado ou excluído no banco de dados."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:164
#, fuzzy
msgid "There are several ways of achieving that:"
msgstr "Há várias formas de o conseguir:"

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:170
#, no-wrap
msgid "import io.quarkus.qute.Engine;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:176
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class DbEngineCacheManager {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:183
#, no-wrap
msgid ""
"    public void removeTemplates(String name) {\n"
"        engine.removeTemplates(templateName -> templateName.equals(name)); <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:188
#, no-wrap
msgid ""
"    public void clearAll() {\n"
"        engine.clearTemplates(); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:190
#, fuzzy
msgid "This removes the templates for which the mapping id matches the given predicate."
msgstr "Isto remove os modelos para os quais o id do mapeamento corresponde ao predicado dado."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:191
#, fuzzy
msgid "This removes all templates from the cache."
msgstr "Isto remove todos os modelos da cache."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:195
#, fuzzy
msgid "Clearing that internal cache can become tricky if your app is running on a Kubernetes cluster with several replicas.  You will indeed need a way to broadcast to all pods (possibly using a Kafka topic or a DB table) an instruction to remove from the cache the templates that have been updated or deleted.  There is a cheaper (yet very imperfect) way of keeping all pods caches synced though, using a scheduled job:"
msgstr "Limpar esse cache interno pode se tornar complicado se seu aplicativo estiver sendo executado em um cluster Kubernetes com várias réplicas. Você realmente precisará de uma maneira de transmitir para todos os pods (possivelmente usando um tópico Kafka ou uma tabela DB) uma instrução para remover do cache os modelos que foram atualizados ou excluídos. No entanto, há uma maneira mais barata (mas muito imperfeita) de manter todos os caches de pods sincronizados, usando um trabalho agendado:"

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:202
#, no-wrap
msgid ""
"import io.quarkus.qute.Engine;\n"
"import io.quarkus.scheduler.Scheduled;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:208
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class DbEngineCacheScheduledCleaner {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:217
#, no-wrap
msgid ""
"    @Scheduled(every = \"5m\", delayed = \"5m\") <1>\n"
"    public void clearTemplates() {\n"
"        engine.clearTemplates();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:219
#, fuzzy
msgid "All templates will be cleared from the internal cache every 5 minutes."
msgstr "Todos os modelos serão limpos da cache interna a cada 5 minutos."

#. type: Title ==
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:220
#, fuzzy, no-wrap
msgid "Preventing the deletion of an included template"
msgstr "Impedir a eliminação de um modelo incluído"

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:224
#, fuzzy
msgid "A Qute template can be included into another template.  If the inner template is deleted, then the outer template compilation will fail, which is obviously something that needs to be prevented while loading the templates from the DB."
msgstr "Um modelo Qute pode ser incluído noutro modelo. Se o modelo interno for eliminado, a compilação do modelo externo falhará, o que é obviamente algo que precisa de ser evitado durante o carregamento dos modelos a partir da BD."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:226
#, fuzzy
msgid "Here's a way to look for the inclusion of a template into another one before deleting it:"
msgstr "Eis uma forma de procurar a inclusão de um modelo noutro modelo antes de o eliminar:"

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:235
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
"import javax.persistence.EntityManager;\n"
"import javax.transaction.Transactional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:238
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class TemplateRepository {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:241
#, no-wrap
msgid ""
"    @Inject\n"
"    EntityManager entityManager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:257
#, no-wrap
msgid ""
"    @Transactional\n"
"    public void deleteTemplate(String name) {\n"
"        long count = entityManager.createQuery(\"SELECT COUNT(*) FROM DbTemplate WHERE name != :name AND content LIKE :include\", Long.class)\n"
"                .setParameter(\"name\", name)\n"
"                .setParameter(\"include\", \"%{#include \" + name + \"%\")\n"
"                .getSingleResult();\n"
"        if (count > 0) {\n"
"            throw new IllegalStateException(\"Included templates can't be deleted, remove the inclusion or delete the outer template first\");\n"
"        } else {\n"
"            entityManager.createQuery(\"DELETE FROM DbTemplate WHERE name = :name\")\n"
"                    .setParameter(\"name\", name)\n"
"                    .executeUpdate();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:259
#, fuzzy, no-wrap
msgid "Database templates validation"
msgstr "Validação de modelos de bases de dados"

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:262
#, fuzzy
msgid "Database templates come with a significant drawback: Quarkus is no longer able to perform https://quarkus.io/guides/qute-reference#typesafe_templates[type-safe] validation."
msgstr "Os modelos de base de dados têm uma desvantagem significativa: O Quarkus já não é capaz de efetuar uma validação  link:https://quarkus.io/guides/qute-reference#typesafe_templates[segura do tipo]."

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:264
#, fuzzy
msgid "The syntax validation is also delayed from build time to runtime but this is expected as templates can be created or edited at runtime."
msgstr "A validação da sintaxe também é atrasada do tempo de construção para o tempo de execução, mas isso é esperado, uma vez que os modelos podem ser criados ou editados em tempo de execução."

#. type: Title ==
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:265
#, fuzzy, no-wrap
msgid "Special thanks"
msgstr "Agradecimentos especiais"

#. type: Plain text
#: upstream/_posts/2022-06-21-qute-templates-from-db.adoc:267
#, fuzzy
msgid "Thanks to Josejulio Martinez Magana and Martin Kouba for helping me during the implementation of the DB templates in our notifications service!"
msgstr "Obrigado ao Josejulio Martinez Magana e ao Martin Kouba por me terem ajudado durante a implementação dos modelos de BD no nosso serviço de notificações!"
