# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:1
#, no-wrap
msgid "edeandrea"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:1
#, no-wrap
msgid "2023-02-23"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:1
#, no-wrap
msgid "What is Eclipse JKube Remote Development and how can it help developers build Kubernetes-native applications with Quarkus."
msgstr ""

#. type: YAML Front Matter: tags
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:1
#, no-wrap
msgid "cloud containers kubernetes openshift"
msgstr ""

#. type: Title =
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:1
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:12
#, no-wrap
msgid "Kubernetes-Native Development with Quarkus and Eclipse JKube"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:15
msgid "This article explains what Eclipse JKube Remote Development is and how can it help developers build Kubernetes-native applications with Quarkus."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:16
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:19
msgid "As mentioned in my previous article, https://developers.redhat.com/articles/2022/12/12/kubernetes-native-inner-loop-development-quarkus[_Kubernetes-native inner loop development with Quarkus_^], microservices don’t exist in a vacuum. They typically communicate with other services, such as databases, message brokers, or other microservices. Because of this distributed nature, developers often struggle to develop (and test!) individual microservices that are part of a larger system."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:21
msgid "The previous article examines some common _inner-loop_ development cycle challenges and shows how Quarkus, combined with other technologies, can help solve some of the challenges. Eclipse JKube Remote Development was not one of the technologies mentioned because it did not exist when the article was written. Now that it does exist, it certainly belongs to be mentioned."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:22
#, no-wrap
msgid "What is Eclipse JKube Remote Development?"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:25
msgid "https://www.eclipse.org/jkube[Eclipse JKube^] provides tools that help bring Java applications to Kubernetes and OpenShift. It is a collection of plugins and libraries for building container images and generating and deploying Kubernetes or OpenShift manifests."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:27
msgid "https://blog.marcnuri.com/eclipse-jkube-1-10#jkube-image-remote-dev[Eclipse JKube Remote Development^] is a preview feature first released as part of Eclipse JKube 1.10. This new feature is centered around Kubernetes, allowing developers the ability to run and debug Java applications from a local machine while connected to a Kubernetes cluster. It is logically similar to placing a local development machine inside a Kubernetes cluster. Requests from the cluster can flow into a local development machine, while outgoing requests can flow back onto the cluster."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:29
msgid "Remember this diagram from the https://developers.redhat.com/articles/2022/12/12/kubernetes-native-inner-loop-development-quarkus[first article^] using the https://github.com/quarkusio/quarkus-super-heroes[Quarkus Superheroes^]?"
msgstr ""

#. type: Block title
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:30
#, no-wrap
msgid "Local development environment logically inserted into a Kubernetes cluster"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:31
#, no-wrap
msgid "Logical"
msgstr ""

#. type: Target for macro image
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:31
#, no-wrap
msgid "figure_1_logical_superheroes_with_jkube.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:34
msgid "We previously used https://skupper.io[Skupper^] as a proxy to connect a Kubernetes cluster to a local machine. As of the 1.10 release, Eclipse JKube removes the need to use Skupper or install any of its components on the Kubernetes cluster or your local machine. Eclipse JKube handles all the underlying communication to and from the Kubernetes cluster by mapping Kubernetes `Service` ports to and from the local machine."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:35
#, no-wrap
msgid "Eclipse JKube Remote Development and Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:38
msgid "The new Eclipse JKube Remote Development feature can make the Quarkus Superheroes example very interesting. If we wanted to reproduce the scenario shown in *Figure 1*, all we’d have to do is re-configure the `rest-fights` application locally a little bit and then run it in https://quarkus.io/guides/maven-tooling#dev-mode[Quarkus dev mode^]."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:40
msgid "First, https://github.com/quarkusio/quarkus-super-heroes#deploying-to-kubernetes[deploy the Quarkus Superheroes to Kubernetes^]. Then, add the Eclipse JKube configuration into the `<plugins>` section in the `rest-fights/pom.xml` file:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:83
#, no-wrap
msgid ""
"<plugin>\n"
"  <groupId>org.eclipse.jkube</groupId>\n"
"  <artifactId>openshift-maven-plugin</artifactId>\n"
"  <version>1.11.0</version>\n"
"  <configuration>\n"
"    <remoteDevelopment>\n"
"      <localServices>\n"
"        <localService>\n"
"          <serviceName>rest-fights</serviceName>\n"
"          <port>8082</port>\n"
"        </localService>\n"
"      </localServices>\n"
"      <remoteServices>\n"
"        <remoteService>\n"
"          <hostname>rest-heroes</hostname>\n"
"          <port>80</port>\n"
"          <localPort>8083</localPort>\n"
"        </remoteService>\n"
"        <remoteService>\n"
"          <hostname>rest-villains</hostname>\n"
"          <port>80</port>\n"
"          <localPort>8084</localPort>\n"
"        </remoteService>\n"
"        <remoteService>\n"
"          <hostname>apicurio</hostname>\n"
"          <port>8080</port>\n"
"          <localPort>8086</localPort>\n"
"        </remoteService>\n"
"        <remoteService>\n"
"          <hostname>fights-kafka</hostname>\n"
"          <port>9092</port>\n"
"        </remoteService>\n"
"        <remoteService>\n"
"          <hostname>otel-collector</hostname>\n"
"          <port>4317</port>\n"
"        </remoteService>\n"
"      </remoteServices>\n"
"    </remoteDevelopment>\n"
"  </configuration>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:86
msgid "Version 1.11.0 of the `openshift-maven-plugin` was the latest version as of the writing of this article. You may want to check if there is a newer version available."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:88
msgid "This configuration tells OpenShift to proxy requests going to the OpenShift `Service` named `rest-fights` on port `8082` to the local machine on the same port. Additionally, it forwards the local machine ports `8083`, `8084`, `8086`, `9092`, and `4317` back to the OpenShift cluster and binds them to various OpenShift Services."
msgstr ""

#. type: delimited block =
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:92
msgid "The code listing above uses the https://www.eclipse.org/jkube/docs/openshift-maven-plugin[JKube OpenShift Maven Plugin^]. If you are using other Kubernetes variants, you could use the https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin[JKube Kubernetes Maven Plugin^] with the same configuration."
msgstr ""

#. type: delimited block =
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:94
msgid "If you are using https://gradle.org[Gradle^], there is also a https://www.eclipse.org/jkube/docs/openshift-gradle-plugin[JKube OpenShift Gradle Plugin^] and https://www.eclipse.org/jkube/docs/kubernetes-gradle-plugin[JKube Kubernetes Gradle Plugin^] available."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:97
msgid "Now that the configuration is in place you need to open two terminals in the `rest-fights` directory. In the first terminal, run `./mvnw oc:remote-dev` to start the remote dev proxy service. Once that starts, move to the second terminal and run"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:103
#, no-wrap
msgid ""
"./mvnw quarkus:dev \\\n"
"  -Dkafka.bootstrap.servers=PLAINTEXT://localhost:9092 \\\n"
"  -Dmp.messaging.connector.smallrye-kafka.apicurio.registry.url=http://localhost:8086\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:106
msgid "This command starts up a local instance of the `rest-fights` application in Quarkus dev mode. Requests from the cluster will come into your local machine. The local application will connect to other services back on the cluster, such as the `rest-villains` and `rest-heroes` applications, the https://kafka.apache.org[Kafka^] broker, the https://www.apicur.io/registry[Apicurio Registry^] instance, and the https://opentelemetry.io/docs/collector[OpenTelemetry collector^]. With this configuration, https://quarkus.io/guides/dev-services[Quarkus Dev Services^] will spin up a local MongoDB instance for the locally-running application, illustrating how you could combine local services with other services available on the remote cluster."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:108
msgid "You can live code changes to the local application while requests flow through the Kubernetes cluster, down to your local machine, and then back to the cluster! You could even enable https://quarkus.io/guides/continuous-testing[continuous testing^] while you make local changes to ensure your changes do not break anything."
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:110
msgid "The main difference between Quarkus Remote Development and Eclipse JKube Remote Development is that, with Quarkus Remote Development, the application is running in the remote Kubernetes cluster. Local changes are synchronized between the local machine and the remote environment. With JKube Remote Development, the application runs on the local machine, and traffic flows from the cluster, into the local machine, and back out to the cluster."
msgstr ""

#. type: Title ==
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:111
#, no-wrap
msgid "Wrap-Up"
msgstr ""

#. type: Plain text
#: upstream/_posts/2023-02-23-kubernetes-native-development-with-quarkus-and-eclipse-jkube.adoc:113
msgid "As you can see, Eclipse JKube Remote Development compliments the https://quarkus.io/developer-joy[Quarkus Developer Joy^] story quite well. It allows you to easily combine the power of Quarkus with Kubernetes to help create a better developer experience, whether local, distributed, or somewhere in between."
msgstr ""
