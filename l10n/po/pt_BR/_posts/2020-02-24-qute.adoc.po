# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-02-24-qute.adoc:1
#, fuzzy, no-wrap
msgid "mkouba"
msgstr "mkouba"

#. type: YAML Front Matter: date
#: upstream/_posts/2020-02-24-qute.adoc:1
#, fuzzy, no-wrap
msgid "2020-02-24 00:00 +0100"
msgstr "2020-02-24 00:00 +0100"

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-02-24-qute.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "posto"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2020-02-24-qute.adoc:1
#, fuzzy, no-wrap
msgid "Qute - a templating engine designed specifically to meet the Quarkus needs."
msgstr "Qute - um motor de criação de modelos concebido especificamente para satisfazer as necessidades do Quarkus."

#. type: YAML Front Matter: title
#: upstream/_posts/2020-02-24-qute.adoc:1
#, fuzzy, no-wrap
msgid "Qute - Why (Not Just) Yet Another Templating Engine"
msgstr "Qute - Por que (não apenas) mais um mecanismo de modelagem?"

#. type: delimited block =
#: upstream/_posts/2020-02-24-qute.adoc:12
#, fuzzy
msgid "Qute is an experimental feature."
msgstr "O Qute é uma funcionalidade experimental."

#. type: delimited block =
#: upstream/_posts/2020-02-24-qute.adoc:14
#, fuzzy
msgid "There is no guarantee of stability nor long term presence in the platform until the solution matures."
msgstr "Não há garantia de estabilidade nem de presença a longo prazo na plataforma até que a solução amadureça."

#. type: delimited block =
#: upstream/_posts/2020-02-24-qute.adoc:16
#, fuzzy
msgid "An https://quarkus.io/guides/qute[introduction guide] and a more comprehensive https://quarkus.io/guides/qute-reference[reference guide] are available."
msgstr "Estão disponíveis um  link:https://quarkus.io/guides/qute[guia de introdução] e um  link:https://quarkus.io/guides/qute-reference[guia de referência] mais completo."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:25
#, fuzzy
msgid "Let's start with a very good question: _\"Why yet another templating engine?\"_.  There are plenty of templating libraries in Java.  And Quarkus is known to build on top of \"Best of Breed Libraries and Standards\".  That's true.  On the other hand, the Quarkus community is also a powerful innovation catalyst.  And so we decided to start Qute (QUarkus TEmplates) - a templating engine designed specifically to meet the Quarkus needs.  We believe that we can bring new ideas even to such an explored area as the templating is."
msgstr "Vamos começar com uma pergunta muito boa: _\"Porquê mais um motor de criação de modelos?\"_. Existem muitas bibliotecas de modelos em Java. E o Quarkus é conhecido por construir em cima das \"Melhores Bibliotecas e Padrões\". Isso é verdade. Por outro lado, a comunidade Quarkus é também um poderoso catalisador de inovação. Por isso, decidimos criar o Qute (QUarkus TEmplates) - um motor de criação de modelos concebido especificamente para satisfazer as necessidades do Quarkus. Acreditamos que podemos trazer novas ideias mesmo para uma área tão explorada como a dos modelos."

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:26
#, fuzzy, no-wrap
msgid "Basic Ideas"
msgstr "Ideias básicas"

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:32
#, fuzzy
msgid "Our main goal is to provide an opinionated innovative templating engine.  But we don't want to reinvent the wheel.  Instead, we got inspired by existing technologies.  Just a few examples:"
msgstr "O nosso principal objetivo é fornecer um motor de criação de modelos inovador e com opinião. Mas não queremos reinventar a roda. Em vez disso, inspirámo-nos em tecnologias existentes. Apenas alguns exemplos:"

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:34
#, fuzzy
msgid "The https://quarkus.io/guides/qute-reference#syntax-and-building-blocks[syntax] is mainly inspired by https://handlebarsjs.com/[Handlebars] and https://www.dustjs.com/[Dust.js]."
msgstr "A  link:https://quarkus.io/guides/qute-reference#syntax-and-building-blocks[sintaxe] é inspirada principalmente em  link:https://handlebarsjs.com/[Handlebars] e  link:https://www.dustjs.com/[Dust.js.]"

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:35
#, fuzzy
msgid "The https://quarkus.io/guides/qute-reference#include_helper[template inheritance] is inspired by https://en.wikipedia.org/wiki/Facelets[Facelets] and https://docs.djangoproject.com/en/3.0/ref/templates/language/[Django]."
msgstr "A  link:https://quarkus.io/guides/qute-reference#include_helper[herança de modelos] é inspirada em  link:https://en.wikipedia.org/wiki/Facelets[Facelets] e  link:https://docs.djangoproject.com/en/3.0/ref/templates/language/[Django]."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:36
#, fuzzy
msgid "Qute supports the https://en.wikipedia.org/wiki/Elvis_operator[elvis operator] you might be familiar with from https://groovy-lang.org/[Groovy] and https://kotlinlang.org/[Kotlin]."
msgstr "O Qute suporta o  link:https://en.wikipedia.org/wiki/Elvis_operator[operador elvis] que talvez conheça do  link:https://groovy-lang.org/[Groovy] e do  link:https://kotlinlang.org/[Kotlin]."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:37
#, fuzzy
msgid "https://quarkus.io/guides/qute-reference#template_extension_methods[Extension methods] that can be used to extend the data classes with new functionality are also inspired by modern languages."
msgstr "link:https://quarkus.io/guides/qute-reference#template_extension_methods[Os métodos de extensão] que podem ser utilizados para alargar as classes de dados com novas funcionalidades são também inspirados nas linguagens modernas."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:38
#, fuzzy
msgid "If you come from the world of JSP/JSF/Facelets you'll appreciate that `@Named` CDI beans can be referenced directly in any template through the `inject` namespace, e.g. `{inject:foo.price}`. See https://quarkus.io/guides/qute-reference#injecting-beans-directly-in-templates[Injecting Beans Directly In Templates] for more information."
msgstr "Se vier do mundo do JSP/JSF/Facelets, irá apreciar o facto de os beans do `@Named` CDI poderem ser referenciados diretamente em qualquer modelo através do espaço de nomes `inject`, por exemplo, `{inject:foo.price}`. Consulte  link:https://quarkus.io/guides/qute-reference#injecting-beans-directly-in-templates[Injectando beans diretamente em modelos] para obter mais informações."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:41
#, fuzzy
msgid "But that's not all.  We introduce new features based on Quarkus principles..."
msgstr "Mas isso não é tudo. Introduzimos novas funcionalidades baseadas nos princípios do Quarkus..."

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:42
#, fuzzy, no-wrap
msgid "Asynchronous Data Resolution - On The Way To Reactive"
msgstr "Resolução assíncrona de dados - A caminho da reatividade"

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:47
#, fuzzy
msgid "When we started to design Qute we had one important aspect in mind - the data resolution API should be asynchronous.  This allows for better resource utilization and fits the Quarkus reactive model.  Another consequence of this design decision is that it's possible to leverage non-blocking clients directly from a template, i.e. to asynchronously fetch data from various sources."
msgstr "Quando começámos a desenhar o Qute, tínhamos um aspeto importante em mente - a API de resolução de dados deveria ser assíncrona. Isto permite uma melhor utilização dos recursos e encaixa no modelo reativo da Quarkus. Outra consequência desta decisão de design é que é possível aproveitar clientes não bloqueantes diretamente de um modelo, ou seja, ir buscar dados de várias fontes de forma assíncrona."

#. type: Block title
#: upstream/_posts/2020-02-24-qute.adoc:48
#, fuzzy, no-wrap
msgid "Non-blocking Client Data Fetching Example"
msgstr "Exemplo de obtenção de dados de cliente sem bloqueio"

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:60
#, no-wrap
msgid ""
"{@org.acme.Client client} <1>\n"
"<html>\n"
"<body>\n"
"    <h1>Quarkus Open Pull Requests</h1>\n"
"    {#for pull in client.pullRequests} <2>\n"
"        <p>{pull.title} - {pull.user.login}</p>\n"
"    {/for} \n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:62
#, fuzzy
msgid "Parameter declaration - maps `client` to `org.acme.Client`. See the <<type-safe-templates,next section>> for more information."
msgstr "Declaração de parâmetros - mapeia `client` para `org.acme.Client`. Ver a  link:#type-safe-templates[secção seguinte] para mais informações."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:63
#, fuzzy
msgid "`org.acme.Client#getPullRequests()` is using a non-blocking Vert.x client to fetch the data directly from the GitHub API. Since the data resolution is asynchronous the thread is not blocked and can continue performing some other tasks:"
msgstr "`org.acme.Client#getPullRequests()` está usando um cliente Vert.x sem bloqueio para buscar os dados diretamente da API do GitHub. Como a resolução de dados é assíncrona, o thread não é bloqueado e pode continuar a executar outras tarefas:"

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:79
#, no-wrap
msgid ""
"CompletionStage<JsonArray> getPullRequests() {\n"
"   return webClient\n"
"            .get(80, \"api.github.com\", \"/repos/quarkusio/quarkus/pulls?state=open&per_page=10\")\n"
"            .as(BodyCodec.jsonArray())\n"
"            .send()\n"
"            .thenCompose(r -> {\n"
"               if (r.statusCode() == 200) {\n"
"                  return CompletableFuture.completedFuture(r.body());\n"
"               } else {\n"
"                  // Log errors etc.\n"
"               }\n"
"            });\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:82
#, fuzzy, no-wrap
msgid "Type-safe Templates"
msgstr "Modelos de segurança de tipo"

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:92
#, fuzzy
msgid "Most of the templating engines are not type-safe, ie. do not prevent type errors.  It's quite natural because dynamicity in templates is very often practical.  On the other hand, a user is not protected from tedious errors caused by typos and various refactoring consequences.  Qute templates can be _optionally_ type-safe.  What does it actually mean? A template may contain one or more *parameter declarations*.  A parameter declaration binds a concrete type information to a given identifier in the current context.  And what are the advantages of having a type-safe template?"
msgstr "A maior parte dos motores de modelos não são seguros em termos de tipo, ou seja, não evitam erros de tipo. É bastante natural, porque o dinamismo dos modelos é muitas vezes prático. Por outro lado, o utilizador não está protegido contra erros tediosos causados por erros de digitação e várias consequências de refatoração. Os modelos Qute podem ser _opcionalmente_ seguros quanto ao tipo. O que é que isso significa realmente? Um modelo pode conter uma ou mais *declarações de parâmetros*. Uma declaração de parâmetro vincula uma informação de tipo concreto a um determinado identificador no contexto atual. E quais são as vantagens de ter um modelo type-safe?"

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:94
#, fuzzy
msgid "Quarkus validates _all expressions_ that reference a parameter declaration. If an invalid/incorrect expression is found the build fails."
msgstr "O Quarkus valida _todas as expressões_ que fazem referência a uma declaração de parâmetro. Se for encontrada uma expressão inválida/incorrecta, a construção falha."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:96
#, fuzzy
msgid "In development mode, all files located in the `src/main/resources/templates` directory are watched for changes and modifications are immediately visible. That also implies that your application fails fast whenever a type error occurs."
msgstr "No modo de desenvolvimento, todos os ficheiros localizados no diretório `src/main/resources/templates` são vigiados quanto a alterações e as modificações são imediatamente visíveis. Isto também implica que a sua aplicação falha rapidamente sempre que ocorre um erro de tipo."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:98
#, fuzzy
msgid "A _value resolver_ is generated for all types used in parameter declarations so that it’s possible to access its properties without reflection. This is very useful when targeting GraalVM native images."
msgstr "É gerado um _resolvedor de valores_ para todos os tipos utilizados nas declarações de parâmetros, de modo a que seja possível aceder às suas propriedades sem reflexão. Isso é muito útil quando se tem como alvo imagens nativas do GraalVM."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:99
#, fuzzy
msgid "We have few more ideas in our TODO list, such as performance optimizations for type-safe expressions, etc."
msgstr "Temos mais algumas ideias na nossa lista TODO, tais como optimizações de desempenho para expressões type-safe, etc."

#. type: Block title
#: upstream/_posts/2020-02-24-qute.adoc:100
#, fuzzy, no-wrap
msgid "Type-safe Template Example"
msgstr "Exemplo de modelo de segurança de tipo"

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:118
#, no-wrap
msgid ""
"{@org.acme.Foo foo} <1>\n"
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Qute Hello</title>\n"
"</head>\n"
"<body>\n"
"  <h1>{title}</h1>  <2>\n"
"  <p>{foo.message}</p>  <3>\n"
"  {#for foo in baz.foos}\n"
"    <p>Hello {foo.message}!</p>  <4>\n"
"  {/for}\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:120
#, fuzzy
msgid "Parameter declaration - maps `foo` to `org.acme.Foo`."
msgstr "Declaração de parâmetros - mapeia `foo` para `org.acme.Foo`."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:121
#, fuzzy
msgid "`{title}` is not validated - not matching a param declaration."
msgstr "`{title}` não é validado - não corresponde a uma declaração param."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:122
#, fuzzy
msgid "`{foo.message}` is validated. `org.acme.Foo` must have a property `message` or a matching template extension method must exist."
msgstr "`{foo.message}` é validado. `org.acme.Foo` deve ter uma propriedade `message` ou deve existir um método de extensão de modelo correspondente."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:123
#, fuzzy
msgid "`{foo.message}` is not validated because `foo` is overridden in the loop section and there is no type information available."
msgstr "`{foo.message}` não é validado porque `foo` é substituído na secção de laço e não há informação de tipo disponível."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:125
#, fuzzy
msgid "Only properties are currently validated in expressions; \"virtual methods\" such as `foo.getBar(baz.name)` are currently ignored."
msgstr "Atualmente, apenas as propriedades são validadas nas expressões; os \"métodos virtuais\", como `foo.getBar(baz.name)`, são ignorados."

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:126
#, fuzzy, no-wrap
msgid "First-class Quarkus Citizen"
msgstr "Cidadão de primeira classe de Quarkus"

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:129
#, fuzzy
msgid "Despite the fact that Qute is highly optimized for Quarkus the core engine is developed as an independent library that could be integrated in any environment."
msgstr "Apesar de o Qute estar altamente optimizado para o Quarkus, o motor central foi desenvolvido como uma biblioteca independente que pode ser integrada em qualquer ambiente."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:131
#, fuzzy
msgid "In Quarkus, all templates located in the `src/main/resources/templates` directory are validated and can be easily injected."
msgstr "No Quarkus, todos os modelos localizados no diretório `src/main/resources/templates` são validados e podem ser facilmente injectados."

#. type: Block title
#: upstream/_posts/2020-02-24-qute.adoc:132
#, fuzzy, no-wrap
msgid "Template Injection Example"
msgstr "Exemplo de injeção de modelo"

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:136
#, no-wrap
msgid "package org.acme.qute;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:138
#, no-wrap
msgid "import io.quarkus.qute.Template;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:140
#, no-wrap
msgid "class MyBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:143
#, no-wrap
msgid ""
"    @Inject \n"
"    Template items; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:146
#, no-wrap
msgid ""
"    @Inject\n"
"    Service service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:151
#, no-wrap
msgid ""
"    String renderItems() {\n"
"       return items.data(\"items\", service.getItems()).render(); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:153
#, fuzzy
msgid "The field name is used to locate the template. In this particular case, the container will attempt to locate a template with path `src/main/resources/templates/items.html`. If there is no such template available the build fails."
msgstr "O nome do campo é utilizado para localizar o modelo. Neste caso específico, o contentor tentará localizar um modelo com o caminho `src/main/resources/templates/items.html`. Se esse modelo não estiver disponível, a compilação falha."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:154
#, fuzzy
msgid "See the https://quarkus.io/guides/qute-reference#hello-world-example[Hello World Example] to explore the basic workflow."
msgstr "Veja o  link:https://quarkus.io/guides/qute-reference#hello-world-example[exemplo Hello World] para explorar o fluxo de trabalho básico."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:157
#, fuzzy
msgid "Moreover, a preconfigured `Engine` instance is provided and available for injection.  The `Engine` is a central point for template management and provides some low-level API."
msgstr "Além disso, uma instância `Engine` pré-configurada é fornecida e está disponível para injeção. O `Engine` é um ponto central para a gestão de modelos e fornece uma API de baixo nível."

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:158
#, fuzzy, no-wrap
msgid "RESTEasy Integration"
msgstr "Integração RESTEasy"

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:162
#, fuzzy
msgid "If used together with RESTEasy a resource method may return a `TemplateInstance` and the integration code takes care of all the necessary steps and renders the output to the response.  See https://quarkus.io/guides/qute-reference#resteasy-integration[RESTEasy Integration] for more information."
msgstr "Se for utilizado em conjunto com o RESTEasy, um método de recurso pode devolver um `TemplateInstance` e o código de integração encarrega-se de todos os passos necessários e apresenta o resultado na resposta. Consulte  link:https://quarkus.io/guides/qute-reference#resteasy-integration[Integração do RESTEasy] para obter mais informações."

#. type: Block title
#: upstream/_posts/2020-02-24-qute.adoc:163
#, fuzzy, no-wrap
msgid "JAX-RS Resource Example"
msgstr "Exemplo de recurso JAX-RS"

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:170
#, no-wrap
msgid ""
"package org.acme.qute;\n"
"...\n"
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.Template;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:173
#, no-wrap
msgid ""
"@Path(\"hello\")\n"
"public class HelloResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:176
#, no-wrap
msgid ""
"    @Inject\n"
"    Template hello; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-02-24-qute.adoc:184
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        // the template looks like: Hello {name}!\n"
"        return hello.data(\"name\", name); <2> <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:186
#, fuzzy
msgid "The field name is used to locate the template. In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr "O nome do campo é utilizado para localizar o modelo. Neste caso específico, estamos a injetar um modelo com o caminho `templates/hello.txt`."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:187
#, fuzzy
msgid "`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered. In this case, we put the name value under the key `name`. The data map is accessible during rendering."
msgstr "`Template.data()` retorna uma nova instância de modelo que pode ser personalizada antes que a renderização real seja acionada. Neste caso, colocamos o valor do nome na chave `name`. O mapa de dados está acessível durante a renderização."

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:188
#, fuzzy
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation."
msgstr "Note-se que não accionamos a renderização - isto é feito automaticamente por uma implementação especial do `ContainerResponseFilter`."

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:190
#, fuzzy, no-wrap
msgid "Mailer Integration"
msgstr "Integração do Mailer"

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:196
#, fuzzy
msgid "Templates may come in handy when creating e-mail messages.  The Mailer extension integrates with Qute to provide a convenient way of sending e-mails.  In particular, the message body is automatically created using `+*.html+` and `+*.txt+` templates from the `src/main/resources/templates` directory.  See the https://quarkus.io/guides/mailer#message-body-based-on-qute-templates[Sending Emails] guide for more details."
msgstr "Os modelos podem ser úteis para criar mensagens de correio eletrónico. A extensão Mailer integra-se com o Qute para fornecer uma forma conveniente de enviar mensagens de correio eletrónico. Em particular, o corpo da mensagem é criado automaticamente usando os modelos `*.html` e `*.txt` do diretório `src/main/resources/templates`. Consulte o guia  link:https://quarkus.io/guides/mailer#message-body-based-on-qute-templates[Envio de e-mails] para obter mais detalhes."

#. type: Title ==
#: upstream/_posts/2020-02-24-qute.adoc:197
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: upstream/_posts/2020-02-24-qute.adoc:201
#, fuzzy
msgid "Qute first landed in Quarkus 1.1.0.Final.  Since then we fixed many bugs and implemented some feature requests.  Feel free to join our community to stabilize the API, harden the implementation and explore the new possibilities!"
msgstr "O Qute foi lançado pela primeira vez no Quarkus 1.1.0.Final. Desde então, corrigimos muitos bugs e implementámos alguns pedidos de funcionalidades. Sinta-se à vontade para se juntar à nossa comunidade para estabilizar a API, fortalecer a implementação e explorar as novas possibilidades!"
