# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, fuzzy, no-wrap
msgid "mmusgrov"
msgstr "mmusgrov"

#. type: YAML Front Matter: date
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, fuzzy, no-wrap
msgid "2021-09-01"
msgstr "2021-09-01"

#. type: YAML Front Matter: layout
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "posto"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, fuzzy, no-wrap
msgid "How to use the narayana LRA extension to create reliable long running activities."
msgstr "Como utilizar a extensão LRA narayana para criar actividades fiáveis de longa duração."

#. type: YAML Front Matter: tags
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, fuzzy, no-wrap
msgid "extensions"
msgstr "extensões"

#. type: YAML Front Matter: title
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, fuzzy, no-wrap
msgid "An Extension for Long Running Activities"
msgstr "Uma extensão para actividades de longa duração"

#. type: Title ==
#: upstream/_posts/2021-09-01-using-lra.adoc:10
#, fuzzy, no-wrap
msgid "Introduction"
msgstr "Introdução"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:14
#, fuzzy
msgid "The Quarkus LRA extension is useful for building JAX-RS services that wish to definitively agree when an interaction has finished, with either a successful outcome or an unsuccessful one.  In the successful case, all participants can clean up in the knowledge that all other services will do so as well. Conversely, in the unsuccessful case, participants know that each other will compensate for any actions performed during the interaction. This feature means that participating services can reach a consensus and achieve an atomic outcome."
msgstr "A extensão Quarkus LRA é útil para a criação de serviços JAX-RS que pretendam chegar a um acordo definitivo quando uma interação tiver terminado, com um resultado bem ou mal sucedido. No caso de sucesso, todos os participantes podem limpar a sua atividade, sabendo que todos os outros serviços também o farão. Inversamente, no caso de insucesso, os participantes sabem que cada um compensará as acções realizadas durante a interação. Esta caraterística significa que os serviços participantes podem chegar a um consenso e alcançar um resultado atómico."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:16
#, fuzzy
msgid "We call the service interaction an LRA, short for Long Running Action. An LRA has specific properties and guarantees that aid in the construction of reliable service interactions. Each action is assigned a unique identifier (referred to as the LRA context) so that it can be distinguished from other LRAs."
msgstr "Chamamos à interação de serviço uma LRA, abreviatura de Long Running Action (ação de longa duração). Uma LRA tem propriedades e garantias específicas que ajudam na construção de interacções de serviço fiáveis. A cada ação é atribuído um identificador único (designado por contexto LRA) para que possa ser distinguida de outras LRAs."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:18
#, fuzzy
msgid "Services start an LRA (or join an existing one) by marking a JAX-RS method with an https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html[@LRA annotation]. When such a method is invoked the system will start the action and make its identifier available as a JAX-RS header called \"Long-Running-Action\". If the body of the method performs any JAX-RS invocations the header is automatically added to outgoing requests. In this way the target services can join in with the interaction (if they are also annotated with the `@LRA` annotation)."
msgstr "Os serviços iniciam uma LRA (ou juntam-se a uma existente) marcando um método JAX-RS com uma  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html[anotação @LRA]. Quando esse método é invocado, o sistema inicia a ação e disponibiliza o seu identificador como um cabeçalho JAX-RS denominado \"Long-Running-Action\". Se o corpo do método efetuar quaisquer invocações JAX-RS, o cabeçalho é automaticamente adicionado aos pedidos de saída. Desta forma, os serviços de destino podem participar na interação (se também estiverem anotados com a anotação `@LRA` )."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:20
#, fuzzy
msgid "Any work performed by a method annotated in this way should be \"compensatable\" in the sense that if some service \"cancels\" the LRA then the service will be reliably notified that it should compensate for any work that it did. Each service is responsible for interpreting the notion of what it means to compensate, the only requirement is that it responds https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ParticipantStatus.html[appropriately] when it is notified that it should compensate. The service indicates how it should be notified by annotating one of its method with an https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/Compensate.html[@Compensate] annotation. Refer to the javadoc for the `@LRA` annotation for the details of how to control the outcome of an LRA."
msgstr "Qualquer trabalho efectuado por um método anotado desta forma deve ser \"compensável\" no sentido de que, se algum serviço \"cancelar\" o LRA, o serviço será notificado de forma fiável de que deve compensar qualquer trabalho que tenha efectuado. Cada serviço é responsável por interpretar a noção do que significa compensar, a única exigência é que responda  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ParticipantStatus.html[adequadamente] quando for notificado de que deve compensar. O serviço indica como deve ser notificado anotando um dos seus métodos com uma anotação  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/Compensate.html[@Compensate]. Consulte o javadoc da anotação `@LRA` para obter pormenores sobre como controlar o resultado de um LRA."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:23
#, fuzzy, no-wrap
msgid ""
"The extension provides an implementation of the https://download.eclipse.org/microprofile/microprofile-lra-1.0-M1/microprofile-lra-spec.html[MicroProfile LRA specification] and its associated\n"
" https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/index.html?org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html[annotations].\n"
msgstr "A extensão fornece uma implementação da  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0-M1/microprofile-lra-spec.html[especificação MicroProfile LRA] e as suas  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/index.html?org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html[anotações] associadas."

#. type: Title ==
#: upstream/_posts/2021-09-01-using-lra.adoc:24
#, fuzzy, no-wrap
msgid "LRA coordinators"
msgstr "Coordenadores LRA"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:29
#, fuzzy
msgid "The `narayana-lra` extension requires the presence of a running coordinator in the environment. Coordinators can be obtained from `https://quay.io/repository/jbosstm/lra-coordinator` or you can build your own coordinator using a maven pom that includes the appropriate dependencies. For the purpose of this blog we'll show how to create one from scratch using the `quarkus-maven-plugin`.  There is some extra information about configuring the coordinator in one of the https://jbossts.blogspot.com/2021/07/narayana-lra-update.html[narayana blogs]."
msgstr "A extensão `narayana-lra` requer a presença de um coordenador em execução no ambiente. Os coordenadores podem ser obtidos em `&lt;a href=\"https://quay.io/repository/jbosstm/lra-coordinator\" class=\"bare\"&gt;https://quay.io/repository/jbosstm/lra-coordinator&lt;/a&gt;` ou você pode construir seu próprio coordenador usando um maven pom que inclui as dependências apropriadas. Para o propósito deste blogue, mostraremos como criar um do zero usando o `quarkus-maven-plugin`. Há algumas informações adicionais sobre a configuração do coordenador em um dos  link:https://jbossts.blogspot.com/2021/07/narayana-lra-update.html[blogues do narayana]."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:31
#, fuzzy
msgid "Since the coordinator is just a JAX-RS resource we can build one using quarkus, adding the `resteasy-jackson` and `rest-client` extensions:"
msgstr "Uma vez que o coordenador é apenas um recurso JAX-RS, podemos construir um utilizando o quarkus, adicionando as extensões `resteasy-jackson` e `rest-client`:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:40
#, no-wrap
msgid ""
"$ mvn io.quarkus:quarkus-maven-plugin:2.2.1.Final:create \\\n"
"      -DprojectGroupId=org.acme \\\n"
"      -DprojectArtifactId=narayana-lra-coordinator \\\n"
"      -Dextensions=\"resteasy-jackson,rest-client\"\n"
"$ cd narayana-lra-coordinator/\n"
"$ rm -rf src\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:43
#, fuzzy
msgid "Note that we removed the generated src directory because we just need the quarkus framework for running the coordinator."
msgstr "Note que removemos o diretório src gerado porque só precisamos do framework quarkus para executar o coordenador."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:45
#, fuzzy
msgid "Update the pom.xml file to add a dependency on the narayana coordinator implementation:"
msgstr "Atualize o arquivo pom.xml para adicionar uma dependência na implementação do coordenador narayana:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:53
#: upstream/_posts/2021-09-01-using-lra.adoc:457
#, no-wrap
msgid ""
"    <dependency>\n"
"      <groupId>org.jboss.narayana.rts</groupId>\n"
"      <artifactId>lra-coordinator-jar</artifactId>\n"
"      <version>5.12.0.Final</version>\n"
"    </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:56
#, fuzzy
msgid "Now build it and run it in the background:"
msgstr "Agora construa-o e execute-o em segundo plano:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:61
#, no-wrap
msgid ""
"$ ./mvnw clean package\n"
"$ java -Dquarkus.http.port=50000 -jar target/quarkus-app/quarkus-run.jar &\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:65
#, fuzzy
msgid "Here we are running the coordinator on the default port used by the `narayana-lra` quarkus extension, namely `50000`.  You can verify that the coordinator is running okay by listing the current LRAs:"
msgstr "Aqui estamos a executar o coordenador na porta predefinida utilizada pela extensão `narayana-lra` quarkus, nomeadamente `50000`. É possível verificar se o coordenador está funcionando bem listando os LRAs atuais:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:70
#, no-wrap
msgid ""
"$ curl http://localhost:50000/lra-coordinator\n"
"[]\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:73
#, fuzzy
msgid "This snippet shows the request returning an empty json array."
msgstr "Este snippet mostra o pedido que retorna uma matriz json vazia."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:77
#, fuzzy
msgid "We shall leave the coordinator running (on the default port) while we develop and test services that use LRAs.  Towards the end of article we will show how to embed coordinators with services (NOTE: you cannot use this approach to run coordinators in native mode, a future extension will be provided to support this requirement)."
msgstr "Deixaremos o coordenador em execução (na porta padrão) enquanto desenvolvemos e testamos serviços que usam LRAs. No final do artigo, mostraremos como incorporar coordenadores com serviços (NOTA: não é possível usar essa abordagem para executar coordenadores no modo nativo, uma extensão futura será fornecida para dar suporte a esse requisito)."

#. type: Title ==
#: upstream/_posts/2021-09-01-using-lra.adoc:78
#, fuzzy, no-wrap
msgid "JVM mode"
msgstr "Modo JVM"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:81
#, fuzzy
msgid "To build a JAX-RS application with LRA support add the dependency `io.quarkus:quarkus-narayana-lra` to your application's pom. This will add JAX-RS support and will also make the LRA annotations available when developing your services, it also registers a JAX-RS filter that automatically manages the participation of your services in LRAs."
msgstr "Para construir uma aplicação JAX-RS com suporte a LRA, adicione a dependência `io.quarkus:quarkus-narayana-lra` ao pom da sua aplicação. Isto adicionará o suporte JAX-RS e também tornará as anotações LRA disponíveis ao desenvolver os seus serviços, registando também um filtro JAX-RS que gere automaticamente a participação dos seus serviços em LRAs."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:83
#, fuzzy
msgid "As noted above, the guarantees (of eventual consistency) required by the https://download.eclipse.org/microprofile/microprofile-lra-1.0-M1/microprofile-lra-spec.html[LRA specification] rely on the presence of a JAX-RS application that coordinates the services participating in the LRA. This component must be present when starting the interaction, when joining the interaction and when ending the interaction. If the coordinator becomes unavailable it should be restarted. Similarly, services participating in the LRA must be available during the end phase; the system will continue retrying a service until it indicates that it is finished with the LRA, and once a service has indicated successful compensation (or completion) it no longer takes part in the interaction (although it can register for a reliable notification that all services have finished compensating or completing). Although there can be many coordinators, at the time of writing, only one can manage a particular LRA."
msgstr "Como já foi referido, as garantias (de eventual consistência) exigidas pela  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0-M1/microprofile-lra-spec.html[especificação LRA] dependem da presença de uma aplicação JAX-RS que coordena os serviços que participam na LRA. Este componente deve estar presente quando se inicia a interação, quando se junta à interação e quando termina a interação. Se o coordenador ficar indisponível, deve ser reiniciado. Do mesmo modo, os serviços que participam na LRA têm de estar disponíveis durante a fase final; o sistema continuará a tentar novamente um serviço até que este indique que terminou a LRA e, quando um serviço indicar que a compensação (ou a conclusão) foi bem sucedida, deixará de participar na interação (embora possa registar-se para receber uma notificação fiável de que todos os serviços terminaram a compensação ou a conclusão). Embora possam existir muitos coordenadores, no momento em que escrevemos, apenas um pode gerir uma determinada LRA."

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:84
#, fuzzy, no-wrap
msgid "Step 1: Create the application:"
msgstr "Passo 1: Criar a aplicação:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:93
#, no-wrap
msgid ""
"$ mvn io.quarkus:quarkus-maven-plugin:2.2.1.Final:create \\\n"
"      -DprojectGroupId=org.acme \\\n"
"      -DprojectArtifactId=narayana-lra-quickstart \\\n"
"      -Dextensions=\"narayana-lra\"\n"
"$ cd lra-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:96
#, fuzzy
msgid "Note that if the coordinator is running on a port different from the default, i.e. `50000`, then you will need to update the application config file (`src/main/resources/application.properties`) and specify the host and port:"
msgstr "Note-se que, se o coordenador estiver a funcionar numa porta diferente da predefinida, ou seja, `50000`, será necessário atualizar o ficheiro de configuração da aplicação ( `src/main/resources/application.properties`) e especificar o anfitrião e a porta:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:100
#, no-wrap
msgid "quarkus.lra.coordinator-url=http://localhost:<port>/lra-coordinator\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:103
#, fuzzy
msgid "Verify that the generated application still works after these changes:"
msgstr "Verifique se a aplicação gerada continua a funcionar após estas alterações:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:107
#, no-wrap
msgid "$ ./mvnw clean package\n"
msgstr ""

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:109
#, fuzzy, no-wrap
msgid "Step 2: Add LRA support"
msgstr "Passo 2: Adicionar suporte LRA"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:112
#, fuzzy
msgid "Now update the generated application so that the hello method will execute in the context of a Long Running Action:"
msgstr "Agora actualize a aplicação gerada para que o método hello seja executado no contexto de uma ação de longa duração:"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:114
#, fuzzy
msgid "Open the file `src/main/java/org/acme/GreetingResource.java` in an editor and annotate the `hello` method with an @LRA annotation (also inject the LRA context into the method using the JAX-RS `javax.ws.rs.HeaderParam` annotation). In addition, add two callback methods which will be called when the LRA is closed or cancelled."
msgstr "Abra o arquivo `src/main/java/org/acme/GreetingResource.java` em um editor e anote o método `hello` com uma anotação @LRA (também injete o contexto LRA no método usando a anotação JAX-RS `javax.ws.rs.HeaderParam` ). Além disso, adicione dois métodos de retorno de chamada que serão chamados quando o LRA for fechado ou cancelado."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:116
#, fuzzy
msgid "The end result, including the imports, should look like the following:"
msgstr "O resultado final, incluindo as importações, deve ter o seguinte aspeto:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:120
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:125
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:135
#, no-wrap
msgid ""
"// Step 2a: Add imports for reading the LRA context and for using LRA annotations\n"
"import javax.ws.rs.HeaderParam;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.core.Response;\n"
"import java.net.URI;\n"
"import org.eclipse.microprofile.lra.annotation.ws.rs.LRA;\n"
"import org.eclipse.microprofile.lra.annotation.Compensate;\n"
"import org.eclipse.microprofile.lra.annotation.Complete;\n"
"import static org.eclipse.microprofile.lra.annotation.ws.rs.LRA.LRA_HTTP_CONTEXT_HEADER;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:138
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:146
#, no-wrap
msgid ""
"    @GET\n"
"    @LRA // Step 2b: The method should run within an LRA\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello(@HeaderParam(LRA_HTTP_CONTEXT_HEADER) URI lraId /* Step 2c the context is useful for associating compensation logic */) {\n"
"        System.out.printf(\"hello with context %s%n\", lraId);\n"
"        return \"Hello RESTEasy\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:155
#, no-wrap
msgid ""
"    // Step 2d: There must be a method to compensate for the action if it's cancelled\n"
"    @PUT\n"
"    @Path(\"compensate\")\n"
"    @Compensate\n"
"    public Response compensateWork(@HeaderParam(LRA_HTTP_CONTEXT_HEADER) URI lraId) {\n"
"        System.out.printf(\"compensating %s%n\", lraId);\n"
"        return Response.ok(lraId.toASCIIString()).build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:165
#, no-wrap
msgid ""
"    // Step 2e: An optional callback notifying that the LRA is closing\n"
"    @PUT\n"
"    @Path(\"complete\")\n"
"    @Complete\n"
"    public Response completeWork(@HeaderParam(LRA_HTTP_CONTEXT_HEADER) URI lraId) {\n"
"        System.out.printf(\"completing %s%n\", lraId);\n"
"        return Response.ok(lraId.toASCIIString()).build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:168
#, fuzzy
msgid "With these changes, if you build the application and then invoke the `hello` method then an LRA will be started before the method is entered and ended after it finishes:"
msgstr "Com estas alterações, se construir a aplicação e depois invocar o método `hello`, será iniciado um LRA antes de o método ser introduzido e terminado após a sua conclusão:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:178
#, no-wrap
msgid ""
"$ ./mvnw clean package\n"
"$ java -jar target/quarkus-app/quarkus-run.jar &\n"
"[1] 2389948\n"
"$ curl http://localhost:8080/hello\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_8c1f_612a6e9b_a\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_8c1f_612a6e9b_a\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:181
#, fuzzy
msgid "Make sure that the coordinator is still running otherwise you will see an error message similar to the following:"
msgstr "Certifique-se de que o coordenador ainda está a funcionar, caso contrário verá uma mensagem de erro semelhante à seguinte:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:185
#, no-wrap
msgid "2021-08-11 14:27:45,779 WARN  [io.nar.lra] (executor-thread-0) LRA025025: Unable to process LRA annotations: -3: StartFailed (start LRA client request timed out, try again later) ()'\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:189
#, fuzzy
msgid "Notice the `System.out` messages indicating that the `@Complete` callback was invoked.  Now kill the java process in preparation for the next step (the process id was printed on the console, in my example the pid is 2389948, so I typed `kill 2389948`)."
msgstr "Observe as mensagens `System.out` indicando que o retorno de chamada `@Complete` foi invocado. Agora mate o processo java em preparação para o próximo passo (o id do processo foi impresso no console, no meu exemplo o pid é 2389948, então eu digitei `kill 2389948`)."

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:190
#, fuzzy, no-wrap
msgid "Step 3: Extending the LRA across two service methods"
msgstr "Passo 3: Alargar o LRA a dois métodos de serviço"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:193
#, fuzzy
msgid "In this step we will start an LRA but not end it when the method finishes by using https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html#end--[the end element of the LRA annotation]."
msgstr "Nesta etapa, iniciaremos um LRA mas não o terminaremos quando o método terminar, utilizando  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html#end--[o elemento end da anotação LRA]."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:195
#, fuzzy
msgid "Define a second business method to do this:"
msgstr "Definir um segundo método comercial para o efeito:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:206
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/start\")\n"
"    @LRA(end = false) // Step 3a: The method should run within an LRA\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String start(@HeaderParam(LRA_HTTP_CONTEXT_HEADER) URI lraId) {\n"
"        System.out.printf(\"hello with context %s%n\", lraId);\n"
"        return lraId.toASCIIString();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:211
#, fuzzy
msgid "The only difference from the hello method is the `@Path` and `@LRA` annotations and that it returns the LRA id back to the caller. We will need this to set the header when we send a request to the hello method to finish the LRA (note that this header is also available in one of the JAX-RS response headers)."
msgstr "A única diferença do método hello são as anotações `@Path` e `@LRA` e o fato de ele retornar o ID do LRA para o chamador. Precisaremos disso para definir o cabeçalho quando enviarmos uma solicitação ao método hello para concluir o LRA (observe que esse cabeçalho também está disponível em um dos cabeçalhos de resposta do JAX-RS)."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:213
#, fuzzy
msgid "Kill the existing instance (`kill 2389948`) and rebuild the application (`./mvnw package -DskipTests`) and start it running in the background:"
msgstr "Elimine a instância existente ( `kill 2389948`) e reconstrua a aplicação ( `./mvnw package -DskipTests`) e inicie a sua execução em segundo plano:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:218
#, no-wrap
msgid ""
"$ java -jar target/quarkus-app/quarkus-run.jar &\n"
"[1] 2495275\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:221
#, fuzzy
msgid "Start an LRA using `curl` to send a request the new method we have just added:"
msgstr "Inicie um LRA utilizando `curl` para enviar um pedido o novo método que acabámos de adicionar:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:226
#, no-wrap
msgid ""
"$ LRA_URL=$(curl http://localhost:8080/hello/start)\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a909_611a92ea_2\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:230
#, fuzzy
msgid "The start method was coded to return the LRA id and I have used `bash` to save it into an environment variable called `LRA_URL`.  The original hello method used the default value of the `end` element of the `@LRA` annotation so if we call that method with an LRA context then the LRA will automatically close when the method finishes:"
msgstr "O método start foi codificado para devolver o ID do LRA e utilizei `bash` para o guardar numa variável de ambiente chamada `LRA_URL`. O método hello original utilizou o valor predefinido do elemento `end` da anotação `@LRA`, pelo que, se chamarmos esse método com um contexto LRA, o LRA fechar-se-á automaticamente quando o método terminar:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:237
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" http://localhost:8080/hello\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a909_611a92ea_2\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a909_611a92ea_2\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:240
#, fuzzy
msgid "Notice that the `completeWork` method was invoked."
msgstr "Repare que o método `completeWork` foi invocado."

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:241
#, fuzzy, no-wrap
msgid "Step 4: Start an LRA in one microservice and end it in a different microservice"
msgstr "Passo 4: Iniciar um LRA num microsserviço e terminá-lo num microsserviço diferente"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:245
#, fuzzy
msgid "This step shows how two different microservices can coordinate their activities even though they have no coupling.  Start a second instance of the hello application on a different port:"
msgstr "Esta etapa mostra como dois microsserviços diferentes podem coordenar suas atividades, mesmo que não tenham acoplamento. Inicie uma segunda instância do aplicativo hello em uma porta diferente:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:250
#, no-wrap
msgid ""
"$ java -Dquarkus.http.port=8081 -jar target/quarkus-app/quarkus-run.jar &\n"
"[2] 2495369\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:253
#, fuzzy
msgid "Since we are still using the same application resource file and external coordinator there is no need to update the config."
msgstr "Uma vez que continuamos a utilizar o mesmo ficheiro de recursos da aplicação e o coordenador externo, não é necessário atualizar a configuração."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:255
#, fuzzy
msgid "Again, start an LRA using `curl` to send a request to the start method of the first service:"
msgstr "Novamente, inicie um LRA utilizando `curl` para enviar um pedido para o método de início do primeiro serviço:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:260
#, no-wrap
msgid ""
"$ LRA_URL=$(curl http://localhost:8080/hello/start)\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_11\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:263
#, fuzzy
msgid "and now end it in the second service (the one running on port 8081):"
msgstr "e agora termina-o no segundo serviço (o que está a correr no porto 8081):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:271
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" http://localhost:8081/hello\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_11\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_11\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_11\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:274
#, fuzzy
msgid "Notice that both microservices indicated that they received the completion callback."
msgstr "Observe que ambos os microsserviços indicaram que receberam a chamada de retorno de conclusão."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:276
#, fuzzy
msgid "Terminate both java processes (`kill 2495275 2495369`)."
msgstr "Terminar ambos os processos java ( `kill 2495275 2495369`)."

#. type: Title ====
#: upstream/_posts/2021-09-01-using-lra.adoc:277
#, fuzzy, no-wrap
msgid "Optional Step: using the MANDATORY element"
msgstr "Etapa facultativa: utilização do elemento MANDATORY"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:281
#, fuzzy
msgid "Instead of using an existing method to close the LRA you might prefer to write one which expects there to be a context.  In this case you would want to set the `LRA.Type` element:"
msgstr "Em vez de utilizar um método existente para fechar o LRA, pode preferir escrever um método que espere que exista um contexto. Neste caso, deve definir o elemento `LRA.Type`:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:291
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/end\")\n"
"    @LRA(value = LRA.Type.MANDATORY) // Step 3a: The method MUST be invoked with an LRA\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String end(@HeaderParam(LRA_HTTP_CONTEXT_HEADER) URI lraId) {\n"
"        return lraId.toASCIIString();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:294
#, fuzzy
msgid "Because the end method is annotated with `@LRA(value = LRA.Type.MANDATORY)`, the context header must be present otherwise the method will return an error response code:"
msgstr "Uma vez que o método end é anotado com `@LRA(value = LRA.Type.MANDATORY)`, o cabeçalho de contexto tem de estar presente, caso contrário o método devolverá um código de resposta de erro:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:305
#, no-wrap
msgid ""
"$ ./mvnw clean package -DskipTests\n"
"$ java -Dquarkus.http.port=8081 -jar target/quarkus-app/quarkus-run.jar &\n"
"[1] 300189\n"
"$ LRA_URL=$(curl http://localhost:8081/hello/start)\n"
"$ curl -v http://localhost:8081/hello/end\n"
"...\n"
"HTTP/1.1 412 Precondition Failed\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:308
#, fuzzy
msgid "whereas providing the LRA context header will work:"
msgstr "enquanto que o fornecimento do cabeçalho de contexto LRA funcionará:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:316
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" -I http://localhost:8081/hello/end\n"
"HTTP/1.1 200 OK\n"
"Content-Type: application/octet-stream\n"
"connection: keep-alive\n"
"$ kill 300189\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:319
#, fuzzy
msgid "Other https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.Type.html[LRA.Type element values] may be useful, depending upon what your application is trying to achieve. For those readers familiar with JTA it is worth remarking that it was loosely modelled on the https://docs.oracle.com/javaee/7/api/javax/transaction/Transactional.TxType.html[Java Transactional TxType annotation]."
msgstr "Outros  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.Type.html[valores do elemento LRA.Type] podem ser úteis, dependendo do que a sua aplicação está a tentar alcançar. Para os leitores familiarizados com o JTA, vale a pena referir que este foi vagamente modelado na  link:https://docs.oracle.com/javaee/7/api/javax/transaction/Transactional.TxType.html[anotação Java Transactional TxType]."

#. type: Title ==
#: upstream/_posts/2021-09-01-using-lra.adoc:320
#, fuzzy, no-wrap
msgid "Native mode"
msgstr "Modo nativo"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:323
#, fuzzy
msgid "in native mode only external coordinators (i.e. not embedded with the application) are supported (we will provide a coordinator extension in a later release to address this deficiency)."
msgstr "no modo nativo, só são suportados coordenadores externos (ou seja, não incorporados na aplicação) (forneceremos uma extensão de coordenador numa versão posterior para resolver esta deficiência)."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:325
#, fuzzy
msgid "First build a native executable:"
msgstr "Primeiro, construa um executável nativo:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:329
#, no-wrap
msgid "$ ./mvnw package -DskipTests -Pnative\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:336
#, fuzzy
msgid "Check that the external coordinator started in <<_lra-coordinators,the section on coordinators>> is still running on port 50000 and then start the service as a native executable in the background. Note that if the coordinator is not running on the default port you would need to either pass in the location of a running coordinator as a Java system property (`-Dquarkus.lra.coordinator-url=http://localhost:50000/lra-coordinator`) or you can update the application config and rebuild the native executable."
msgstr "Verifique se o coordenador externo iniciado na  link:#_lra-coordinators[secção sobre coordenadores] ainda está em execução na porta 50000 e, em seguida, inicie o serviço como um executável nativo em segundo plano. Note-se que, se o coordenador não estiver a ser executado na porta predefinida, terá de passar a localização de um coordenador em execução como uma propriedade do sistema Java ( `-Dquarkus.lra.coordinator-url=http://localhost:50000/lra-coordinator`) ou pode atualizar a configuração da aplicação e reconstruir o executável nativo."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:338
#, fuzzy
msgid "Start an instance of the native service:"
msgstr "Iniciar uma instância do serviço nativo:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:343
#, no-wrap
msgid ""
"$ ./target/narayana-lra-quickstart-1.0.0-SNAPSHOT-runner &\n"
"[1] 2434426\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:346
#, fuzzy
msgid "Take a note of the process id (i.e. 2434426) since we will need to kill the process later."
msgstr "Tome nota do ID do processo (ou seja, 2434426), uma vez que teremos de o eliminar mais tarde."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:348
#, fuzzy
msgid "Start a new LRA:"
msgstr "Iniciar um novo LRA:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:352
#, no-wrap
msgid "$ LRA_URL=$(curl http://localhost:8080/hello/start)\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:355
#, fuzzy
msgid "and end it in a different method:"
msgstr "e terminar com um método diferente:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:362
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" http://localhost:8080/hello\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_8479_612e13fa_2\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_8479_612e13fa_2\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:365
#, fuzzy
msgid "Kill the service in preparation for the next step (`kill 2434426`) or just leave it running."
msgstr "Encerrar o serviço em preparação para o passo seguinte ( `kill 2434426`) ou deixá-lo a funcionar."

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:366
#, fuzzy, no-wrap
msgid "Failure handling"
msgstr "Tratamento de falhas"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:373
#, fuzzy
msgid "In this step we will start an LRA running in one service and then kill the service before the LRA has finished.  Then we'll use a second service to end the LRA and note that second service completes but that the LRA will still be in the `Closing` state because the participant in the first, failed, service still needs to complete.  If the LRA is to reach the `Closed` state then the failed service must be restarted so that it can can respond to the `Complete` request."
msgstr "Nesta etapa, iniciaremos um LRA em execução em um serviço e, em seguida, mataremos o serviço antes que o LRA seja concluído. Em seguida, usaremos um segundo serviço para encerrar o LRA e observaremos que o segundo serviço é concluído, mas que o LRA ainda estará no estado `Closing` porque o participante do primeiro serviço, que falhou, ainda precisa ser concluído. Para que o LRA atinja o estado `Closed`, o serviço com falha deve ser reiniciado para que possa responder à solicitação `Complete`."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:375
#, fuzzy
msgid "Restart the fist service on the default port 8080 (and note its process id):"
msgstr "Reinicie o serviço fist na porta predefinida 8080 (e anote o ID do processo):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:380
#, no-wrap
msgid ""
"$ ./target/narayana-lra-quickstart-1.0.0-SNAPSHOT-runner &\n"
"[1] 2434936\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:383
#, fuzzy
msgid "and start a second service instance (on port 8082):"
msgstr "e iniciar uma segunda instância de serviço (na porta 8082):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:388
#, no-wrap
msgid ""
"$ ./target/narayana-lra-quickstart-1.0.0-SNAPSHOT-runner -Dquarkus.http.port=8082 &\n"
"[2] 2434984\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:391
#, fuzzy
msgid "Start an LRA at the first service:"
msgstr "Iniciar um LRA no primeiro serviço:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:396
#, no-wrap
msgid ""
"$ LRA_URL=$(curl http://localhost:8080/hello/start)\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_34\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:399
#, fuzzy
msgid "Kill the first service"
msgstr "Eliminar o primeiro serviço"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:404
#, no-wrap
msgid ""
"$ kill 2434936\n"
"2021-08-11 16:02:24,542 INFO  [io.quarkus] (Shutdown thread) narayana-lra-quickstart stopped in 0.003s\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:407
#, fuzzy
msgid "Now, with only the second service running, try ending the LRA:"
msgstr "Agora, com apenas o segundo serviço em execução, tente terminar o LRA:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:414
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" http://localhost:8082/hello\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_34\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_34\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:417
#, fuzzy
msgid "The LRA will still be running, as you may verify by querying the coordinator (`curl http://localhost:50000/lra-coordinator`)."
msgstr "O LRA ainda estará a funcionar, como se pode verificar consultando o coordenador ( `curl &lt;a href=\"http://localhost:50000/lra-coordinator\" class=\"bare\"&gt;http://localhost:50000/lra-coordinator&lt;/a&gt;`)."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:419
#, fuzzy
msgid "To finish the LRA restart the failed service (which was listening on port 8080):"
msgstr "Para terminar o LRA, reinicie o serviço que falhou (que estava a ouvir na porta 8080):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:424
#, no-wrap
msgid ""
"$ ./target/narayana-lra-quickstart-1.0.0-SNAPSHOT-runner &\n"
"[3] 2435130\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:429
#, fuzzy
msgid "Recovery processing is periodic (the default period between recovery passes is 2 minutes).  If you cannot wait 2 minutes then you may manually trigger a recovery cycle via the coordinators recovery endpoint as follows:"
msgstr "O processamento da recuperação é periódico (o período predefinido entre passagens de recuperação é de 2 minutos). Se não puder esperar 2 minutos, pode ativar manualmente um ciclo de recuperação através do ponto de extremidade de recuperação dos coordenadores da seguinte forma:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:435
#, no-wrap
msgid ""
"$ curl http://localhost:50000/lra-coordinator/recovery\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_34\n"
"[]\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:440
#, fuzzy
msgid "The item to note here is that the restarted service received the completion notification (`completing ...`).  The result of the request to run a recovery cycle is a json array of recovering LRAs (in this example the list is empty because the last LRA has now finished as indicated by the empty json array `[]`)."
msgstr "O item a ser observado aqui é que o serviço reiniciado recebeu a notificação de conclusão ( `completing …​`). O resultado do pedido de execução de um ciclo de recuperação é uma matriz json de LRAs em recuperação (neste exemplo, a lista está vazia porque o último LRA já terminou, como indicado pela matriz json vazia `[]`)."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:442
#, fuzzy
msgid "Clean up by stopping the two services (`kill 2434984 2435130`)."
msgstr "Limpar parando os dois serviços ( `kill 2434984 2435130`)."

#. type: Title ==
#: upstream/_posts/2021-09-01-using-lra.adoc:443
#, fuzzy, no-wrap
msgid "Appendix 1"
msgstr "Apêndice 1"

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:445
#, fuzzy, no-wrap
msgid "Embedded Coordinators"
msgstr "Coordenadores incorporados"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:449
#, fuzzy
msgid "Since coordinators are just JAX-RS applications they can be embedded with JAX-RS services quite easily by adding the LRA coordinator dependency the applications pom.xml file:"
msgstr "Como os coordenadores são apenas aplicativos JAX-RS, eles podem ser incorporados aos serviços JAX-RS com bastante facilidade, adicionando a dependência do coordenador LRA ao arquivo pom.xml dos aplicativos:"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:461
#, fuzzy
msgid "and since, by default, quarkus only allows one application per deployment you will need to add the the following property to the application config file (`src/main/resources/application.properties`):"
msgstr "e uma vez que, por defeito, o quarkus só permite uma aplicação por implantação, terá de adicionar a seguinte propriedade ao ficheiro de configuração da aplicação ( `src/main/resources/application.properties`):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:465
#, no-wrap
msgid "quarkus.resteasy.ignore-application-classes=true \n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:468
#, fuzzy
msgid "The same caveats as described in the <<_lra-coordinators,the section on coordinators>> still apply:"
msgstr "Aplicam-se as mesmas advertências descritas na  link:#_lra-coordinators[secção sobre os coordenadores]:"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:470
#, fuzzy
msgid "no support for native executables."
msgstr "não há suporte para executáveis nativos."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:471
#, fuzzy
msgid "each instance requires dedicated storage for the coordinators' transaction logs (since sharing transaction stores is not currently supported)."
msgstr "cada instância requer armazenamento dedicado para os registos de transacções dos coordenadores (uma vez que a partilha de armazéns de transacções não é atualmente suportada)."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:475
#, fuzzy
msgid "The embedded coordinator will be available on the same port as the application (with path `lra-coordinator`), but note that the default coordinator port is `50000` so you will need to configure its location in the application config to tell the application to use it:"
msgstr "O coordenador incorporado estará disponível na mesma porta que a aplicação (com o caminho `lra-coordinator`), mas note que a porta coordenadora predefinida é `50000`, pelo que terá de configurar a sua localização na configuração da aplicação para dizer à aplicação para a utilizar:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:480
#, no-wrap
msgid ""
"quarkus.http.port=8080\n"
"quarkus.lra.coordinator-url=http://localhost:8080/lra-coordinator\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:484
#, fuzzy
msgid "The location of the transaction logs cannot be configured in this way and must be configured via a system property (`ObjectStoreEnvironmentBean.objectStoreDir`):"
msgstr "A localização dos registos de transacções não pode ser configurada desta forma e tem de ser configurada através de uma propriedade do sistema ( `ObjectStoreEnvironmentBean.objectStoreDir`):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:494
#, no-wrap
msgid ""
"$ java -DObjectStoreEnvironmentBean.objectStoreDir=target/lra-logs -jar target/quarkus-app/quarkus-run.jar &\n"
"[1] 2443349\n"
"$ LRA_URL=$(curl http://localhost:8080/hello/start)\n"
"02021-08-11 17:42:30,464 INFO  [com.arj.ats.arjuna] (executor-thread-1) ARJUNA012170: TransactionStatusManager started on port 35827 and host 127.0.0.1 with service com.arjuna.ats.arjuna.recovery.ActionStatusService\n"
"hello with context http://localhost:8080/lra-coordinator/0_ffffc0a8000e_a985_6113fdf6_2\n"
"$ curl http://localhost:8080/lra-coordinator\n"
"[{\"lraId\":\"http://localhost:8080/lra-coordinator/0_ffffc0a8000e_a985_6113fdf6_2\",\"clientId\":\"org.acme.GreetingResource#start\",\"status\":\"Active\",\"startTime\":1628700150466,\"finishTime\":0,\"httpStatus\":204,\"topLevel\":true,\"recovering\":false}]\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:497
#, fuzzy
msgid "Now end the LRA in a different method:"
msgstr "Agora, acabar com o LRA com um método diferente:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:504
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" http://localhost:8080/hello\n"
"hello with context http://localhost:8080/lra-coordinator/0_ffffc0a8000e_a985_6113fdf6_2\n"
"completing http://localhost:8080/lra-coordinator/0_ffffc0a8000e_a985_6113fdf6_2\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:506
#, fuzzy
msgid "A later extension will provide better support for embedded coordinators (including configuring them using standard quarkus mechanisms)."
msgstr "Uma extensão posterior fornecerá um melhor suporte para coordenadores incorporados (incluindo a sua configuração utilizando mecanismos quarkus padrão)."
