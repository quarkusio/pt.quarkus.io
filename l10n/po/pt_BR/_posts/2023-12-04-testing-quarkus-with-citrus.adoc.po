msgid ""
msgstr ""
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Testing Quarkus with Citrus"
msgstr "Testando o Quarkus com o Citrus"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Explore how to verify Quarkus event-driven applications with the Citrus integration test framework."
msgstr "Explore como verificar os aplicativos orientados por eventos do Quarkus com a estrutura de teste de integração Citrus."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"This post shows how to combine Quarkus with the https://citrusframework.org[Citrus] test framework in order to write automated tests for event-driven applications.\n"
"https://citrusframework.org[Citrus] is an Open Source Java test framework focusing on messaging and integration testing in general."
msgstr "Este post mostra como combinar o Quarkus com a estrutura de teste link:https://citrusframework.org[Citrus] para escrever testes automatizados para aplicativos orientados por eventos. link:https://citrusframework.org[O Citrus] é uma estrutura de teste Java de código aberto que se concentra em testes de mensagens e de integração em geral."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"Developers can easily empower the *@QuarkusTest* with Citrus capabilities in order to produce and consume events during the test.\n"
"As a result the test is able to interact with the Quarkus event-driven application by exchanging events and messages with real messaging communication."
msgstr "Os desenvolvedores podem facilmente capacitar o *@QuarkusTest* com recursos Citrus para produzir e consumir eventos durante o teste. Como resultado, o teste é capaz de interagir com o aplicativo orientado a eventos Quarkus trocando eventos e mensagens com comunicação real de mensagens."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Introducing the demo application"
msgstr "Apresentando o aplicativo de demonstração"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"In this post we use a Quarkus demo application called `food-market`.\n"
"You can find the demo application code and all Citrus tests in https://github.com/citrusframework/citrus-samples/tree/main/demo/sample-quarkus[this GitHub code repository].\n"
"The Quarkus application connects to Kafka streams as an event-driven application that produces and consumes various events (e.g. bookings, supplies, shipping events).\n"
"The processed events and their individual status are stored in a PostgreSQL database."
msgstr "Neste post, usamos um aplicativo de demonstração do Quarkus chamado `food-market` . O senhor pode encontrar o código do aplicativo de demonstração e todos os testes do Citrus link:https://github.com/citrusframework/citrus-samples/tree/main/demo/sample-quarkus[neste repositório de código do GitHub] . O aplicativo Quarkus se conecta aos fluxos do Kafka como um aplicativo orientado por eventos que produz e consome vários eventos (por exemplo, reservas, suprimentos, eventos de envio). Os eventos processados e seus status individuais são armazenados em um banco de dados PostgreSQL."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "The food-market application matches incoming `booking` and `supply` events and produces `shipping` and `booking-completed` events accordingly."
msgstr "O aplicativo do mercado de alimentos combina os eventos `booking` e `supply` recebidos e produz eventos `shipping` e `booking-completed` de acordo."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Each event references a product and specifies an amount as well as a price in a simple Json object structure."
msgstr "Cada evento faz referência a um produto e especifica uma quantidade e um preço em uma estrutura de objeto Json simples."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"Clients create the `booking` events and at the same time suppliers will add their individual `supply` events.\n"
"The Quarkus food-market application consumes both event types and finds matching bookings and supplies.\n"
"Once a booking and a supply do match in certain criteria the application produces `booking-completed` and `shipping` events as a result."
msgstr "Os clientes criam os eventos do `booking` e, ao mesmo tempo, os fornecedores adicionam seus eventos individuais do `supply` . O aplicativo de mercado de alimentos Quarkus consome os dois tipos de evento e encontra reservas e suprimentos correspondentes. Quando uma reserva e uma oferta correspondem a determinados critérios, o aplicativo produz os eventos `booking-completed` e `shipping` como resultado."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Last but not least the booking client gets informed via email about the completed booking status."
msgstr "Por último, mas não menos importante, o cliente da reserva é informado por e-mail sobre o status da reserva concluída."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "In a fully automated integration test we want to verify all events and their processing using real messaging communication with Kafka streams and database persistence."
msgstr "Em um teste de integração totalmente automatizado, queremos verificar todos os eventos e seu processamento usando a comunicação de mensagens reais com fluxos Kafka e persistência de banco de dados."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Testing the application with Citrus"
msgstr "Testar o aplicativo com o Citrus"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The Quarkus application connects to different infrastructure (Kafka, PostgreSQL, Mail SMTP).\n"
"The automated integration test should verify the message communication, the event processing and connectivity to all components.\n"
"We will use the Citrus test framework as it provides the complete toolset for testing this kind of event-driven message-based solutions."
msgstr "O aplicativo Quarkus se conecta a diferentes infraestruturas (Kafka, PostgreSQL, Mail SMTP). O teste de integração automatizado deve verificar a comunicação de mensagens, o processamento de eventos e a conectividade com todos os componentes. Usaremos a estrutura de teste Citrus, pois ela fornece o conjunto completo de ferramentas para testar esse tipo de solução baseada em mensagens orientadas por eventos."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The first thing to do is to add Citrus to the Quarkus project.\n"
"The most convenient way is to import the `citrus-bom`."
msgstr "A primeira coisa a fazer é adicionar o Citrus ao projeto Quarkus. A maneira mais conveniente é importar o `citrus-bom` ."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Citrus BOM"
msgstr "Lista técnica de Citrus"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The `citrus-quarkus` extension provides a special `@QuarkusTest` resource implementation that enables us to combine Citrus with a Quarkus test.\n"
"So let's add this extension as a test scoped dependency."
msgstr "A extensão `citrus-quarkus` fornece uma implementação especial do recurso `@QuarkusTest` que nos permite combinar o Citrus com um teste Quarkus. Portanto, vamos adicionar essa extensão como uma dependência com escopo de teste."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Citrus Quarkus extension"
msgstr "Extensão Citrus Quarkus"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"Also, we need to include some other Citrus modules because we want to exchange data via Kafka and connect to the PostgreSQL database as part of the test.\n"
"Citrus is very modular. This means you can choose from a wide range of modules each of them adding specific testing capabilities to your project (e.g. `citrus-kafka`, `citrus-sql`, `citrus-validation-json`)."
msgstr "Além disso, precisamos incluir alguns outros módulos Citrus porque queremos trocar dados via Kafka e nos conectar ao banco de dados PostgreSQL como parte do teste. O Citrus é muito modular. Isso significa que o senhor pode escolher entre uma ampla variedade de módulos, cada um deles adicionando recursos de teste específicos ao seu projeto (por exemplo, `citrus-kafka` , `citrus-sql` , `citrus-validation-json` )."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "In this sample project we include the following Citrus modules as test scoped dependencies:"
msgstr "Neste projeto de amostra, incluímos os seguintes módulos Citrus como dependências com escopo de teste:"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "citrus-quarkus"
msgstr "citrus-quarkus"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "citrus-kafka"
msgstr "citrus-kafka"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "citrus-validation-json"
msgstr "citrus-validation-json"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "citrus-sql"
msgstr "citrus-sql"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "citrus-mail"
msgstr "correio cítrico"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"This completes the setup of all required Citrus modules.\n"
"Now we can move on to writing an automated integration test in order to verify the Quarkus event-driven application."
msgstr "Isso conclui a configuração de todos os módulos Citrus necessários. Agora, podemos passar a escrever um teste de integração automatizado para verificar o aplicativo orientado por eventos do Quarkus."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Writing Citrus tests on top of QuarkusTest"
msgstr "Escrevendo testes Citrus em cima do QuarkusTest"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "We want to write an automated test that makes sure that all inbound events (`booking` and `supply`) are being processed properly and that the resulting outbound  events (`booking-completed` and `shipping`) are being produced as expected."
msgstr "Queremos escrever um teste automatizado que garanta que todos os eventos de entrada ( `booking` e `supply` ) estejam sendo processados corretamente e que os eventos de saída resultantes ( `booking-completed` e `shipping` ) estejam sendo produzidos conforme o esperado."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"Citrus as a test framework will act as all surrounding components producing client events and verifying resulting outbound events.\n"
"Also, Citrus will have a look into the database in order to verify the persisted domain model objects.\n"
"Later on in a more advanced test scenario Citrus will also receive and verify the mail message content that is sent by the food-market Quarkus application."
msgstr "O Citrus, como estrutura de teste, atuará como todos os componentes circundantes, produzindo eventos de cliente e verificando os eventos de saída resultantes. Além disso, o Citrus examinará o banco de dados para verificar os objetos persistentes do modelo de domínio. Posteriormente, em um cenário de teste mais avançado, o Citrus também receberá e verificará o conteúdo da mensagem de e-mail enviada pelo aplicativo Quarkus do mercado de alimentos."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"For now let's start with a normal Quarkus test.\n"
"The test needs to start the Quarkus application and also needs to prepare some infrastructure such as the database and the Kafka streams message broker. Fortunately Quarkus dev services provides the awesome testing capability to automatically start Testcontainers that represent the required infrastructure."
msgstr "Por enquanto, vamos começar com um teste normal do Quarkus. O teste precisa iniciar o aplicativo Quarkus e também precisa preparar alguma infraestrutura, como o banco de dados e o corretor de mensagens de fluxos Kafka. Felizmente, os serviços de desenvolvimento do Quarkus fornecem o incrível recurso de teste para iniciar automaticamente os Testcontainers que representam a infraestrutura necessária."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The test is annotated with the `@QuarkusTest` annotation.\n"
"It enables the Quarkus dev services test capabilities and takes care of setting everything up for you.\n"
"The test itself is an arbitrary JUnit Jupiter unit test, so you can start this test from your Java IDE or as part of the Maven test lifecycle."
msgstr "O teste é anotado com a anotação `@QuarkusTest` . Ele habilita os recursos de teste dos serviços de desenvolvimento do Quarkus e cuida da configuração de tudo para o senhor. O teste em si é um teste unitário JUnit Jupiter arbitrário, de modo que o senhor pode iniciar esse teste a partir do seu IDE Java ou como parte do ciclo de vida do teste Maven."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"Now let's add Citrus to the picture.\n"
"With the Citrus Quarkus extension that we have added to the Maven project in the previous section we can now enable the Citrus capabilities for the test.\n"
"Just add the `@CitrusSupport` annotation to the test class."
msgstr "Agora vamos adicionar o Citrus ao cenário. Com a extensão Citrus Quarkus que adicionamos ao projeto Maven na seção anterior, podemos agora ativar os recursos Citrus para o teste. Basta adicionar a anotação `@CitrusSupport` à classe de teste."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"This annotation enables the Citrus capabilities for the Quarkus test.\n"
"Citrus will now participate in the Quarkus test lifecycle which enables you to inject specific Citrus resources such as endpoints as well as the Citrus test runner."
msgstr "Essa anotação habilita os recursos do Citrus para o teste do Quarkus. O Citrus agora participará do ciclo de vida do teste do Quarkus, o que permite que o senhor injete recursos específicos do Citrus, como pontos de extremidade, bem como o executor de teste do Citrus."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Citrus enabled Quarkus test"
msgstr "Teste Quarkus habilitado para Citrus"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The Citrus enabled test uses additional resources such as the `KafkaEndpoint` named bookings.\n"
"The `KafkaEndpoint` component comes with the `citrus-kafka` module and allows us to interact with Kafka streams by sending and receiving events to a topic."
msgstr "O teste habilitado para Citrus usa recursos adicionais, como o `KafkaEndpoint` denominado bookings. O componente `KafkaEndpoint` vem com o módulo `citrus-kafka` e nos permite interagir com os fluxos do Kafka enviando e recebendo eventos para um tópico."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The Citrus `TestCaseRunner` resource represents the entrance to the Citrus Java domain specific testing language.\n"
"This allows us to run any Citrus test action (e.g. send/receive messages, verify data in an SQL database) during the test."
msgstr "O recurso Citrus `TestCaseRunner` representa a entrada para a linguagem de teste específica do domínio Citrus Java. Isso nos permite executar qualquer ação de teste Citrus (por exemplo, enviar/receber mensagens, verificar dados em um banco de dados SQL) durante o teste."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "See this sample code to send a message to the Kafka streams topic."
msgstr "Veja este código de exemplo para enviar uma mensagem ao tópico de fluxos do Kafka."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Send booking event"
msgstr "Enviar evento de reserva"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The injected Citrus `TestCaseRunner` is able to use a Gherkin `Given-When-Then` syntax and executes Citrus test operations.\n"
"This first test activity references the KafkaEndpoint `bookings` in a send operation.\n"
"The test is able to use domain model objects (`Product` and `Booking`) as message body.\n"
"The send operation properly serializes the domain model objects to Json with the injected `ObjectMapper`."
msgstr "O Citrus `TestCaseRunner` injetado é capaz de usar uma sintaxe Gherkin `Given-When-Then` e executa operações de teste do Citrus. Essa primeira atividade de teste faz referência ao KafkaEndpoint `bookings` em uma operação de envio. O teste pode usar objetos do modelo de domínio ( `Product` e `Booking` ) como corpo da mensagem. A operação de envio serializa corretamente os objetos do modelo de domínio para Json com o `ObjectMapper` injetado."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "You can also use the `@QuarkusIntegrationTest` annotation in order to start the demo application in a separate JVM. This separates the test code from the application and usually binds the test to the integration-test phase in Maven. Please be aware that an integration test is not able to inject application resources such as ObjectMapper or DataSource. The good news is that you can use the very same Citrus extension also with the `@QuarkusIntegrationTest`."
msgstr "O senhor também pode usar a anotação `@QuarkusIntegrationTest` para iniciar o aplicativo de demonstração em uma JVM separada. Isso separa o código de teste do aplicativo e geralmente vincula o teste à fase de teste de integração no Maven. Lembre-se de que um teste de integração não pode injetar recursos do aplicativo, como ObjectMapper ou DataSource. A boa notícia é que o senhor pode usar a mesma extensão Citrus também com o `@QuarkusIntegrationTest` ."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "This is basically how you can combine Citrus capabilities with Quarkus test dev services in an automated integration test."
msgstr "Basicamente, é assim que o senhor pode combinar os recursos do Citrus com os serviços de desenvolvimento de testes do Quarkus em um teste de integração automatizado."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The rest of the story is quite easy.\n"
"In the same way as sending the booking event we can now also send a matching `supply` event."
msgstr "O restante da história é bastante simples. Da mesma forma que enviamos o evento de reserva, agora também podemos enviar um evento correspondente para `supply` ."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Send supply event"
msgstr "Enviar evento de fornecimento"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The test now has produced a booking and a matching supply event.\n"
"This should trigger the food-market application to produce respective `booking-completed` and `shipping` events.\n"
"As a next step in the test we should receive and verify these events with Citrus."
msgstr "O teste agora produziu uma reserva e um evento de fornecimento correspondente. Isso deve acionar o aplicativo do mercado de alimentos para produzir os respectivos eventos `booking-completed` e `shipping` . Como próxima etapa do teste, devemos receber e verificar esses eventos com o Citrus."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Receive and verify events"
msgstr "Receber e verificar eventos"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"Citrus is able to perform powerful message validation when receiving the events.\n"
"This is why we have added the `citrus-validation-json` module in the very beginning.\n"
"The Json message validator in Citrus will compare the received Json object with an expected Json template and make sure that all fields and properties do match as expected."
msgstr "O Citrus é capaz de executar uma validação de mensagem poderosa ao receber os eventos. É por isso que adicionamos o módulo `citrus-validation-json` logo no início. O validador de mensagens Json no Citrus comparará o objeto Json recebido com um modelo Json esperado e garantirá que todos os campos e propriedades correspondam ao esperado."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The test creates the expected `shippingEvent` Json object which uses properties like the `client`, `product` and the `amount`.\n"
"The received event must match these expected values in order to pass the test.\n"
"Unfortunately we are not able to verify the `address` field because it has been generated by the Quarkus application.\n"
"This is why the `address` gets ignored during the validation by using the `@ignored@` Citrus validation expression as an expected value."
msgstr "O teste cria o objeto Json esperado `shippingEvent` que usa propriedades como `client` , `product` e `amount` . O evento recebido deve corresponder a esses valores esperados para que o teste seja aprovado. Infelizmente, não podemos verificar o campo `address` porque ele foi gerado pelo aplicativo Quarkus. É por isso que o campo `address` é ignorado durante a validação, usando a expressão de validação do Citrus `@ignored@` como um valor esperado."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The Citrus Json message validator is quite powerful and will now compare the received shipping event with the expected Json object.\n"
"All given Json properties get verified and the test will fail when there is a mismatch."
msgstr "O validador de mensagens Json do Citrus é bastante eficiente e agora comparará o evento de envio recebido com o objeto Json esperado. Todas as propriedades Json fornecidas são verificadas e o teste falhará quando houver uma incompatibilidade."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Received Json"
msgstr "Json recebido"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Control Json"
msgstr "Controle Json"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "You can use ignore expressions, use validation matchers, functions and test variables in the expected template."
msgstr "O senhor pode usar expressões ignoradas, usar combinadores de validação, funções e variáveis de teste no modelo esperado."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"This completes the first test with many events being exchanged with the application under test.\n"
"Now let's run the test."
msgstr "Isso conclui o primeiro teste com muitos eventos sendo trocados com o aplicativo em teste. Agora vamos executar o teste."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Running the Citrus tests"
msgstr "Execução dos testes Citrus"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The Quarkus test framework in the example uses JUnit Jupiter as a test driver.\n"
"This means you can run the tests just like any other JUnit test from your Java IDE or with Maven for instance."
msgstr "A estrutura de teste do Quarkus no exemplo usa o JUnit Jupiter como um driver de teste. Isso significa que o senhor pode executar os testes como qualquer outro teste JUnit do seu IDE Java ou com o Maven, por exemplo."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The test is now run with the Maven test lifecycle.\n"
"The `@QuarkusTest` dev services will start the application and prepare the infrastructure with Testcontainers.\n"
"Then Citrus will produce the events and verify the outcome with powerful Json validation."
msgstr "O teste agora é executado com o ciclo de vida do teste Maven. Os serviços de desenvolvimento do `@QuarkusTest` iniciarão o aplicativo e prepararão a infraestrutura com Testcontainers. Em seguida, o Citrus produzirá os eventos e verificará o resultado com uma poderosa validação Json."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"In this first test we made sure that the application is able to process the incoming events and that the resulting events are produced as expected.\n"
"Now let's move on to more advanced tests including the database and a mail server SMTP communication."
msgstr "Nesse primeiro teste, verificamos se o aplicativo é capaz de processar os eventos de entrada e se os eventos resultantes são produzidos conforme o esperado. Agora vamos passar para testes mais avançados, incluindo o banco de dados e uma comunicação SMTP do servidor de e-mail."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Verify stored data with SQL"
msgstr "Verificar dados armazenados com SQL"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"When testing distributed event-driven applications the timing of events is an essential ingredient to success.\n"
"Each test scenario is keen to verify a specific application behavior and the correct timing of events is key to triggering and verifying this behavior.\n"
"Also timing is very important to avoid running into flaky tests where racing conditions may influence the test result on slower machines (e.g. CI jobs)."
msgstr "Ao testar aplicativos distribuídos orientados por eventos, o tempo dos eventos é um ingrediente essencial para o sucesso. Cada cenário de teste está empenhado em verificar um comportamento específico do aplicativo e o tempo correto dos eventos é fundamental para acionar e verificar esse comportamento. Além disso, o tempo é muito importante para evitar a execução de testes com falhas, em que as condições de corrida podem influenciar o resultado do teste em máquinas mais lentas (por exemplo, trabalhos de CI)."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"As an example assume the test needs to create a new product first and then sends a new booking event referencing this newly added product.\n"
"The test needs to wait for the product event to be processed completely before sending the booking event."
msgstr "Como exemplo, suponha que o teste precise primeiro criar um novo produto e, em seguida, enviar um novo evento de reserva com referência a esse produto recém-adicionado. O teste precisa aguardar que o evento do produto seja completamente processado antes de enviar o evento de reserva."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "In Citrus we are able to add this waiting state very easily."
msgstr "No Citrus, podemos adicionar esse estado de espera com muita facilidade."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Wait for object to be created in persistence layer"
msgstr "Aguardar a criação do objeto na camada de persistência"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"After the product event has been sent we use the `repeatOnError()` test action.\n"
"In combination with an `autoSleep` and a max retry count setting the action periodically polls the database for the created product.\n"
"This makes sure that we do not continue with the test until the new product has been properly stored to the database."
msgstr "Após o envio do evento do produto, usamos a ação de teste `repeatOnError()` . Em combinação com uma configuração `autoSleep` e uma contagem máxima de tentativas, a ação pesquisa periodicamente o banco de dados em busca do produto criado. Isso garante que não continuaremos com o teste até que o novo produto tenha sido armazenado corretamente no banco de dados."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "The database interaction in Citrus comes with the `citrus-sql` module and enables you to verify any SQL result set."
msgstr "A interação com o banco de dados no Citrus vem com o módulo `citrus-sql` e permite que o senhor verifique qualquer conjunto de resultados SQL."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Quarkus is able to inject the `dataSource` that is being used to connect to the PostgreSQL database. This also works when Quarkus uses the PostgreSQL Testcontainers infrastructure in the test. Just use the `@Inject` annotation in your test and reference the datasource in the Citrus `sql()` test action."
msgstr "O Quarkus é capaz de injetar o `dataSource` que está sendo usado para se conectar ao banco de dados PostgreSQL. Isso também funciona quando o Quarkus usa a infraestrutura de Testcontainers do PostgreSQL no teste. Basta usar a anotação `@Inject` em seu teste e fazer referência à fonte de dados na ação de teste Citrus `sql()` ."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "You may introduce test behaviors for common Citrus test logic such as waiting for a domain model object to be persisted in the database. In general a test behavior encapsulates a set of Citrus test actions to a reusable entity that you can reference many times from your tests."
msgstr "O senhor pode introduzir comportamentos de teste para a lógica de teste comum do Citrus, como esperar que um objeto do modelo de domínio seja persistido no banco de dados. Em geral, um comportamento de teste encapsula um conjunto de ações de teste do Citrus em uma entidade reutilizável que pode ser referenciada várias vezes em seus testes."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Citrus test behavior"
msgstr "Comportamento do teste Citrus"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "In a test you can apply the test behavior."
msgstr "Em um teste, o senhor pode aplicar o comportamento do teste."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Apply test behaviors"
msgstr "Aplicar comportamentos de teste"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The ability to look into the database in order to check on the persisted entities is quite powerful as it allows us to fully control the test workflow.\n"
"We could also use the Citrus SQL result set verification in the test to verify a booking status."
msgstr "A capacidade de consultar o banco de dados para verificar as entidades persistentes é bastante poderosa, pois nos permite controlar totalmente o fluxo de trabalho do teste. Também poderíamos usar a verificação do conjunto de resultados do Citrus SQL no teste para verificar o status de uma reserva."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Verify booking status completed"
msgstr "Verificar o status da reserva concluída"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"This verifies that the booking with the given id has the status `COMPLETED`.\n"
"The SQL result set validation in Citrus is able to handle complex column sets with multiple rows."
msgstr "Isso verifica se a reserva com o id fornecido tem o status `COMPLETED` . A validação do conjunto de resultados SQL no Citrus é capaz de lidar com conjuntos de colunas complexas com várias linhas."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Verify the mail server interaction"
msgstr "Verificar a interação com o servidor de correio eletrônico"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "The food-market Quarkus application under test may inform the client about a completed booking via email."
msgstr "O aplicativo Quarkus do mercado de alimentos em teste pode informar o cliente sobre uma reserva concluída por e-mail."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Mail content"
msgstr "Conteúdo do correio eletrônico"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "The Citrus test is able to verify this particular mail content by starting an SMTP mail server that will receive that mail message and verify its content."
msgstr "O teste Citrus é capaz de verificar esse conteúdo de e-mail específico iniciando um servidor de e-mail SMTP que receberá essa mensagem de e-mail e verificará seu conteúdo."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "In Quarkus we can use the `quarkus-mailer` extension to send mails via SMTP."
msgstr "No Quarkus, podemos usar a extensão `quarkus-mailer` para enviar e-mails via SMTP."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Quarkus mail service"
msgstr "Serviço de correio eletrônico Quarkus"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "For the test Citrus starts an SMTP mail server that is able to accept the mail messages sent by Quarkus."
msgstr "Para o teste, o Citrus inicia um servidor de e-mail SMTP capaz de aceitar as mensagens de e-mail enviadas pelo Quarkus."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Citrus mail server component"
msgstr "Componente do servidor de correio Citrus"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Let's tell Quarkus to connect to this Citrus mail server during the test."
msgstr "Vamos dizer ao Quarkus para se conectar a esse servidor de e-mail Citrus durante o teste."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Quarkus mailer configuration"
msgstr "Configuração do Quarkus mailer"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "With this setup we can now add a test action that receives and verifies the mail message sent."
msgstr "Com essa configuração, podemos agora adicionar uma ação de teste que recebe e verifica a mensagem de e-mail enviada."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Verify mail message sent"
msgstr "Verificar o envio de mensagens de correio eletrônico"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The expected mail content uses some test variables `${client}` and `${product}`.\n"
"You may set these test variables in Citrus accordingly so these placeholders get resolved before the validation is performed."
msgstr "O conteúdo esperado do e-mail usa algumas variáveis de teste `${client}` e `${product}` . O senhor pode definir essas variáveis de teste no Citrus de forma adequada para que esses espaços reservados sejam resolvidos antes da validação ser realizada."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"The mail server responds with a code and a text according to the SMTP protocol.\n"
"In the success case this is a `250` `Ok` response."
msgstr "O servidor de e-mail responde com um código e um texto de acordo com o protocolo SMTP. No caso de sucesso, trata-se de uma resposta `250` `Ok` ."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"Again you can introduce a Citrus test behavior that covers the booking completed mail message verification.\n"
"Many tests may apply this behavior in their test logic then."
msgstr "Novamente, o senhor pode introduzir um comportamento de teste do Citrus que cubra a verificação da mensagem de e-mail de reserva concluída. Muitos testes podem aplicar esse comportamento em sua lógica de teste."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Another interesting point about the mail server interaction is that the Citrus mail server component is also able to simulate a mail server error."
msgstr "Outro ponto interessante sobre a interação com o servidor de e-mail é que o componente do servidor de e-mail Citrus também é capaz de simular um erro no servidor de e-mail."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Simulate mail server error"
msgstr "Simular erro do servidor de correio eletrônico"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"This time the Citrus mail server explicitly responds with a `443` `Failed!` error and the Quarkus application needs to handle this error accordingly.\n"
"Verifying error scenarios in automated integration tests is very important and helps us to develop robust applications.\n"
"It is great to have the opportunity to trigger these error scenarios with Citrus in an automated test."
msgstr "Desta vez, o servidor de e-mail Citrus responde explicitamente com um erro `443` `Failed!` e o aplicativo Quarkus precisa tratar esse erro adequadamente. Verificar cenários de erro em testes de integração automatizados é muito importante e nos ajuda a desenvolver aplicativos robustos. É ótimo ter a oportunidade de acionar esses cenários de erro com o Citrus em um teste automatizado."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid "Summary"
msgstr "Resumo"

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"In this post we have seen how to combine the Citrus test framework with Quarkus test dev services in order to perform automated integration testing of event-driven applications.\n"
"The test is able to produce/consume events on Kafka streams and verifies the Quarkus application accordingly by verifying the Json data and the persisted entities in the database."
msgstr "Nesta postagem, vimos como combinar a estrutura de teste Citrus com os serviços de desenvolvimento de teste do Quarkus para realizar testes de integração automatizados de aplicativos orientados por eventos. O teste é capaz de produzir/consumir eventos em fluxos Kafka e verifica o aplicativo Quarkus adequadamente, verificando os dados Json e as entidades persistentes no banco de dados."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"Citrus as a framework provides many modules each of them providing endpoints (client and server) for straight forward messaging interaction during an integration test (e.g. Kafka, JMS, FTP, Http, SOAP, Mail, ...).\n"
"The message validation capabilities allow us to verify the exchanged message content with different formats (e.g. Json, XML, plaintext)."
msgstr "O Citrus, como estrutura, oferece muitos módulos, cada um deles fornecendo pontos de extremidade (cliente e servidor) para interação direta de mensagens durante um teste de integração (por exemplo, Kafka, JMS, FTP, Http, SOAP, Mail, etc.). Os recursos de validação de mensagens nos permitem verificar o conteúdo da mensagem trocada com diferentes formatos (por exemplo, Json, XML, texto simples)."

#: _posts/2023-12-04-testing-quarkus-with-citrus.adoc
#, fuzzy
msgid ""
"While the Citrus project has been around for quite some time the Citrus Quarkus extension is a new addition in the most recent Citrus version 4.0.\n"
"As always, your feedback is much appreciated!\n"
"Please give it a try and let us know what you think about this approach of automated integration testing with the combination of Citrus and Quarkus testing."
msgstr "Embora o projeto Citrus já exista há algum tempo, a extensão Citrus Quarkus é uma nova adição na versão 4.0 mais recente do Citrus. Como sempre, seu feedback é muito apreciado! Experimente e diga-nos o que o senhor pensa sobre essa abordagem de testes de integração automatizados com a combinação dos testes do Citrus e do Quarkus."
