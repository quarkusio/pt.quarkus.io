# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy, no-wrap
msgid "Building Kafka Streams applications with Quarkus and Eclipse MicroProfile"
msgstr "Criar aplicações Kafka Streams com o Quarkus e o Eclipse MicroProfile"

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"https://kafka.apache.org/documentation/streams/[Kafka Streams] is a very popular solution for implementing stream processing applications based on Apache Kafka.\n"
"It lets you do typical data streaming tasks like filtering and transforming messages,\n"
"joining multiple Kafka topics, performing (stateful) calculations, grouping and aggregating values in time windows and much more."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"Unlike other streaming query engines that run on specific processing clusters,\n"
"Kafka Streams is a client library.\n"
"This means a (Java) application is needed which starts and runs the streaming pipeline,\n"
"reading from and writing to the Apache Kafka cluster."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"In this blog post we'll discuss how the combination of Quarkus and https://microprofile.io/[Eclipse MicroProfile] is a great foundation for implementing Kafka Streams applications,\n"
"running on the JVM and as native code compiled ahead of time via https://www.graalvm.org/[GraalVM]."
msgstr ""

#. type: Title ==
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy, no-wrap
msgid "The Quarkus extension for Kafka Streams"
msgstr "A extensão Quarkus para o Kafka Streams"

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"As of version 0.17.0, Quarkus comes with link:/guides/kafka-streams[an extension] for building Kafka Streams applications.\n"
"To create a new Quarkus project with this extension, run the following:"
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"This will set up a new project, adding the dependency to the Quarkus Kafka Streams extension,\n"
"which in turn will pull in Kafka Streams and all its dependencies."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"If you've worked with Kafka Streams before, the implementation of a data streaming pipeline will look very familiar to you.\n"
"You first build up a `Topology` and then create a `KafkaStreams` instance.\n"
"For starting and stopping the latter, Quarkus' `StartupEvent` and `ShutdownEvent` classes come in handy."
msgstr ""

#. type: Plain text
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy
msgid "Overall, the structure of a Kafka Streams pipeline running on Quarkus will look like so:"
msgstr "Em termos gerais, a estrutura de um pipeline do Kafka Streams em execução no Quarkus terá o seguinte aspeto:"

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"For the very common requirement that you'd like to serialize and deserialize Java types used in the streaming pipeline into/from JSON\n"
"(e.g. when materializing them in a state store),\n"
"the Quarkus Kafka Streams extension provides the class `io.quarkus.kafka.client.serialization.JsonbSerde`.\n"
"It's a `Serde` implementation based on JSON-B:"
msgstr ""

#. type: Title ==
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy, no-wrap
msgid "Running Native"
msgstr "Nativo em funcionamento"

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"Based on Kafka's notion of topic partitioning, Kafka Streams applications can easily be scaled out:\n"
"the load will be shared amongst multiple instances of the application,\n"
"each processing just a subset of the partitions of the input topic(s)."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"Running Quarkus applications in native code via GraalVM comes in very handy for that:\n"
"besides the very fast start-up time, the applications will use significantly less memory when compiled to native code.\n"
"This lets you spin up many instances of a Quarkus-based Kafka Streams pipeline in parallel,\n"
"in a very memory-efficient way."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"The extension takes care of everything needed for building native Kafka Streams applications,\n"
"for instance it makes sure that the right RocksDB native libraries are added to the application image.\n"
"All you need to do is to specify the `enableJni` option for the Quarkus Maven plug-in,\n"
"allowing those native libraries to be invoked via JNI:"
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"When using the `JsonbSerde` for unmarshalling JSON into corresponding Java objects,\n"
"those types must be marked with the `@RegisterForReflection` annotation,\n"
"so that they can to be instantiated reflectively by JSON-B in native mode:"
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"Then build the application using the `native` profile\n"
"(note this requires GraalVM to be installed on your system; refer to the Quarkus link:/guides/building-native-image[native image] guide to learn more):"
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"Finding the right amount of memory needed for running the application can require some testing.\n"
"E.g. observe CPU load and run the native binary with the `-XX:+PrintGC -XX:+PrintGCTimeStamps -XX:+VerboseGC` options\n"
"in order to gain insight into how often garbage collection kicks in.\n"
"If you started the application with not enough heap space,\n"
"you'll typically observe that GC is happening very frequently, causing increased CPU load."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"To give an example, for the https://github.com/quarkusio/quarkus-quickstarts/tree/main/kafka-streams-quickstart[streaming pipeline] discussed in the Kafka Streams extension guide,\n"
"a heap size of 32 MB (`-Xmx32m`) works very well,\n"
"resulting in less than 50 MB memory needed by the process in total\n"
"(RSS, resident set size).\n"
"Note that this number also contains the memory needed for the HTTP endpoint defined in that example,\n"
"which is used for answering interactive queries via REST."
msgstr ""

#. type: Title ==
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy, no-wrap
msgid "Gaining Operational Insight"
msgstr "Obtenção de informações operacionais"

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"One of the nice things about Quarkus is that it comes with support for all the Eclipse MicroProfile APIs.\n"
"They help to address common requirements when building microservices,\n"
"such as https://microprofile.io/project/eclipse/microprofile-health[health checks] (\"Is my application running and ready to handle requests?\")\n"
"and https://microprofile.io/project/eclipse/microprofile-metrics[metrics] (\"What's the throughput of my application?\", \"How many requests has it processed?\" etc.)."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"Based on those APIs,\n"
"it just requires a little bit of coding to implement health checks and metrics for a Kafka Streams application.\n"
"You can add the right dependencies by running:"
msgstr ""

#. type: Title ==
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy, no-wrap
msgid "Healthchecks"
msgstr "Controlos de saúde"

#. type: Plain text
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy
msgid "Then creating the health check is as simple as adding the following to the pipeline implementation:"
msgstr "Em seguida, criar o controlo de saúde é tão simples como adicionar o seguinte à implementação do pipeline:"

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"This will expose a health check via HTTP under `/health/live`,\n"
"which when queried will yield a response like this:"
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"When using a container orchestrator such as Kubernetes,\n"
"you could then set up a https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/[liveness probe] for this endpoint.\n"
"If the health check fails (i.e. the streaming pipeline is not in the running state),\n"
"it will return an HTTP 503 response.\n"
"This would be the indicator to the orchestrator to restart the pod of this application."
msgstr ""

#. type: Title ==
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy, no-wrap
msgid "Metrics"
msgstr "Métricas"

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"While a health check provides simple means of finding out whether the application is in a state where it can handle requests/messages or not,\n"
"it is desirable to have more insight into the behaviour of the service.\n"
"E.g. it might be of interest to see how many messages have been processed by the streaming pipeline,\n"
"what's the arrival rate of messages, what's the average processing time and much more."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"Kafka Streams comes with https://kafka.apache.org/22/javadoc/org/apache/kafka/streams/KafkaStreams.html#metrics--[rich metrics] capabilities which can help to answer these questions.\n"
"Using the MicroProfile Metrics API, these metrics can be exposed via HTTP.\n"
"From there they can be scraped by tools such as https://prometheus.io/[Prometheus] and eventually be fed to dashboard solutions such as https://grafana.com/[Grafana].\n"
"Note that exposing metrics via HTTP instead of JMX has the advantage that this also works when running the application in native mode via GraalVM."
msgstr ""

#. type: Plain text
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy
msgid "Similar to the health check case, just a bit of glue code is needed for exposing the metrics:"
msgstr "À semelhança do caso do controlo de saúde, é necessário apenas um pouco de código cola para expor as métricas:"

#. type: Plain text
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy
msgid "Process all Kafka Streams metrics, using a unique name to register them"
msgstr "Processar todas as métricas de Kafka Streams, utilizando um nome único para as registar"

#. type: Plain text
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy
msgid "Some string-typed \"metrics\" must be excluded"
msgstr "Algumas \"métricas\" do tipo string devem ser excluídas"

#. type: Plain text
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy
msgid "All metrics whose name ends with \"total\" or \"counter\" will be exposed as counter-typed metrics"
msgstr "Todas as métricas cujo nome termina com \"total\" ou \"contador\" serão expostas como métricas de tipo contador"

#. type: Plain text
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy
msgid "All other metrics will be exposed as gauge-typed metrics, i.e. plain numeric values"
msgstr "Todas as outras métricas serão expostas como métricas do tipo gauge, ou seja, valores numéricos simples"

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"Once the application is started, the metrics will be exposed under `/metrics`,\n"
"returning the data in the OpenMetrics format by default:"
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"From here it's a matter of minutes to set up Prometheus to scrape this target,\n"
"configure a Prometheus data source in Grafana and configure a dashboard for visualizing the metrics of interest to you.\n"
"E.g. the following shows a simple dashboard displaying the poll/process/commit rates and latencies as well as the total number of processed events\n"
"in the quickstart example:"
msgstr ""

#. type: Title ==
#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
#, fuzzy, no-wrap
msgid "Summary and Outlook"
msgstr "Resumo e perspectivas"

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"Quarkus and Eclipse MicroProfile are a great basis for building Kafka Streams applications.\n"
"The Quarkus extension for Kafka Streams comes with everything needed to run stream processing pipelines on the JVM as well as in native mode via GraalVM.\n"
"The MicroProfile APIs for health checks and metrics can be used to expose the right information\n"
"for gaining insight into running stream processing applications."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"Going forward, we plan to further reduce the efforts needed for building Kafka Streams applications on Quarkus.\n"
"Instead of having to deal with the lifecycle of the pipeline yourself,\n"
"it should be enough to declare a CDI producer method returning the streaming `Topology`:"
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"This means you'll be able to focus on implementing the actual pipeline logic,\n"
"while the Quarkus extension would take care of everything else:\n"
"configuring Kafka Streams based on the Quarkus `application.properties` file,\n"
"starting the pipeline and automatically exposing healthchecks and metrics."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"In case this sounds interesting to you, have an eye on the next Quarkus release announcements,\n"
"as this improved functionality should be out soon.\n"
"If you got any related ideas, let us know and join the discussion in Quarkus issue https://github.com/quarkusio/quarkus/issues/2863[#2863]."
msgstr ""

#: _posts/2019-06-26-kafka-streams-applications-with-quarkus-and-microprofile.adoc
msgid ""
"To learn more about the Quarkus extension for Kafka Streams and its current capabilities,\n"
"check out link:/guides/kafka-streams[the detailed guide].\n"
"It not only discusses the actual stream pipeline implementation, but also touches on\n"
"building (distributed) interactive queries for exposing the current processing state via REST."
msgstr ""
