# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy, no-wrap
msgid "DataCater uses Quarkus to make Data Streaming more accessible"
msgstr "O DataCater utiliza o Quarkus para tornar o fluxo de dados mais acessível"

#. type: YAML Front Matter: synopsis
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy, no-wrap
msgid "DataCater provides a developer-friendly ETL platform. Learn why it chose Quarkus for its recent rewrite."
msgstr "A DataCater fornece uma plataforma ETL de fácil desenvolvimento. Saiba por que razão escolheu a Quarkus para a sua recente reescrita."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"This article gives a brief overview of the data streaming platform DataCater, discusses how we moved from Scala Play! and Kafka Streams to Quarkus, and\n"
"presents why we think that Quarkus is an exceptional framework for developing cloud-native Java applications."
msgstr "Este artigo oferece uma breve visão geral da plataforma de streaming de dados DataCater, discute como mudamos do Scala Play! e do Kafka Streams para o Quarkus e apresenta por que achamos que o Quarkus é uma estrutura excepcional para o desenvolvimento de aplicativos Java nativos da nuvem."

#. type: Title ==
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy, no-wrap
msgid "What is DataCater?"
msgstr "O que é o DataCater?"

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"https://datacater.io[DataCater^] is a real-time, cloud-native data pipeline platform based on Apache Kafka and Kubernetes. It allows users to build streaming data pipelines that stream records between different\n"
"Apache Kafka topics and can apply filters or transforms to the records on the way.\n"
"Given its focus on data scientists and data engineers as target users, DataCater enables users\n"
"to develop transforms in Python. It provides an https://www.loom.com/share/15947f13e71540948e3f9d57eac64976[interactive, UI-based preview of streaming data pipelines^]\n"
"and uses Kubernetes as the runtime for pipeline deployments."
msgstr "link:https://datacater.io[O DataCater] é uma plataforma de pipeline de dados nativa da nuvem e em tempo real, baseada no Apache Kafka e no Kubernetes. Ele permite que os usuários criem pipelines de dados de streaming que transmitem registros entre diferentes tópicos do Apache Kafka e podem aplicar filtros ou transformações aos registros no caminho. Dado seu foco em cientistas e engenheiros de dados como usuários-alvo, o DataCater permite que os usuários desenvolvam transformações em Python. Ele oferece uma link:https://www.loom.com/share/15947f13e71540948e3f9d57eac64976[visualização interativa e baseada em interface do usuário de pipelines de dados de streaming] e usa o Kubernetes como tempo de execução para implementações de pipeline."

#. type: Title ==
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy, no-wrap
msgid "Why did DataCater choose Quarkus?"
msgstr "Porque é que a DataCater escolheu a Quarkus?"

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"DataCater was created in 2020 and initially built its control plane on top of the Scala framework https://www.playframework.com/[Play^] and implemented pipelines with https://kafka.apache.org/documentation/streams/[Kafka Streams^].\n"
"Over time, we experienced the following limitations and issues with the chosen technologies:"
msgstr "O DataCater foi criado em 2020 e, inicialmente, construiu seu plano de controle com base na estrutura Scala link:https://www.playframework.com/[Play] e implementou pipelines com link:https://kafka.apache.org/documentation/streams/[Kafka Streams] . Com o tempo, tivemos as seguintes limitações e problemas com as tecnologias escolhidas:"

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*Inefficient resource usage:* Kafka Streams applications consume a considerable amount of main memory, making it quite expensive to operate at scale."
msgstr "*Uso ineficiente de recursos:* Os aplicativos Kafka Streams consomem uma quantidade considerável de memória principal, o que torna a operação em escala bastante cara."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*Long startup times:* Starting a Kafka Streams application can take up to a few minutes, which has a negative impact on the availability of streaming data pipelines."
msgstr "*Tempos de inicialização longos:* A inicialização de um aplicativo Kafka Streams pode levar até alguns minutos, o que tem um impacto negativo na disponibilidade dos pipelines de dados de streaming."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"*Restriction to intra-cluster streaming:* By default, Kafka Streams can only stream data between topics of the same Apache Kafka cluster. When facing use cases that stream data between different Kafka clusters, for instance, between a production and test cluster,\n"
"we had to employ additional tooling, e.g., MirrorMaker 2."
msgstr "*Restrição ao streaming intra-cluster:* Por padrão, o Kafka Streams só pode transmitir dados entre tópicos do mesmo cluster do Apache Kafka. Ao enfrentar casos de uso que transmitem dados entre diferentes clusters do Kafka, por exemplo, entre um cluster de produção e um de teste, tivemos que empregar ferramentas adicionais, como o MirrorMaker 2."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*No support for Java 17:* The current Play! version 2.8 does not support running on top of Java 17."
msgstr "*Não há suporte para o Java 17:* a versão 2.8 atual do Play! não oferece suporte à execução sobre o Java 17."

#. type: Plain text
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "Especially the first two issues, inefficient resource usage and long startup times, hurt a lot when operating in the cloud at scale."
msgstr "Especialmente as duas primeiras questões, a utilização ineficiente de recursos e os longos tempos de arranque, são muito prejudiciais quando se opera na nuvem em escala."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"In 2022, we rewrote DataCater to implement lots of learnings that we made when working with early users.\n"
"Using this unique opportunity, we also switched from Play! and Kafka Streams to Quarkus,\n"
"thus using Quarkus for implementing both our control plane and the data pipelines."
msgstr "Em 2022, reescrevemos o DataCater para implementar muitos aprendizados que obtivemos ao trabalhar com os primeiros usuários. Aproveitando essa oportunidade única, também mudamos do Play! e do Kafka Streams para o Quarkus, usando assim o Quarkus para implementar nosso plano de controle e os pipelines de dados."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"With Quarkus, we are able to bring the best of cloud native and messaging applications together. Streaming messages, especially in the context of Apache Kafka, is still a Java-dominated environment, while the traditional Java stack lacks the characteristics of cloud-native applications, like small footprints, fast startups, and self-containment.\n"
"*-Hakan Lofcali, CTO, DataCater*"
msgstr "Com o Quarkus, conseguimos reunir o melhor dos aplicativos nativos da nuvem e de mensagens. O streaming de mensagens, especialmente no contexto do Apache Kafka, ainda é um ambiente dominado pelo Java, enquanto a pilha Java tradicional não tem as características dos aplicativos nativos da nuvem, como pequenas pegadas, inicializações rápidas e autocontenção. *-Hakan Lofcali, CTO, DataCater*"

#. type: Plain text
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "In the following, we list the main reasons why we chose Quarkus over other Java frameworks:"
msgstr "De seguida, enumeramos as principais razões que nos levaram a escolher o Quarkus em vez de outras estruturas Java:"

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*Versatility:* We cannot only implement the API of our control plane with the Quarkus RESTeasy extension but can also employ Quarkus as the base for implementing streaming data pipelines using its https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging^] extension."
msgstr "*Versatilidade:* Não podemos apenas implementar a API do nosso plano de controle com a extensão RESTeasy do Quarkus, mas também podemos usar o Quarkus como base para implementar pipelines de dados de streaming usando a extensão link:https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] ."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"*Dev services:* Quarkus' dev services help us to spin up dependencies, like PostgreSQL or Apache Kafka, very fast and provide an outstanding developer experience. Our developers can focus on their job instead of\n"
"messing with the configuration of tooling."
msgstr "*Serviços de desenvolvimento:* Os serviços de desenvolvimento do Quarkus nos ajudam a ativar dependências, como o PostgreSQL ou o Apache Kafka, com muita rapidez e proporcionam uma excelente experiência ao desenvolvedor. Nossos desenvolvedores podem se concentrar em seu trabalho em vez de se preocuparem com a configuração de ferramentas."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*Support for native executables:* Quarkus allows us to easily build native executables, which are very beneficial when operating in a cloud context. They require much fewer resources and achieve faster startup times."
msgstr "*Suporte para executáveis nativos:* O Quarkus nos permite criar facilmente executáveis nativos, o que é muito vantajoso quando operamos em um contexto de nuvem. Eles exigem muito menos recursos e atingem tempos de inicialização mais rápidos."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*Minimal footprint:* Quarkus’ build time optimizations allow for smaller footprints of JVM- and GraalVM-based containers."
msgstr "*Mínimo espaço ocupado:* As otimizações do tempo de compilação do Quarkus permitem que os contêineres baseados em JVM e GraalVM ocupem menos espaço."

#. type: Title ==
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, no-wrap
msgid "References"
msgstr "Referências"

#. type: Plain text
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "https://github.com/DataCater/datacater[DataCater GitHub repository^]"
msgstr "link:https://github.com/DataCater/datacater[Repositório GitHub do DataCater, window=_blank]"

#. type: Plain text
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "https://docs.datacater.io[DataCater documentation^]"
msgstr "link:https://docs.datacater.io[Documentação do DataCater, window=_blank]"
