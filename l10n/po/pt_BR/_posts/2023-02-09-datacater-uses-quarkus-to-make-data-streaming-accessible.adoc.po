# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:1
#, fuzzy, no-wrap
msgid "ssprenger"
msgstr "ssprenger"

#. type: YAML Front Matter: date
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:1
#, fuzzy, no-wrap
msgid "2023-02-09"
msgstr "2023-02-09"

#. type: YAML Front Matter: layout
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "posto"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:1
#, fuzzy, no-wrap
msgid "DataCater provides a developer-friendly ETL platform. Learn why it chose Quarkus for its recent rewrite."
msgstr "A DataCater fornece uma plataforma ETL de fácil desenvolvimento. Saiba por que razão escolheu a Quarkus para a sua recente reescrita."

#. type: YAML Front Matter: tags
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:1
#, fuzzy, no-wrap
msgid "user-story"
msgstr "história do utilizador"

#. type: Title =
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:1
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:10
#, fuzzy, no-wrap
msgid "DataCater uses Quarkus to make Data Streaming more accessible"
msgstr "O DataCater utiliza o Quarkus para tornar o fluxo de dados mais acessível"

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:14
#, fuzzy
msgid "This article gives a brief overview of the data streaming platform DataCater, discusses how we moved from Scala Play! and Kafka Streams to Quarkus, and presents why we think that Quarkus is an exceptional framework for developing cloud-native Java applications."
msgstr "Este artigo fornece uma breve visão geral da plataforma de streaming de dados DataCater, discute como mudamos do Scala Play! e Kafka Streams para o Quarkus e apresenta por que achamos que o Quarkus é uma estrutura excecional para o desenvolvimento de aplicativos Java nativos da nuvem."

#. type: Title ==
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:15
#, fuzzy, no-wrap
msgid "What is DataCater?"
msgstr "O que é o DataCater?"

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:22
#, fuzzy
msgid "https://datacater.io[DataCater^] is a real-time, cloud-native data pipeline platform based on Apache Kafka and Kubernetes. It allows users to build streaming data pipelines that stream records between different Apache Kafka topics and can apply filters or transforms to the records on the way.  Given its focus on data scientists and data engineers as target users, DataCater enables users to develop transforms in Python. It provides an https://www.loom.com/share/15947f13e71540948e3f9d57eac64976[interactive, UI-based preview of streaming data pipelines^] and uses Kubernetes as the runtime for pipeline deployments."
msgstr "link:https://datacater.io[O DataCater, window=_blank] é uma plataforma de pipeline de dados nativa da nuvem e em tempo real, baseada no Apache Kafka e no Kubernetes. Permite aos utilizadores criar pipelines de dados em fluxo contínuo que transmitem registos entre diferentes tópicos do Apache Kafka e podem aplicar filtros ou transformações aos registos durante o percurso. Dado o seu foco nos cientistas e engenheiros de dados como utilizadores-alvo, o DataCater permite aos utilizadores desenvolver transformações em Python. Fornece uma  link:https://www.loom.com/share/15947f13e71540948e3f9d57eac64976[pré-visualização interactiva, baseada na IU, de pipelines de dados de streaming, window=_blank] e utiliza o Kubernetes como tempo de execução para implementações de pipelines."

#. type: Title ==
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:23
#, fuzzy, no-wrap
msgid "Why did DataCater choose Quarkus?"
msgstr "Porque é que a DataCater escolheu a Quarkus?"

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:27
#, fuzzy
msgid "DataCater was created in 2020 and initially built its control plane on top of the Scala framework https://www.playframework.com/[Play^] and implemented pipelines with https://kafka.apache.org/documentation/streams/[Kafka Streams^].  Over time, we experienced the following limitations and issues with the chosen technologies:"
msgstr "O DataCater foi criado em 2020 e, inicialmente, construiu o seu plano de controlo com base na estrutura Scala  link:https://www.playframework.com/[Play, window=_blank] e implementou pipelines com  link:https://kafka.apache.org/documentation/streams/[Kafka Streams, window=_blank]. Ao longo do tempo, sentimos as seguintes limitações e problemas com as tecnologias escolhidas:"

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:29
#, fuzzy, no-wrap
msgid "*Inefficient resource usage:* Kafka Streams applications consume a considerable amount of main memory, making it quite expensive to operate at scale.\n"
msgstr "*Uso ineficiente de recursos:* As aplicações Kafka Streams consomem uma quantidade considerável de memória principal, o que torna bastante dispendioso o seu funcionamento em escala."

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:30
#, fuzzy, no-wrap
msgid "*Long startup times:* Starting a Kafka Streams application can take up to a few minutes, which has a negative impact on the availability of streaming data pipelines.\n"
msgstr "*Tempos de arranque longos:* Iniciar uma aplicação Kafka Streams pode demorar alguns minutos, o que tem um impacto negativo na disponibilidade de pipelines de dados de fluxo contínuo."

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:32
#, fuzzy, no-wrap
msgid ""
"*Restriction to intra-cluster streaming:* By default, Kafka Streams can only stream data between topics of the same Apache Kafka cluster. When facing use cases that stream data between different Kafka clusters, for instance, between a production and test cluster,\n"
"we had to employ additional tooling, e.g., MirrorMaker 2.\n"
msgstr "*Restrição ao fluxo intra-cluster:* Por padrão, o Kafka Streams só pode transmitir dados entre tópicos do mesmo cluster do Apache Kafka. Ao enfrentar casos de uso que transmitem dados entre diferentes clusters Kafka, por exemplo, entre um cluster de produção e de teste, tivemos que empregar ferramentas adicionais, por exemplo, MirrorMaker 2."

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:33
#, fuzzy, no-wrap
msgid "*No support for Java 17:* The current Play! version 2.8 does not support running on top of Java 17.\n"
msgstr "*Sem suporte para Java 17:* A atual versão 2.8 do Play! não suporta a execução sobre Java 17."

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:35
#, fuzzy
msgid "Especially the first two issues, inefficient resource usage and long startup times, hurt a lot when operating in the cloud at scale."
msgstr "Especialmente as duas primeiras questões, a utilização ineficiente de recursos e os longos tempos de arranque, são muito prejudiciais quando se opera na nuvem em escala."

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:39
#, fuzzy
msgid "In 2022, we rewrote DataCater to implement lots of learnings that we made when working with early users.  Using this unique opportunity, we also switched from Play! and Kafka Streams to Quarkus, thus using Quarkus for implementing both our control plane and the data pipelines."
msgstr "Em 2022, reescrevemos o DataCater para implementar muitas das aprendizagens que fizemos ao trabalhar com os primeiros utilizadores. Aproveitando esta oportunidade única, também mudámos do Play! e do Kafka Streams para o Quarkus, utilizando assim o Quarkus para implementar tanto o nosso plano de controlo como os pipelines de dados."

#. type: delimited block _
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:44
#, fuzzy
msgid "With Quarkus, we are able to bring the best of cloud native and messaging applications together. Streaming messages, especially in the context of Apache Kafka, is still a Java-dominated environment, while the traditional Java stack lacks the characteristics of cloud-native applications, like small footprints, fast startups, and self-containment.  *-Hakan Lofcali, CTO, DataCater*"
msgstr "Com o Quarkus, conseguimos reunir o melhor das aplicações nativas da nuvem e de mensagens. O streaming de mensagens, especialmente no contexto do Apache Kafka, ainda é um ambiente dominado por Java, enquanto a pilha Java tradicional não possui as características dos aplicativos nativos da nuvem, como pegadas pequenas, inicializações rápidas e autocontenção. *-Hakan Lofcali, CTO, DataCater*"

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:47
#, fuzzy
msgid "In the following, we list the main reasons why we chose Quarkus over other Java frameworks:"
msgstr "De seguida, enumeramos as principais razões que nos levaram a escolher o Quarkus em vez de outras estruturas Java:"

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:49
#, fuzzy, no-wrap
msgid "*Versatility:* We cannot only implement the API of our control plane with the Quarkus RESTeasy extension but can also employ Quarkus as the base for implementing streaming data pipelines using its https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging^] extension.\n"
msgstr "*Versatilidade:* Não só podemos implementar a API do nosso plano de controlo com a extensão RESTeasy do Quarkus, como também podemos utilizar o Quarkus como base para implementar condutas de dados em fluxo contínuo utilizando a sua extensão  link:https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging, window=_blank]."

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:51
#, fuzzy, no-wrap
msgid ""
"*Dev services:* Quarkus' dev services help us to spin up dependencies, like PostgreSQL or Apache Kafka, very fast and provide an outstanding developer experience. Our developers can focus on their job instead of\n"
"messing with the configuration of tooling.\n"
msgstr "*Serviços de desenvolvimento:* Os serviços de desenvolvimento da Quarkus ajudam-nos a criar dependências, como o PostgreSQL ou o Apache Kafka, muito rapidamente e proporcionam uma excelente experiência de desenvolvimento. Os nossos programadores podem concentrar-se no seu trabalho em vez de se preocuparem com a configuração das ferramentas."

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:52
#, fuzzy, no-wrap
msgid "*Support for native executables:* Quarkus allows us to easily build native executables, which are very beneficial when operating in a cloud context. They require much fewer resources and achieve faster startup times.\n"
msgstr "*Suporte para executáveis nativos:* O Quarkus permite-nos criar facilmente executáveis nativos, o que é muito vantajoso quando se opera num contexto de nuvem. Requerem muito menos recursos e atingem tempos de arranque mais rápidos."

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:53
#, fuzzy, no-wrap
msgid "*Minimal footprint:* Quarkus’ build time optimizations allow for smaller footprints of JVM- and GraalVM-based containers.\n"
msgstr "*Pegada mínima:* As optimizações de tempo de construção do Quarkus permitem uma pegada mais pequena dos contentores baseados em JVM e GraalVM."

#. type: Title ==
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:54
#, fuzzy, no-wrap
msgid "References"
msgstr "Referências"

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:57
#, fuzzy
msgid "https://github.com/DataCater/datacater[DataCater GitHub repository^]"
msgstr "link:https://github.com/DataCater/datacater[Repositório GitHub do DataCater, window=_blank]"

#. type: Plain text
#: upstream/_posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc:57
#, fuzzy
msgid "https://docs.datacater.io[DataCater documentation^]"
msgstr "link:https://docs.datacater.io[Documentação do DataCater, window=_blank]"
