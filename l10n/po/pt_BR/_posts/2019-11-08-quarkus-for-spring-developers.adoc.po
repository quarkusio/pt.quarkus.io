# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy, no-wrap
msgid "Quarkus for Spring Developers"
msgstr "Quarkus para programadores Spring"

#. type: Plain text
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "The arrival of Quarkus 1.0 brings an innovative platform for developing Linux container- and kubernetes-native Java microservices. Developers typically have to set aside their existing knowledge as they begin to evaluate new and innovative runtime frameworks. Quarkus is different because it was created by a collection of engineers with a deep expertise in a broad collection of Java technologies. This includes Spring API compatibility, brought to Quarkus by the same engineers that bring Spring Boot support to https://www.redhat.com/en/products/runtimes[Red Hat Runtimes]."
msgstr "A chegada do Quarkus 1.0 traz uma plataforma inovadora para o desenvolvimento de microsserviços Java nativos de contêineres Linux e kubernetes. Os desenvolvedores geralmente precisam deixar de lado seu conhecimento existente quando começam a avaliar estruturas de tempo de execução novas e inovadoras. O Quarkus é diferente porque foi criado por um grupo de engenheiros com uma profunda experiência em uma ampla coleção de tecnologias Java. Isso inclui a compatibilidade da API do Spring, trazida para o Quarkus pelos mesmos engenheiros que trazem o suporte do Spring Boot para o  link:https://www.redhat.com/en/products/runtimes[Red Hat Runtimes]."

#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid ""
"A free 140-page book, https://red.ht/quarkus-spring-devs[Quarkus for Spring Developers],\n"
"is now available that discusses this topic in greater, and updated, detail."
msgstr "Já está disponível um livro gratuito de 140 páginas, link:https://red.ht/quarkus-spring-devs[Quarkus for Spring Developers] , que aborda esse tópico em detalhes maiores e atualizados."

#. type: Title ==
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy, no-wrap
msgid "I'm a Spring developer. Why Quarkus?"
msgstr "Sou um programador Spring. Porquê a Quarkus?"

#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "It is becoming increasingly apparent that containerization in general and Kubernetes in particular is forcing a re-evaluation of Java for the development of cloud native applications. Kubernetes is a  highly dynamic shared infrastructure that becomes more cost effective as the number of applications a cluster can host grows and the responsiveness to application lifecycle changes improves, like redeployments and scaling up/down. Traditional Java cloud native runtimes have layered new functionality on an existing stack, without really re-thinking the underlying stack itself. This results in larger memory consumption and slower startup times, to the point where organizations are now willing to forgo their deep Java expertise to retrain and retool for Go and Node.js to drive more value out of their large investment in Kubernetes clusters."
msgstr "Está cada vez mais evidente que a conteinerização em geral e o Kubernetes em particular estão forçando uma reavaliação do Java para o desenvolvimento de aplicativos nativos da nuvem. O Kubernetes é uma infraestrutura compartilhada altamente dinâmica que se torna mais econômica à medida que o número de aplicativos que um cluster pode hospedar aumenta e a capacidade de resposta às alterações do ciclo de vida do aplicativo melhora, como reimplantações e aumento/diminuição de escala. Os runtimes nativos de nuvem Java tradicionais colocaram novas funcionalidades em camadas em uma pilha existente, sem realmente repensar a própria pilha subjacente. Isso resulta em maior consumo de memória e tempos de inicialização mais lentos, a ponto de as organizações agora estarem dispostas a abrir mão de sua profunda experiência em Java para treinar e reequipar o Go e o Node.js para obter mais valor de seu grande investimento em clusters Kubernetes."

#. type: Plain text
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "This is the very problem that Quarkus addresses.  Quarkus is optimized for memory density and rapid startup time. Quarkus applications running on the JVM can deliver nearly twice as many application instances in the same amount of RAM when compared to other cloud native Java stacks, and up to 7x more instances when packaged as a native binary. This is more than simply compiling to a native binary using https://github.com/oracle/graal/tree/master/substratevm[SubstrateVM] (a feature of https://www.graalvm.org/[GraalVM]). Quarkus has optimized traditionally “highly dynamic” frameworks for Kubernetes immutable infrastructure, resulting in reduced memory utilization and faster initialization. These optimized and https://quarkus.io/guides/[well-documented] frameworks, called “extensions”, consist of best of breed and standard APIs. The result is https://quarkus.io/assets/images/quarkus_metrics_graphic_bootmem_wide.png[significant improvements in runtime efficiency]."
msgstr "É exatamente este o problema que o Quarkus resolve. O Quarkus é otimizado para densidade de memória e tempo de inicialização rápido. Os aplicativos Quarkus executados na JVM podem fornecer quase o dobro de instâncias de aplicativos na mesma quantidade de RAM quando comparados a outras pilhas Java nativas da nuvem e até 7x mais instâncias quando empacotados como um binário nativo. Isso é mais do que simplesmente compilar para um binário nativo usando o  link:https://github.com/oracle/graal/tree/master/substratevm[SubstrateVM] (um recurso do  link:https://www.graalvm.org/[GraalVM]). A Quarkus otimizou estruturas tradicionalmente \"altamente dinâmicas\" para a infraestrutura imutável do Kubernetes, resultando em utilização reduzida de memória e inicialização mais rápida. Essas estruturas otimizadas e  link:https://quarkus.io/guides/[bem documentadas], chamadas de \"extensões\", consistem em APIs padrão e de melhor qualidade. O resultado são  link:https://quarkus.io/assets/images/quarkus_metrics_graphic_bootmem_wide.png[melhorias significativas na eficiência do tempo de execução]."

#. type: Title ==
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy, no-wrap
msgid "What existing knowledge can Spring developers bring to Quarkus?"
msgstr "Que conhecimentos existentes podem os programadores Spring trazer para a Quarkus?"

#. type: Plain text
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "Quarkus’ Spring API compatibility includes https://quarkus.io/guides/spring-di-guide[Spring DI], https://quarkus.io/guides/spring-web-guide[Spring Web], and https://quarkus.io/guides/spring-data-jpa-guide[Spring Data JPA]. Additional Spring APIs are being planned like Spring Security and Spring Config. When running on the JVM, Quarkus applications can utilize virtually any Java library. Many libraries, as long as they do not use Java reflection, will compile to native\". Lombok, a popular library among Spring developers for example, works with native compilation. To be clear, the Spring API compatibility in Quarkus is not intended to be a complete Spring platform to re-host existing Spring applications. The intent is to offer enough Spring API compatibility to make developing new applications with Quarkus a natural getting started experience. When combined with pre-optimized extensions, Quarkus delivers an https://quarkus.io/guides/[amazing amount of functionality] for microservices development. With all this being said, developers have successfully migrated Spring applications to Quarkus :-)"
msgstr "A compatibilidade do Quarkus com as APIs do Spring inclui o  link:https://quarkus.io/guides/spring-di-guide[Spring DI], o  link:https://quarkus.io/guides/spring-web-guide[Spring Web] e o  link:https://quarkus.io/guides/spring-data-jpa-guide[Spring Data JPA]. Estão a ser planeadas APIs adicionais do Spring, como o Spring Security e o Spring Config. Quando executadas na JVM, as aplicações Quarkus podem utilizar praticamente qualquer biblioteca Java. Muitas bibliotecas, desde que não usem reflexão Java, serão compiladas como nativas\". O Lombok, uma biblioteca popular entre os desenvolvedores do Spring, por exemplo, funciona com compilação nativa. Para ser claro, a compatibilidade da API do Spring no Quarkus não pretende ser uma plataforma completa do Spring para hospedar novamente aplicativos Spring existentes. A intenção é oferecer compatibilidade suficiente com a API do Spring para que o desenvolvimento de novas aplicações com o Quarkus seja uma experiência natural de iniciação. Quando combinado com extensões pré-otimizadas, o Quarkus oferece uma  link:https://quarkus.io/guides/[quantidade incrível de funcionalidades] para o desenvolvimento de microsserviços. Com tudo isto dito, os programadores migraram com sucesso as aplicações Spring para o Quarkus :-)"

#. type: delimited block =
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "The Spring Framework is highly dynamic in nature. To address this, the Quarkus Spring compatibility extensions map Spring APIs to APIs in existing extensions that have already been optimized for fast startup, reduced memory utilization and native compilation, like RestEasy and CDI. Also, the Quarkus Spring compatibility extensions do not utilize the Spring application context. For these reasons, attempting to utilize additional Spring libraries will likely not work."
msgstr "O Spring Framework é altamente dinâmico por natureza. Para resolver isso, as extensões de compatibilidade do Quarkus Spring mapeiam as APIs do Spring para APIs em extensões existentes que já foram otimizadas para inicialização rápida, utilização reduzida de memória e compilação nativa, como RestEasy e CDI. Além disso, as extensões de compatibilidade com o Spring do Quarkus não utilizam o contexto de aplicação do Spring. Por esses motivos, tentar utilizar bibliotecas Spring adicionais provavelmente não funcionará."

#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "*Quarkus Spring Web Example*"
msgstr "*Exemplo do Quarkus Spring Web*"

#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "*Quarkus Spring Repository Example*"
msgstr "*Exemplo de repositório do Quarkus Spring*"

#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "*Quarkus Spring Service + MicroProfile Fault Tolerance Example*"
msgstr "*Exemplo de tolerância a falhas do Quarkus Spring Service + MicroProfile*"

#. type: Title ==
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy, no-wrap
msgid "Are there additional benefits for Spring developers?"
msgstr "Existem vantagens adicionais para os programadores Spring?"

#. type: Plain text
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "In addition to the improved memory utilization and startup time, Quarkus offers the following benefits to Spring developers:"
msgstr "Além da melhor utilização da memória e do tempo de inicialização, o Quarkus oferece os seguintes benefícios aos desenvolvedores do Spring:"

#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "*Function-as-a-Service (FaaS) Runtime.* When compiled to a native binary, Quarkus applications can start in under .0015 seconds, making it possible to use the existing Spring and Java API knowledge with FaaS functions. (https://quarkus.io/guides/azure-functions-http[Azure], https://quarkus.io/guides/amazon-lambda[AWS Lambda])"
msgstr "*Tempo de execução de função como serviço (FaaS).* Quando compilados em um binário nativo, os aplicativos Quarkus podem ser iniciados em menos de 0,0015 segundos, possibilitando o uso do conhecimento existente da API Spring e Java com funções FaaS. ( link:https://quarkus.io/guides/azure-functions-http[Azure] , link:https://quarkus.io/guides/amazon-lambda[AWS Lambda] )"

#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "*Live Coding.* Start with a “Hello World” sample app and transform it into a complex microservice without ever restarting the app. Just save and reload browser to see changes along the way. Quarkus live coding “just works” out of the box, regardless of IDE."
msgstr "*Codificação ao vivo.* Comece com um aplicativo de amostra \"Hello World\" e transforme-o em um microsserviço complexo sem nunca reiniciar o aplicativo. Basta salvar e recarregar o navegador para ver as alterações ao longo do caminho. A codificação ao vivo do Quarkus \"simplesmente funciona\" imediatamente, independentemente do IDE."

#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "*Support for reactive and imperative models.* Quarkus has a reactive core that supports the traditional imperative model, reactive model, or both in the same application."
msgstr "*Suporte a modelos reativos e imperativos.* O Quarkus tem um núcleo reativo que suporta o modelo imperativo tradicional, o modelo reativo ou ambos no mesmo aplicativo."

#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "*Early detection of dependency injection errors.* Quarkus catches dependency injection errors during compilation instead of at runtime."
msgstr "*Detecção antecipada de erros de injeção de dependência.* O Quarkus detecta erros de injeção de dependência durante a compilação, e não no tempo de execução."

#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "*Use best of breed frameworks and standards together.* Quarkus supports Spring API compatibility, Eclipse Vert.x, MicroProfile (JAX-RS, CDI, etc), reactive streams and messaging, and more in the same application. Read https://developers.redhat.com/blog/2019/10/02/autowire-microprofile-into-spring-with-quarkus/[“@Autowire MicroProfile into Spring Boot”] for using Spring and MicroProfile APIs together in the same project."
msgstr "*Use as melhores estruturas e padrões juntos.* O Quarkus é compatível com as APIs do Spring, Eclipse Vert.x, MicroProfile (JAX-RS, CDI, etc.), fluxos reativos e mensagens, entre outros, no mesmo aplicativo. Leia link:https://developers.redhat.com/blog/2019/10/02/autowire-microprofile-into-spring-with-quarkus/[\"@Autowire MicroProfile into Spring Boot\"] para usar as APIs do Spring e do MicroProfile juntas no mesmo projeto."

#. type: Title ==
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy, no-wrap
msgid "How should Spring developers get started with Quarkus?"
msgstr "Como é que os programadores Spring devem começar a utilizar o Quarkus?"

#. type: Plain text
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "Recommended steps include:"
msgstr "Os passos recomendados incluem:"

#. type: Plain text
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "Follow the https://quarkus.io/get-started/[Getting Started Guide] as a general Quarkus introduction."
msgstr "Siga o  link:https://quarkus.io/get-started/[Guia de Iniciação] como uma introdução geral ao Quarkus."

#. type: Plain text
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "Follow the https://quarkus.io/guides/spring-di-guide[Spring DI], https://quarkus.io/guides/spring-web-guide[Spring Web], and https://quarkus.io/guides/spring-data-jpa-guide[Spring Data JPA] guides."
msgstr "Siga os guias  link:https://quarkus.io/guides/spring-di-guide[Spring DI],  link:https://quarkus.io/guides/spring-web-guide[Spring Web] e  link:https://quarkus.io/guides/spring-data-jpa-guide[Spring Data JPA]."

#. type: Plain text
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "Create a new app using https://code.quarkus.io/[code.quarkus.io]."
msgstr "Criar uma nova aplicação utilizando  link:https://code.quarkus.io/[code.quarkus.io]."

#. type: Plain text
#: _posts/2019-11-08-quarkus-for-spring-developers.adoc
#, fuzzy
msgid "Optionally watch https://www.youtube.com/watch?v=9wJm8g83vqA&list=PLsM3ZE5tGAVYUKfQRUC6Gp61oV1WJEIPJ&index=10&t=0s[Kubernetes Native Spring Apps on Quarkus] Devoxx presentation"
msgstr "Opcionalmente, assista à apresentação  link:https://www.youtube.com/watch?v=9wJm8g83vqA&amp;list=PLsM3ZE5tGAVYUKfQRUC6Gp61oV1WJEIPJ&amp;index=10&amp;t=0s[Kubernetes Native Spring Apps on Quarkus] Devoxx"
