# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:1
#, fuzzy, no-wrap
msgid "cescoffier"
msgstr "cescoffier"

#. type: YAML Front Matter: date
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:1
#, fuzzy, no-wrap
msgid "2021-01-19"
msgstr "2021-01-19"

#. type: YAML Front Matter: layout
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "posto"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:1
#, fuzzy, no-wrap
msgid "How to build a Quarkus application using Apache Kafka in less than 10 minutes"
msgstr "Como criar uma aplicação Quarkus utilizando o Apache Kafka em menos de 10 minutos"

#. type: YAML Front Matter: tags
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:1
#, fuzzy, no-wrap
msgid "kafka"
msgstr "kafka"

#. type: YAML Front Matter: title
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:1
#, fuzzy, no-wrap
msgid "Getting Started with Apache Kafka in your Quarkus application"
msgstr "Introdução ao Apache Kafka na sua aplicação Quarkus"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:15
#, fuzzy
msgid "https://kafka.apache.org/[Apache] Kafka is a prevalent distributed streaming platform offering a unique set of characteristics such as message retention, replay capabilities, consumer groups, and so on.  Kafka is highly scalable, fault-tolerant, and is becoming the spine of many modern systems.  That being said, Kafka is not the only one out there, and choosing the right messaging technology for your application can be challenging.  There are many articles to help you drive your decision, such as https://medium.com/@graemecolman/mind-your-amqps-or-kafka-or-interconnect-what-is-in-the-red-hat-messaging-box-9ed5aa590e92[this one].  This post is about Kafka, and an equivalent post about AMQP will be published later."
msgstr "link:https://kafka.apache.org/[O Apache] Kafka é uma plataforma de fluxo distribuído predominante que oferece um conjunto único de características como a retenção de mensagens, capacidades de repetição, grupos de consumidores, etc. O Kafka é altamente escalável, tolerante a falhas e está se tornando a espinha dorsal de muitos sistemas modernos. Dito isso, o Kafka não é o único no mercado, e escolher a tecnologia de mensagens certa para sua aplicação pode ser um desafio. Há muitos artigos para ajudá-lo a tomar sua decisão, como  link:https://medium.com/@graemecolman/mind-your-amqps-or-kafka-or-interconnect-what-is-in-the-red-hat-messaging-box-9ed5aa590e92[este]. Este post é sobre o Kafka, e um post equivalente sobre o AMQP será publicado posteriormente."

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:18
#, fuzzy
msgid "In this post, you will learn how to get started with Apache Kafka in your Quarkus application in less than 10 steps.  We will use https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/2.7/index.html[Reactive Messaging] - a declarative approach to build event-driven microservices, but you can also use _bare_ Kafka APIs or Kafka Streams."
msgstr "Neste post, você aprenderá como começar a usar o Apache Kafka em seu aplicativo Quarkus em menos de 10 etapas. Utilizaremos o  link:https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/2.7/index.html[Reactive Messaging] - uma abordagem declarativa para criar microsserviços orientados a eventos, mas também pode utilizar APIs Kafka _simples_ ou Kafka Streams."

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:20
#, fuzzy
msgid "The complete code is available from https://github.com/cescoffier/getting-started-quarkus-kafka[GitHub]."
msgstr "O código completo está disponível no  link:https://github.com/cescoffier/getting-started-quarkus-kafka[GitHub]."

#. type: Title ==
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:21
#, fuzzy, no-wrap
msgid "Step 1 - Generate your project"
msgstr "Passo 1 - Gerar o seu projeto"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:26
#, fuzzy
msgid "Let's start with the very beginning, getting a new project structure with the right dependencies.  Go to https://code.quarkus.io, enter your group id and artifact id.  Then in the extension list, select:"
msgstr "Vamos começar pelo início, obtendo uma nova estrutura de projeto com as dependências correctas. Aceda a  https://code.quarkus.io  introduza o seu ID do grupo e o ID do artefacto. Em seguida, na lista de extensões, seleccione:"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:28
#, fuzzy
msgid "SmallRye Reactive Messaging - Kafka Connector"
msgstr "SmallRye Reactive Messaging - Conector Kafka"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:29
#, fuzzy
msgid "RESTEasy Jackson"
msgstr "RESTEasy Jackson"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:31
#, fuzzy
msgid "image:/assets/images/posts/getting-started-kafka/getting-started-kafka-code.png[]"
msgstr "image:/assets/images/posts/getting-started-kafka/getting-started-kafka-code.png[alt=getting started kafka code]"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:33
#, fuzzy
msgid "You can disable the \"Example Code\" to avoid the generated project to contain examples."
msgstr "Pode desativar o \"Código de exemplo\" para evitar que o projeto gerado contenha exemplos."

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:35
#, fuzzy
msgid "Then, click on __Generate your application__, download the project as a zip file, unzip it, and load it in your favorite IDE."
msgstr "Em seguida, clique em _Gerar a sua aplicação_, transfira o projeto como um ficheiro zip, descomprima-o e carregue-o no seu IDE favorito."

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:38
#, fuzzy
msgid "If you opened the generated `pom.xml`, you would see that the `quarkus-smallrye-reactive-messaging-kafka` and `quarkus-resteasy-jackson` dependencies are declared, so we're ready to write some code."
msgstr "Se abrir o `pom.xml` gerado, verá que as dependências `quarkus-smallrye-reactive-messaging-kafka` e `quarkus-resteasy-jackson` estão declaradas, pelo que estamos prontos para escrever algum código."

#. type: Title ==
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:39
#, fuzzy, no-wrap
msgid "Step 2 - What are we going to exchange?"
msgstr "Passo 2 - O que é que vamos trocar?"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:44
#, fuzzy
msgid "We need something to exchange.  Without much originality, let's say we will send and receive `Movie` objects.  In your project, create the `org.acme.Movie` class with the following content:"
msgstr "Precisamos de algo para trocar. Sem muita originalidade, digamos que vamos enviar e receber objectos `Movie`. No seu projeto, crie a classe `org.acme.Movie` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:48
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:107
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:140
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:169
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:50
#, no-wrap
msgid "public class Movie {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:53
#, no-wrap
msgid ""
"    public String title;\n"
"    public int year;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:55
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:60
#, fuzzy
msgid "In Kafka, we produce and consume records.  A record contains a key and a value.  Let's say we will use the movie's publication year as key and the title as value."
msgstr "No Kafka, produzimos e consumimos registos. Um registo contém uma chave e um valor. Digamos que vamos utilizar o ano de publicação do filme como chave e o título como valor."

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:63
#, fuzzy
msgid "We also need to decide on which topic we are going to send these records.  Let's keep things simple and name our topic __movies__."
msgstr "Também temos de decidir para que tópico vamos enviar estes registos. Vamos manter as coisas simples e chamar o nosso tópico de _filmes_."

#. type: Title ==
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:64
#, fuzzy, no-wrap
msgid "Step 3 - Configure the application"
msgstr "Passo 3 - Configurar a aplicação"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:71
#, fuzzy
msgid "As said above, we will use Reactive Messaging.  When you use Reactive Messaging, you send messages to a channel and receive them from another channel.  These channels are mapped to the underlying messaging technology by configuration.  In our application, we must indicate that our reception and publication channels will use the __movies__ Kafka channel.  In `src/main/resources/application.properties`, add the following content:"
msgstr "Tal como referido anteriormente, vamos utilizar o serviço de mensagens reactivas. Quando utiliza o serviço de mensagens reactivas, envia mensagens para um canal e recebe-as de outro canal. Estes canais são mapeados para a tecnologia de mensagens subjacente através da configuração. Na nossa aplicação, temos de indicar que os nossos canais de receção e publicação utilizarão o canal _movies_ Kafka. Em `src/main/resources/application.properties`, adicione o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:76
#, no-wrap
msgid ""
"# The Kafka broker location (defaults to localhost:9092)\n"
"kafka.bootstrap.servers=localhost:9092\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:82
#, no-wrap
msgid ""
"# Configuring the incoming channel (reading from Kafka)\n"
"mp.messaging.incoming.movies-in.connector=smallrye-kafka\n"
"mp.messaging.incoming.movies-in.topic=movies\n"
"mp.messaging.incoming.movies-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer\n"
"mp.messaging.incoming.movies-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:88
#, no-wrap
msgid ""
"# Configuring the outgoing channel (writing to Kafka)\n"
"mp.messaging.outgoing.movies-out.connector=smallrye-kafka\n"
"mp.messaging.outgoing.movies-out.topic=movies\n"
"mp.messaging.outgoing.movies-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer\n"
"mp.messaging.outgoing.movies-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:91
#, fuzzy
msgid "After having configured the broker location with `kafka.bootstrap.servers`, we configure our two channels: `movies-in` (receiving the records) and `movies-out` (publishing the records)."
msgstr "Depois de termos configurado a localização do broker com `kafka.bootstrap.servers`, configuramos os nossos dois canais: `movies-in` (receção dos registos) e `movies-out` (publicação dos registos)."

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:95
#, fuzzy
msgid "We use the `mp.messaging.incoming.movies-in` prefix to configure the channel.  The `connector` attribute indicates who's responsible for this channel, here the Kafka connector.  We also need to configure the key and value deserializers."
msgstr "Utilizamos o prefixo `mp.messaging.incoming.movies-in` para configurar o canal. O atributo `connector` indica quem é o responsável por este canal, neste caso o conetor Kafka. Também precisamos configurar os desserializadores de chave e valor."

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:98
#, fuzzy
msgid "To configure the outbound `movies-out` channel, we use the `mp.messaging.outgoing.movies-out` prefix.  In addition to indicate who's responsible for that channel, we also need to configure the key and value serializers."
msgstr "Para configurar o canal de saída `movies-out`, utilizamos o prefixo `mp.messaging.outgoing.movies-out`. Para além de indicarmos quem é o responsável por esse canal, também precisamos de configurar os serializadores de chave e de valor."

#. type: Title ==
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:99
#, fuzzy, no-wrap
msgid "Step 4 - Publishing movies to Kafka"
msgstr "Passo 4 - Publicar filmes no Kafka"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:103
#, fuzzy
msgid "Now, it's time to send a record to Kafka.  Create the `org.acme.MovieProducer` class with the following content:"
msgstr "Agora, é hora de enviar um registo para o Kafka. Crie a classe `org.acme.MovieProducer` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:111
#, no-wrap
msgid ""
"import io.smallrye.reactive.messaging.kafka.Record;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Emitter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:114
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:117
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MovieProducer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:120
#, no-wrap
msgid ""
"    @Inject @Channel(\"movies-out\")\n"
"    Emitter<Record<Integer, String>> emitter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:125
#, no-wrap
msgid ""
"    public void sendMovieToKafka(Movie movie) {\n"
"        emitter.send(Record.of(movie.year, movie.title));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:130
#, fuzzy
msgid "In this class, we inject an `Emitter`, i.e., an object responsible for sending a message to a channel.  This emitter is attached to the `movies-out` channel (and so will send messages to Kafka).  We are sending `Record` objects containing the movie's publication year as key and its title as value."
msgstr "Nesta classe, injectamos um `Emitter`, ou seja, um objeto responsável pelo envio de uma mensagem para um canal. Este emissor está ligado ao canal `movies-out` (e por isso enviará mensagens para o Kafka). Estamos a enviar objectos `Record` que contêm o ano de publicação do filme como chave e o seu título como valor."

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:132
#, fuzzy
msgid "So, the rest of our application can simply use the `sendMovieToKafka` method to send a movie to our Kafka topic."
msgstr "Assim, o resto da nossa aplicação pode simplesmente utilizar o método `sendMovieToKafka` para enviar um filme para o nosso tópico Kafka."

#. type: Title ==
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:133
#, fuzzy, no-wrap
msgid "Step 5 - Consuming movies"
msgstr "Passo 5 - Consumir filmes"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:136
#, fuzzy
msgid "Let's now look at the other side and retrieve the movies from Kafka."
msgstr "Vamos agora olhar para o outro lado e recuperar os filmes de Kafka."

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:144
#, no-wrap
msgid ""
"import io.smallrye.reactive.messaging.kafka.Record;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:146
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:149
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MovieConsumer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:151
#, no-wrap
msgid "    private final Logger logger = Logger.getLogger(MovieConsumer.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:157
#, no-wrap
msgid ""
"    @Incoming(\"movies-in\")\n"
"    public void receive(Record<Integer, String> record) {\n"
"        logger.infof(\"Got a movie: %d - %s\", record.key(), record.value());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:160
#, fuzzy
msgid "Here, we use the `@Incoming` annotation to indicate to Quarkus to call the `receive` method for every received record."
msgstr "Aqui, utilizamos a anotação `@Incoming` para indicar ao Quarkus que deve chamar o método `receive` para cada registo recebido."

#. type: Title ==
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:161
#, fuzzy, no-wrap
msgid "Step 6 - Sending movies from a REST endpoint"
msgstr "Passo 6 - Enviar filmes a partir de um ponto de extremidade REST"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:165
#, fuzzy
msgid "It's quite common to send messages to Kafka from a REST endpoint.  To do this, create the `org.acme.MovieResource` class with the following content:"
msgstr "É bastante comum enviar mensagens para o Kafka a partir de um ponto de extremidade REST. Para isso, crie a classe `org.acme.MovieResource` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:177
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:182
#, no-wrap
msgid ""
"@Path(\"/\")\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"public class MovieResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:185
#, no-wrap
msgid ""
"    @Inject\n"
"    MovieProducer producer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:193
#, no-wrap
msgid ""
"    @POST\n"
"    public Response send(Movie movie) {\n"
"        producer.sendMovieToKafka(movie);\n"
"        // Return an 202 - Accepted response.\n"
"        return Response.accepted().build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:195
#, fuzzy, no-wrap
msgid "Step 7 - Let's get this running!"
msgstr "Passo 7 - Vamos pôr isto a funcionar!"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:199
#, fuzzy
msgid "Well, first, we need a Kafka broker.  You can follow the https://kafka.apache.org/quickstart[Apache Kafka quickstart], or use the following `docker-compose.yaml` file:"
msgstr "Bem, primeiro, precisamos de um corretor Kafka. Pode seguir o  link:https://kafka.apache.org/quickstart[início rápido do Apache Kafka] ou utilizar o seguinte ficheiro `docker-compose.yaml`:"

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:203
#, no-wrap
msgid "version: '2'\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:205
#, no-wrap
msgid "services:\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:216
#, no-wrap
msgid ""
"  zookeeper:\n"
"    image: strimzi/kafka:0.20.1-kafka-2.6.0\n"
"    command: [\n"
"        \"sh\", \"-c\",\n"
"        \"bin/zookeeper-server-start.sh config/zookeeper.properties\"\n"
"    ]\n"
"    ports:\n"
"      - \"2181:2181\"\n"
"    environment:\n"
"      LOG_DIR: /tmp/logs\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:232
#, no-wrap
msgid ""
"  kafka:\n"
"    image: strimzi/kafka:0.20.1-kafka-2.6.0\n"
"    command: [\n"
"        \"sh\", \"-c\",\n"
"        \"bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}\"\n"
"    ]\n"
"    depends_on:\n"
"      - zookeeper\n"
"    ports:\n"
"      - \"9092:9092\"\n"
"    environment:\n"
"      LOG_DIR: \"/tmp/logs\"\n"
"      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092\n"
"      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092\n"
"      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:235
#, fuzzy
msgid "Copy the `docker-compose.yaml` file in your project, and from a terminal, start your broker with: `docker-compose up -d`"
msgstr "Copie o ficheiro `docker-compose.yaml` no seu projeto e, a partir de um terminal, inicie o seu corretor com: `docker-compose up -d`"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:237
#, fuzzy
msgid "Then, run the application using:"
msgstr "Em seguida, execute a aplicação utilizando:"

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:241
#, no-wrap
msgid "./mvnw quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:245
#, fuzzy
msgid "The application runs in dev mode, meaning that you can still update the code.  It will reload it automatically."
msgstr "A aplicação é executada em modo de desenvolvimento, o que significa que ainda pode atualizar o código. Ele será recarregado automaticamente."

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:247
#, fuzzy
msgid "In another terminal, emit a few HTTP POST request such as:"
msgstr "Noutro terminal, emita alguns pedidos HTTP POST, tais como:"

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:254
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"--request POST \\\n"
"--data '{\"year\":1994, \"title\":\"The Shawshank Redemption\"}' \\\n"
"http://localhost:8080/\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:259
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"--request POST \\\n"
"--data '{\"year\":1972, \"title\":\"The Godfather\"}' \\\n"
"http://localhost:8080/\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:264
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"--request POST \\\n"
"--data '{\"year\":2008, \"title\":\"The Dark Knight\"}' \\\n"
"http://localhost:8080/\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:269
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"--request POST \\\n"
"--data '{\"year\":1994, \"title\":\"Pulp Fiction\"}' \\\n"
"http://localhost:8080/\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:274
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"--request POST \\\n"
"--data '{\"year\":2010, \"title\":\"Inception\"}' \\\n"
"http://localhost:8080/\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:277
#, fuzzy
msgid "In the terminal running the application, you will see:"
msgstr "No terminal que está a executar a aplicação, verá:"

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:284
#, no-wrap
msgid ""
"...\n"
"2021-01-13 09:29:41,087 INFO  [org.acm.MovieConsumer] (vert.x-eventloop-thread-9) Got a movie: 1994 - Pulp Fiction\n"
"2021-01-13 09:29:41,114 INFO  [org.acm.MovieConsumer] (vert.x-eventloop-thread-9) Got a movie: 2010 - Inception\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:287
#, fuzzy
msgid "It works!"
msgstr "Funciona!"

#. type: Title ==
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:288
#, fuzzy, no-wrap
msgid "Step 8 - Native packaging"
msgstr "Etapa 8 - Embalagem nativa"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:291
#, fuzzy
msgid "If you have https://quarkus.io/guides/building-native-image[GraalVM installed and configured correctly], you can package this application as a native executable:"
msgstr "Se tiver  link:https://quarkus.io/guides/building-native-image[o GraalVM instalado e configurado corretamente], pode empacotar esta aplicação como um executável nativo:"

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:295
#, no-wrap
msgid "./mvnw package -Pnative\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:298
#, fuzzy
msgid "Then, execute your native executable with: `./target/getting-started-kafka-1.0.0-SNAPSHOT-runner`, and you get a Quarkus application using Kafka starting in a few milliseconds and consuming a ridiculous amount of memory: less than 30Mb after 100 ingested records!"
msgstr "Depois, execute o seu executável nativo com: `./target/getting-started-kafka-1.0.0-SNAPSHOT-runner`, e obtém-se uma aplicação Quarkus que utiliza o Kafka, que arranca em poucos milissegundos e consome uma quantidade ridícula de memória: menos de 30Mb após 100 registos ingeridos!"

#. type: delimited block -
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:304
#, no-wrap
msgid ""
"$ rss getting-started-kafka-1.0.0-SNAPSHOT-runner\n"
"PID 0M COMMAND\n"
"49321 30M ./target/getting-started-kafka-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:306
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumo"

#. type: Plain text
#: upstream/_posts/2021-01-18-getting-started-kafka.adoc:309
#, fuzzy
msgid "In less than 10 minutes, we have a new Quarkus application using Apache Kafka.  If you want to go further, check the https://quarkus.io/guides/kafka[Kafka guide]."
msgstr "Em menos de 10 minutos, temos uma nova aplicação Quarkus usando o Apache Kafka. Se quiser ir mais longe, consulte o  link:https://quarkus.io/guides/kafka[guia do Kafka]."
