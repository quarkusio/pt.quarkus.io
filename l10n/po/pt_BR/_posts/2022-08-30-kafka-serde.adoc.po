# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy, no-wrap
msgid "How to implement Kafka Serializers and Deserializers?"
msgstr "Como implementar os serializadores e desserializadores do Kafka?"

#. type: YAML Front Matter: synopsis
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy, no-wrap
msgid "JSON, Avro and Custom Kafka Serializers and Deserializers with Quarkus"
msgstr "Serializadores e desserializadores JSON, Avro e Kafka personalizados com o Quarkus"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"When your application writes a _record_ into a Kafka topic or when it consumes a _record_ from a Kafka topic, a mechanism of serialization and deserialization happens.\n"
"The serialization process transforms the business objects you want to send to Kafka into bytes.\n"
"The deserialization process is the opposite.\n"
"It receives the bytes from Kafka and recreates the business objects."
msgstr "Quando seu aplicativo grava um _registro_ em um tópico do Kafka ou quando consome um _registro_ de um tópico do Kafka, ocorre um mecanismo de serialização e desserialização. O processo de serialização transforma os business objects que o senhor deseja enviar ao Kafka em bytes. O processo de desserialização é o oposto. Ele recebe os bytes do Kafka e recria os business objects."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "This blog post explores different approaches for this serialization and deserialization and explains how you can implement a custom serializer and deserializer. It also highlights facilities provided by the Kafka connector from Quarkus."
msgstr "Esta publicação do blogue explora diferentes abordagens para esta serialização e desserialização e explica como pode implementar um serializador e desserializador personalizado. Ele também destaca os recursos fornecidos pelo conetor Kafka do Quarkus."

#. type: Title ==
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy, no-wrap
msgid "Why do I need a custom serializer and deserializer?"
msgstr "Porque é que preciso de um serializador e desserializador personalizado?"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"https://javadoc.io/static/org.apache.kafka/kafka-clients/3.2.1/org/apache/kafka/common/serialization/package-summary.html[Kafka] provides a set of serializers and deserializers for the common types: `String`, `Double`, `Integer`, `Bytes`...\n"
"But that's rarely enough for business objects, even for objects are simple as:"
msgstr "link:https://javadoc.io/static/org.apache.kafka/kafka-clients/3.2.1/org/apache/kafka/common/serialization/package-summary.html[O Kafka] fornece um conjunto de serializadores e desserializadores para os tipos comuns: `String` , `Double` , `Integer` , `Bytes` ... Mas isso raramente é suficiente para objetos de negócios, mesmo para objetos tão simples quanto:"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"Fortunately, Kafka lets us implement our own.\n"
"To achieve this, you need to implement the following interfaces:"
msgstr "Felizmente, o Kafka nos permite implementar nossas próprias interfaces. Para isso, o senhor precisa implementar as seguintes interfaces:"

#. type: Block title
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy, no-wrap
msgid "The Serializer interface"
msgstr "A interface Serializer"

#. type: Block title
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy, no-wrap
msgid "The Deserializer interface"
msgstr "A interface Deserializador"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"Once implemented, you need to configure your Kafka producer and consumer's key and value serializer and deserializer.\n"
"If you are using the Kafka connector from Quarkus, it will look like this:"
msgstr "Uma vez implementado, o senhor precisa configurar o serializador e desserializador de chave e valor do seu produtor e consumidor Kafka. Se o senhor estiver usando o conector Kafka do Quarkus, ele terá a seguinte aparência:"

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "But, no worries, Quarkus has a few magic tricks for you."
msgstr "Mas, não te preocupes, o Quarkus tem alguns truques de magia para ti."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "In the rest of this post, we will use the following application:"
msgstr "No resto desta publicação, utilizaremos a seguinte aplicação:"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"The code can be found on https://github.com/cescoffier/quarkus-kafka-serde-demo.\n"
"We will develop three variants:"
msgstr "O código pode ser encontrado em link:https://github.com/cescoffier/quarkus-kafka-serde-demo[https://github.com/cescoffier/quarkus-kafka-serde-demo.] Desenvolveremos três variantes:"

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "The first version uses JSON."
msgstr "A primeira versão utiliza JSON."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "The second version uses Avro."
msgstr "A segunda versão utiliza o Avro."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "The third version uses custom (and dumb) serializer and deserializer."
msgstr "A terceira versão usa um serializador e desserializador personalizado (e burro)."

#. type: Title ==
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy, no-wrap
msgid "Using JSON"
msgstr "Utilizar JSON"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"Using JSON with Kafka is very popular.\n"
"As most web applications use JSON to exchange messages, using it with Kafka sounds like a natural extension."
msgstr "O uso do JSON com o Kafka é muito popular. Como a maioria dos aplicativos da Web usa JSON para trocar mensagens, usá-lo com o Kafka parece uma extensão natural."

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"In our case, it means transforming the instances of https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/json-serde/json-serde-publisher/src/main/java/me/escoffier/quarkus/json/publisher/Hero.java[Hero] to a JSON document and then using the String serializer.\n"
"For the deserialization process, we would do the reverse process.\n"
"To do that with Quarkus, you have *nothing* to do: Quarkus generates the custom JSON serializer and deserializer for you."
msgstr "No nosso caso, isso significa transformar as instâncias do link:https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/json-serde/json-serde-publisher/src/main/java/me/escoffier/quarkus/json/publisher/Hero.java[Hero] em um documento JSON e, em seguida, usar o serializador String. Para o processo de desserialização, faríamos o processo inverso. Para fazer isso com o Quarkus, o senhor não precisa fazer *nada* : O Quarkus gera o serializador e desserializador JSON personalizado para o senhor."

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"In the https://github.com/cescoffier/quarkus-kafka-serde-demo/tree/main/json-serde[json-serde directory], you can find a version of the application using JSON to serialize and deserialize the records.\n"
"It does not contain any custom code or configuration.\n"
"Quarkus automatically detects that you need to write and consume Heroes and generates the serializer and deserializer for you.\n"
"It also configures the channels for you.\n"
"Of course, you can override the configuration, but it's what you want most of the time."
msgstr "No link:https://github.com/cescoffier/quarkus-kafka-serde-demo/tree/main/json-serde[diretório json-serde] , o senhor pode encontrar uma versão do aplicativo que usa JSON para serializar e desserializar os registros. Ele não contém nenhum código ou configuração personalizada. O Quarkus detecta automaticamente que o senhor precisa gravar e consumir heróis e gera o serializador e o desserializador para o senhor. Ele também configura os canais para o senhor. É claro que o usuário pode substituir a configuração, mas isso é o que o usuário deseja na maioria das vezes."

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"To run this application, open two terminals.\n"
"In the first one, navigate to `json-serde/json-serde-publisher`, and run `mvn quarkus:dev`.\n"
"In the second terminal, navigate to `json-serde/json-serde-consumer`, and run `mvn quarkus:dev`.\n"
"Then, open a browser to http://localhost:8080.\n"
"Every 5 seconds, a new picture of a hero is displayed."
msgstr "Para executar esse aplicativo, abra dois terminais. No primeiro, navegue até `json-serde/json-serde-publisher` e execute `mvn quarkus:dev` . No segundo terminal, navegue até `json-serde/json-serde-consumer` e execute `mvn quarkus:dev` . Em seguida, abra um navegador para link:http://localhost:8080[http://localhost:8080.] A cada 5 segundos, uma nova imagem de um herói é exibida."

#. type: Title ==
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy, no-wrap
msgid "Using Avro"
msgstr "Utilizar o Avro"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"The second approach uses https://avro.apache.org/[Avro].\n"
"Avro has several advantages over (bare) JSON:"
msgstr "A segunda abordagem usa link:https://avro.apache.org/[o Avro] . O Avro tem várias vantagens sobre o JSON (puro):"

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "It's a binary and compact protocol. The payloads will be a lot smaller than with JSON."
msgstr "Trata-se de um protocolo binário e compacto. As cargas úteis serão muito mais pequenas do que com JSON."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "The serialization and deserialization processes are a lot faster (avoiding reflection)."
msgstr "Os processos de serialização e desserialização são muito mais rápidos (evitando a reflexão)."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "The format of the message is defined using a schema stored on a schema registry which enables versioning and enforces the structure."
msgstr "O formato da mensagem é definido através de um esquema armazenado num registo de esquemas que permite o controlo de versões e impõe a estrutura."

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"The last point is essential.\n"
"To use Avro, you need a schema registry.\n"
"In this post, we are using https://www.apicur.io/registry/[Apicurio], but you can use the https://docs.confluent.io/platform/current/schema-registry/index.html[Confluent Schema Registry] or https://github.com/aiven/karapace[Karapace].\n"
"Quarkus provides a dev service for Apicurio, so you have nothing to do (as soon as you can run containers on your machine)."
msgstr "O último ponto é essencial. Para usar o Avro, o senhor precisa de um registro de esquema. Neste post, estamos usando o link:https://www.apicur.io/registry/[Apicurio] , mas o senhor pode usar o link:https://docs.confluent.io/platform/current/schema-registry/index.html[Confluent Schema Registry] ou o link:https://github.com/aiven/karapace[Karapace] . O Quarkus fornece um serviço de desenvolvimento para o Apicurio, portanto, o senhor não tem nada a fazer (desde que possa executar contêineres em sua máquina)."

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"To use Avro, we need a schema.\n"
"In https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/avro-serde/avro-serde-consumer/src/main/avro/hero.avsc[hero.avsc], you can find the schema representing our heroes:"
msgstr "Para usar o Avro, precisamos de um esquema. Em link:https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/avro-serde/avro-serde-consumer/src/main/avro/hero.avsc[hero.avsc] , o senhor pode encontrar o esquema que representa nossos heróis:"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"Avro relies on code generation.\n"
"It processes the schema to generate Java classes with the defined fields and serialization and deserialization methods."
msgstr "O Avro se baseia na geração de código. Ele processa o esquema para gerar classes Java com os campos definidos e métodos de serialização e desserialização."

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"While in general, using code generation is an extra step, with Quarkus, it's built-in!\n"
"Once you have a schema in `src/main/avro`, it generates the code for you, and you are ready to use the produced classes."
msgstr "Embora, em geral, o uso da geração de código seja uma etapa extra, com o Quarkus, ela está incorporada! Depois de ter um esquema em `src/main/avro` , o Quarkus gera o código para o usuário e ele está pronto para usar as classes produzidas."

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"In https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/avro-serde/avro-serde-publisher/src/main/java/me/escoffier/quarkus/json/publisher/AvroPublisherApp.java[AvroPublisherApp] and https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/avro-serde/avro-serde-consumer/src/main/java/me/escoffier/quarkus/AvroConsumerResource.java[AvroConsumerResource], we are using the `Hero` class generated from the schema.\n"
"As an example, the consumer application looks like this:"
msgstr "No link:https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/avro-serde/avro-serde-publisher/src/main/java/me/escoffier/quarkus/json/publisher/AvroPublisherApp.java[AvroPublisherApp] e no link:https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/avro-serde/avro-serde-consumer/src/main/java/me/escoffier/quarkus/AvroConsumerResource.java[AvroConsumerResource] , estamos usando a classe `Hero` gerada a partir do esquema. Como exemplo, o aplicativo do consumidor tem a seguinte aparência:"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"Quarkus automatically finds the serializer and deserializer and configures the channels, so again: *no config*.\n"
"However, you still need to instruct Apicurio to register the schema.\n"
"In general, it's a manual operation, but for development, you can use the following property:"
msgstr "O Quarkus encontra automaticamente o serializador e o desserializador e configura os canais, portanto, novamente: *sem configuração* . No entanto, o senhor ainda precisa instruir o Apicurio a registrar o esquema. Em geral, essa é uma operação manual, mas para o desenvolvimento, o senhor pode usar a seguinte propriedade:"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"To run this application, open two terminals.\n"
"In the first one, navigate to `avro-serde/avro-serde-publisher`, and run `mvn quarkus:dev`.\n"
"In the second terminal, navigate to `avro-serde/avro-serde-consumer`, and run `mvn quarkus:dev`.\n"
"Then, open a browser to http://localhost:8080.\n"
"As for the JSON variant, every 5 seconds, a new picture of a hero is displayed.\n"
"This time the Kafka records are serialized using Avro"
msgstr "Para executar esse aplicativo, abra dois terminais. No primeiro, navegue até `avro-serde/avro-serde-publisher` e execute `mvn quarkus:dev` . No segundo terminal, navegue até `avro-serde/avro-serde-consumer` e execute `mvn quarkus:dev` . Em seguida, abra um navegador para link:http://localhost:8080[http://localhost:8080.] Quanto à variante JSON, a cada 5 segundos, é exibida uma nova imagem de um herói. Desta vez, os registros do Kafka são serializados usando o Avro"

#. type: Title ==
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy, no-wrap
msgid "Writing a custom serializer and deserializer"
msgstr "Escrever um serializador e desserializador personalizado"

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"Of course, you can still write your custom serializer and deserializer.\n"
"As mentioned above, you need to implement the `Serializer` and `Deserializer` interfaces."
msgstr "É claro que o senhor ainda pode escrever seu serializador e desserializador personalizado. Conforme mencionado acima, o senhor precisa implementar as interfaces `Serializer` e `Deserializer` ."

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "For example, the  https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/custom-serde/custom-serde-publisher/src/main/java/me/escoffier/quarkus/json/publisher/HeroSerializer.java[HeroSerializer class] contains a straightforward (and inefficient) approach to serializing our heroes:"
msgstr "Por exemplo, a link:https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/custom-serde/custom-serde-publisher/src/main/java/me/escoffier/quarkus/json/publisher/HeroSerializer.java[classe HeroSerializer] contém uma abordagem direta (e ineficiente) para serializar nossos heróis:"

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "The https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/custom-serde/custom-serde-consumer/src/main/java/me/escoffier/quarkus/HeroDeserializer.java[HeroDeserializer class] contains the deserialization counterpart."
msgstr "A  link:https://github.com/cescoffier/quarkus-kafka-serde-demo/blob/main/custom-serde/custom-serde-consumer/src/main/java/me/escoffier/quarkus/HeroDeserializer.java[classe HeroDeserializer] contém a contrapartida da desserialização."

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"As before, Quarkus discovers these implementations and configures the channels for you.\n"
"So you do not have to configure anything."
msgstr "Como antes, o Quarkus descobre essas implementações e configura os canais para o senhor. Portanto, o senhor não precisa configurar nada."

#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid ""
"Custom serializers and deserializers can receive configuration attributes.\n"
"They receive the producer/consumer configuration in the `configure` method."
msgstr "Os serializadores e desserializadores personalizados podem receber atributos de configuração. Eles recebem a configuração do produtor/consumidor no método `configure` ."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "Custom serializers and deserializers cannot be CDI beans. Kafka instantiates them directly using reflection."
msgstr "Os serializadores e desserializadores personalizados não podem ser beans CDI. O Kafka instancia-os diretamente utilizando a reflexão."

#. type: Title ==
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "This post explores different possibilities to serialize and deserialize your messages with Kafka and how Quarkus reduces the amount of boilerplate and configuration you need to use."
msgstr "Este post explora as diferentes possibilidades de serializar e desserializar as suas mensagens com o Kafka e como o Quarkus reduz a quantidade de boilerplate e configuração que precisa de utilizar."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "So, what should you use?"
msgstr "Então, o que deve utilizar?"

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "JSON is massively used, but the lack of structure verification, by default, can quickly be a problem if the format evolves rapidly."
msgstr "O JSON é muito utilizado, mas a falta de verificação da estrutura, por defeito, pode rapidamente tornar-se um problema se o formato evoluir rapidamente."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "Avro provides better performances and handles validation and evolutions. But it requires a schema registry. If your system exchanges lots of messages with evolving structures, Avro should be preferred. Also, Avro produces smaller payloads."
msgstr "O Avro proporciona melhores desempenhos e gere a validação e a evolução. Mas requer um registo de esquemas. Se o seu sistema trocar muitas mensagens com estruturas em evolução, deve dar preferência ao Avro. Além disso, o Avro produz cargas úteis mais pequenas."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "If you have stringent requirements not covered by the JSON and Avro approaches, you can develop a custom serializer and deserializer."
msgstr "Se tiver requisitos rigorosos não abrangidos pelas abordagens JSON e Avro, pode desenvolver um serializador e desserializador personalizados."

#. type: Plain text
#: _posts/2022-08-30-kafka-serde.adoc
#, fuzzy
msgid "Note that JSON can be combined with JSON-Schema (with the schema stored on a schema registry). Protobuf is also a possible alternative if you prefer a binary format."
msgstr "Note-se que o JSON pode ser combinado com o JSON-Schema (com o esquema armazenado num registo de esquemas). O Protobuf é também uma alternativa possível se preferir um formato binário."
