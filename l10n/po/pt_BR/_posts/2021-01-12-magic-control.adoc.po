# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2021-01-12-magic-control.adoc:1
#, fuzzy, no-wrap
msgid "cescoffier"
msgstr "cescoffier"

#. type: YAML Front Matter: date
#: upstream/_posts/2021-01-12-magic-control.adoc:1
#, fuzzy, no-wrap
msgid "2021-01-12"
msgstr "2021-01-12"

#. type: YAML Front Matter: layout
#: upstream/_posts/2021-01-12-magic-control.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "posto"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-01-12-magic-control.adoc:1
#, fuzzy, no-wrap
msgid "How to control the amount of magic from Quarkus"
msgstr "Como controlar a quantidade de magia de Quarkus"

#. type: YAML Front Matter: tags
#: upstream/_posts/2021-01-12-magic-control.adoc:1
#, fuzzy, no-wrap
msgid "vert.x"
msgstr "vert.x"

#. type: YAML Front Matter: title
#: upstream/_posts/2021-01-12-magic-control.adoc:1
#, fuzzy, no-wrap
msgid "Bored with magic tricks?"
msgstr "Farto de truques de magia?"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:13
#, fuzzy
msgid "Just before my PTO, someone told me: '_I don't like magic._' In this context, _magic_ refers to the amount of hidden _stuff_ done by Quarkus under the hood for the sake of simplicity.  It includes dependency injection, annotations, and so on."
msgstr "Pouco antes da minha PTO, alguém me disse: _\"Não gosto de magia_\" _._ Neste contexto, _magia_ refere-se à quantidade de _coisas_ ocultas que o Quarkus faz por baixo do capô por uma questão de simplicidade. Inclui injeção de dependências, anotações, etc."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:17
#, fuzzy
msgid "It's not the first time that I get that kind of comment, and coming from the Vert.x project, it makes sense.  Vert.x has (almost) no magic, and for a good reason: too much magic can be terrible and make production tuning utterly expensive.  Sometimes you want to have more control and avoid unexpected behaviors: execute the code you wrote, and nothing else."
msgstr "Não é a primeira vez que recebo este tipo de comentário, e vindo do projeto Vert.x, faz sentido. O Vert.x (quase) não tem magia, e por uma boa razão: demasiada magia pode ser terrível e tornar a afinação da produção extremamente dispendiosa. Por vezes queremos ter mais controlo e evitar comportamentos inesperados: executar o código que escrevemos, e nada mais."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:22
#, fuzzy
msgid "But magic is not inherently bad.  Magic is power that can be used for good or for bad.  After all, your application runs on a silicon with microcode magic powering an Operating System with abstraction magic powering the Java Virtual Machine with Just In Time magic.  There is magic, it's just magic you have enough knowledge (or trust) of vs magic you don't."
msgstr "Mas a magia não é inerentemente má. A magia é um poder que pode ser utilizado para o bem ou para o mal. Afinal, a sua aplicação corre num silício com magia de microcódigo, alimentando um sistema operativo com magia de abstração, alimentando a máquina virtual Java com magia Just In Time. A magia existe, é apenas a magia de que se tem conhecimento suficiente (ou confiança) versus a magia que não se tem."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:27
#, fuzzy
msgid "You may think that Quarkus has a lot of magic tricks.  It is true in some sense but it is easily understood and comes with strong benefits in either memory optimization, startup time optimization or last but not least developer experience improvements.  You can decide the amount of magic that you want and the amount of control you feel comfortable with.  You don't have to use dependency injection or managed clients if you prefer doing things yourself."
msgstr "Pode pensar que o Quarkus tem muitos truques de magia. É verdade, em certo sentido, mas é facilmente compreensível e traz grandes benefícios na otimização da memória, na otimização do tempo de arranque ou, por último, mas não menos importante, na melhoria da experiência do programador. Pode decidir a quantidade de magia que quer e a quantidade de controlo com que se sente confortável. Não é necessário utilizar injeção de dependências ou clientes geridos se preferir fazer as coisas sozinho."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:31
#, fuzzy
msgid "In this post, we will cover three different approaches to reducing the amount of magic.  We will go from almost no magic to just enough to get a good developer experience.  Examples from this blog post are available on https://github.com/cescoffier/quarkus-magic-control[GitHub]."
msgstr "Neste post, abordaremos três abordagens diferentes para reduzir a quantidade de magia. Iremos de quase nenhuma mágica para apenas o suficiente para obter uma boa experiência de desenvolvedor. Os exemplos deste post do blogue estão disponíveis no  link:https://github.com/cescoffier/quarkus-magic-control[GitHub]."

#. type: Title ==
#: upstream/_posts/2021-01-12-magic-control.adoc:32
#, fuzzy, no-wrap
msgid "The _almost no magic_ approach"
msgstr "A abordagem _quase sem magia_"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:38
#, fuzzy
msgid "Quarkus applications are Java applications.  So, somewhere there is a `public static void main(String... args)`.  While you don't need to write that method when using Quarkus, it can still be convenient and give you more control about your application startup.  It's also a good trick to start your Quarkus application directly from your IDE."
msgstr "As aplicações Quarkus são aplicações Java. Portanto, em algum lugar há um `public static void main(String…​ args)`. Embora não seja necessário escrever esse método ao usar o Quarkus, ele ainda pode ser conveniente e dar a você mais controle sobre a inicialização da sua aplicação. É também um bom truque para iniciar a sua aplicação Quarkus diretamente a partir do seu IDE."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:40
#, fuzzy
msgid "As an example, we will implement a straightforward HTTP application. Nothing fancy:"
msgstr "Como exemplo, vamos implementar uma aplicação HTTP simples. Nada de especial:"

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:44
#, no-wrap
msgid "package me.escoffier.quarkus.nomagic;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:52
#, no-wrap
msgid ""
"import io.quarkus.runtime.Quarkus;\n"
"import io.quarkus.runtime.QuarkusApplication;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
"import io.vertx.core.Vertx;\n"
"import io.vertx.core.http.HttpServer;\n"
"import io.vertx.ext.web.Router;\n"
"import org.eclipse.microprofile.config.ConfigProvider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:55
#, no-wrap
msgid ""
"@QuarkusMain\n"
"public class Main implements QuarkusApplication {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:59
#, no-wrap
msgid ""
"    public static void main(String... args) {\n"
"        Quarkus.run(Main.class, args);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:64
#, no-wrap
msgid ""
"    @Override\n"
"    public int run(String... args) {\n"
"        Vertx vertx = Vertx.vertx();\n"
"        Router router = Router.router(vertx);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:66
#, no-wrap
msgid "        String message = ConfigProvider.getConfig().getValue(\"message\", String.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:72
#, no-wrap
msgid ""
"        router.get(\"/\").handler(rc -> rc.response().end(message));\n"
"        router.get(\"/bye\").handler(rc -> {\n"
"            rc.response().end(\"bye\");\n"
"            Quarkus.asyncExit();\n"
"        });\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:76
#, no-wrap
msgid ""
"        HttpServer server = vertx.createHttpServer()\n"
"                .requestHandler(router)\n"
"                .listen(8080);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:78
#, no-wrap
msgid "        Quarkus.waitForExit();\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:83
#, no-wrap
msgid ""
"        server.close();\n"
"        return 0;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:87
#, fuzzy
msgid "The complete source code is available https://github.com/cescoffier/quarkus-magic-control/tree/main/no-magic-example[here].  Don't expect much more; the application had only one Java class, but let's look into it."
msgstr "O código fonte completo está disponível  link:https://github.com/cescoffier/quarkus-magic-control/tree/main/no-magic-example[aqui]. Não esperes muito mais; a aplicação tinha apenas uma classe Java, mas vamos analisá-la."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:96
#, fuzzy
msgid "The `@QuarkusMain` indicates that Quarkus should use this class as the _main entry point_ of the application.  The `run` method contains your application logic.  We will come back to this logic later.  First, look at the `public static void main(String... args)` method.  It just starts the application.  You can use this entry point directly from your IDE.  Yes, there is still a bit of magic behind `Quarkus.run`; that's where the extension initialization happens - not unlike _any_ framework initialization including Vert.x.  As this application does not use any extension, nothing much will happen."
msgstr "O `@QuarkusMain` indica que o Quarkus deve utilizar esta classe como _ponto de entrada principal_ da aplicação. O método `run` contém a lógica da aplicação. Voltaremos a esta lógica mais tarde. Primeiro, veja o método `public static void main(String…​ args)`. Ele apenas inicia a aplicação. Você pode usar esse ponto de entrada diretamente do seu IDE. Sim, ainda há um pouco de mágica por trás de `Quarkus.run`; é onde a inicialização da extensão acontece - não muito diferente de _qualquer_ inicialização de framework, incluindo Vert.x. Como este aplicativo não usa nenhuma extensão, nada de mais acontecerá."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:99
#, fuzzy
msgid "This application https://github.com/cescoffier/quarkus-magic-control/blob/main/no-magic-example/pom.xml#L17-L26[depends] directly on Vert.x Web and Vert.x Core.  The only Quarkus dependency is Arc (not used directly but required):"
msgstr "Esta aplicação  link:https://github.com/cescoffier/quarkus-magic-control/blob/main/no-magic-example/pom.xml#L17-L26[depende] diretamente do Vert.x Web e do Vert.x Core. A única dependência do Quarkus é o Arc (não utilizado diretamente, mas necessário):"

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:107
#, no-wrap
msgid ""
"<dependencies>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-arc</artifactId>\n"
"    </dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:114
#, no-wrap
msgid ""
"    <dependency>\n"
"        <groupId>io.vertx</groupId>\n"
"        <artifactId>vertx-web</artifactId>\n"
"        <version>3.9.5</version>\n"
"    </dependency>\n"
"</dependencies>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:121
#, fuzzy
msgid "Let's go back to the `run` method.  It contains the application logic, here, a dummy Vert.x application.  It creates the `Vertx` instance, a `Router`, registers a few routes, and starts the HTTP server.  Because we don't want the application to stop immediately, we _wait for exit_.  The `/bye` request handler illustrates how you can programmatically trigger the application shutdown."
msgstr "Voltemos ao método `run`. Ele contém a lógica da aplicação, aqui, uma aplicação Vert.x fictícia. Cria a instância `Vertx`, uma `Router`, regista algumas rotas e inicia o servidor HTTP. Como não queremos que a aplicação pare imediatamente, esperamos _pela saída_. O manipulador de solicitação `/bye` ilustra como você pode acionar programaticamente o encerramento da aplicação."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:125
#, fuzzy
msgid "This application has almost no magic, just a single annotation, and a regular Java entry point.  You may wonder why not using a bare Java program? Even used that way, Quarkus provides benefits. For example, you can access the built-in configuration support as illustrated in the snippet:"
msgstr "Esta aplicação quase não tem magia, apenas uma única anotação e um ponto de entrada Java normal. Você pode se perguntar por que não usar um programa Java simples? Mesmo usado dessa forma, o Quarkus oferece benefícios. Por exemplo, pode aceder ao suporte de configuração integrado, conforme ilustrado no snippet:"

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:129
#, no-wrap
msgid "String message = ConfigProvider.getConfig().getValue(\"message\", String.class);\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:132
#, fuzzy
msgid "The configuration is located in the `application.properties` file."
msgstr "A configuração está localizada no ficheiro `application.properties`."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:138
#, fuzzy
msgid "This first approach has a few drawbacks.  It does not benefit from the built-time processing of Quarkus.  The logic executed at build time is packaged inside extensions, and in this case, we don't use extensions (except Arc).  Another issue is that compiling this application to native will fail because extensions are also involved during the native compilation.  Finally, the hot reload won't work, but you can directly restart the application from your IDE."
msgstr "Esta primeira abordagem tem alguns inconvenientes. Não beneficia do processamento em tempo de construção do Quarkus. A lógica executada em tempo de compilação é empacotada dentro de extensões e, neste caso, não usamos extensões (exceto o Arc). Outro problema é que a compilação desta aplicação para nativo falhará porque as extensões também estão envolvidas durante a compilação nativa. Por fim, o hot reload não funcionará, mas você pode reiniciar diretamente o aplicativo a partir do seu IDE."

#. type: Title ==
#: upstream/_posts/2021-01-12-magic-control.adoc:139
#, fuzzy, no-wrap
msgid "Using the managed Vert.x instance"
msgstr "Utilizar a instância gerida do Vert.x"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:146
#, fuzzy
msgid "Quarkus uses Vert.x heavily.  The `quarkus-vertx-core` extension manages the Vert.x instance used by Quarkus.  You can use that instance directly and avoid creating the Vert.x instance.  If you need to configure the instance, you can configure it from https://quarkus.io/guides/all-config#quarkus-vertx-core_quarkus-vertx-core-eclipse-vert.x-core[the `application.properties`].  It also enables native packaging (as that extension contains the directive to compile Vert.x applications to native)."
msgstr "O Quarkus utiliza fortemente o Vert.x. A extensão `quarkus-vertx-core` gere a instância Vert.x utilizada pelo Quarkus. Pode utilizar essa instância diretamente e evitar criar a instância Vert.x. Se precisar de configurar a instância, pode configurá-la  link:https://quarkus.io/guides/all-config#quarkus-vertx-core_quarkus-vertx-core-eclipse-vert.x-core[a] partir de  link:https://quarkus.io/guides/all-config#quarkus-vertx-core_quarkus-vertx-core-eclipse-vert.x-core[`application.properties`. Também permite o empacotamento nativo (uma vez que essa extensão contém a diretiva para compilar aplicações Vert.x para nativo).]"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:148
#, fuzzy
msgid "In your pom.xml file, just add the following dependency:"
msgstr "No seu ficheiro pom.xml, basta adicionar a seguinte dependência:"

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:155
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-vertx-core</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:158
#, fuzzy
msgid "With this, the _run_ method becomes:"
msgstr "Com isto, o método de _execução_ torna-se:"

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:165
#, no-wrap
msgid ""
"@Override\n"
"public int run(String... args) {\n"
"    Vertx vertx = CDI.current().select(Vertx.class).get();\n"
"    Router router = Router.router(vertx);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:167
#: upstream/_posts/2021-01-12-magic-control.adoc:231
#, no-wrap
msgid "    String message = ConfigProvider.getConfig().getValue(\"message\", String.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:173
#, no-wrap
msgid ""
"    router.get(\"/\").handler(rc -> rc.response().end(message + \" world!\"));\n"
"    router.get(\"/stop\").handler(rc -> {\n"
"        rc.response().end(\"bye\");\n"
"        Quarkus.asyncExit();\n"
"    });\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:177
#, no-wrap
msgid ""
"    HttpServer server = vertx.createHttpServer()\n"
"            .requestHandler(router)\n"
"            .listen(8080);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:179
#, no-wrap
msgid "    Quarkus.waitForExit();\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:183
#, no-wrap
msgid ""
"    server.close();\n"
"    return 0;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:189
#, fuzzy
msgid "Note how it retrieves the managed Vert.x instance.  While you can use `@Inject`, you can also retrieve it programmatically, the rest of the code does not change.  See? No magic for you! We can still start it from the IDE using the _main_ method."
msgstr "Observe como ele recupera a instância gerenciada do Vert.x. Embora seja possível usar `@Inject`, também é possível recuperá-la programaticamente, o restante do código não muda. Está a ver? Não há mágica para você! Ainda podemos iniciá-lo a partir do IDE usando o método _main_."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:191
#, fuzzy
msgid "If you don't include the `quarkus-vertx-core` extension (or any extension depending on it), Quarkus won't create the Vert.x instance."
msgstr "Se não incluir a extensão `quarkus-vertx-core` (ou qualquer extensão que dela dependa), o Quarkus não criará a instância Vert.x."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:193
#, fuzzy
msgid "Using extensions gives you some property wiring as well as the build time optimisations and native image compilation:"
msgstr "A utilização de extensões dá-lhe algumas propriedades de ligação, bem como as optimizações de tempo de construção e a compilação de imagens nativas:"

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:199
#, no-wrap
msgid ""
"> mvn package -Dnative\n"
"...\n"
"> ./target/managed-vertx-example-1.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:202
#, fuzzy
msgid "But, still no hot reload 😿."
msgstr "Mas, ainda não há recarga a quente 😿."

#. type: Title ==
#: upstream/_posts/2021-01-12-magic-control.adoc:203
#, fuzzy, no-wrap
msgid "Using the managed HTTP server"
msgstr "Utilizar o servidor HTTP gerido"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:207
#, fuzzy
msgid "Instead of using only the `quarkus-vertx-core` extension, we can choose to delegate the HTTP server to Quarkus.  You may see that as a loss of control, but actually, we rarely do much around it, and again, you can configure it from the `application.properties` file if needed."
msgstr "Em vez de usar apenas a extensão `quarkus-vertx-core`, podemos optar por delegar o servidor HTTP ao Quarkus. Poderá ver isso como uma perda de controlo, mas, na verdade, raramente fazemos muito em torno disso e, mais uma vez, pode configurá-lo a partir do ficheiro `application.properties`, se necessário."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:209
#, fuzzy
msgid "Instead of ``quarkus-vertx-core`, use `quarkus-vertx-http`:"
msgstr "Em vez de ``quarkus-vertx-core`, utilizar `quarkus-vertx-http`:"

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:218
#, no-wrap
msgid ""
"<dependencies>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-vertx-http</artifactId>\n"
"    </dependency>\n"
"</dependencies>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:221
#, fuzzy
msgid "No need to depend on Vert.x Web directly, it's included."
msgstr "Não é necessário depender diretamente do Vert.x Web, ele está incluído."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:223
#, fuzzy
msgid "You will still register your routes, but using a managed `Router`:"
msgstr "Continuará a registar os seus itinerários, mas utilizando um `Router` gerido:"

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:229
#, no-wrap
msgid ""
"@Override\n"
"public int run(String... args) {\n"
"    Router router = CDI.current().select(Router.class).get();\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:237
#, no-wrap
msgid ""
"    router.get(\"/\").handler(rc -> rc.response().end(message));\n"
"    router.get(\"/bye\").handler(rc -> {\n"
"        rc.response().end(\"bye\");\n"
"        Quarkus.asyncExit();\n"
"    });\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:241
#, no-wrap
msgid ""
"    Quarkus.waitForExit();\n"
"    return 0;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:245
#, fuzzy
msgid "That approach enables the Quarkus hot reload as it intercepts the HTTP requests.  You are still in control of everything related to your application logic."
msgstr "Esta abordagem permite o recarregamento a quente do Quarkus à medida que intercepta os pedidos HTTP. Continua a ter o controlo de tudo o que está relacionado com a lógica da sua aplicação."

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:247
#, fuzzy
msgid "You can start the hot reload using:"
msgstr "Pode iniciar o recarregamento a quente utilizando:"

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:251
#, no-wrap
msgid "> mvn quarkus:dev\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-01-12-magic-control.adoc:253
#, fuzzy, no-wrap
msgid "The final _magic touch_"
msgstr "O _toque mágico_ final"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:258
#, fuzzy
msgid "The question, now, is how far are we from a _regular_ Quarkus application? Quite close, actually.  The equivalent application using RESTEasy Reactive would be something like:"
msgstr "A questão, agora, é saber a que distância estamos de uma aplicação _normal_ do Quarkus? Muito perto, na verdade. A aplicação equivalente usando RESTEasy Reactive seria algo como:"

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:263
#, no-wrap
msgid ""
"@Path(\"/\")\n"
"public class MyResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:265
#, no-wrap
msgid "    @Inject @ConfigProperty(\"message\") String message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:270
#, no-wrap
msgid ""
"    @GET\n"
"    public String hello() {\n"
"        return message;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-01-12-magic-control.adoc:272
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:279
#, fuzzy
msgid "Unlike the previous approaches, this one leverages a declarative (annotation-based) model.  Under the hood, it's not that different from the last approach.  Quarkus registers a route (on the router), which then calls the `hello` method when a matching request is received.  The router gets initialized during the `Quarkus.run` method.  No need for the _main_ endpoint, but you can still use one, often convenient in IDEs."
msgstr "Ao contrário das abordagens anteriores, esta utiliza um modelo declarativo (baseado em anotações). Na parte de baixo, não é muito diferente da última abordagem. O Quarkus regista uma rota (no router), que depois chama o método `hello` quando é recebido um pedido correspondente. O router é inicializado durante o método `Quarkus.run`. Não há necessidade do ponto de extremidade _principal_, mas ainda é possível usar um, geralmente conveniente em IDEs."

#. type: Title ==
#: upstream/_posts/2021-01-12-magic-control.adoc:280
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumo"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:286
#, fuzzy
msgid "Our relation to magic depends on our background and experience.  Quarkus lets you decide how much magic you accept.  This post presented fours configurations, going from almost no magic to the _regular_ Quarkus code.  Each approach has pros and cons:"
msgstr "A nossa relação com a magia depende da nossa formação e experiência. O Quarkus permite-lhe decidir a quantidade de magia que aceita. Este post apresentou quatro configurações, desde quase nenhuma magia até ao código _normal_ do Quarkus. Cada abordagem tem prós e contras:"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:288
#, fuzzy, no-wrap
msgid "Control"
msgstr "Controlo"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:288
#, fuzzy, no-wrap
msgid "Build time optimizations"
msgstr "Optimizações do tempo de construção"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:288
#, fuzzy, no-wrap
msgid "Native executable"
msgstr "Executável nativo"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:290
#, fuzzy, no-wrap
msgid "Hot Reload"
msgstr "Recarga a quente"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:291
#, fuzzy, no-wrap
msgid "_Almost no magic_"
msgstr "_Quase sem magia_"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:292
#, fuzzy, no-wrap
msgid "Full"
msgstr "Completo"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:293
#: upstream/_posts/2021-01-12-magic-control.adoc:294
#: upstream/_posts/2021-01-12-magic-control.adoc:296
#: upstream/_posts/2021-01-12-magic-control.adoc:302
#, fuzzy, no-wrap
msgid "🥵"
msgstr "🥵"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:297
#, fuzzy, no-wrap
msgid "Use the managed Vert.x instance"
msgstr "Utilizar a instância Vert.x gerida"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:298
#, fuzzy, no-wrap
msgid "Everything but Vert.x"
msgstr "Tudo exceto Vert.x"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:299
#, fuzzy, no-wrap
msgid "😀, for Vert.x"
msgstr "😀, para Vert.x"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:300
#: upstream/_posts/2021-01-12-magic-control.adoc:306
#: upstream/_posts/2021-01-12-magic-control.adoc:308
#: upstream/_posts/2021-01-12-magic-control.adoc:311
#: upstream/_posts/2021-01-12-magic-control.adoc:312
#: upstream/_posts/2021-01-12-magic-control.adoc:314
#, fuzzy, no-wrap
msgid "😀"
msgstr "😀"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:303
#, fuzzy, no-wrap
msgid "Use the managed HTTP server"
msgstr "Utilizar o servidor HTTP gerido"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:304
#, fuzzy, no-wrap
msgid "Everything but Vert.x and the HTTP server"
msgstr "Tudo exceto o Vert.x e o servidor HTTP"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:305
#, fuzzy, no-wrap
msgid "😀, for Vert.x and HTTP"
msgstr "😀, para Vert.x e HTTP"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:309
#, fuzzy, no-wrap
msgid "_Regular_ Quarkus"
msgstr "Quarkus _normal_"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:310
#, fuzzy, no-wrap
msgid "Endpoint managed by Quarkus"
msgstr "Ponto final gerido pelo Quarkus"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:318
#, fuzzy
msgid "Pick the approach that fits your needs.  Besides, most of Quarkus services are also available using a programmatic approach, as we have seen for configuration.  So, if you prefer avoiding managed objects, feel free just to use the available APIs."
msgstr "Escolha a abordagem que melhor se adapta às suas necessidades. Além disso, a maioria dos serviços Quarkus também está disponível utilizando uma abordagem programática, como vimos para a configuração. Assim, se preferir evitar objectos geridos, sinta-se à vontade para utilizar as APIs disponíveis."
