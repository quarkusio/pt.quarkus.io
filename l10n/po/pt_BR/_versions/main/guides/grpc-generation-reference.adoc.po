# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:06+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:6
#, no-wrap
msgid "gRPC code generation reference guide"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:15
msgid "This reference guide explains how to configure gRPC code generation. It is recommended to read the xref:grpc.adoc[official gRPC guide] first."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:16
#, no-wrap
msgid "Enabling gRPC code generation"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:19
msgid "By default, `\\*.proto` files located in the `src/main/proto` directory are compiled into Java sources during the build process."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:20
#, no-wrap
msgid "Using Maven"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:23
msgid "To enable gRPC code generation, add the following dependency to your project:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:30
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-grpc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:33
msgid "Next, ensure that the `generate-code` phase is enabled in the Quarkus Maven plugin:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:51
#, no-wrap
msgid ""
"<plugin>\n"
"    <groupId>${quarkus.platform.group-id}</groupId>\n"
"    <artifactId>quarkus-maven-plugin</artifactId>\n"
"    <version>${quarkus.platform.version}</version>\n"
"    <extensions>true</extensions>\n"
"    <executions>\n"
"        <execution>\n"
"            <goals>\n"
"                <goal>build</goal>\n"
"                <goal>generate-code</goal>\n"
"                <goal>generate-code-tests</goal>\n"
"            </goals>\n"
"        </execution>\n"
"    </executions>\n"
"</plugin>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:53
#, no-wrap
msgid "Using Gradle"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:56
msgid "For Gradle, add the following dependency to your project:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:60
#, no-wrap
msgid "implementation 'io.quarkus:quarkus-grpc'\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:62
#, no-wrap
msgid "Customizing the _proto_ directory"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:66
msgid "By default, it is assumed that the `\\*.proto` files are located in the `src/main/proto` directory.  You can configure this location using the `quarkus.grpc.codegen.proto-directory` property in your **build descriptor**."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:68
msgid "With Maven, add the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:91
#, no-wrap
msgid ""
"<plugin>\n"
"    <groupId>${quarkus.platform.group-id}</groupId>\n"
"    <artifactId>quarkus-maven-plugin</artifactId>\n"
"    <version>${quarkus.platform.version}</version>\n"
"    <extensions>true</extensions>\n"
"    <executions>\n"
"        <execution>\n"
"            <goals>\n"
"                <goal>build</goal>\n"
"                <goal>generate-code</goal>\n"
"                <goal>generate-code-tests</goal>\n"
"            </goals>\n"
"            <configuration>\n"
"                <properties>\n"
"                    <quarkus.grpc.codegen.proto-directory>${project.basedir}/ext/proto</quarkus.grpc.codegen.proto-directory>\n"
"                </properties>\n"
"            </configuration>\n"
"        </execution>\n"
"    </executions>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:94
msgid "With Gradle, use the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:100
#, no-wrap
msgid ""
"quarkus {\n"
"    quarkusBuildProperties.put(\"quarkus.grpc.codegen.proto-directory\", \"${project.projectDir}/ext/proto\")\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:102
#, no-wrap
msgid "Configuring gRPC code generation for dependencies"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:106
msgid "You may have dependencies that contain `\\*.proto` files you want to compile to Java sources.  This section explains how to configure code generation to include these `\\*.proto` files during code generation."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:107
#, no-wrap
msgid "Proto files for imports"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:112
msgid "The Protocol Buffers specification provides a way to import `proto` files.  The Quarkus code generation mechanism lets you control the scope of dependencies to scan for possible imports by setting the `quarkus.generate-code.grpc.scan-for-imports` property in your `application.properties`.  You can set it to one of the following values:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:114
msgid "`all` - scan all dependencies"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:115
msgid "`none` - don't scan dependencies, use only what is defined in `src/main/proto` or `src/test/proto`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:116
msgid "`groupId1:artifactId1,groupId2:artifactId2` - scan only the specified dependencies by group ID and artifact ID."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:120
msgid "If not specified, the property defaults to `com.google.protobuf:protobuf-java`.  To override it, set the `quarkus.generate-code.grpc.scan-for-imports` property in your `application.properties`.  For example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:124
#, no-wrap
msgid "quarkus.generate-code.grpc.scan-for-imports=all\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:127
#, no-wrap
msgid "Proto files from dependencies"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:131
msgid "In some cases, you may want to use `proto` files from a different project to generate gRPC stubs.  To do this:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:133
msgid "Add a dependency on the artifact that contains the proto file to your project."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:134
msgid "In `application.properties`, specify the dependencies you want to scan for proto files."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:138
#, no-wrap
msgid "quarkus.generate-code.grpc.scan-for-proto=<groupId>:<artifactId>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:141
msgid "The value of the property can be `none`, which is the default, or a comma-separated list of `groupId:artifactId` coordinates."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:144
msgid "If the dependency contains many proto files, and you want to generate classes for only a subset of them, you can specify glob patterns per dependency.  The paths to match are relative to the `src/main/resources` path in the dependency. For example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:149
#, no-wrap
msgid ""
"quarkus.generate-code.grpc.scan-for-proto-include.\"<groupId>:<artifactId>\"=foo/**,bar/**,banana/a-proto.proto\n"
"quarkus.generate-code.grpc.scan-for-proto-exclude.\"<groupId>:<artifactId>\"=foo/private/**,bar/another-proto.proto\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:152
msgid "Note that `:` characters in the property keys must be escaped."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:153
#, no-wrap
msgid "Skipping code generation"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:156
msgid "You can skip gRPC code generation using:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:158
msgid "The `grpc.codegen.skip` system property: `-Dgrpc.codegen.skip=true`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:159
msgid "The `quarkus.grpc.codegen.skip` property in your `application.properties` file: `quarkus.grpc.codegen.skip=true`"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:161
#, no-wrap
msgid "Generating Java files from proto with the protobuf-maven-plugin"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:165
msgid "Alternatively, to generate stubs for `proto` files, you can use the `protobuf-maven-plugin`.  However, it's recommended to use Quarkus support unless you have a specific need."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:167
msgid "To do this, define the following properties in the `<properties>` section:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:172
#, no-wrap
msgid ""
"<grpc.version>{grpc-version}</grpc.version>\n"
"<protoc.version>{protoc-version}</protoc.version>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:175
msgid "These properties configure the gRPC version and the `protoc` version."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:177
msgid "Then, add the `os-maven-plugin` extension and the `protobuf-maven-plugin` configuration to the `build` section:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:188
#, no-wrap
msgid ""
"<build>\n"
"    <extensions>\n"
"        <extension>\n"
"            <groupId>kr.motd.maven</groupId>\n"
"            <artifactId>os-maven-plugin</artifactId>\n"
"            <version>${os-maven-plugin-version}</version>\n"
"        </extension>\n"
"    </extensions>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:225
#, no-wrap
msgid ""
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>org.xolstice.maven.plugins</groupId>\n"
"            <artifactId>protobuf-maven-plugin</artifactId>   <!--1-->\n"
"            <version>${protobuf-maven-plugin-version}</version>\n"
"            <configuration>\n"
"                <protocArtifact>com.google.protobuf:protoc:${protoc.version}:exe:${os.detected.classifier}</protocArtifact>  <!--2-->\n"
"                <pluginId>grpc-java</pluginId>\n"
"                <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>\n"
"                <protocPlugins>\n"
"                    <protocPlugin>\n"
"                        <id>quarkus-grpc-protoc-plugin</id>\n"
"                        <groupId>io.quarkus</groupId>\n"
"                        <artifactId>quarkus-grpc-protoc-plugin</artifactId>\n"
"                        <version>{quarkus-version}</version>\n"
"                        <mainClass>io.quarkus.grpc.protoc.plugin.MutinyGrpcGenerator</mainClass>\n"
"                    </protocPlugin>\n"
"                </protocPlugins>\n"
"            </configuration>\n"
"            <executions>\n"
"                <execution>\n"
"                    <id>compile</id>\n"
"                    <goals>\n"
"                        <goal>compile</goal>\n"
"                        <goal>compile-custom</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"                <execution>\n"
"                    <id>test-compile</id>\n"
"                    <goals>\n"
"                        <goal>test-compile</goal>\n"
"                        <goal>test-compile-custom</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:229
#, no-wrap
msgid ""
"        <!-- ... -->\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:232
msgid "The `protobuf-maven-plugin` generates stub classes from your gRPC service definition (`proto` files)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:233
msgid "Class generation uses the tool `protoc`, which is OS-specific. This is why we use the `os-maven-plugin` to target the executable compatible with the operating system."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:235
msgid "Note: This configuration instructs the `protobuf-maven-plugin` to generate default gRPC classes and classes using Mutiny to fit with the Quarkus development experience."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:237
msgid "When using `protobuf-maven-plugin`, instead of the `quarkus-maven-plugin`, you need to re-generate classes (using `mvn compile`) every time you update the `proto` files."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:238
#, no-wrap
msgid "Using generated gRPC classes from dependencies"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:243
msgid "When gRPC classes, which are classes generated from `proto` files, are in a dependency of the application, the dependency needs a Jandex index.  You can create a Jandex index using the `jandex-maven-plugin`.  More information on this topic can be found in the xref:cdi-reference.adoc#bean_discovery[Bean Discovery] section of the CDI guide."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:263
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>io.smallrye</groupId>\n"
"            <artifactId>jandex-maven-plugin</artifactId>\n"
"            <version>{jandex-version}</version>\n"
"            <executions>\n"
"                <execution>\n"
"                <id>make-index</id>\n"
"                <goals>\n"
"                    <goal>jandex</goal>\n"
"                </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:266
msgid "If you are using Gradle, you can use the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:272
#, no-wrap
msgid ""
"plugins {\n"
"    id 'org.kordamp.gradle.jandex' version '1.1.0'\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/grpc-generation-reference.adoc:275
msgid "It is recommended to package the `proto` files in a dependency instead of the generated classes, so Quarkus can generate optimized classes.  Refer to the xref:scan-for-proto[dedicated section] for more information."
msgstr ""
