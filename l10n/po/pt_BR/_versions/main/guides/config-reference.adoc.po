# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-22 08:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/config-reference.adoc:6
#, no-wrap
msgid "Configuration Reference Guide"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:17
msgid "The content of this guide has been revised and split into additional topics. Please check the xref:additional-information[Additional Information] section."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:22
msgid "In this reference guide we're going to describe various aspects of Quarkus configuration. A Quarkus application and Quarkus itself (core and extensions) are both configured via the same mechanism that leverages the https://github.com/smallrye/smallrye-config[SmallRye Config] API an implementation of the https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] specification."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:25
msgid "If you're looking for information how to make a Quarkus extension configurable then see the xref:writing-extensions.adoc#configuration[Writing Your Own Extension] guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:27
#, no-wrap
msgid "Config Sources"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:30
msgid "By default, Quarkus reads configuration properties from multiple sources (by descending ordinal):"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:32
msgid "(400) xref:system-properties[System properties]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:33
msgid "(300) xref:environment-variables[Environment variables]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:34
msgid "(295) xref:env-file[.env] file in the current working directory"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:35
msgid "(260) xref:application-properties-file[Quarkus Application configuration file] in `$PWD/config/application.properties`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:36
msgid "(250) xref:application-properties-file[Quarkus Application configuration file] `application.properties` in classpath"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:38
msgid "(100) xref:microprofile-config-properties-file[MicroProfile Config configuration file] `META-INF/microprofile-config.properties` in classpath"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:44
msgid "The final configuration is the aggregation of the properties defined by all these sources. A configuration property lookup starts by the highest ordinal configuration source available and works it way down to other sources until a match is found. This means that any configuration property may override a value just by setting a different value in a higher ordinal config source. For example, a property configured using an environment property overrides the value provided using the `application.properties` file."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/config-reference.adoc:45
#, no-wrap
msgid "config-sources.png"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:48
#, no-wrap
msgid "System properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:52
msgid "System properties can be handed to the application through the `-D` flag during startup. The following examples assign the value `youshallnotpass` to the attribute `quarkus.datasource.password`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:54
msgid "For Quarkus dev mode: `./mvnw quarkus:dev -Dquarkus.datasource.password=youshallnotpass`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:55
msgid "For a runner jar: `java -Dquarkus.datasource.password=youshallnotpass -jar target/quarkus-app/quarkus-run.jar`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:56
msgid "For a native executable: `./target/myapp-runner -Dquarkus.datasource.password=youshallnotpass`"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:58
#, no-wrap
msgid "Environment variables"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:61
msgid "For a runner jar: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; java -jar target/quarkus-app/quarkus-run.jar`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:62
msgid "For a native executable: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; ./target/myapp-runner`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:66
msgid "Environment variables names follow the conversion rules specified by link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#default-configsources[MicroProfile Config].  Config searches three environment variables for a given property name (e.g. `foo.BAR.baz`):"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:68
msgid "`foo.BAR.baz` - Exact match"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:69
msgid "`foo_BAR_baz` - Replace each character that is neither alphanumeric nor `\\_` with `_`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:71
msgid "`FOO_BAR_BAZ` - Replace each character that is neither alphanumeric nor `\\_` with `_`; then convert the name to upper case"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:73
msgid "SmallRye Config specifies link:https://smallrye.io/smallrye-config/Main/config/environment-variables/[additional conversion rules]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:76
msgid "A property with double quotes `foo.\"bar\".baz`, replace each character that is neither alphanumeric nor `\\_` with `_`: `FOO\\__BAR__BAZ`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:78
msgid "A property with dashes `foo.bar-baz`, replace each character that is neither alphanumeric nor `\\_` with `_`: `FOO_BAR_BAZ`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:80
msgid "An indexed property `foo.bar[0]` or `foo.bar[0].baz`, replace each character that is neither alphanumeric nor `\\_` with `_`: `FOO_BAR_0_` or `FOO_BAR_0__BAZ`"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:87
msgid "In some situations, looking up the exact property name is impossible. For instance, when looking up a configuration that is part of a `Map`, and the property name contains a dynamic segment (the `Map` key). In this case, Quarkus relies upon each source’s list of property names. These must be converted back to their most likely dotted format for Environment Variables."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:91
msgid "By default, the underscore `_` of an Environment Variable name always maps to a dot `.`. If the property name contains a dash or some other special character, that property name can be specified in another Config Source, with the expected dotted format. It will provide additional information to perform a two-way conversion and match the property names."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:94
msgid "To correctly lookup `Map` properties where `FOO_BAR_BAZ` is the property name and `BAR_BAZ` is the key, add `foo.bar-baz` in a source with an ordinal lower than the EnvConfigSource (`300`)."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:98
#, no-wrap
msgid "`.env` file in the current working directory"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:101
#: upstream/_versions/main/guides/config-reference.adoc:289
msgid "..env"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:104
#, no-wrap
msgid "QUARKUS_DATASOURCE_PASSWORD=youshallnotpass <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:106
msgid "The name `QUARKUS_DATASOURCE_PASSWORD` the same conversion rules used for xref:environment-variables[Environment variables]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:109
msgid "For `dev` mode, this file can be placed in the root of the project, but it is advised to **not** check it in to version control because it typically contains passwords, access tokens, API keys or other secrets."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:111
msgid "Environment variables in the `.env` file are not available via the `System.getenv(String)` API."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:113
#, no-wrap
msgid "Quarkus Application configuration file"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:121
msgid "The Quarkus Application configuration file is loaded from the classpath resources, for instance `src/main/resources/application.properties`, `src/test/resources/application.properties` or from a `jar` dependency that contains an `application.properties` entry. Each `application.properties` found is treated as a separate `ConfigSource` and follow the same rules as every other source (override per property). Additionally, the configuration file may also reside in `$PWD/config/application.properties`. The loading starts from the config folder and then classpath order (`application.properties` files in the application sources will have priority on the classloader loading order)."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-reference.adoc:122
#, no-wrap
msgid "`application.properties`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:127
#: upstream/_versions/main/guides/config-reference.adoc:145
#, no-wrap
msgid ""
"greeting.message=hello <1>\n"
"quarkus.http.port=9090 <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:129
#: upstream/_versions/main/guides/config-reference.adoc:147
msgid "This is a user-defined configuration property."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:130
#: upstream/_versions/main/guides/config-reference.adoc:148
msgid "This is a configuration property consumed by the `quarkus-vertx-http` extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:134
msgid "The `config/application.properties` is also available in `dev` mode. The file needs to be placed inside the build tool output directory (`target` for Maven and `build/classes/java/main` for Gradle). Keep in mind however that any cleaning operation from the build tool like `mvn clean` or `gradle clean` will remove the `config` directory as well."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:136
#, no-wrap
msgid "MicroProfile Config configuration file"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:139
msgid "The MicroProfile Config configuration file in `src/main/resources/META-INF/microprofile-config.properties`."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-reference.adoc:140
#, no-wrap
msgid "`microprofile-config.properties`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:151
msgid "It works in the exact same way as Quarkus Application configuration file `application.properties`. Recommendation is to use Quarkus `application.properties`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:152
#, no-wrap
msgid "Additional Config Sources"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:155
msgid "Quarkus provides additional extensions which cover other configuration formats and stores:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:157
msgid "xref:config-yaml.adoc[YAML]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:158
msgid "xref:vault.adoc[HashiCorp Vault]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:159
msgid "xref:consul-config.adoc[Consul]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:160
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:162
msgid "It is also possible to create a xref:config-extending-support.adoc#custom-config-source[Custom Config Source]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:163
#, no-wrap
msgid "Inject"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:167
msgid "Quarkus uses https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] annotations to inject the configuration properties in the application."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:172
#: upstream/_versions/main/guides/config-reference.adoc:182
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.message\") <1>\n"
"String message;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:175
msgid "You can use `@Inject @ConfigProperty` or just `@ConfigProperty`. The `@Inject` annotation is not necessary for members annotated with `@ConfigProperty`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:177
msgid "If the application attempts to inject a configuration property that is not set, an error is thrown."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:185
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.suffix\", defaultValue=\"!\") <2>\n"
"String suffix;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:188
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.name\")\n"
"Optional<String> name; <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:190
msgid "If you do not provide a value for this property, the application startup fails with `jakarta.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:191
msgid "The default value is injected if the configuration does not provide a value for `greeting.suffix`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:192
msgid "This property is optional - an empty `Optional` is injected if the configuration does not provide a value for `greeting.name`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:194
msgid "Use xref:config-mappings.adoc#config-mappings[Config Mappings] to group similar configuration properties."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:195
#, no-wrap
msgid "Default Values"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:202
msgid "If a property is associated with a default value (by way of the `defaultValue` attribute), and no configuration value is supplied for the property, then rather than throwing a `jakarta.enterprise.inject.spi.DeploymentException`, the default value will be used. The `defaultValue` value is expressed as a `String`, and uses the same conversion mechanism used to process configuration values. Several Built-in Converters already exist for primitives, boxed primitives, and other classes; for example:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:204
msgid "Primitives: `boolean`, `byte`, `short`, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:205
msgid "Boxed primitives: `java.lang.Boolean`, `java.lang.Byte`, `java.lang.Short`, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:206
msgid "Optional containers: `java.util.Optional`, `java.util.OptionalInt`, `java.util.OptionalLong`, and `java.util.OptionalDouble`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:207
msgid "Java `enum` types"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:208
msgid "JSR 310 `java.time.Duration`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:209
msgid "JDK networking `java.net.SocketAddress`, `java.net.InetAddress`, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:212
msgid "As you might expect, these converters are `org.eclipse.microprofile.config.spi.Converter` implementations. Therefore, these converters comply with the Microprofile or custom implementation providers expression rules like:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:214
msgid "Boolean values will be `true` in cases \"true\", \"1\", \"YES\", \"Y\" \"ON\". Otherwise, value will be interpreted as false"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:215
msgid "For float and double values the fractional digits must be separated by a dot `.`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:220
msgid "Note that when a combination of `Optional*` types and the `defaultValue` attribute are used, the defined `defaultValue` will still be used and if no value is given for the property, the `Optional*` will be present and populated with the converted default value. However, when the property is explicitly empty, the default value is not used and the `Optional` will be empty. Consider this example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:225
#, no-wrap
msgid ""
"# missing value, optional property\n"
"greeting.name =\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:230
msgid "In this case, since `greeting.name` was configured to be `Optional*` up above, the corresponding property value will be an empty `Optional` and execution will continue normally. This would be the case even if there was a default value configured: the default value is *not* used if the property is explicitly cleared in the configuration."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:232
msgid "On the other hand, this example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:237
#, no-wrap
msgid ""
"# missing value, non-optional\n"
"greeting.suffix =\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:241
msgid "will result in a `java.util.NoSuchElementException: SRCFG02004: Required property greeting.message not found` on startup and the default value will not be assigned."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:243
msgid "Below is an example of a Quarkus-supplied converter:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:248
#, no-wrap
msgid ""
"@ConfigProperty(name = \"server.address\", defaultValue = \"192.168.1.1\")\n"
"InetAddress serverAddress;\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:250
#, no-wrap
msgid "Programmatically access"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:254
msgid "The `org.eclipse.microprofile.config.ConfigProvider.getConfig()` API allows to access the Config API programmatically.  This API is mostly useful in situations where CDI injection is not available."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:259
#, no-wrap
msgid ""
"String databaseName = ConfigProvider.getConfig().getValue(\"database.name\", String.class);\n"
"Optional<String> maybeDatabaseName = ConfigProvider.getConfig().getOptionalValue(\"database.name\", String.class);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:263
msgid "Do not use `System.getProperty(String)` or `System.getEnv(String)` to retrieve configuration values. These APIs are not configuration aware and do not support the features described in this guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:265
#, no-wrap
msgid "Profiles"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:269
msgid "We often need to configure our application differently depending on the target _environment_. For example, the local development environment may be different from the production environment."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:272
msgid "Configuration Profiles allow for multiple configurations in the same file or separate files and select between them via a profile name."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:273
#, no-wrap
msgid "Profile in the property name"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:276
msgid "To be able to set properties with the same name, each property needs to be prefixed with a percentage sign `%` followed by the profile name and a dot `.` in the syntax `%{profile-name}.config.name`:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-reference.adoc:277
#: upstream/_versions/main/guides/config-reference.adoc:297
#: upstream/_versions/main/guides/config-reference.adoc:322
#: upstream/_versions/main/guides/config-reference.adoc:341
#: upstream/_versions/main/guides/config-reference.adoc:408
#: upstream/_versions/main/guides/config-reference.adoc:432
#: upstream/_versions/main/guides/config-reference.adoc:471
#: upstream/_versions/main/guides/config-reference.adoc:482
#: upstream/_versions/main/guides/config-reference.adoc:491
#: upstream/_versions/main/guides/config-reference.adoc:515
#: upstream/_versions/main/guides/config-reference.adoc:530
#: upstream/_versions/main/guides/config-reference.adoc:572
#: upstream/_versions/main/guides/config-reference.adoc:590
#, no-wrap
msgid "application.properties"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:282
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%dev.quarkus.http.port=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:285
msgid "The Quarkus HTTP port will be 9090. If the `dev` profile is active it will be 8181."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:287
msgid "Profiles in the `.env` file follow the syntax `_{PROFILE}_CONFIG_KEY=value`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:293
#, no-wrap
msgid ""
"QUARKUS_HTTP_PORT=9090\n"
"_DEV_QUARKUS_HTTP_PORT=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:296
msgid "If a profile does not define a value for a specific attribute, the _default_ (no profile) value is used:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:303
#, no-wrap
msgid ""
"bar=”hello”\n"
"baz=”bonjour”\n"
"%dev.bar=”hallo”\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:308
msgid "With the `dev` profile enabled, the property `bar` has the value `hallo`, but the property `baz` has the value `bonjour`. If the `prod` profile is enabled, `bar` has the value `hello` (as there is no specific value for the `prod` profile), and `baz` the value `bonjour`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:309
#, no-wrap
msgid "Default Profiles"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:312
msgid "By default, Quarkus provides three profiles, that activate automatically in certain conditions:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:314
#, no-wrap
msgid "*dev* - Activated when in development mode (i.e. `quarkus:dev`)\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:315
#, no-wrap
msgid "*test* - Activated when running tests\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:316
#, no-wrap
msgid "*prod* - The default profile when not running in development or test mode\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:317
#, no-wrap
msgid "Custom Profiles"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:321
msgid "It is also possible to create additional profiles and activate them with the `quarkus.profile` configuration property. A single config property with the new profile name is the only requirement:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:327
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%staging.quarkus.http.port=9999\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:330
msgid "Setting `quarkus.profile` to `staging` will activate the `staging` profile."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:334
msgid "The `io.smallrye.config.SmallRyeConfig#getProfiles` API provides a way to retrieve the active profiles programmatically."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:336
#, no-wrap
msgid "Profile aware files"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:340
msgid "In this case, properties for a specific profile may reside in an `application-{profile}.properties` named file. The previous example may be expressed as:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:346
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%staging.quarkus.http.test-port=9091\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-reference.adoc:348
#, no-wrap
msgid "application-staging.properties"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:353
#, no-wrap
msgid ""
"quarkus.http.port=9190\n"
"quarkus.http.test-port=9191\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:358
msgid "In this style, the configuration names in the profile aware file do not need to be prefixed with the profile name."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:360
msgid "Properties in the profile aware file have priority over profile aware properties defined in the main file."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:365
msgid "The profile aware file must be present in the exact same location as the main `application.properties` file."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:367
#, no-wrap
msgid "Parent Profile"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:371
msgid "A Parent Profile adds one level of hierarchy to the current profile. The configuration `quarkus.config.profile.parent` accepts a single profile name."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:374
msgid "When the Parent Profile is active, if a property cannot be found in the current active Profile, the config lookup fallbacks to the Parent Profile. Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:379
#, no-wrap
msgid ""
"quarkus.profile=dev\n"
"quarkus.config.profile.parent=common\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:382
#, no-wrap
msgid ""
"%common.quarkus.http.port=9090\n"
"%dev.quarkus.http.ssl-port=9443\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:385
#, no-wrap
msgid ""
"quarkus.http.port=8080\n"
"quarkus.http.ssl-port=8443\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:388
#: upstream/_versions/main/guides/config-reference.adoc:423
#: upstream/_versions/main/guides/config-reference.adoc:444
msgid "Then"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:390
msgid "The active profile is `dev`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:391
msgid "The parent profile is `common`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:392
msgid "`quarkus.http.port` is 9090"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:393
msgid "`quarkus.http.ssl-port` is 9443"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:398
msgid "Do not use Profile aware files to set `quarkus.config.profile.parent`. This will not work because the profile is required in advance to load the profile aware files."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:400
#, no-wrap
msgid "Multiple Profiles"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:404
msgid "Multiple Profiles may be active at the same time. The configuration `quarkus.profile` accepts a comma-separated list of profile names: `quarkus.profile=common,dev`. Both `common` and `dev` are separate profiles."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:407
msgid "When multiple profiles are active, the rules for profile configuration are the same. If two profiles define the same configuration, then the last listed profile has priority. Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:412
#, no-wrap
msgid "quarkus.profile=common,dev\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:416
#, no-wrap
msgid ""
"my.prop=1234\n"
"%common.my.prop=1234\n"
"%dev.my.prop=5678\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:420
#, no-wrap
msgid ""
"%common.commom.prop=common\n"
"%dev.dev.prop=dev\n"
"%test.test.prop=test\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:425
msgid "`common.prop` value is `common`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:426
msgid "`dev.prop` value is `dev`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:427
msgid "`my.prop` value is `5678`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:428
msgid "`test.prop` does not have a `value`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:431
msgid "It is also possible to define multiple profile properties, with a comma-separated list of profile names. If the same property name exists in multiple profile properties then, the property name with the most specific profile wins:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:436
#, no-wrap
msgid "quarkus.profile=dev\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:439
#, no-wrap
msgid ""
"%prod,dev.my.prop=1234\n"
"%dev.my.prop=5678\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:441
#, no-wrap
msgid "%prod,dev.another.prop=1234\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:446
msgid "`my.prop` value is 5678."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:447
msgid "`another.prop` value is 1234."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:448
#, no-wrap
msgid "Default Runtime Profile"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:451
msgid "The default Quarkus runtime profile is set to the profile used to build the application:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:456
#, no-wrap
msgid ""
"./mvnw package -Dnative -Dquarkus.profile=prod-aws\n"
"./target/my-app-1.0-runner // <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:458
msgid "The command will run with the `prod-aws` profile. This can be overridden using the `quarkus.profile` configuration."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:460
#, no-wrap
msgid "Property Expressions"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:464
msgid "Quarkus provides property expressions expansion on configuration values. An expression string is a mix of plain strings and expression segments, which are wrapped by the sequence `${ ... }`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:468
msgid "These expressions are resolved when the property is read. So if the configuration property is build time the property expression will be resolved at build time. If the configuration property is overridable at runtime it will be resolved at runtime."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:470
msgid "Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:476
#, no-wrap
msgid ""
"remote.host=quarkus.io\n"
"callable.url=https://${remote.host}/\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:479
msgid "The resolved value of the `callable.url` property is `https://quarkus.io/`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:481
msgid "Another example would be defining different database servers by profile:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:487
#, no-wrap
msgid ""
"%dev.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/mydatabase?useSSL=false\n"
"quarkus.datasource.jdbc.url=jdbc:mysql://remotehost:3306/mydatabase?useSSL=false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:490
msgid "can be simplified to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:496
#, no-wrap
msgid ""
"%dev.application.server=localhost\n"
"application.server=remotehost\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:498
#, no-wrap
msgid "quarkus.datasource.jdbc.url=jdbc:mysql://${application.server}:3306/mydatabase?useSSL=false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:501
msgid "Additionally, the Expression Expansion engine supports the following segments:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:503
msgid "`${expression:value}` - Provides a default value after the `:` if the expansion doesn't find a value."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:504
msgid "`${my.prop${compose}}` - Composed expressions. Inner expressions are resolved first."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:505
msgid "`${my.prop}${my.prop}` - Multiple expressions."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:507
msgid "If an expression cannot be expanded and no default is supplied a `NoSuchElementException` is thrown."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:510
msgid "Expressions lookups are performed in all config sources. The expression values and expansion values may reside in different config sources."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:511
#, no-wrap
msgid "With Environment Variables"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:514
msgid "Property Expressions also work with Environment Variables."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:520
#, no-wrap
msgid ""
"remote.host=quarkus.io\n"
"application.host=${HOST:${remote.host}}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:524
msgid "This will expand the `HOST` environment variable and use the value of the property `remote.host` as the default value if `HOST` is not set."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:525
#, no-wrap
msgid "Secret Keys Expressions"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:529
msgid "A secret configuration may be expressed as `${handler::value}`, where the `handler` is the name of a `io.smallrye.config.SecretKeysHandler` to decode or decrypt the `value`. Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:534
#, no-wrap
msgid "my.secret=${aes-gcm-nopadding::DJNrZ6LfpupFv6QbXyXhvzD8eVDnDa_kTliQBpuzTobDZxlg}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:537
#, no-wrap
msgid ""
"# the encryption key required to decode the secret. It can be set in any source.\n"
"smallrye.config.secret-handler.aes-gcm-nopadding.encryption-key=somearbitrarycrazystringthatdoesnotmatter\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:541
msgid "A lookup to `my.secret` will use the `SecretKeysHandler` name `aes-gcm-nopadding` to decode the value `DJNrZ6LfpupFv6QbXyXhvzD8eVDnDa_kTliQBpuzTobDZxlg`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:544
msgid "For more information, please check SmallRye Config link:https://smallrye.io/smallrye-config/Main/config/secret-keys/[Secret Keys] documentation."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:549
msgid "SmallRye Config may provide handlers not fully supported by Quarkus. Currently, only `smallrye-config-crypto` is supported."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:551
#, no-wrap
msgid "Accessing a generating UUID"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:556
msgid "The default config source from Quarkus provides a random UUID value.  It generates the UUID at startup time.  So, the value changes between startups, including reloads in dev mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:560
msgid "You can access the generated value using the `quarkus.uuid` property.  Use xref:property-expressions[expressions] to access it: `${quarkus.uuid}`.  For example, it can be useful to configure a Kafka client with a unique consumer group:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:564
#, no-wrap
msgid "mp.messaging.incoming.prices.group.id=${quarkus.uuid}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:566
#, no-wrap
msgid "Clearing properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:571
msgid "Run time properties which are optional, and which have had values set at build time or which have a default value, may be explicitly cleared by assigning an empty string to the property. Note that this will _only_ affect runtime properties, and will _only_ work with properties whose values are not required."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:576
#, no-wrap
msgid "remote.host=quarkus.io\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:579
msgid "A lookup to `remote.host` with `-Dremote.host=` will throw an Exception, because the system property cleared the value."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:581
#, no-wrap
msgid "Indexed Properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:585
msgid "A config value which contains unescaped commas may be converted to `Collection`. This works for simple cases, but it becomes cumbersome and limited for more advanced cases."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:589
msgid "Indexed Properties provide a way to use indexes in config property names to map specific elements in a `Collection` type. Since the indexed element is part of the property name and not contained in the value, this can also be used to map complex object types as `Collection` elements. Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:594
#, no-wrap
msgid "my.collection=dog,cat,turtle\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:598
#, no-wrap
msgid ""
"my.indexed.collection[0]=dog\n"
"my.indexed.collection[1]=cat\n"
"my.indexed.collection[2]=turtle\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:601
msgid "The indexed property syntax uses the property name and square brackets `[ ] with an index in between."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:606
msgid "A call to `Config#getValues(\"my.collection\", String.class)`, will automatically create and convert a `List<String>` that contains the values `dog`, `cat` and `turtle`. A call to `Config#getValues(\"my.indexed.collection\", String.class)` returns the exact same result. If the same property name exists in both forms (regular and indexed), the regular value has priority."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:610
msgid "The indexed property is sorted by their index before being added to the target `Collection`. Any gaps contained in the indexes do not resolve to the target `Collection`, which means that the `Collection` result will store all values without any gaps."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:612
#, no-wrap
msgid "Configuring Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:617
msgid "Quarkus itself is configured via the same mechanism as your application. Quarkus reserves the `quarkus.` namespace for its own configuration. For example to configure the HTTP server port you can set `quarkus.http.port` in `application.properties`. All the Quarkus configuration properties are xref:all-config.adoc[documented and searchable]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:622
msgid "As mentioned above, properties prefixed with `quarkus.` are effectively reserved for configuring Quarkus itself and its extensions. Therefore, the `quarkus.` prefix should **never** be used for application specific properties."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:624
#, no-wrap
msgid "Build Time configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:629
msgid "Some Quarkus configurations only take effect during build time, meaning it is not possible to change them at runtime. These configurations are still available at runtime but as read-only and have no effect in Quarkus behaviour. A change to any of these configurations requires a rebuild of the application itself to reflect changes of such properties."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:631
msgid "The properties fixed at build time are marked with a lock icon (icon:lock[]) in the xref:all-config.adoc[list of all configuration options]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:635
msgid "However, some extensions do define properties _overridable at runtime_. A simple example is the database URL, username and password which is only known specifically in your target environment, so they can be set and influence the application behaviour at runtime."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:636
#, no-wrap
msgid "Change build time properties after your application has been published"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:639
msgid "If you are in the rare situation that you need to change the build time configuration after your application is built, then check out how xref:reaugmentation.adoc[re-augmentation] can be used to rebuild the augmentation output for a different build time configuration."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:640
#, no-wrap
msgid "Tracking effective build time configuration used at build time"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:643
msgid "Given that configuration sources usually provide more options than actually used during the build, it might be useful to know which configuration options have actually been used during a Quarkus build process."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:644
#, no-wrap
msgid "Dumping build time configuration options read during the build"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:647
msgid "Setting `quarkus.config-tracking.enabled` to `true` will enable a configuration interceptor that will record every configuration option that was read during the build process along with their values. The resulting report will be stored in `${project.basedir}/.quarkus/quarkus-prod-config-dump` by default. The target file could be configured using the following options:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:649
msgid "`quarkus.config-tracking.directory` - directory in which the configuration dump should be stored, the default is `${project.basedir}/.quarkus`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:650
msgid "`quarkus.config-tracking.file-prefix` - file name prefix, the default value is `quarkus`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:651
msgid "`quarkus.config-tracking.file-suffix` - file name suffix, the default value is `-config-dump`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:652
msgid "`quarkus.config-tracking.file` - path to a file in which the configuration dump should be stored. This option supersedes the `file-prefix` and `file-suffix` options. Also supersedes the value of `quarkus.config-tracking.directory`, unless the value is a relative path."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:654
msgid "The `prod` part of the `quarkus-prod-config-dump` file name refers to the Quarkus build mode, indicating that the dump was taken for the production build."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:656
msgid "The reason `${project.basedir}/.quarkus` directory was chosen as the default location was to make it easy to track build time configuration changes between builds and use that as an indicator to build output caching tools (such as https://maven.apache.org/extensions/maven-build-cache-extension/[Apache Maven Build Cache] and https://gradle.com/gradle-enterprise-solutions/build-cache/[Gradle Enterprise Build Cache]) whether the application binary has to be re-built."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/config-reference.adoc:657
#, no-wrap
msgid "Filtering configuration options"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:660
msgid "Configuration tracker could be instructed to exclude some of the options from the report by configuring `quarkus.config-tracking.exclude` with a comma-separated list of configuration option names that should be filtered out."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/config-reference.adoc:661
#, no-wrap
msgid "Path values"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:664
msgid "Configuration options with *absolute* path values that begin with a user home directory are, by default, transformed with Unix home directory alias '~' replacing the user home directory part and using `/` as a path element separator."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:666
msgid "This transformation can be disabled by setting `quarkus.config-tracking.use-user-home-alias-in-paths` to `false`."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/config-reference.adoc:667
#, no-wrap
msgid "Hashing recorded configuration values"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:670
msgid "Configuration values can be hashed using `SHA-512` algorithm before they are written to a file. Configuration option names whose values should be hashed can be configured in `quarkus.config-tracking.hash-options` as a comma separated list."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:671
#, no-wrap
msgid "Tracking build time configuration changes between builds"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:674
msgid "While `quarkus.config-tracking.enabled` enables effective build time configuration report generation, there is also a way to check whether the values stored in that report have changed before the next build of the project is launched."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:676
msgid "Maven projects could add the following goal to their `quarkus-maven-plugin` configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:692
#, no-wrap
msgid ""
"      <plugin>\n"
"        <groupId>${quarkus.platform.group-id}</groupId>\n"
"        <artifactId>quarkus-maven-plugin</artifactId>\n"
"        <version>${quarkus.platform.version}</version>\n"
"        <extensions>true</extensions>\n"
"        <executions>\n"
"          <execution>\n"
"            <id>track-prod-config-changes</id>\n"
"            <phase>process-resources</phase>\n"
"            <goals>\n"
"              <goal>track-config-changes</goal>\n"
"            </goals>\n"
"          </execution>\n"
"          <!-- other executions would follow below -->\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:696
msgid "The `track-config-changes` goal looks for `${project.basedir}/.quarkus/quarkus-prod-config-dump` (file name and directory are configurable) and, if the file already exists, checks whether the values stored in the config dump have changed.  It will log the changed options and save the current values of each of the options present in `${project.basedir}/.quarkus/quarkus-prod-config-dump` in `${project.basedir}/target/quarkus-prod-config.check` (the target file name and location can be configured). If the build time configuration has not changed since the last build both `${project.basedir}/.quarkus/quarkus-prod-config-dump` and `${project.basedir}/.quarkus/quarkus-prod-config-dump` will be identical."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/config-reference.adoc:697
#, no-wrap
msgid "Dump current build configuration when the recorded configuration isn't found"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:701
msgid "By default, `track-config-changes` looks for the configuration recorded during previous build and does nothing if it's not found. Enabling `dumpCurrentWhenRecordedUnavailable` parameter will make it dump the current build configuration options taking into account `quarkus.config-tracking.*` configuration."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:707
msgid "Unlike the build configuration options recorded during the `quarkus:build` goal, configuration options saved by `quarkus:track-config-changes` with `dumpCurrentWhenRecordedUnavailable` enabled will include all the build configuration options exposed by a `org.eclipse.microprofile.config.Config` instance. Which means this report may include some build configuration options that will not be used by the Quarkus application build process but also may be missing some build configuration options since MicroProfile Config specification allows configuration sources not to expose all the property names they provide to users."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:709
#, no-wrap
msgid "Config property values injected during static initialization phase"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:720
msgid "Quarkus collects the config property values injected in CDI beans during xref:writing-extensions.adoc#bootstrap-three-phases[static initialization phase].  The collected values are then compared with their runtime initialization counterparts and if a mismatch is detected the application startup fails.  How can it happen? For example, let's have a CDI bean `org.acme.MyBean`.  `MyBean` injects a `@ConfigProperty` of name `foo` and is initialized during the native build.  The config property does not exist during the native build and so the default value `bar` is used.  But later, when the application is started the property is defined with a system property: `-Dfoo=baz`.  This would lead to inconsistent state and unexpected behavior.  Therefore, Quarkus would fail in this situation by default."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:724
#: upstream/_versions/main/guides/config-reference.adoc:749
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:729
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.enterprise.event.Observes;\n"
"import jakarta.enterprise.context.Initialized;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:732
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:735
#, no-wrap
msgid ""
"   @ConfigProperty(name = \"foo\", defaultValue = \"bar\") <1>\n"
"   String foo;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:740
#, no-wrap
msgid ""
"    void onInit(@Observes @Initialized(ApplicationScoped.class) Object event) { <2>\n"
"       // this observer method is notified during STATIC_INIT...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:742
msgid "The config property is injected when the bean is created and the value is fixed."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:743
msgid "In this particular case, the observer `@Initialized(ApplicationScoped.class)` caused the initialization of the bean. However, there are other possibilities. For example, some extensions initialize components during static initialization phase."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:745
msgid "You can annotate an injected field/parameter with `@io.quarkus.runtime.annotations.StaticInitSafe` to mark the injected configuration object as safe to be initialized during the static initialization phase."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:755
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.enterprise.event.Observes;\n"
"import jakarta.enterprise.context.Initialized;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
"import io.quarkus.runtime.annotations.StaticInitSafe;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:758
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyBeanNoFailure {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:762
#, no-wrap
msgid ""
"   @StaticInitSafe <1>\n"
"   @ConfigProperty(name = \"foo\", defaultValue = \"bar\")\n"
"   String foo;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:767
#, no-wrap
msgid ""
"    void onInit(@Observes @Initialized(ApplicationScoped.class) Object event) {\n"
"       // this observer method is notified during STATIC_INIT...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:769
msgid "Instructs Quarkus not to fail if a mismatch is detected."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:772
#, no-wrap
msgid "Additional Information"
msgstr ""

#.  Moved to Quarkiverse. There is a redirect to resolve the link
#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:775
msgid "xref:config-yaml.adoc[YAML ConfigSource Extension]"
msgstr ""

#.  Moved to Quarkiverse. There is a redirect to resolve the link
#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:777
msgid "xref:vault.adoc[HashiCorp Vault ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:779
msgid "xref:consul-config.adoc[Consul ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:780
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:781
msgid "xref:config-mappings.adoc[Mapping configuration to objects]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:782
msgid "xref:config-extending-support.adoc[Extending configuration support]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:784
msgid "Quarkus relies on link:https://github.com/smallrye/smallrye-config/[SmallRye Config] and inherits its features:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:786
msgid "link:https://smallrye.io/smallrye-config/Main/config-sources/custom/[Additional Config Sources]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:787
msgid "link:https://smallrye.io/smallrye-config/Main/config-sources/factories/[Config Source Factories]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:788
msgid "link:https://smallrye.io/smallrye-config/Main/converters/custom/[Additional Converters]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:789
msgid "link:https://smallrye.io/smallrye-config/Main/extensions/interceptors/[Interceptors]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:790
msgid "link:https://smallrye.io/smallrye-config/Main/extensions/relocate/[Relocate Configuration]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:791
msgid "link:https://smallrye.io/smallrye-config/Main/extensions/fallback/[Fallback Configuration]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:792
msgid "link:https://smallrye.io/smallrye-config/Main/config/secret-keys/[Secret Keys]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:795
msgid "For more information, please check the link:https://smallrye.io/smallrye-config/Main[SmallRye Config documentation]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:796
#, no-wrap
msgid "Configuration Reference"
msgstr ""
