# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:12+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/flyway.adoc:6
#, no-wrap
msgid "Using Flyway"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:14
msgid "https://flywaydb.org/[Flyway] is a popular database migration tool that is commonly used in JVM environments."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:16
msgid "Quarkus provides first class support for using Flyway as will be explained in this guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/flyway.adoc:17
#, no-wrap
msgid "Setting up support for Flyway"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:20
msgid "As shown in the xref:developing-with-flyway[Developing with Flyway] section, to start using Flyway with your project, you just need to:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:22
msgid "add your migrations to the `{migrations-path}` folder as you usually do with Flyway"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:24
msgid "activate the `migrate-at-start` option to migrate the schema automatically or inject the `Flyway` object and run your migration as you normally do"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:26
msgid "In your build file, add the following dependencies:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:28
msgid "the Flyway extension"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:29
msgid "your JDBC driver extension (`quarkus-jdbc-postgresql`, `quarkus-jdbc-h2`, `quarkus-jdbc-mariadb`, ...)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:30
msgid "the MariaDB/MySQL support is now in a separate dependency, MariaDB/MySQL users need to add the `flyway-mysql` dependency from now on."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:31
msgid "the Microsoft SQL Server support is now in a separate dependency, Microsoft SQL Server users need to add the `flyway-sqlserver` dependency from now on."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:32
msgid "the Oracle support is now in a separate dependency, Oracle users need to add the `flyway-database-oracle` dependency from now on."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/flyway.adoc:34
#, no-wrap
msgid "pom.xml"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:41
#, no-wrap
msgid ""
"<!-- Flyway specific dependencies -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-flyway</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:47
#, no-wrap
msgid ""
"<!-- Flyway SQL Server specific dependencies -->\n"
"<dependency>\n"
"    <groupId>org.flywaydb</groupId>\n"
"    <artifactId>flyway-sqlserver</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:53
#, no-wrap
msgid ""
"<!-- Flyway MariaDB/MySQL specific dependencies -->\n"
"<dependency>\n"
"    <groupId>org.flywaydb</groupId>\n"
"    <artifactId>flyway-mysql</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:59
#, no-wrap
msgid ""
"<!-- Flyway Oracle specific dependencies -->\n"
"<dependency>\n"
"    <groupId>org.flywaydb</groupId>\n"
"    <artifactId>flyway-database-oracle</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:65
#, no-wrap
msgid ""
"<!-- JDBC driver dependencies -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-jdbc-postgresql</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/flyway.adoc:68
#, no-wrap
msgid "build.gradle"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:80
#, no-wrap
msgid ""
"// Flyway specific dependencies\n"
"implementation(\"io.quarkus:quarkus-flyway\")\n"
"// Flyway SQL Server specific dependencies\n"
"implementation(\"org.flywaydb:flyway-sqlserver\")\n"
"// Flyway MariaDB/MySQL specific dependencies\n"
"implementation(\"org.flywaydb:flyway-mysql\")\n"
"// Flyway Oracle specific dependencies\n"
"implementation(\"org.flywaydb:flyway-database-oracle\")\n"
"// JDBC driver dependencies\n"
"implementation(\"io.quarkus:quarkus-jdbc-postgresql\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:87
msgid "Flyway support relies on the Quarkus datasource config.  It can be customized for the default datasource as well as for every xref:multiple-datasources[named datasource].  First, you need to add the datasource config to the `{config-file}` file in order to allow Flyway to manage the schema.  Also, you can customize the Flyway behaviour by using the following properties:"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/flyway.adoc:90
#, no-wrap
msgid "Developing with Flyway"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:93
msgid "The following is an example for the `{config-file}` file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:101
#, no-wrap
msgid ""
"# configure your datasource\n"
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=sarah\n"
"quarkus.datasource.password=connor\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/mydatabase\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:104
#, no-wrap
msgid ""
"# Run Flyway migrations automatically\n"
"quarkus.flyway.migrate-at-start=true\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:115
#, no-wrap
msgid ""
"# More Flyway configuration options\n"
"# quarkus.flyway.baseline-on-migrate=true\n"
"# quarkus.flyway.baseline-version=1.0.0\n"
"# quarkus.flyway.baseline-description=Initial version\n"
"# quarkus.flyway.connect-retries=10\n"
"# quarkus.flyway.schemas=TEST_SCHEMA\n"
"# quarkus.flyway.table=flyway_quarkus_history\n"
"# quarkus.flyway.locations=db/location1,db/location2\n"
"# quarkus.flyway.sql-migration-prefix=X\n"
"# quarkus.flyway.repeatable-sql-migration-prefix=K\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:118
msgid "Add a SQL migration to the default folder following the Flyway naming conventions: `{migrations-path}/V1.0.0__Quarkus.sql`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:128
#, no-wrap
msgid ""
"CREATE TABLE quarkus\n"
"(\n"
"  id   INT,\n"
"  name VARCHAR(20)\n"
");\n"
"INSERT INTO quarkus(id, name)\n"
"VALUES (1, 'QUARKED');\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:132
msgid "Now you can start your application and Quarkus will run the Flyway's migrate method according to your config."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:136
msgid "With `quarkus.flyway.migrate-at-start=true`, as in the example above, Quarkus will execute the Flyway migration as part of the xref:lifecycle.adoc[application startup]."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:144
#: upstream/_versions/main/guides/flyway.adoc:256
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MigrationService {\n"
"    // You can Inject the object if you want to use it manually\n"
"    @Inject\n"
"    Flyway flyway; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:150
#, no-wrap
msgid ""
"    public void checkMigration() {\n"
"        // This will print 1.0.0\n"
"        System.out.println(flyway.info().current().getVersion().toString());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:152
#: upstream/_versions/main/guides/flyway.adoc:276
msgid "Inject the Flyway object if you want to use it directly"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:158
msgid "In dev mode Quarkus will automatically restart the application if any of the existing migration scripts get modified. If you want to take advantage of this while developing and testing new migration scripts, you will want to set `%dev.quarkus.flyway.clean-at-start=true`, so that Flyway actually runs the modified migration."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/flyway.adoc:159
#, no-wrap
msgid "Repairing the Flyway schema history table"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:164
msgid "There are different scenarios which may require _repairing_ the Flyway schema history table.  One such scenario is when a migration fails in a database which doesn't support transactional DDL statements."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:166
msgid "In such situations the link:https://flywaydb.org/documentation/command/repair[Flyway repair command] comes in handy. In Quarkus this can either be executed automatically before the migration by setting `quarkus.flyway.repair-at-start=true` or manually by injecting the `Flyway` object and calling `Flyway#repair()`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/flyway.adoc:167
#, no-wrap
msgid "Multiple datasources"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:171
msgid "Flyway can be configured for multiple datasources.  The Flyway properties are prefixed exactly the same way as the named datasources, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:178
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=h2\n"
"quarkus.datasource.username=username-default\n"
"quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost/mem:default\n"
"quarkus.datasource.jdbc.max-size=13\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:183
#, no-wrap
msgid ""
"quarkus.datasource.users.db-kind=h2\n"
"quarkus.datasource.users.username=username1\n"
"quarkus.datasource.users.jdbc.url=jdbc:h2:tcp://localhost/mem:users\n"
"quarkus.datasource.users.jdbc.max-size=11\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:188
#, no-wrap
msgid ""
"quarkus.datasource.inventory.db-kind=h2\n"
"quarkus.datasource.inventory.username=username2\n"
"quarkus.datasource.inventory.jdbc.url=jdbc:h2:tcp://localhost/mem:inventory\n"
"quarkus.datasource.inventory.jdbc.max-size=12\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:193
#, no-wrap
msgid ""
"# Flyway configuration for the default datasource\n"
"quarkus.flyway.schemas=DEFAULT_TEST_SCHEMA\n"
"quarkus.flyway.locations=db/default/location1,db/default/location2\n"
"quarkus.flyway.migrate-at-start=true\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:198
#, no-wrap
msgid ""
"# Flyway configuration for the \"users\" datasource\n"
"quarkus.flyway.users.schemas=USERS_TEST_SCHEMA\n"
"quarkus.flyway.users.locations=db/users/location1,db/users/location2\n"
"quarkus.flyway.users.migrate-at-start=true\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:203
#, no-wrap
msgid ""
"# Flyway configuration for the \"inventory\" datasource\n"
"quarkus.flyway.inventory.schemas=INVENTORY_TEST_SCHEMA\n"
"quarkus.flyway.inventory.locations=db/inventory/location1,db/inventory/location2\n"
"quarkus.flyway.inventory.migrate-at-start=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:207
msgid "Notice there's an extra bit in the key.  The syntax is as follows: `quarkus.flyway.[optional name.][datasource property]`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:209
msgid "Without configuration, Flyway is set up for every datasource using the default settings."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/flyway.adoc:210
#, no-wrap
msgid "Customizing Flyway"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:213
msgid "In cases where Flyway needs to be configured in addition to the configuration options that Quarkus provides, the `io.quarkus.flyway.FlywayConfigurationCustomizer` class comes in handy."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:215
msgid "To customize Flyway for the default datasource, simply add a bean like so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:220
#, no-wrap
msgid ""
"@Singleton\n"
"public static class MyCustomizer implements FlywayConfigurationCustomizer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:226
#: upstream/_versions/main/guides/flyway.adoc:243
#, no-wrap
msgid ""
"    @Override\n"
"    public void customize(FluentConfiguration configuration) {\n"
"        // do something with configuration\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:231
msgid "When named datasources are used, the `@FlywayDataSource` annotation can be used to specify the datasource to which the customizer applies.  For example, if there are multiple datasources one of which is called `users` and customization of Flyway is needed for only that datasource, then the following code can be used:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:237
#, no-wrap
msgid ""
"@Singleton\n"
"@FlywayDataSource(\"users\")\n"
"public static class UsersCustomizer implements FlywayConfigurationCustomizer {\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/flyway.adoc:245
#, no-wrap
msgid "Using the Flyway object"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:248
msgid "In case you are interested in using the `Flyway` object directly, you can inject it as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:260
#, no-wrap
msgid ""
"    @Inject\n"
"    @FlywayDataSource(\"inventory\") <2>\n"
"    Flyway flywayForInventory;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:264
#, no-wrap
msgid ""
"    @Inject\n"
"    @Named(\"flyway_users\") <3>\n"
"    Flyway flywayForUsers;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:273
#, no-wrap
msgid ""
"    public void checkMigration() {\n"
"        // Use the flyway instance manually\n"
"        flyway.clean(); <4>\n"
"        flyway.migrate();\n"
"        // This will print 1.0.0\n"
"        System.out.println(flyway.info().current().getVersion().toString());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:277
msgid "Inject Flyway for named datasources using the Quarkus `FlywayDataSource` qualifier"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:278
msgid "Inject Flyway for named datasources"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:279
msgid "Use the Flyway instance directly"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/flyway.adoc:280
#, no-wrap
msgid "Flyway and Hibernate ORM"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:283
msgid "When using Flyway together with Hibernate ORM, you can use the Dev UI to generate the initial schema creation script."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:285
msgid "You can find more information about this feature in the xref:hibernate-orm.adoc#flyway[Hibernate ORM guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/flyway.adoc:286
#, no-wrap
msgid "Flyway on Kubernetes"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:292
msgid "Sometimes, it's helpful not to execute Flyway initialization on each application startup. One such example is when deploying on Kubernetes, where it doesn't make sense to execute Flyway on every single replica. Instead it's desirable to execute it once and then start the actual application without Flyway. To support this use case, when generating manifests for Kubernetes the generated manifests contain a Kubernetes initialization `Job` for Flyway.  The `Job` performs initialization and the actual `Pod`, will starts once the `Job` is successfully completed."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/flyway.adoc:293
#, no-wrap
msgid "Disabling"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:296
msgid "The feature is enabled by default and can be globally disabled, using:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:300
#, no-wrap
msgid "quarkus.kubernetes.init-task-defaults.enabled=false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:303
msgid "or on OpenShift:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:307
#, no-wrap
msgid "quarkus.openshift.init-task-defaults.enabled=false\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/flyway.adoc:309
#, no-wrap
msgid "Using a custom image that controls waiting for the Job"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:312
msgid "To change the `wait-for` image which by default is `groundnuty/k8s-wait-for:no-root-v1.7` you can use:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:316
#, no-wrap
msgid "quarkus.kubernetes.init-task-defaults.wait-for-image=my/wait-for-image:1.0\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:319
msgid "or on Openshift:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/flyway.adoc:324
#, no-wrap
msgid "quarkus.openshift.init-task-defaults.wait-for-image=my/wait-for-image:1.0\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/flyway.adoc:326
#, no-wrap
msgid "**Note**: In this context globally means `for all extensions that support init task externalization`.\n"
msgstr ""
