# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:09+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Packaging And Releasing With JReleaser"
msgstr "Empacotamento e lançamento com o JReleaser"

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "This guide covers packaging and releasing CLI applications using the link:https://jreleaser.org[JReleaser] tool."
msgstr "Este guia aborda o empacotamento e a liberação de aplicativos CLI usando a ferramenta link:https://jreleaser.org[JReleaser] ."

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "a GitHub account and a GitHub Personal Access token"
msgstr "uma conta do GitHub e um token de acesso pessoal do GitHub"

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Bootstrapping the project"
msgstr "Inicialização do projeto"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"First, we need a project that defines a CLI application. We recommend using the xref:picocli.adoc[PicoCLI] extension.\n"
"This can be done using the following command:"
msgstr "Primeiro, precisamos de um projeto que defina um aplicativo CLI. Recomendamos usar a extensão xref:picocli.adoc[PicoCLI] . Isso pode ser feito usando o seguinte comando:"

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "This command initializes the file structure and the minimum set of required files in the project:"
msgstr "Esse comando inicializa a estrutura de arquivos e o conjunto mínimo de arquivos necessários no projeto:"

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "It will also configure the picocli extension in the `pom.xml`:"
msgstr "Ele também configurará a extensão picocli no site `pom.xml` :"

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Preparing the project for GitHub releases"
msgstr "Preparar o projeto para as versões do GitHub"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"The project must be hosted at a GitHub repository before we continue. This task can be completed by logging into your\n"
"GitHub account, creating a new repository, and adding the newly created sources to said repository. Choose the `main`\n"
"branch as default to take advantage of conventions and thus configure less in your `pom.xml`."
msgstr "O projeto deve ser hospedado em um repositório do GitHub antes de continuarmos. Essa tarefa pode ser concluída fazendo login na sua conta do GitHub, criando um novo repositório e adicionando os códigos-fonte recém-criados a esse repositório. Escolha o ramo `main` como padrão para aproveitar as convenções e, assim, configurar o less em seu `pom.xml` ."

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"You also need a GitHub Personal Access token to be able to post a release to the repository you just created. Follow\n"
"the official documentation for\n"
"link:https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token[creating a personal access token].\n"
"Store the newly created token at a safe place for future reference. Next, you have the choice of configuring the token\n"
"as an environment variable named `JRELEASER_GITHUB_TOKEN` so that the tool can read it. Alternatively you may store\n"
"the token at a secure location of your choosing, using a `.yml`, `.toml`, `.json`, or `.properties` file. The default\n"
"location is `~/.jreleaser/config[format]`. For example, using the `.yml` format this file could look like:"
msgstr "O senhor também precisa de um token de acesso pessoal do GitHub para poder publicar uma versão no repositório que acabou de criar. Siga a documentação oficial para link:https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token[criar um token de acesso pessoal] . Armazene o token recém-criado em um local seguro para referência futura. Em seguida, o senhor tem a opção de configurar o token como uma variável de ambiente chamada `JRELEASER_GITHUB_TOKEN` para que a ferramenta possa lê-la. Como alternativa, o senhor pode armazenar o token em um local seguro de sua escolha, usando um arquivo `.yml` , `.toml` , `.json` ou `.properties` . O local padrão é `~/.jreleaser/config[format]` . Por exemplo, usando o formato `.yml` , esse arquivo poderia ter a seguinte aparência:"

#. type: Block title
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "~/.jreleaser/config.yml"
msgstr "~/.jreleaser/config.yml"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"Alright. Add all sources and create a first commit. You can choose your own conventions for commit messages however you\n"
"can get more bang for your buck when using JReleaser if you follow the\n"
"link:https://www.conventionalcommits.org/en/v1.0.0/[Conventional Commits] specification. Make your first commit with the\n"
"following message \"build: Add initial sources\"."
msgstr "Tudo certo. Adicione todos os códigos-fonte e crie um primeiro commit. O senhor pode escolher suas próprias convenções para as mensagens de commit, no entanto, ao usar o JReleaser, poderá obter mais resultados se seguir a especificação link:https://www.conventionalcommits.org/en/v1.0.0/[Conventional Commits] . Faça seu primeiro commit com a seguinte mensagem \"build: Add initial sources\"."

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Packaging as a Native Image distribution"
msgstr "Empacotamento como uma distribuição de imagem nativa"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"Quarkus already knows how to create a native executable using GraalVM Native Image. The default setup will create a\n"
"single executable file following a naming convention. However the JReleaser tool expects a distribution that is, a\n"
"conventional file structure packaged as a Zip or Tar file. The file structure must follow this layout:"
msgstr "O Quarkus já sabe como criar um executável nativo usando o GraalVM Native Image. A configuração padrão criará um único arquivo executável seguindo uma convenção de nomenclatura. No entanto, a ferramenta JReleaser espera uma distribuição, ou seja, uma estrutura de arquivos convencional empacotada como um arquivo Zip ou Tar. A estrutura do arquivo deve seguir esse layout:"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"This structure lets you add all kinds of supporting files required by the executable, such as configuration files,\n"
"shell completion scripts, man pages, license, readme, and more."
msgstr "Essa estrutura permite que o senhor adicione todos os tipos de arquivos de suporte exigidos pelo executável, como arquivos de configuração, scripts de conclusão de shell, páginas man, licença, leia-me e muito mais."

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Creating the distribution"
msgstr "Criação da distribuição"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"We can leverage the link:http://maven.apache.org/plugins/maven-assembly-plugin/[maven-assembly-plugin] to create such\n"
"a distribution. We'll also make use of the link:https://github.com/trustin/os-maven-plugin[os-maven-plugin] to properly\n"
"identify the platform on which this executable can run, adding said platform to the distribution's filename."
msgstr "Podemos aproveitar o link:http://maven.apache.org/plugins/maven-assembly-plugin/[maven-assembly-plugin] para criar essa distribuição. Também usaremos o link:https://github.com/trustin/os-maven-plugin[plug-in os-maven] para identificar corretamente a plataforma na qual esse executável pode ser executado, adicionando essa plataforma ao nome do arquivo da distribuição."

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"First, let's add the os-maven-plugin to the `pom.xml`. This plugin works as a Maven extension and as such must be added\n"
"to the `<build>` section of the file:"
msgstr "Primeiro, vamos adicionar o plug-in os-maven-plugin ao `pom.xml` . Esse plug-in funciona como uma extensão do Maven e, portanto, deve ser adicionado à seção `<build>` do arquivo:"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"Next, native executables on Linux and macOS platforms typically do not have a file extension but Windows executables do,\n"
"we need to take care of this when renaming the generated executable. We can also place the generated distributions into\n"
"their own directory to avoid cluttering the `target` directory. Thus, let's add a couple of properties to the existing\n"
"`<properties>` section in the `pom.xml`:"
msgstr "Em seguida, os executáveis nativos nas plataformas Linux e macOS normalmente não têm uma extensão de arquivo, mas os executáveis do Windows têm; precisamos tomar cuidado com isso ao renomear o executável gerado. Também podemos colocar as distribuições geradas em seu próprio diretório para evitar sobrecarregar o diretório `target` . Portanto, vamos adicionar algumas propriedades à seção `<properties>` existente no diretório `pom.xml` :"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"Now we configure the maven-assembly-plugin to create a Zip and a Tar file containing the executable and any supporting files\n"
"it may need to perform its job. Take special note on the name of the distribution, this is where we make use of the platform\n"
"properties detected by the os-maven-plugin. This plugin is configured in its own profile with the `single` goal bound to\n"
"the `package` phase. It's done this way to avoid rebuilding the distribution every single time the build is invoked, as we\n"
"only needed when we're ready for a release."
msgstr "Agora, configuramos o maven-assembly-plugin para criar um arquivo Zip e um arquivo Tar contendo o executável e todos os arquivos de suporte necessários para realizar seu trabalho. Observe especialmente o nome da distribuição, pois é aqui que usamos as propriedades da plataforma detectadas pelo plug-in os-maven. Esse plug-in é configurado em seu próprio perfil com a meta `single` vinculada à fase `package` . Isso é feito para evitar a reconstrução da distribuição toda vez que a compilação é chamada, pois só precisamos dela quando estivermos prontos para uma versão."

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"Note that two profiles are configured. The `dist` profile configures the assembly plugin, and it's configured in such a way that\n"
"it must be activated explicitly by passing `-Pdist` as a command flag. On the other hand the `dist-windows` profile becomes\n"
"active automatically when the build is run on a Windows platform. This second profile takes care of setting the value for the\n"
"`executable-suffix` property which is required by the assembly descriptor, as shown next:"
msgstr "Observe que dois perfis estão configurados. O perfil `dist` configura o plug-in de montagem e está configurado de tal forma que deve ser ativado explicitamente passando `-Pdist` como um sinalizador de comando. Por outro lado, o perfil `dist-windows` torna-se ativo automaticamente quando a compilação é executada em uma plataforma Windows. Esse segundo perfil se encarrega de definir o valor da propriedade `executable-suffix` , que é exigida pelo descritor de montagem, conforme mostrado a seguir:"

#. type: Block title
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "src/main/assembly/assembly.xml"
msgstr "src/main/assembly/assembly.xml"

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "These are the files created by the assembly plugin when invoking `./mvnw -Pdist package` on macOS:"
msgstr "Esses são os arquivos criados pelo plug-in de montagem ao invocar `./mvnw -Pdist package` no macOS:"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"Feel free to update the assembly descriptor to include additional files such as LICENSE, readme, or anything else needed by\n"
"the consumers of the executable. Make another commit right here with \"build: Configure distribution assembly\"."
msgstr "Fique à vontade para atualizar o descritor do assembly para incluir arquivos adicionais, como LICENSE, readme ou qualquer outra coisa necessária para os consumidores do executável. Faça outro commit aqui mesmo com \"build: Configure distribution assembly\"."

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "We're ready to go to the next phase: configuring the release."
msgstr "Estamos prontos para a próxima fase: configurar a versão."

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Adding JReleaser"
msgstr "Adicionando o JReleaser"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"The JReleaser tool can be invoked in many ways: as a CLI tool, as a Docker image, or as a Maven plugin. The last option is very\n"
"convenient given that we are already working with Maven. Let's add yet another profile that contains the release configuration\n"
"as once again we don't require this behavior to be active all the time only when we're ready to post a release:"
msgstr "A ferramenta JReleaser pode ser chamada de várias maneiras: como uma ferramenta CLI, como uma imagem Docker ou como um plug-in Maven. A última opção é muito conveniente, pois já estamos trabalhando com o Maven. Vamos adicionar mais um perfil que contém a configuração da versão, pois, mais uma vez, não precisamos que esse comportamento esteja ativo o tempo todo, apenas quando estivermos prontos para publicar uma versão:"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"There are a few goals we can invoke at this point, we can for example ask JReleaser to print out its current configuration by\n"
"invoking the `./mvnw -Prelease jreleaser:config` command. The tool will output everything that it knows about the project. We\n"
"can also generate the changelog by invoking `./mvnw -Prelease jreleaser:changelog`. A file containing the changelog will be\n"
"placed at `target/jreleaser/release/CHANGELOG.md` which at this point should look like this:"
msgstr "Há alguns objetivos que podemos invocar nesse momento; podemos, por exemplo, pedir ao JReleaser que imprima sua configuração atual invocando o comando `./mvnw -Prelease jreleaser:config` . A ferramenta produzirá tudo o que sabe sobre o projeto. Também podemos gerar o registro de alterações invocando `./mvnw -Prelease jreleaser:changelog` . Um arquivo contendo o changelog será colocado em `target/jreleaser/release/CHANGELOG.md` que, nesse ponto, deve ter a seguinte aparência:"

#. type: Block title
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "target/jreleaser/release/CHANGELOG.md"
msgstr "target/jreleaser/release/CHANGELOG.md"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"Not very exicting. But we can change this by instructing JReleaser to format the changelog according to our own conventions. You\n"
"can manually specify patterns to categorize commits however if you chose to follow Conventional Commits we can instruct JReleaser\n"
"to do the same. Add the following to the JReleaser plugin configuration section:"
msgstr "Não é muito empolgante. Mas podemos mudar isso instruindo o JReleaser a formatar o changelog de acordo com nossas próprias convenções. O senhor pode especificar manualmente os padrões para categorizar os commits; no entanto, se optar por seguir os commits convencionais, podemos instruir o JReleaser a fazer o mesmo. Adicione o seguinte à seção de configuração do plug-in JReleaser:"

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "Run the previous Maven command once again and inspect the generated changelog, it should now look like this:"
msgstr "Execute o comando Maven anterior mais uma vez e inspecione o changelog gerado, que agora deve ter a seguinte aparência:"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"There are more formatting options you may apply but for now these will suffice. Let's make yet another commit right now, with\n"
"\"build: Configure JReleaser plugin\" as a commit message. If you want you can generate the changelog once again and see this\n"
"latest commit added to the file."
msgstr "Há mais opções de formatação que o senhor pode aplicar, mas por enquanto essas são suficientes. Vamos fazer mais um commit agora mesmo, com \"build: Configure JReleaser plugin\" como mensagem de commit. Se quiser, o senhor pode gerar o changelog mais uma vez e ver esse último commit adicionado ao arquivo."

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Adding distributions to the release"
msgstr "Adição de distribuições à versão"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"We've reached the point where we can configure the binary distributions. If you run the `./mvnw -Prelease jreleaser:config`\n"
"command you'll notice there's no mention of any distribution files that we configured in previous steps. This is because\n"
"the tool has no implicit knowledge of them, we must tell JReleaser which files we'd like to release. This decouples creation\n"
"of distributions from release assets as you might like to add or remove files at your leisure. For this particular case we'll\n"
"configure Zip files for both macOS and Windows, and a Tar file for Linux. These files must be added to the JReleaser plugin\n"
"configuration section, like so:"
msgstr "Chegamos ao ponto em que podemos configurar as distribuições binárias. Se o senhor executar o comando `./mvnw -Prelease jreleaser:config` , notará que não há menção a nenhum arquivo de distribuição que configuramos nas etapas anteriores. Isso ocorre porque a ferramenta não tem conhecimento implícito deles; precisamos informar ao JReleaser quais arquivos gostaríamos de liberar. Isso desacopla a criação de distribuições dos ativos de lançamento, pois o senhor pode querer adicionar ou remover arquivos quando quiser. Para esse caso específico, configuraremos arquivos Zip para macOS e Windows e um arquivo Tar para Linux. Esses arquivos devem ser adicionados à seção de configuração do plug-in JReleaser, da seguinte forma:"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"We can appreciate a distribution named `app` (same as the project's artifactId for convenience) with 3 configured artifacts.\n"
"Note the use of Maven properties and Mustache templates to define the paths. You may use explicit values if you want or rely\n"
"on properties to parameterize the configuration. Maven properties resolve eagerly during build validation while Mustache\n"
"templates resolve lazily during the execution of the JReleaser plugin goals. Each artifact must define a `platform`\n"
"property that uniquely identifies them. If we run the `./mvnw -Prelease jreleaser:config` we'll quickly get an error as now\n"
"that there's a configured distribution the plugin expects more metadata to be provided by the project:"
msgstr "Podemos apreciar uma distribuição chamada `app` (o mesmo que o artifactId do projeto por conveniência) com 3 artefatos configurados. Observe o uso de propriedades Maven e modelos Mustache para definir os caminhos. O senhor pode usar valores explícitos se quiser ou confiar nas propriedades para parametrizar a configuração. As propriedades do Maven são resolvidas com entusiasmo durante a validação da compilação, enquanto os modelos do Mustache são resolvidos com calma durante a execução das metas do plug-in JReleaser. Cada artefato deve definir uma propriedade `platform` que o identifique de forma exclusiva. Se executarmos o `./mvnw -Prelease jreleaser:config` , obteremos rapidamente um erro, pois agora que há uma distribuição configurada, o plug-in espera que mais metadados sejam fornecidos pelo projeto:"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"This metadata can be provided in two ways: either as part of the JReleaser plugin's configuration or using standard\n"
"POM elements. If you choose the former option then the plugin's configuration may look like this:"
msgstr "Esses metadados podem ser fornecidos de duas maneiras: como parte da configuração do plug-in JReleaser ou usando elementos POM padrão. Se o senhor escolher a primeira opção, a configuração do plug-in poderá ser semelhante a esta:"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"If you choose to use standard POM elements then your `pom.xml` must contain these entries at the very least, of course\n"
"adapting values to your own:"
msgstr "Se o senhor optar por usar elementos POM padrão, o site `pom.xml` deverá conter, no mínimo, essas entradas, adaptando, é claro, os valores aos seus próprios:"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"Yet, we're not still out of the woods as invoking the `./mvnw -Prelease jreleaser:config` once more will still result in\n"
"another error, this time the failure relates to missing artifacts. This is because we did not assemble all required\n"
"artifacts, yet the plugin expects them to be readily available. Here you have the choice to build the required artifacts\n"
"on other nodes then copy them to their expected locations -- a task that can be performed running a GitHub Actions\n"
"workflow on multiple nodes. Or you can instruct JReleaser to ignore some artifacts and select only those that match your\n"
"current platform. Previously we showed how the distribution would look like when created on macOS, assuming we're still on\n"
"that platform we have the correct artifact."
msgstr "No entanto, ainda não estamos fora de perigo, pois invocar o `./mvnw -Prelease jreleaser:config` mais uma vez ainda resultará em outro erro, desta vez a falha está relacionada à falta de artefatos. Isso ocorre porque não montamos todos os artefatos necessários, mas o plug-in espera que eles estejam prontamente disponíveis. Aqui o senhor tem a opção de criar os artefatos necessários em outros nós e depois copiá-los para os locais esperados - uma tarefa que pode ser realizada executando um fluxo de trabalho do GitHub Actions em vários nós. Ou o senhor pode instruir o JReleaser a ignorar alguns artefatos e selecionar apenas aqueles que correspondem à sua plataforma atual. Anteriormente, mostramos como seria a distribuição quando criada no macOS, presumindo que ainda estamos nessa plataforma e que temos o artefato correto."

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"We can instruct JReleaser to select only artifacts that match macOS at this point by invoking the `jreleaser:config` goal\n"
"with an additional flag: `./mvnw -Prelease jreleaser:config -Djreleaser.select.current.platform`. This time the command\n"
"will succeed and print out the model. Note that only the path for the macOS artifact has been fully resolved, leaving the\n"
"other 2 paths untouched."
msgstr "Podemos instruir o JReleaser a selecionar apenas artefatos que correspondam ao macOS neste momento, invocando a meta `jreleaser:config` com um sinalizador adicional: `./mvnw -Prelease jreleaser:config -Djreleaser.select.current.platform` . Dessa vez, o comando será bem-sucedido e imprimirá o modelo. Observe que somente o caminho para o artefato do macOS foi totalmente resolvido, deixando os outros dois caminhos intocados."

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"Let's make one more commit here with \"build: Configure distribution artifacts\" as message. We can create a release right\n"
"now, by invoking a different goal: `./mvnw -Prelease jreleaser:release -Djreleaser.select.current.platform`. This will\n"
"create a Git release at the chosen repository, which includes tagging the repository, uploading the changelog, all\n"
"distribution artifacts and their checksum as release assets."
msgstr "Vamos fazer mais um commit aqui com \"build: Configure distribution artifacts\" como mensagem. Podemos criar uma versão agora mesmo, invocando um objetivo diferente: `./mvnw -Prelease jreleaser:release -Djreleaser.select.current.platform` . Isso criará uma versão do Git no repositório escolhido, o que inclui a marcação do repositório, o upload do registro de alterações, todos os artefatos de distribuição e sua soma de verificação como ativos de versão."

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"But before we do that let's add one additional feature, let's create a Homebrew formula that will make it easy for macOS\n"
"users to consume the binary distribution, shall we?"
msgstr "Mas, antes disso, vamos acrescentar mais um recurso: vamos criar uma fórmula Homebrew que facilitará o consumo da distribuição binária pelos usuários do macOS, certo?"

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Configuring Homebrew as a packager"
msgstr "Configurando o Homebrew como um empacotador"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"link:https://brew.sh/[Homebrew] is a popular choice among macOS users to install and manage binaries. Homebrew packages\n"
"are at their core a Ruby file (known as a formula) that's executed on the target environment to install or upgrade a\n"
"particular binary. JReleaser can create formulae from binary distributions such as the one we already have configured."
msgstr "link:https://brew.sh/[O Homebrew] é uma escolha popular entre os usuários do macOS para instalar e gerenciar binários. Os pacotes do Homebrew são, em sua essência, um arquivo Ruby (conhecido como fórmula) que é executado no ambiente de destino para instalar ou atualizar um determinado binário. O JReleaser pode criar fórmulas a partir de distribuições binárias, como a que já temos configurada."

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "For this to work we simply have to enable Homebrew in the JReleaser plugin configuration like so:"
msgstr "Para que isso funcione, basta ativar o Homebrew na configuração do plug-in JReleaser da seguinte forma:"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"One last thing, it's a good practice to publish Homebrew formulae for non-snapshot releases thus change the project's version\n"
"from `1.0.0-SNAPSHOT` to say `1.0.0.Alpha1` or go directly with `1.0.0` as you feel like doing. One last commit and we're done,\n"
"say \"feat: Add Homebrew packager configuration\" as commit message. Alright, we're finally ready, let's post a release!"
msgstr "Uma última coisa: é uma boa prática publicar fórmulas Homebrew para versões que não sejam snapshot, portanto, altere a versão do projeto de `1.0.0-SNAPSHOT` para `1.0.0.Alpha1` ou vá diretamente para `1.0.0` , como o senhor quiser. Um último commit e estamos prontos, diga \"feat: Add Homebrew packager configuration\" como mensagem de confirmação. Muito bem, finalmente estamos prontos, vamos publicar uma versão!"

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Creating a release"
msgstr "Criação de uma liberação"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"It's been quite the whirlwind tour of adding configuration to the `pom.xml` but that's just for getting the project ready for\n"
"its first release; subsequent release require less tampering with configuration. We can create a git release and the\n"
"Homebrew formula with the `jreleaser:full-release` goal but if you still have some doubts on how things may play out then\n"
"you can invoke the goal in dry-run mode that is, let JReleaser perform all local operations as needed without affecting\n"
"remote resources such as Git repositories. This is how it would look like:"
msgstr "Tem sido um grande turbilhão adicionar configurações ao site `pom.xml` , mas isso é apenas para preparar o projeto para a primeira versão; as versões subsequentes exigem menos ajustes na configuração. Podemos criar uma versão do git e a fórmula do Homebrew com a meta `jreleaser:full-release` , mas se o senhor ainda tiver dúvidas sobre como as coisas podem funcionar, poderá invocar a meta no modo dry-run, ou seja, deixar que o JReleaser execute todas as operações locais conforme necessário, sem afetar os recursos remotos, como os repositórios do Git. É assim que o senhor faria:"

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "JReleaser will perform the following tasks for us:"
msgstr "O JReleaser executará as seguintes tarefas para nós:"

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "Generate a changelog based on all commits from the last tag (if any) to the latest commit."
msgstr "Gera um changelog com base em todos os commits, desde a última tag (se houver) até o commit mais recente."

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "Calculate SHA256 (default) checksums for all input files."
msgstr "Calcular somas de verificação SHA256 (padrão) para todos os arquivos de entrada."

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "Sign all files with GPG. In our case we did not configure this step thus it's skipped."
msgstr "Assine todos os arquivos com GPG. No nosso caso, não configuramos essa etapa, portanto, ela foi ignorada."

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "Upload assets to JFrog Artifactory or AWS S3. We also skip this step as it's not configured."
msgstr "Faça upload de ativos para o JFrog Artifactory ou para o AWS S3. Também ignoramos essa etapa, pois ela não está configurada."

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "Create a Git release at the chosen repository, tagging it."
msgstr "Crie uma versão do Git no repositório escolhido, marcando-a."

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "Upload all assets, including checksums."
msgstr "Faça o upload de todos os ativos, inclusive as somas de verificação."

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "Create a Homebrew formula, publishing to pass:[https://gitcom.com/aamiray/homebrew-tap]."
msgstr "Criar uma fórmula Homebrew, publicando em https://gitcom.com/aamiray/homebrew-tap."

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"Of course no remote repository was affected as we can appreciate the `-Djreleaser.dryrun` property was in effect. If you're\n"
"so inclined inspect the contents of `target/jreleaser/package/app/brew/Formula/app.rb` which defines the Homebrew formula\n"
"to be published. It should look something like this:"
msgstr "É claro que nenhum repositório remoto foi afetado, pois podemos perceber que a propriedade `-Djreleaser.dryrun` estava em vigor. Se o senhor quiser, inspecione o conteúdo de `target/jreleaser/package/app/brew/Formula/app.rb` , que define a fórmula do Homebrew a ser publicada. Ela deve ser mais ou menos assim:"

#. type: Block title
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "app.rb"
msgstr "app.rb"

#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid ""
"When ready, create a release for real this time by simply removing the `-Djreleaser.dryrun` flag from the command line, then\n"
"browse to your repository and look at the freshly created release."
msgstr "Quando estiver pronto, crie uma versão real desta vez simplesmente removendo o sinalizador `-Djreleaser.dryrun` da linha de comando e, em seguida, navegue até o repositório e veja a versão recém-criada."

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Further reading"
msgstr "Leitura adicional"

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "link:https://jreleaser.org/guide/latest/index.html[JReleaser] documentation."
msgstr "Documentação link:https://jreleaser.org/guide/latest/index.html[do JReleaser] ."

#. type: Title ==
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy, no-wrap
msgid "Reference"
msgstr "Referência"

#. type: Plain text
#: _versions/2.7/guides/jreleaser.adoc
#, fuzzy
msgid "As a reference, these are the full contents of the `pom.xml`:"
msgstr "Como referência, estes são os conteúdos completos do site `pom.xml` :"
