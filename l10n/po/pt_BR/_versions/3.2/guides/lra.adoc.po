# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:09+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/lra.adoc
#, fuzzy, no-wrap
msgid "Narayana LRA Participant Support"
msgstr "Apoio ao Participante do Narayana LRA"

#. type: Title ==
#: _versions/3.2/guides/lra.adoc
#, fuzzy, no-wrap
msgid "Introduction"
msgstr "Introdução"

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"The LRA (short for Long Running Action) participant extension is useful in microservice based\n"
"designs where different services can benefit from a relaxed notion of distributed consistency."
msgstr "A extensão do participante LRA (abreviação de Long Running Action) é útil em projetos baseados em microsserviços, nos quais diferentes serviços podem se beneficiar de uma noção relaxada de consistência distribuída."

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"The idea is for multiple services to perform different computations/actions in concert, whilst\n"
"retaining the option to compensate for any actions performed during the computation.\n"
"This kind of loose coupling of services bridges the gap between strong consistency models\n"
"such as JTA/XA and \"home-grown\" ad hoc consistency solutions."
msgstr "A ideia é que vários serviços executem diferentes cálculos/ações em conjunto, mantendo a opção de compensar quaisquer ações executadas durante o cálculo. Esse tipo de acoplamento frouxo de serviços preenche a lacuna entre modelos de consistência fortes, como JTA/XA, e soluções de consistência ad hoc \"caseiras\"."

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"The model is based on the https://github.com/eclipse/microprofile-lra/blob/master/spec/src/main/asciidoc/microprofile-lra-spec.asciidoc[Eclipse MicroProfile LRA specification].\n"
"The approach is for the developer to annotate a business method with a Java annotation\n"
"(https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/[`@LRA`]).\n"
"When such a method is called, an LRA context is created (if one is not already present) which is passed\n"
"along with subsequent Jakarta REST invocations until a method is reached\n"
"which also contains an `@LRA` annotation with an attribute that indicates that the LRA should be\n"
"closed or cancelled. The default is for the LRA to be closed in the same method that started the\n"
"LRA (which itself may have propagated the context during method execution).\n"
"The Jakarta REST resource indicates that it wishes to participate in the interaction by, minimally,\n"
"marking one of the methods with an\n"
"https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/[`@Compensate`]\n"
"annotation. If the context is later cancelled, then this `@Compensate` action is guaranteed to be\n"
"called even in the presence of failures and is the trigger for the resource to compensate for any\n"
"activities it performed in the context of the LRA. This guarantee enables services to operate\n"
"reliably with the assurance of eventual consistency (when all compensation activities have\n"
"ran to completion). The participant can ask to be reliably notified when the LRA it is participating\n"
"in is closed by marking one of the methods with an\n"
"https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/[`@Complete`]\n"
"annotation. In this way cancelling an LRA causes all participants to be notified via their Compensate callback\n"
"and closing an LRA causes all participants to be notified via their Complete callback (if they have one).\n"
"Other annotations for controlling participants are documented in the\n"
"https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/[MicroProfile LRA API v1.0 javadoc]."
msgstr "O modelo baseia-se na link:https://github.com/eclipse/microprofile-lra/blob/master/spec/src/main/asciidoc/microprofile-lra-spec.asciidoc[especificação do Eclipse MicroProfile LRA] . A abordagem é que o desenvolvedor anote um método de negócios com uma anotação Java ( link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/[@LRA] ). Quando esse método é chamado, é criado um contexto de LRA (se ainda não houver um), que é transmitido junto com as invocações subsequentes do Jakarta REST até que seja alcançado um método que também contenha uma anotação `@LRA` com um atributo que indique que o LRA deve ser fechado ou cancelado. O padrão é que o LRA seja fechado no mesmo método que iniciou o LRA (que pode ter propagado o contexto durante a execução do método). O recurso Jakarta REST indica que deseja participar da interação, no mínimo, marcando um dos métodos com uma anotação link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/[@Compensate] . Se o contexto for cancelado posteriormente, essa ação `@Compensate` tem a garantia de ser chamada mesmo na presença de falhas e é o gatilho para o recurso compensar todas as atividades realizadas no contexto do LRA. Essa garantia permite que os serviços operem de forma confiável com a garantia de consistência eventual (quando todas as atividades de compensação tiverem sido concluídas). O participante pode pedir para ser notificado de forma confiável quando o LRA do qual está participando for encerrado, marcando um dos métodos com uma anotação link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/[@Complete] . Dessa forma, o cancelamento de um LRA faz com que todos os participantes sejam notificados por meio de sua chamada de retorno Compensar e o fechamento de um LRA faz com que todos os participantes sejam notificados por meio de sua chamada de retorno Concluir (se houver). Outras anotações para controle de participantes estão documentadas no link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/[javadoc da API MicroProfile LRA v1.0] ."

#. type: Title ==
#: _versions/3.2/guides/lra.adoc
#, fuzzy, no-wrap
msgid "Configuration"
msgstr "Configuração"

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"Once you have your Quarkus Maven project configured you can add the `narayana-lra` extension\n"
"by running the following command in your project base directory:"
msgstr "Depois de configurar o projeto Quarkus Maven, é possível adicionar a extensão `narayana-lra` executando o seguinte comando no diretório base do projeto:"

#. type: Plain text
#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Isso adicionará o seguinte ao seu arquivo de compilação:"

#. type: Block title
#: _versions/3.2/guides/lra.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/3.2/guides/lra.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"`quarkus-narayana-lra` needs to be complemented with a server Jakarta REST implementation and a REST Client implementation in order to work.\n"
"This means that users should also have either `quarkus-resteasy-jackson` and `quarkus-rest-client-jackson` or `quarkus-resteasy-reactive-jackson` and `quarkus-rest-client-reactive-jackson` dependencies in their application."
msgstr "`quarkus-narayana-lra` precisa ser complementado com uma implementação de servidor Jakarta REST e uma implementação de cliente REST para funcionar. Isso significa que os usuários também devem ter as dependências `quarkus-resteasy-jackson` e `quarkus-rest-client-jackson` ou `quarkus-resteasy-reactive-jackson` e `quarkus-rest-client-reactive-jackson` em seus aplicativos."

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"If there is a running coordinator then this is all you need in order to create\n"
"new LRAs and to enlist participants with them."
msgstr "Se houver um coordenador em exercício, isso é tudo de que o senhor precisa para criar novas LRAs e alistar participantes nelas."

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"The LRA extension can be configured by updating an `application.properties` file\n"
"in the `src/main/resources` directory. The only LRA specific property is\n"
"`quarkus.lra.coordinator-url=<url>` which specifies the HTTP endpoint of an external\n"
"coordinator, for example:"
msgstr "A extensão LRA pode ser configurada atualizando um arquivo `application.properties` no diretório `src/main/resources` . A única propriedade específica do LRA é `quarkus.lra.coordinator-url=<url>` , que especifica o ponto de extremidade HTTP de um coordenador externo, por exemplo:"

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"For a Narayana coordinator the path component of the url is normally `lra-coordinator`.\n"
"Coordinators can be obtained from https://quay.io/repository/jbosstm/lra-coordinator\n"
"or you can build your own coordinator using a maven pom that includes the appropriate\n"
"dependencies. A Quarkus quickstart will be provided to show how to do this, or you can\n"
"take a look at one of the https://github.com/jbosstm/quickstart/tree/master/rts/lra-examples/lra-coordinator[Narayana quickstarts].\n"
"Another option would be to run it managed inside a WildFly application server."
msgstr "Para um coordenador Narayana, o componente de caminho da url é normalmente `lra-coordinator` . Os coordenadores podem ser obtidos em https://quay.io/repository/jbosstm/lra-coordinator ou o senhor pode criar seu próprio coordenador usando um maven pom que inclua as dependências apropriadas. Um quickstart do Quarkus será fornecido para mostrar como fazer isso, ou o senhor pode dar uma olhada em um dos link:https://github.com/jbosstm/quickstart/tree/master/rts/lra-examples/lra-coordinator[quickstarts do Narayana] . Outra opção seria executá-lo gerenciado dentro de um servidor de aplicativos WildFly."

#. type: Title ==
#: _versions/3.2/guides/lra.adoc
#, fuzzy, no-wrap
msgid "Handling failures"
msgstr "Manuseio de falhas"

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"When an LRA is told to finish, i.e. when a method annotated with `@LRA(end = true, ...)`\n"
"is invoked, the coordinator will instruct all services involved in the interaction to\n"
"finish. If a service is unavailable (or still finishing) then the coordinator will retry\n"
"periodically. It is the user's responsibility to restart failed services on the same\n"
"endpoint that they used when they first joined the LRA, or to tell the coordinator that\n"
"they wish to be notified on new endpoints. An LRA is not deemed finished until *all*\n"
"participants have acknowledged that they have finished."
msgstr "Quando um LRA é instruído a terminar, ou seja, quando um método anotado com `@LRA(end = true, …​)` é invocado, o coordenador instruirá todos os serviços envolvidos na interação a terminar. Se um serviço não estiver disponível (ou ainda estiver terminando), o coordenador tentará novamente, periodicamente. É responsabilidade do usuário reiniciar os serviços que falharam no mesmo ponto de extremidade que usaram quando entraram pela primeira vez na LRA ou informar ao coordenador que desejam ser notificados em novos pontos de extremidade. Um LRA não é considerado concluído até que *todos os* participantes tenham confirmado que terminaram."

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"The coordinator is responsible for reliably creating and ending LRAs and for managing\n"
"participant enlistment, and it therefore must be available (for example if it or the\n"
"network fail then something in the environment is responsible for restarting\n"
"the coordinator or for repairing the network, respectively). To fulfill this task the\n"
"coordinator must have access to durable storage for its logs (via a filesystem or in\n"
"a database).  At the time of writing, managing coordinators is the responsibility of\n"
"the user. An \"out-of-the-box\" solution will be forthcoming."
msgstr "O coordenador é responsável por criar e encerrar LRAs de forma confiável e por gerenciar o alistamento de participantes e, portanto, deve estar disponível (por exemplo, se ele ou a rede falharem, algo no ambiente será responsável por reiniciar o coordenador ou por reparar a rede, respectivamente). Para cumprir essa tarefa, o coordenador deve ter acesso a um armazenamento durável para seus registros (por meio de um sistema de arquivos ou em um banco de dados). No momento em que este artigo foi escrito, o gerenciamento de coordenadores é responsabilidade do usuário. Uma solução \"pronta para uso\" será apresentada em breve."

#. type: Title ==
#: _versions/3.2/guides/lra.adoc
#, fuzzy, no-wrap
msgid "Examples"
msgstr "Exemplos"

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"The following is a simple example of how to start an LRA and how to receive a notification\n"
"when the LRA is later cancelled (the `@Compensate` annotated method is called) or closed\n"
"(`@Complete` is called):"
msgstr "A seguir, um exemplo simples de como iniciar um LRA e como receber uma notificação quando o LRA for cancelado posteriormente (o método anotado `@Compensate` é chamado) ou fechado ( `@Complete` é chamado):"

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"The example also shows that when an LRA is present its identifier can be obtained\n"
"by reading the request headers via the `@HeaderParam` Jakarta REST annotation type."
msgstr "O exemplo também mostra que, quando um LRA está presente, seu identificador pode ser obtido pela leitura dos cabeçalhos da solicitação por meio do tipo de anotação `@HeaderParam` Jakarta REST."

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"And here's an example of how to start an LRA in one resource method and close it in\n"
"a different resource method using the `end` element of the `LRA` annotation. It also\n"
"shows how to configure the LRA to be automatically cancelled if the business method\n"
"returns the particular HTTP status codes identified in the `cancelOn` and\n"
"`cancelOnFamily` elements:"
msgstr "E aqui está um exemplo de como iniciar um LRA em um método de recurso e fechá-lo em um método de recurso diferente usando o elemento `end` da anotação `LRA` . Ele também mostra como configurar o LRA para ser cancelado automaticamente se o método de negócios retornar os códigos de status HTTP específicos identificados nos elementos `cancelOn` e `cancelOnFamily` :"

#: _versions/3.2/guides/lra.adoc
#, fuzzy
msgid ""
"The `end = false` element on the bookTrip method forces the LRA to continue running when\n"
"the method finishes and the `end = true` element on the confirmTrip method forces the LRA\n"
"(started by the bookTrip method) to be closed when the method finishes. Note that this\n"
"end element can be placed on any Jakarta REST resource (ie one service can start the LRA whilst\n"
"a different service ends it). There are many more examples in the\n"
"https://github.com/eclipse/microprofile-lra/blob/master/spec/src/main/asciidoc/microprofile-lra-spec.asciidoc#java-annotations-for-lras[Microprofile LRA specification document] and in the https://github.com/eclipse/microprofile-lra/tree/master/tck/src/main/java/org/eclipse/microprofile/lra/tck[Microprofile LRA TCK]."
msgstr "O elemento `end = false` no método bookTrip força o LRA a continuar em execução quando o método termina e o elemento `end = true` no método confirmTrip força o LRA (iniciado pelo método bookTrip) a ser fechado quando o método termina. Observe que esse elemento final pode ser colocado em qualquer recurso Jakarta REST (ou seja, um serviço pode iniciar o LRA enquanto outro serviço o encerra). Há muitos outros exemplos no link:https://github.com/eclipse/microprofile-lra/blob/master/spec/src/main/asciidoc/microprofile-lra-spec.asciidoc#java-annotations-for-lras[documento de especificação do Microprofile LRA] e no link:https://github.com/eclipse/microprofile-lra/tree/master/tck/src/main/java/org/eclipse/microprofile/lra/tck[Microprofile LRA TCK] ."
