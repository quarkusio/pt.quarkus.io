# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:09+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:6
#, no-wrap
msgid "Infinispan Client Extension Reference Guide"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:15
msgid "Infinispan is a distributed, in-memory key/value store that provides Quarkus applications with a highly configurable and independently scalable data layer.  This extension gives you client functionality that connects applications running on Quarkus with remote Infinispan clusters.  To get started with Infinispan, we recommend:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:17
msgid "Following the https://infinispan.org/get-started/[Get Started Tutorial] (5 minutes)."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:18
msgid "Running the *remote cache* https://infinispan.org/tutorials/[simple code tutorials]."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:20
msgid "Learn more in the https://infinispan.org/documentation[Infinispan documentation]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:21
#, no-wrap
msgid "Installation"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:24
msgid "Run the following command in the base directory of your Quarkus project to add the `infinispan-client` extension:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:29
msgid "This command adds the following dependency to your build file:"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:31
#, no-wrap
msgid "pom.xml"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:37
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-infinispan-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:40
#, no-wrap
msgid "build.gradle"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:44
#, no-wrap
msgid ""
"implementation 'io.quarkus:quarkus-infinispan-client'\n"
"annotationProcessor 'org.infinispan.protostream:protostream-processor:{infinispan-protostream-version}' <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:46
msgid "Mandatory in the Gradle build to enable the generation of the files in the annotation based serialization"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:47
#, no-wrap
msgid "Connection to Infinispan"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:49
#, no-wrap
msgid "Running the server"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:52
msgid "You need at least one running instance of the Infinispan Server."
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:53
#, no-wrap
msgid "Development mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:57
msgid "If you are running a Docker instance, you can use link:infinispan-dev-services.adoc[Infinispan Dev Services] and connect without configuration."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:60
msgid "If you want to run the server yourself using Docker, check out the 5-minute https://infinispan.org/get-started/[Getting stated with Infinispan] tutorial to run Infinispan Server"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:63
msgid "You can also https://infinispan.org/download/[download] {infinispan-version} Server bare metal distribution and run the following command from the distribution folder."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:66
#, no-wrap
msgid "$ ./bin/server.sh\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:69
msgid "Infinispan Server *enables authentication and security authorization by default*, so you need to create a user with permissions."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:71
msgid "If you run the *Infinispan Server image*, pass the `USER=\"admin\"` and `PASS=\"password\"` parameters."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:72
msgid "If you run the *bare metal distribution*, use the Command Line Interface (CLI) as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:76
#, no-wrap
msgid "$ ./bin/cli.sh user create admin -p password\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:78
#, no-wrap
msgid "Production mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:84
msgid "In Kubernetes, we recommend the https://infinispan.org/docs/infinispan-operator/main/operator.html[Infinispan Operator].  Additionally, grab a look to the https://infinispan.org/tutorials/simple/simple_tutorials.html#cross-site-replication_remote-cache-tutorials[Cross Site Replication] tutorial. You will learn how to run two separate Infinispan Clusters with docker compose (for local dev) and the Operator."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:85
#, no-wrap
msgid "Configuring the connection"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:89
msgid "If you are running an Infinispan Server, add the following properties to connect in the `application.properties` file in the `src/main/resources` directory."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:93
#, no-wrap
msgid "quarkus.infinispan-client.hosts=localhost:11222 <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:96
#, no-wrap
msgid ""
"quarkus.infinispan-client.username=admin <2>\n"
"quarkus.infinispan-client.password=password <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:98
#, no-wrap
msgid "quarkus.infinispan-client.client-intelligence=BASIC <4>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:100
msgid "Sets Infinispan Server address list, separated with commas"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:101
msgid "Sets the authentication username"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:102
msgid "Sets the authentication password"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:103
msgid "Sets the client intelligence. Use BASIC as a workaround if using Docker for Mac."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:105
msgid "Alternatively, you can use uri connection by providing a single connection property"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:109
#, no-wrap
msgid ""
"quarkus.infinispan-client.uri=hotrod://admin:password@localhost:11222 <1>\n"
"quarkus.infinispan-client.client-intelligence=BASIC <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:111
msgid "Sets Infinispan URI connection. The following properties will be ignored: hosts, username and password."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:112
msgid "Sets the client intelligence. Use BASIC as a workaround if using Docker for Mac"
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:116
msgid "Use Infinispan Dev Services to run a server and connect without configuration."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:118
#, no-wrap
msgid "Default and named connections"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:121
msgid "This extension lets you configure a _default_ Infinispan client connections and _named_ ones.  Named connections are essential to connect to multiple Infinispan clusters."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:124
msgid "The default connection is configured using the `quarkus.infinispan-client.*` properties as seen above.  When using the default connection, you can inject using a _plain_ `@Inject`:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:126
msgid "_Named_ clients are configured using the `quarkus.infinispan-client.<name>.*` properties:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:132
#, no-wrap
msgid ""
"quarkus.infinispan-client.site-lon.hosts=localhost:11222\n"
"quarkus.infinispan-client.site-lon.username=admin\n"
"quarkus.infinispan-client.site-lon.password=password\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:136
#, no-wrap
msgid ""
"quarkus.infinispan-client.site-nyc.hosts=localhost:31222\n"
"quarkus.infinispan-client.site-nyc.username=admin\n"
"quarkus.infinispan-client.site-nyc.password=password\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:139
msgid "Use the `@InfinispanClientName` qualifier with dependency injection:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:146
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class InfinispanExample {\n"
"    @Inject\n"
"    @InfinispanClientName(\"site-lon\")\n"
"    RemoteCacheManager rcmLon;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:151
#, no-wrap
msgid ""
"    @Inject\n"
"    @InfinispanClientName(\"site-nyc\")\n"
"    RemoteCacheManager rmcNyc;\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:153
#, no-wrap
msgid "Infinispan Health Check"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:155
msgid "If you are using the quarkus-smallrye-health extension, the Infinispan client extensions will automatically add a readiness health check to validate the connection."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:157
msgid "When you access the `/q/health/ready` endpoint of your application you will have information about the server connection and available caches."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:159
msgid "This behavior can be disabled via the property `quarkus.infinispan-client.health.enabled`."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:160
#, no-wrap
msgid "Tracing with OpenTelemetry"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:164
msgid "Infinispan supports instrumentation of the server via OpenTelemetry. Having the `quarkus-opentelemetry` extension will propagate the traces from the Infinispan Client to the Server.  This behavior can be disabled via the property `quarkus.infinispan-client.tracing.propagation.enabled`"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:165
#, no-wrap
msgid "Creating caches from the client"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:169
msgid "When a cache is accessed from the client, if the cache does not exist in the Infinispan Server and you want to create it on first access, use one of the following properties:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:175
#, no-wrap
msgid ""
"quarkus.infinispan-client.cache.magazine.configuration=<distributed-cache><encoding media-type=\"application/x-protostream\"/></distributed-cache> <1>\n"
"quarkus.infinispan-client.cache.books.configuration-resource=booksDistributedCache.json <2>\n"
"quarkus.infinispan-client.cache.authors.configuration-uri=/file/authorsIndexedCache.yaml <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:177
msgid "The configuration in xml of the 'magazine' (yaml and json are also supported)"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:178
msgid "The file name located under the `resources` folder that contains the configuration of the 'books' cache"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:179
msgid "A provided file URI. The file URI can also be a file under resources"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:183
msgid "If `configuration-resource`, `configuration` and `configuration-uri` are configured for the same cache with the same Quarkus profile, `configuration-uri` gets the highest preference, over `configuration-resource` and `configuration`.  `configuration-resource` gets preference over `configuration`."
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:189
msgid "The `configuration-resource` is build time property and the file will be included in the native build automatically.  `configuration-uri` can also point to a file under the `resources` folder. However, the file won't be automatically included in the native executable, unless you configure the property `quarkus.native.resources.includes`."
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:195
msgid "Cache configuration can be provided in XML, JSON or YAML. Use the Infinispan Console and the cache configuration Wizard to learn more about Infinispan Caches and create guided configurations."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:198
msgid "If nothing is configured for a particular cache, it will be created with the following basic configuration:"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:199
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:645
#, no-wrap
msgid "XML"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:205
#, no-wrap
msgid ""
"<distributed-cache>\n"
"    <encoding media-type=\"application/x-protostream\"/>\n"
"</distributed-cache>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:207
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:658
#, no-wrap
msgid "JSON"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:217
#, no-wrap
msgid ""
"{\n"
"    \"distributed-cache\": {\n"
"        \"encoding\": {\n"
"            \"media-type\": \"application/x-protostream\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:219
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:678
#, no-wrap
msgid "YAML"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:225
#, no-wrap
msgid ""
"distributedCache:\n"
"  encoding:\n"
"    mediaType: \"application/x-protostream\"\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:227
#, no-wrap
msgid "Authentication mechanisms"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:230
msgid "You can use the following authentication mechanisms with the Infinispan client:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:232
msgid "DIGEST-MD5"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:233
msgid "PLAIN (recommended only in combination with TLS encryption)"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:234
msgid "EXTERNAL"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:236
msgid "Other authentication mechanisms, such as SCRAM and GSSAPI, are not yet verified with the Infinispan client."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:238
msgid "You can find more information on configuring authentication in https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#hotrod_endpoint_auth-hotrod-client-configuration[Hot Rod Endpoint Authentication Mechanisms]."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:240
msgid "You must configure authentication in the `hotrod-client.properties` file if you use Dependency Injection."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:241
#, no-wrap
msgid "Serialization (Key Value types support)"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:246
msgid "By default, the client will support keys and values of the following types: byte[], primitive wrappers (e.g. Integer, Long, Double), String, Date and Instant. User types require some additional steps that are detailed here. Let's say we have the following user classes:"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:247
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:302
#, no-wrap
msgid "Author.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:253
#, no-wrap
msgid ""
"public class Author {\n"
"   private final String name;\n"
"   private final String surname;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:260
#, no-wrap
msgid ""
"   public Author(String name, String surname) {\n"
"      this.name = Objects.requireNonNull(name);\n"
"      this.surname = Objects.requireNonNull(surname);\n"
"   }\n"
"   // Getter/Setter/equals/hashCode/toString omitted\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:262
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:322
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:696
#, no-wrap
msgid "Book.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:271
#, no-wrap
msgid ""
"public class Book {\n"
"   private final String title;\n"
"   private final String description;\n"
"   private final int publicationYear;\n"
"   private final Set<Author> authors;\n"
"   private final BigDecimal price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:281
#, no-wrap
msgid ""
"   public Book(String title, String description, int publicationYear, Set<Author> authors, BigDecimal price) {\n"
"      this.title = Objects.requireNonNull(title);\n"
"      this.description = Objects.requireNonNull(description);\n"
"      this.publicationYear = publicationYear;\n"
"      this.authors = Objects.requireNonNull(authors);\n"
"      this.price = price;\n"
"   }\n"
"   // Getter/Setter/equals/hashCode/toString omitted\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:285
msgid "Serialization of user types uses a library based on protobuf, called https://github.com/infinispan/protostream[Protostream]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:289
msgid "Infinispan caches can store keys and values in different encodings, but recommend using https://developers.google.com/protocol-buffers[Protocol Buffers (Protobuf)]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:291
msgid "For more information see our https://infinispan.org/docs/stable/titles/encoding/encoding.html[Cache Encoding and Marshalling] guide."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:294
#, no-wrap
msgid "Annotation based Serialization"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:299
msgid "This can be done automatically by adding protostream annotations to your user classes.  In addition, a single Initializer annotated interface is required which controls how the supporting classes are generated."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:301
msgid "Here is an example of how the preceding classes should be changed:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:310
#, no-wrap
msgid ""
"    @ProtoFactory\n"
"    public Author(String name, String surname) {\n"
"        this.name = Objects.requireNonNull(name);\n"
"        this.surname = Objects.requireNonNull(surname);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:315
#, no-wrap
msgid ""
"    @ProtoField(number = 1)\n"
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:320
#, no-wrap
msgid ""
"    @ProtoField(number = 2)\n"
"    public String getSurname() {\n"
"        return surname;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:332
#, no-wrap
msgid ""
"    @ProtoFactory\n"
"    public Book(String title, String description, int publicationYear, Set<Author> authors) {\n"
"        this.title = Objects.requireNonNull(title);\n"
"        this.description = Objects.requireNonNull(description);\n"
"        this.publicationYear = publicationYear;\n"
"        this.authors = Objects.requireNonNull(authors);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:337
#, no-wrap
msgid ""
"    @ProtoField(number = 1)\n"
"    public String getTitle() {\n"
"        return title;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:342
#, no-wrap
msgid ""
"    @ProtoField(number = 2)\n"
"    public String getDescription() {\n"
"        return description;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:347
#, no-wrap
msgid ""
"    @ProtoField(number = 3, defaultValue = \"-1\")\n"
"    public int getPublicationYear() {\n"
"        return publicationYear;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:352
#, no-wrap
msgid ""
"    @ProtoField(number = 4)\n"
"    public Set<Author> getAuthors() {\n"
"        return authors;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:356
msgid "If your classes have only mutable fields, then the `ProtoFactory` annotation is not required, assuming your class has a no arg constructor."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:359
msgid "Then all that is required is a very simple `GeneratedSchema` interface with an annotation on it to specify configuration settings"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:360
#, no-wrap
msgid "BooksSchema.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:366
#, no-wrap
msgid ""
"import org.infinispan.protostream.GeneratedSchema;\n"
"import org.infinispan.protostream.annotations.AutoProtoSchemaBuilder;\n"
"import org.infinispan.protostream.types.java.math.BigDecimalAdapter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:370
#, no-wrap
msgid ""
"@AutoProtoSchemaBuilder(includeClasses = { Book.class, Author.class, BigDecimalAdapter.class }, schemaPackageName = \"book_sample\")\n"
"interface BookStoreSchema extends GeneratedSchema {\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:375
msgid "Protostream provides default Protobuf mappers for commonly used types as `BigDecimal`, included in the `org.infinispan.protostream.types` package."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:379
msgid "So in this case we will automatically generate the marshaller and schemas for the included classes and place them in the schema package automatically. The package does not have to be provided, but if you use Infinispan search capabilities, you must know the generated package."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:381
msgid "In Quarkus the `schemaFileName` and `schemaFilePath` attributes should NOT be set on the `AutoProtoSchemaBuilder` annotation. Setting either attributes causes native runtime errors."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:382
#, no-wrap
msgid "Custom serialization"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:388
msgid "The previous method is suggested for any case when the user can annotate their classes.  Unfortunately the user may not be able to annotate all classes they will put in the cache. In this case you must define your schema and create your own Marshaller(s)  yourself."
msgstr ""

#. type: Labeled list
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:389
#, no-wrap
msgid "Protobuf schema"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:390
msgid "You can supply a protobuf schema through either one of two ways."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:391
msgid "Proto File"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:394
msgid "+ You can put the `.proto` file in the `META-INF` directory of the project. These files will automatically be picked up at initialization time."
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:395
#, no-wrap
msgid "library.proto"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:398
#, no-wrap
msgid "package book_sample;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:406
#, no-wrap
msgid ""
"message Book {\n"
"  required string title = 1;\n"
"  required string description = 2;\n"
"  required int32 publicationYear = 3; // no native Date type available in Protobuf\n"
"  repeated Author authors = 4;\n"
"  requited double price = 5; // no native BigDecimal type available in Protobuf\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:411
#, no-wrap
msgid ""
"message Author {\n"
"  required string name = 1;\n"
"  required string surname = 2;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:413
msgid "In Code"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:416
msgid "+ Or you can define the proto schema directly in user code by defining a produced bean of type `org.infinispan.protostream.FileDescriptorSource`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:438
#, no-wrap
msgid ""
"   @Produces\n"
"   FileDescriptorSource bookProtoDefinition() {\n"
"      return FileDescriptorSource.fromString(\"library.proto\", \"package book_sample;\\n\" +\n"
"            \"\\n\" +\n"
"            \"message Book {\\n\" +\n"
"            \"  required string title = 1;\\n\" +\n"
"            \"  required string description = 2;\\n\" +\n"
"            \"  required int32 publicationYear = 3; // no native Date type available in Protobuf\\n\" +\n"
"            \"\\n\" +\n"
"            \"  repeated Author authors = 4;\\n\" +\n"
"            \"\\n\" +\n"
"            \"  required double price = 5; // no native BigDecimal type available in Protobuf\\n\" +\n"
"            \"}\\n\" +\n"
"            \"\\n\" +\n"
"            \"message Author {\\n\" +\n"
"            \"  required string name = 1;\\n\" +\n"
"            \"  required string surname = 2;\\n\" +\n"
"            \"}\");\n"
"   }\n"
msgstr ""

#. type: Labeled list
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:439
#, no-wrap
msgid "User Marshaller"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:443
msgid "The last thing to do is to provide a `org.infinispan.protostream.MessageMarshaller` implementation for each user class defined in the proto schema. This class is then provided via `@Produces` in a similar fashion to the code based proto schema definition above."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:445
msgid "Here is the Marshaller class for our Author & Book classes."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:447
msgid "The type name must match the `<protobuf package>.<protobuf message>` exactly!"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:448
#, no-wrap
msgid "AuthorMarshaller.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:452
#, no-wrap
msgid "public class AuthorMarshaller implements MessageMarshaller<Author> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:457
#, no-wrap
msgid ""
"   @Override\n"
"   public String getTypeName() {\n"
"      return \"book_sample.Author\";\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:462
#, no-wrap
msgid ""
"   @Override\n"
"   public Class<? extends Author> getJavaClass() {\n"
"      return Author.class;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:468
#, no-wrap
msgid ""
"   @Override\n"
"   public void writeTo(ProtoStreamWriter writer, Author author) throws IOException {\n"
"      writer.writeString(\"name\", author.getName());\n"
"      writer.writeString(\"surname\", author.getSurname());\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:476
#, no-wrap
msgid ""
"   @Override\n"
"   public Author readFrom(ProtoStreamReader reader) throws IOException {\n"
"      String name = reader.readString(\"name\");\n"
"      String surname = reader.readString(\"surname\");\n"
"      return new Author(name, surname);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:478
#, no-wrap
msgid "BookMarshaller.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:482
#, no-wrap
msgid "public class BookMarshaller implements MessageMarshaller<Book> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:487
#, no-wrap
msgid ""
"   @Override\n"
"   public String getTypeName() {\n"
"      return \"book_sample.Book\";\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:492
#, no-wrap
msgid ""
"   @Override\n"
"   public Class<? extends Book> getJavaClass() {\n"
"      return Book.class;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:501
#, no-wrap
msgid ""
"   @Override\n"
"   public void writeTo(ProtoStreamWriter writer, Book book) throws IOException {\n"
"      writer.writeString(\"title\", book.getTitle());\n"
"      writer.writeString(\"description\", book.getDescription());\n"
"      writer.writeInt(\"publicationYear\", book.getPublicationYear());\n"
"      writer.writeCollection(\"authors\", book.getAuthors(), Author.class);\n"
"      writer.writeDouble(\"price\", book.getPrice().doubleValue());\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:512
#, no-wrap
msgid ""
"   @Override\n"
"   public Book readFrom(ProtoStreamReader reader) throws IOException {\n"
"      String title = reader.readString(\"title\");\n"
"      String description = reader.readString(\"description\");\n"
"      int publicationYear = reader.readInt(\"publicationYear\");\n"
"      Set<Author> authors = reader.readCollection(\"authors\", new HashSet<>(), Author.class);\n"
"      BigDecimal price = BigDecimal.valueOf(reader.readDouble(\"price\"));\n"
"      return new Book(title, description, publicationYear, authors, price);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:515
msgid "And you pass the marshaller by defining the following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:522
#, no-wrap
msgid ""
"   @Produces\n"
"   MessageMarshaller authorMarshaller() {\n"
"      return new AuthorMarshaller();\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:527
#, no-wrap
msgid ""
"   @Produces\n"
"   MessageMarshaller bookMarshaller() {\n"
"      return new BookMarshaller();\n"
"   }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:529
msgid "The above produced Marshaller method MUST return `MessageMarshaller` without types or else it will not be found."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:530
#, no-wrap
msgid "Dependency Injection"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:536
msgid "As you saw above we support the user injecting Marshaller configuration. You can do the inverse with the Infinispan client extension providing injection for `RemoteCacheManager` and `RemoteCache` objects.  There is one global `RemoteCacheManager` that takes all the configuration parameters setup in the above sections."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:539
msgid "It is very simple to inject these components. All you need to do is to add the `@Inject` annotation to the field, constructor or method. In the below code we utilize field and constructor injection."
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:540
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:563
#, no-wrap
msgid "SomeClass.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:547
#, no-wrap
msgid ""
"    @Inject\n"
"    SomeClass(RemoteCacheManager remoteCacheManager) {\n"
"       this.remoteCacheManager = remoteCacheManager;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:551
#, no-wrap
msgid ""
"    @Inject\n"
"    @Remote(\"myCache\")\n"
"    RemoteCache<String, Book> cache;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:553
#, no-wrap
msgid "    RemoteCacheManager remoteCacheManager;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:560
msgid "If you notice the `RemoteCache` declaration has an additional annotation named `Remote`.  This is a *qualifier* annotation allowing you to specify which named cache that will be injected. This annotation is not required and if it is not supplied, the default cache will be injected.  The RemoteCacheManager bean scope is `@ApplicationScope`.  The RemoteCache bean scope is `@Singleton`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:562
msgid "For non default connections, combine the qualifier `@InfinispanClientName` and `@Remote`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:570
#, no-wrap
msgid ""
"    @Inject\n"
"    @InfinispanClientName(\"lon-site\")\n"
"    @Remote(\"books\")\n"
"    RemoteCache<String, Book> lonBooks;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:575
#, no-wrap
msgid ""
"    @Inject\n"
"    @InfinispanClientName(\"nyc-site\")\n"
"    @Remote(\"books\")\n"
"    RemoteCache<String, Book> nycBooks;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:579
msgid "Other types may be supported for injection, please see other sections for more information"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:580
#, no-wrap
msgid "Registering Protobuf Schemas with Infinispan Server"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:583
msgid "You need to register the generated Protobuf schemas with Infinispan Server to perform queries or convert from `Protobuf` to other media types such as `JSON`."
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:588
msgid "You can check the schemas that exist under the `Schemas` tab by logging into Infinispan Console at `http://SERVER_HOST:SERVER_PORT` (for example `http://localhost:11222`)."
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:591
msgid "Check the xref:infinispan-dev-services.adoc[Infinispan Dev Services Guide] to connect to the Infinispan Dev Services server."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:597
msgid "By default, Protobuf schemas generated this way will be registered by this extension when the client first connects.  However, it might be required to handle the registration manually as a schema may evolve over time when used in production, so you can disable this from occurring by configuring the `quarkus.infinispan-client.use-schema-registration` to `false`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:603
msgid "To configure the schema manually please use https://infinispan.org/docs/infinispan-operator/main/operator.html[Infinispan Operator] for Kubernetes deployments, Infinispan Console, https://infinispan.org/docs/stable/titles/rest/rest.html#rest_v2_protobuf_schemas[REST API] or the https://infinispan.org/docs/stable/titles/encoding/encoding.html#registering-sci-remote-caches_marshalling[Hot Rod Java Client]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:605
#, no-wrap
msgid "Caching using annotations"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:608
msgid "The Infinispan Client extension offers a set of annotations that can be used in a CDI managed bean to enable caching abilities with Infinispan."
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:613
msgid "Caching annotations are not allowed on private methods.  They will work fine with any other access modifier including package-private (no explicit modifier)."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:615
#, no-wrap
msgid "@CacheResult"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:618
msgid "Loads a method result from the cache without executing the method body whenever possible."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:624
msgid "When a method annotated with `@CacheResult` is invoked, Quarkus will use the method argument as the cache key and check in the cache whether the method has been already invoked.  Methods with multiple parameters are not allowed. For composite keys, define a Protobuf schema that will hold multiple values.  If a value is found in the cache, it is returned and the annotated method is never actually executed.  If no value is found, the annotated method is invoked and the returned value is stored in the cache using the computed key.  This annotation cannot be used on a method returning `void`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:626
msgid "Infinispan Client extension is not able yet to cache `null` values unlike the Quarkus-Cache extension."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:627
#, no-wrap
msgid "@CacheInvalidate"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:630
msgid "Removes an entry from the cache."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:633
msgid "When a method annotated with `@CacheInvalidate` is invoked, Infinispan will use the method argument as a cache key to try to remove an existing entry from the cache.  If the key does not identify any cache entry, nothing will happen."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:634
#, no-wrap
msgid "@CacheInvalidateAll"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:637
msgid "When a method annotated with `@CacheInvalidateAll` is invoked, Infinispan will remove all entries from the cache."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:639
#, no-wrap
msgid "Querying"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:644
msgid "The Infinispan client supports both indexed and non-indexed search as long as the `ProtoStreamMarshaller` is configured above. This allows the user to query based on the properties of the proto schema. *Indexed queries are preferred for performance reasons*."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:656
#, no-wrap
msgid ""
"<distributed-cache name=\"books\" statistics=\"true\">\n"
"    <!-- other configuration -->\n"
"\t<indexing enabled=\"true\" storage=\"filesystem\" startup-mode=\"PURGE\">\n"
"\t\t<indexed-entities>\n"
"\t\t\t<indexed-entity>book_sample.Book</indexed-entity>\n"
"\t\t</indexed-entities>\n"
"\t</indexing>\n"
"</distributed-cache>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:676
#, no-wrap
msgid ""
"{\n"
"  \"books\": {\n"
"    \"distributed-cache\": {\n"
"      ...\n"
"      \"indexing\": {\n"
"        \"enabled\": true,\n"
"        \"storage\": \"filesystem\",\n"
"        \"startupMode\": \"PURGE\",\n"
"        \"indexed-entities\": [\n"
"          \"book_sample.Book\"\n"
"        ]\n"
"      }\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:689
#, no-wrap
msgid ""
"distributedCache:\n"
"  # other configuration\n"
"  indexing:\n"
"    enabled: \"true\"\n"
"    storage: \"filesystem\"\n"
"    startupMode: \"PURGE\"\n"
"    indexedEntities:\n"
"      - \"book_sample.Book\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:695
msgid "Query builds upon the proto definitions you can configure when setting up the `ProtoStreamMarshaller`.  Either method of Serialization above will automatically register the schema with the server at startup, meaning that you will automatically gain the ability to query objects stored in the remote Infinispan Server."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:701
#, no-wrap
msgid ""
"@Indexed <1>\n"
"public class Book {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:706
#, no-wrap
msgid ""
"    @ProtoFactory\n"
"    public Book(String title, String description, int publicationYear, Set<Author> authors) {\n"
"      ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:712
#, no-wrap
msgid ""
"    @ProtoField(number = 1)\n"
"    @Text <2>\n"
"    public String getTitle() {\n"
"        return title;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:719
#, no-wrap
msgid ""
"    @ProtoField(number = 2)\n"
"    @Keyword(projectable = true, sortable = true, normalizer = \"lowercase\", indexNullAs = \"unnamed\", norms = false) <3>\n"
"    public String getDescription() {\n"
"        return description;\n"
"    }\n"
"    ...\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:721
msgid "`@Indexed` annotation makes the POJO indexable"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:722
msgid "`@Basic` annotation is used for indexed fields without any special transformation"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:723
msgid "`@Keyword` annotation is used to apply a normalizer to a text field"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:726
msgid "You can use either the Query DSL or the Ickle Query language with the Quarkus Infinispan client extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:728
msgid "You can read more about https://infinispan.org/docs/stable/titles/query/query.html[querying] in the Infinispan documentation."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:730
#, no-wrap
msgid "Counters"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:734
msgid "Infinispan also has a notion of counters and the Quarkus Infinispan client supports them out of the box."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:738
msgid "The Quarkus Infinispan client extension allows for Dependency Injection of the `CounterManager` directly. All you need to do is annotate your field, constructor or method, and you get it with no fuss. You can then use counters as you would normally."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:743
#, no-wrap
msgid ""
"@Inject\n"
"CounterManager counterManager;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:746
msgid "You can read more about https://infinispan.org/docs/stable/titles/developing/developing.html#clustered_counters[clustered counters] in the Infinispan documentation."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:747
#, no-wrap
msgid "Near Caching"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:750
msgid "Near caching is disabled by default, but you can enable it on a per cache basic by configuring the following properties:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:756
#, no-wrap
msgid ""
"quarkus.infinispan-client.cache.books.near-cache-mode=INVALIDATED <1>\n"
"quarkus.infinispan-client.cache.books.near-cache-max-entries=200 <2>\n"
"quarkus.infinispan-client.cache.books.near-cache-use-bloom-filter=true <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:759
msgid "Enables near caching for the 'books' cache by setting the mode to `INVALIDATED`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:760
msgid "Sets the maximum number of entries that the near cache of the 'books' cache can hold before eviction occurs"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:761
msgid "Enables bloom filter for the 'books' cache"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:762
#, no-wrap
msgid "Bounded near caching"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:765
msgid "You should always use bounded near caches by specifying the maximum number of entries they can contain."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:766
#, no-wrap
msgid "Bloom filters"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:771
msgid "If you need to optimize the performance for write operations by reducing the total number of invalidation messages, enable bloom filter. Bloom filters reside on Infinispan Server and keep track of the entries that the client has requested.  They cannot be used with unbounded near cache: maximum number of entries must be defined when enabling bloom filters."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:772
#, no-wrap
msgid "Encryption"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:775
msgid "Encryption at this point requires additional steps to get working."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:778
msgid "The first step is to configure the `hotrod-client.properties` file to point to your truststore and/or keystore. This is further detailed https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#hotrod_encryption[here]."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:781
msgid "The Infinispan Client extension enables SSL/TLS by default. You can read more about this at xref:native-and-ssl.adoc[Using SSL With Native Executables]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:782
#, no-wrap
msgid "Additional Features"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:787
msgid "The Infinispan Client has additional features that were not mentioned here. This means this feature was not tested in a Quarkus environment, and they may or may not work. Please let us know if you need these added!"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:789
#, no-wrap
msgid "Dev Services for Infinispan"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:793
msgid "When you use the infinispan-client extension in dev mode or in test, Quarkus automatically starts an Infinispan server and configure your application."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:794
#, no-wrap
msgid "Enabling / Disabling Dev Services for Infinispan"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:797
msgid "Learn more in the xref:infinispan-dev-services.adoc[Infinispan Dev Services guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:798
#, no-wrap
msgid "Shared server"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:802
msgid "Quarkus will share the Infinispan broker if you have multiple applications running in dev mode.  Dev Services for Infinispan implements a _service discovery_ mechanism for your multiple Quarkus applications running in _dev_ mode to share a single broker."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:804
msgid "Dev Services for Infinispan starts the container with the `quarkus-dev-service-infinispan` label which is used to identify the container."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:808
msgid "If you need multiple (shared) Infinispan server, you can configure the `quarkus.infinispan-client.devservices.service-name` attribute and indicate the server name.  It looks for a container with the same value, or starts a new one if none can be found.  The default service name is `infinispan`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:811
msgid "Sharing is enabled by default in dev mode, but disabled in test mode.  You can disable the sharing with `quarkus.infinispan-client.devservices.shared=false`."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:812
#, no-wrap
msgid "Setting the port"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:816
msgid "By default, Dev Services for Infinispan picks a random port and configures the application.  You can set the port by configuring the `quarkus.infinispan-client.devservices.port` property."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:817
#, no-wrap
msgid "Testing helpers"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:820
msgid "To start an Infinispan Server for your unit tests, Quarkus provides one `QuarkusTestResourceLifecycleManager` that relies on link:https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#junit-testing[Infinispan Server Test Container]."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:822
msgid "`io.quarkus.test.infinispan.client.InfinispanTestResource` will start a single instance on port 11222 with user 'admin' and password 'password'."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:824
msgid "To use them, you need to add the `io.quarkus:quarkus-test-infinispan-client` dependency to your pom.xml."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:826
msgid "For more information about the usage of a `QuarkusTestResourceLifecycleManager` please read xref:getting-started-testing.adoc#quarkus-test-resource[Quarkus test resource]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/infinispan-client-reference.adoc:827
#, no-wrap
msgid "Configuration Reference"
msgstr ""
