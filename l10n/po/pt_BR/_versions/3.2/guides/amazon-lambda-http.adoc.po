# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:09+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Amazon Lambda with RESTEasy Reactive, Undertow, or Reactive Routes"
msgstr "Amazon Lambda com RESTEasy Reactive, Undertow ou Reactive Routes"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"With Quarkus you can deploy your favorite Java HTTP frameworks as Amazon Lambda's using either the https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api.html[AWS Gateway HTTP API]\n"
"or https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-rest-api.html[AWS Gateway REST API].  This means that you can deploy your microservices written with RESTEasy Reactive (our Jakarta REST implementation),\n"
"Undertow (servlet), Reactive Routes, xref:funqy-http.adoc[Funqy HTTP] or any other Quarkus HTTP framework as an AWS Lambda."
msgstr "Com o Quarkus, o senhor pode implantar suas estruturas Java HTTP favoritas como Amazon Lambda's usando a link:https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api.html[API HTTP do AWS Gateway] ou a link:https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-rest-api.html[API REST do AWS Gateway] . Isso significa que o senhor pode implantar seus microsserviços escritos com RESTEasy Reactive (nossa implementação Jakarta REST), Undertow (servlet), Reactive Routes, xref:funqy-http.adoc[Funqy HTTP] ou qualquer outra estrutura HTTP do Quarkus como um AWS Lambda."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"You can deploy your Lambda as a pure Java jar, or you can compile your project to a native image and deploy that for a smaller\n"
"memory footprint and startup time.  Our integration also generates SAM deployment files that can be consumed by https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[Amazon's SAM framework]."
msgstr "O senhor pode implantar o Lambda como um jar Java puro ou compilar o projeto em uma imagem nativa e implantá-la para reduzir o consumo de memória e o tempo de inicialização. Nossa integração também gera arquivos de implantação SAM que podem ser consumidos pela link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[estrutura SAM da Amazon] ."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"Quarkus has a different extension for each Gateway API.  The HTTP Gateway API is implemented within the `quarkus-amazon-lambda-http` extension.\n"
"The REST Gateway API is implemented within the `quarkus-amazon-lambda-rest` extension.  If you are confused on which Gateway product to use,\n"
"Amazon has a https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html[great guide] to help you navigate this decision."
msgstr "O Quarkus tem uma extensão diferente para cada API de gateway. A API do Gateway HTTP é implementada na extensão `quarkus-amazon-lambda-http` . A API do Gateway REST é implementada na extensão `quarkus-amazon-lambda-rest` . Se o senhor estiver confuso sobre qual produto de Gateway usar, a Amazon tem um link:https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html[ótimo guia] para ajudá-lo a tomar essa decisão."

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "Like most Quarkus extensions, the Quarkus AWS Lambda HTTP/REST extensions support Live Coding."
msgstr "Como a maioria das extensões do Quarkus, as extensões do Quarkus AWS Lambda HTTP/REST suportam Live Coding."

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "https://aws.amazon.com[An Amazon AWS account]"
msgstr "link:https://aws.amazon.com[Uma conta do Amazon AWS]"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI]"
msgstr "link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[CLI DO AWS SAM]"

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Getting Started"
msgstr "Primeiros passos"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"This guide walks you through generating an example Java project via a Maven archetype.  Later on, it walks through the structure\n"
"of the project so you can adapt any existing projects you have to use Amazon Lambda."
msgstr "Este guia orienta o senhor na geração de um projeto Java de exemplo por meio de um arquétipo Maven. Posteriormente, ele apresenta a estrutura do projeto para que o senhor possa adaptar qualquer projeto existente para usar o Amazon Lambda."

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Installing AWS bits"
msgstr "Instalação de bits do AWS"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"Installing all the AWS bits is probably the most difficult thing about this guide.  Make sure that you follow all the steps\n"
"for installing AWS SAM CLI."
msgstr "A instalação de todos os bits do AWS é provavelmente a parte mais difícil deste guia. Certifique-se de seguir todas as etapas para instalar o AWS SAM CLI."

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Creating the Maven Deployment Project"
msgstr "Criação do projeto de implantação do Maven"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "Create the Quarkus AWS Lambda Maven project using our Maven Archetype."
msgstr "Crie o projeto Maven do Quarkus AWS Lambda usando nosso Maven Archetype."

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "If you want to use the AWS Gateway HTTP API, generate your project with this script:"
msgstr "Se o senhor quiser usar a API HTTP do AWS Gateway, gere seu projeto com este script:"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "If you want to use the AWS Gateway REST API, generate your project with this script:"
msgstr "Se o senhor quiser usar a API REST do AWS Gateway, gere seu projeto com este script:"

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Build and Deploy"
msgstr "Criação e implementação"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "Build the project:"
msgstr "Crie o projeto:"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"This will compile the code and run the unit tests included within the generated project.\n"
"Unit testing is the same as any other Java project and does not require running on Amazon.  Quarkus dev mode is also\n"
"available with this extension."
msgstr "Isso compilará o código e executará os testes de unidade incluídos no projeto gerado. O teste de unidade é igual a qualquer outro projeto Java e não requer a execução na Amazon. O modo de desenvolvimento do Quarkus também está disponível com essa extensão."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"If you want to build a native executable, make sure you have GraalVM installed correctly and just add a `native` property\n"
"to the build"
msgstr "Se quiser criar um executável nativo, certifique-se de que o GraalVM esteja instalado corretamente e adicione uma propriedade `native` à criação"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"If you are building on a non-Linux system, you will need to also pass in a property instructing quarkus to use a Docker build as Amazon\n"
"Lambda requires Linux binaries.  You can do this by passing `-Dquarkus.native.container-build=true` to your build command.\n"
"This requires you to have Docker installed locally, however."
msgstr "Se estiver construindo em um sistema que não seja Linux, o senhor também precisará passar uma propriedade instruindo o quarkus a usar uma construção do Docker, pois o Amazon Lambda exige binários do Linux. O senhor pode fazer isso passando `-Dquarkus.native.container-build=true` para seu comando de compilação. No entanto, isso exige que o senhor tenha o Docker instalado localmente."

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Extra Build Generated Files"
msgstr "Arquivos extras gerados pela compilação"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"After you run the build, there are a few extra files generated by the Quarkus lambda extension you are using.  These files\n"
"are in the build directory:  `target/` for Maven, `build/` for Gradle."
msgstr "Depois de executar a compilação, há alguns arquivos extras gerados pela extensão lambda do Quarkus que o senhor está usando. Esses arquivos estão no diretório de compilação: `target/` para Maven, `build/` para Gradle."

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "`function.zip` - lambda deployment file"
msgstr "`function.zip` - arquivo de implantação de lambda"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "`sam.jvm.yaml` - sam cli deployment script"
msgstr "`sam.jvm.yaml` - Script de implantação do sam cli"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "`sam.native.yaml` - sam cli deployment script for native"
msgstr "`sam.native.yaml` - script de implantação do sam cli para nativo"

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Live Coding and Simulating AWS Lambda Environment Locally"
msgstr "Codificação ao vivo e simulação do ambiente AWS Lambda localmente"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"In dev and test mode, Quarkus will start a mock AWS Lambda event server\n"
"that will convert HTTP requests to the corresponding API Gateway event types and post them to the underlying\n"
"Quarkus HTTP lambda environment for processing.  This simulates the AWS Lambda environment\n"
"as much as possible locally without requiring tools like Docker and SAM CLI."
msgstr "No modo de desenvolvimento e teste, o Quarkus iniciará um servidor de eventos AWS Lambda simulado que converterá as solicitações HTTP nos tipos de eventos correspondentes do API Gateway e as publicará no ambiente lambda HTTP subjacente do Quarkus para processamento. Isso simula o ambiente do AWS Lambda o máximo possível localmente, sem a necessidade de ferramentas como Docker e SAM CLI."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"When using Quarkus Dev Mode just invoke HTTP requests on `http://localhost:8080`\n"
"as you normally would when testing your REST endpoints.  This request will hit the Mock Event Server and will\n"
"be converted to the API Gateway json message that is consumed by the Quarkus Lambda Poll loop."
msgstr "Ao usar o Quarkus Dev Mode, basta invocar solicitações HTTP em `http://localhost:8080` como o senhor faria normalmente ao testar seus endpoints REST. Essa solicitação chegará ao Mock Event Server e será convertida na mensagem json do API Gateway que é consumida pelo loop do Quarkus Lambda Poll."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"For testing, Quarkus starts up a separate Mock Event server under port 8081.  The default port for Rest Assured is\n"
"automatically set to 8081 by Quarkus, so you don't have to worry about setting this up."
msgstr "Para testes, o Quarkus inicia um servidor Mock Event separado na porta 8081. A porta padrão do Rest Assured é automaticamente definida como 8081 pelo Quarkus, portanto, o senhor não precisa se preocupar em configurar isso."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"If you want to simulate more complex\n"
"API Gateway events in your tests, then manually do an HTTP POST to `http://localhost:8080/\\_lambda_` (port 8081 in test mode) with\n"
"the raw API Gateway json events.  These events will be placed directly on the Quarkus Lambda poll loop\n"
"for processing.  Here's an example of that:"
msgstr "Se quiser simular eventos mais complexos do API Gateway em seus testes, faça manualmente um HTTP POST para `http://localhost:8080/_lambda_` (porta 8081 no modo de teste) com os eventos json brutos do API Gateway. Esses eventos serão colocados diretamente no loop de pesquisa do Quarkus Lambda para processamento. Aqui está um exemplo disso:"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "The above example simulates sending a Cognito principal with an HTTP request to your HTTP Lambda."
msgstr "O exemplo acima simula o envio de uma entidade do Cognito com uma solicitação HTTP para seu HTTP Lambda."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"If you want to hand code raw events for the AWS HTTP API, the AWS Lambda library has the request event type which is\n"
"`com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent` and the response event type\n"
"of `com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPResponse`.  This corresponds\n"
"to the `quarkus-amazon-lambda-http` extension and the AWS HTTP API."
msgstr "Se o senhor quiser codificar manualmente eventos brutos para a API HTTP da AWS, a biblioteca do AWS Lambda tem o tipo de evento de solicitação que é `com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent` e o tipo de evento de resposta de `com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPResponse` . Isso corresponde à extensão `quarkus-amazon-lambda-http` e à API HTTP da AWS."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"If you want to hand code raw events for the AWS REST API, Quarkus has its own implementation:  `io.quarkus.amazon.lambda.http.model.AwsProxyRequest`\n"
"and `io.quarkus.amazon.lambda.http.model.AwsProxyResponse`.  This corresponds\n"
"to `quarkus-amazon-lambda-rest` extension and the AWS REST API."
msgstr "Se o senhor quiser codificar manualmente eventos brutos para a API REST da AWS, o Quarkus tem sua própria implementação: `io.quarkus.amazon.lambda.http.model.AwsProxyRequest` e `io.quarkus.amazon.lambda.http.model.AwsProxyResponse` . Isso corresponde à extensão `quarkus-amazon-lambda-rest` e à API REST da AWS."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"The mock event server is also started for `@QuarkusIntegrationTest` tests so will work\n"
"with native binaries too.  All this provides similar functionality to the SAM CLI local testing, without the overhead of Docker."
msgstr "O servidor de eventos simulado também é iniciado para os testes do `@QuarkusIntegrationTest` , portanto, também funcionará com binários nativos. Tudo isso oferece funcionalidade semelhante ao teste local da CLI do SAM, sem a sobrecarga do Docker."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"Finally, if port 8080 or port 8081 is not available on your computer, you can modify the dev\n"
"and test mode ports with application.properties"
msgstr "Por fim, se a porta 8080 ou a porta 8081 não estiver disponível em seu computador, o senhor poderá modificar as portas dos modos dev e test com application.properties"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "A port value of zero will result in a randomly assigned port."
msgstr "Um valor de porta igual a zero resultará em uma porta atribuída aleatoriamente."

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Simulate AWS Lambda Deployment with SAM CLI"
msgstr "Simular a implantação do AWS Lambda com o SAM CLI"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "To turn off the mock event server:"
msgstr "Para desativar o servidor de eventos simulado:"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"The AWS SAM CLI allows you to run your lambda's locally on your laptop in a simulated Lambda environment.  This requires Docker to be installed.\n"
"After you have built your Maven project, execute this command:"
msgstr "O AWS SAM CLI permite que o senhor execute seus lambda's localmente no seu laptop em um ambiente Lambda simulado. Para isso, é necessário que o Docker esteja instalado. Depois de criar seu projeto Maven, execute este comando:"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"This will start a Docker container that mimics Amazon's Lambda's deployment environment. Once the environment\n"
"is started you can invoke the example lambda in your browser by going to:"
msgstr "Isso iniciará um contêiner do Docker que imita o ambiente de implantação do Lambda da Amazon. Depois que o ambiente for iniciado, o senhor poderá invocar o lambda de exemplo no navegador acessando:"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
msgid "http://127.0.0.1:3000/hello"
msgstr "http://127.0.0.1:3000/hello"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"In the console you'll see startup messages from the lambda.  This particular deployment starts a JVM and loads your\n"
"lambda as pure Java."
msgstr "No console, o senhor verá mensagens de inicialização do lambda. Essa implantação específica inicia uma JVM e carrega seu lambda como Java puro."

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Deploy to AWS"
msgstr "Implementar no AWS"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"Answer all the questions and your lambda will be deployed and the necessary hooks to the API Gateway will be set up. If\n"
"everything deploys successfully, the root URL of your microservice will be output to the console.  Something like this:"
msgstr "Responda a todas as perguntas e seu lambda será implementado e os ganchos necessários para o API Gateway serão configurados. Se tudo for implementado com êxito, o URL raiz do seu microsserviço será exibido no console. Algo parecido com isto:"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"Key                 LambdaHttpApi\n"
"Description         URL for application\n"
"Value               https://234asdf234as.execute-api.us-east-1.amazonaws.com/"
msgstr "Chave LambdaHttpApi Descrição URL do aplicativo Valor https://234asdf234as.execute-api.us-east-1.amazonaws.com/"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "The `Value` attribute is the root URL for your lambda. Copy it to your browser and add `hello` at the end."
msgstr "O atributo `Value` é o URL raiz do seu lambda. Copie-o em seu navegador e adicione `hello` no final."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"Responses for binary types will be automatically encoded with base64.  This is different from the behavior using\n"
"`quarkus:dev` which will return the raw bytes.  Amazon's API has additional restrictions requiring the base64 encoding.\n"
"In general, client code will automatically handle this encoding but in certain custom situations, you should be aware\n"
"you may need to manually manage that encoding."
msgstr "As respostas para tipos binários serão automaticamente codificadas com base64. Isso é diferente do comportamento usando `quarkus:dev` , que retornará os bytes brutos. A API da Amazon tem restrições adicionais que exigem a codificação base64. Em geral, o código do cliente tratará automaticamente dessa codificação, mas em determinadas situações personalizadas, o senhor deve estar ciente de que talvez precise gerenciar manualmente essa codificação."

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Deploying a native executable"
msgstr "Implantação de um executável nativo"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "To deploy a native executable, you must build it with GraalVM."
msgstr "Para implantar um executável nativo, o senhor deve criá-lo com o GraalVM."

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "You can then test the executable locally with sam local"
msgstr "Em seguida, o senhor pode testar o executável localmente com o sam local"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "To deploy to AWS Lambda:"
msgstr "Para implementar no AWS Lambda:"

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Examine the POM"
msgstr "Examinar o POM"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"There is nothing special about the POM other than the inclusion of the `quarkus-amazon-lambda-http` extension\n"
"(if you are deploying an AWS Gateway HTTP API) or the `quarkus-amazon-lambda-rest` extension (if you are deploying an AWS Gateway REST API).\n"
"These extensions automatically generate everything you might need for your lambda deployment."
msgstr "Não há nada de especial no POM além da inclusão da extensão `quarkus-amazon-lambda-http` (se estiver implantando uma API HTTP do AWS Gateway) ou da extensão `quarkus-amazon-lambda-rest` (se estiver implantando uma API REST do AWS Gateway). Essas extensões geram automaticamente tudo o que o senhor pode precisar para a implantação do lambda."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"Also, at least in the generated Maven archetype `pom.xml`, the `quarkus-resteasy-reactive`, `quarkus-reactive-routes`, and `quarkus-undertow`\n"
"dependencies are all optional.  Pick which HTTP framework(s) you want to use (Jakarta REST, Reactive Routes, and/or Servlet) and\n"
"remove the other dependencies to shrink your deployment."
msgstr "Além disso, pelo menos no arquétipo Maven gerado `pom.xml` , as dependências `quarkus-resteasy-reactive` , `quarkus-reactive-routes` e `quarkus-undertow` são todas opcionais. Escolha a(s) estrutura(s) HTTP que deseja usar (Jakarta REST, Reactive Routes e/ou Servlet) e remova as outras dependências para reduzir a implantação."

#. type: Title ===
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Examine sam.yaml"
msgstr "Examinar o sam.yaml"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"The `sam.yaml` syntax is beyond the scope of this document.  There's a couple of things that must be highlighted just in case you are\n"
"going to craft your own custom `sam.yaml` deployment files."
msgstr "A sintaxe do `sam.yaml` está além do escopo deste documento. Há alguns aspectos que devem ser destacados, caso o senhor pretenda criar seus próprios arquivos de implementação `sam.yaml` personalizados."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"The first thing to note is that for pure Java lambda deployments require a specific handler class.\n"
"Do not change the Lambda handler name."
msgstr "A primeira coisa a observar é que as implantações de lambda em Java puro exigem uma classe de manipulador específica. Não altere o nome do manipulador Lambda."

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "This handler is a bridge between the lambda runtime and the Quarkus HTTP framework you are using (Jakarta REST, Servlet, etc.)"
msgstr "Esse manipulador é uma ponte entre o tempo de execução do lambda e a estrutura HTTP do Quarkus que o senhor está usando (Jakarta REST, Servlet, etc.)."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"If you want to go native, there's an environment variable that must be set for native GraalVM deployments.  If you look at `sam.native.yaml`\n"
"you'll see this:"
msgstr "Se o senhor quiser usar a versão nativa, há uma variável de ambiente que deve ser definida para implantações nativas do GraalVM. Se o senhor consultar o site `sam.native.yaml` , verá isso:"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "This environment variable resolves some incompatibilities between Quarkus and the Amazon Lambda Custom Runtime environment."
msgstr "Essa variável de ambiente resolve algumas incompatibilidades entre o Quarkus e o ambiente Amazon Lambda Custom Runtime."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"Finally, there is one specific thing for AWS Gateway REST API deployments.\n"
"That API assumes that HTTP response bodies are text unless you explicitly tell it which media types are\n"
"binary through configuration.  To make things easier, the Quarkus extension forces a binary (base 64) encoding of all\n"
"HTTP response messages and the `sam.yaml` file must configure the API Gateway to assume all media types are binary:"
msgstr "Por fim, há um aspecto específico para as implantações da API REST do AWS Gateway. Essa API pressupõe que os corpos de resposta HTTP são texto, a menos que o usuário informe explicitamente quais tipos de mídia são binários por meio da configuração. Para facilitar as coisas, a extensão Quarkus força uma codificação binária (base 64) de todas as mensagens de resposta HTTP e o arquivo `sam.yaml` deve configurar o API Gateway para assumir que todos os tipos de mídia são binários:"

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Injectable AWS Context Variables"
msgstr "Variáveis de contexto do AWS injetáveis"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"If you are using RESTEasy Reactive and Jakarta REST, you can inject various AWS Context variables into your Jakarta REST resource classes\n"
"using the Jakarta REST `@Context` annotation or anywhere else with the CDI `@Inject` annotation."
msgstr "Se estiver usando o RESTEasy Reactive e o Jakarta REST, o senhor poderá injetar diversas variáveis do AWS Context nas classes de recursos do Jakarta REST usando a anotação Jakarta REST `@Context` ou em qualquer outro lugar com a anotação CDI `@Inject` ."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"For the AWS HTTP API you can inject the AWS variables `com.amazonaws.services.lambda.runtime.Context` and\n"
"`com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent`.  Here is an example:"
msgstr "Para a API HTTP da AWS, o senhor pode injetar as variáveis da AWS `com.amazonaws.services.lambda.runtime.Context` e `com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent` . Aqui está um exemplo:"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"For the AWS REST API you can inject the AWS variables `com.amazonaws.services.lambda.runtime.Context` and\n"
"`io.quarkus.amazon.lambda.http.model.AwsProxyRequestContext`.  Here is an example:"
msgstr "Para a API REST da AWS, o senhor pode injetar as variáveis da AWS `com.amazonaws.services.lambda.runtime.Context` e `io.quarkus.amazon.lambda.http.model.AwsProxyRequestContext` . Aqui está um exemplo:"

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Tracing with AWS XRay and GraalVM"
msgstr "Rastreamento com o AWS XRay e o GraalVM"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"If you are building native images, and want to use https://aws.amazon.com/xray[AWS X-Ray Tracing] with your lambda\n"
"you will need to include `quarkus-amazon-lambda-xray` as a dependency in your pom.  The AWS X-Ray\n"
"library is not fully compatible with GraalVM, so we had to do some integration work to make this work."
msgstr "Se estiver criando imagens nativas e quiser usar o link:https://aws.amazon.com/xray[AWS X-Ray Tracing] com seu lambda, será necessário incluir `quarkus-amazon-lambda-xray` como uma dependência no seu pom. A biblioteca do AWS X-Ray não é totalmente compatível com o GraalVM, portanto, tivemos que fazer algum trabalho de integração para que isso funcionasse."

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Security Integration"
msgstr "Integração de segurança"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"When you invoke an HTTP request on the API Gateway, the Gateway turns that HTTP request into a JSON event document that is\n"
"forwarded to a Quarkus Lambda.  The Quarkus Lambda parses this json and converts in into an internal representation of an HTTP\n"
"request that can be consumed by any HTTP framework Quarkus supports (Jakarta REST, servlet, Reactive Routes)."
msgstr "Quando o senhor invoca uma solicitação HTTP no API Gateway, o Gateway transforma essa solicitação HTTP em um documento de evento JSON que é encaminhado para um Quarkus Lambda. O Quarkus Lambda analisa esse JSON e o converte em uma representação interna de uma solicitação HTTP que pode ser consumida por qualquer estrutura HTTP compatível com o Quarkus (Jakarta REST, servlet, rotas reativas)."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"API Gateway supports many ways to securely invoke on your HTTP endpoints that are backed by Lambda and Quarkus.\n"
"If you enable it, Quarkus will automatically parse relevant parts of the https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html[event json document]\n"
"and look for security based metadata and register a `java.security.Principal` internally that can be looked up in Jakarta REST\n"
"by injecting a `jakarta.ws.rs.core.SecurityContext`, via `HttpServletRequest.getUserPrincipal()` in servlet, and `RouteContext.user()` in Reactive Routes.\n"
"If you want more security information, the `Principal` object can be typecast to\n"
"a class that will give you more information."
msgstr "O API Gateway oferece suporte a muitas maneiras de invocar com segurança os endpoints HTTP que são apoiados pelo Lambda e pelo Quarkus. Se o senhor habilitar essa opção, o Quarkus analisará automaticamente as partes relevantes do link:https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html[documento json do evento] e procurará metadados baseados em segurança e registrará internamente um `java.security.Principal` que pode ser consultado no Jakarta REST injetando um `jakarta.ws.rs.core.SecurityContext` , via `HttpServletRequest.getUserPrincipal()` no servlet e `RouteContext.user()` em rotas reativas. Se o senhor quiser mais informações de segurança, o objeto `Principal` pode ser convertido em uma classe que lhe fornecerá mais informações."

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
msgid "To enable this security feature, add this to your `application.properties` file:"
msgstr "Para ativar esta funcionalidade de segurança, adicione isto ao seu arquivo `application.properties`:"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "quarkus.lambda-http.enable-security=true"
msgstr "quarkus.lambda-http.enable-security=true"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "Here's how its mapped:"
msgstr "Veja como ele é mapeado:"

#. type: Block title
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "HTTP `quarkus-amazon-lambda-http`"
msgstr "HTTP `quarkus-amazon-lambda-http`"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "Auth Type"
msgstr "Auth Type"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Principal Class"
msgstr "Classe principal"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Json path of Principal Name"
msgstr "Caminho Json do nome principal"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "Cognito JWT"
msgstr "Cognito JWT"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "`io.quarkus.amazon.lambda.http.CognitoPrincipal`"
msgstr "`io.quarkus.amazon.lambda.http.CognitoPrincipal`"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "`requestContext.authorizer.jwt.claims.cognito:username`"
msgstr "`requestContext.authorizer.jwt.claims.cognito:username`"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "IAM"
msgstr "IAM"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "`io.quarkus.amazon.lambda.http.IAMPrincipal`"
msgstr "`io.quarkus.amazon.lambda.http.IAMPrincipal`"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "`requestContext.authorizer.iam.userId`"
msgstr "`requestContext.authorizer.iam.userId`"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Custom Lambda"
msgstr "Lambda personalizado"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "`io.quarkus.amazon.lambda.http.CustomPrincipal`"
msgstr "`io.quarkus.amazon.lambda.http.CustomPrincipal`"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "`requestContext.authorizer.lambda.principalId`"
msgstr "`requestContext.authorizer.lambda.principalId`"

#. type: Block title
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "REST `quarkus-amazon-lambda-rest`"
msgstr "REST `quarkus-amazon-lambda-rest`"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "Cognito"
msgstr "Cognito"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "`requestContext.authorizer.claims.cognito:username`"
msgstr "`requestContext.authorizer.claims.cognito:username`"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "`requestContext.identity.user`"
msgstr "`requestContext.identity.user`"

#. type: Table
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "`requestContext.authorizer.principalId`"
msgstr "`requestContext.authorizer.principalId`"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"If the `cognito:groups` claim is present, then Quarkus will extract and map those groups\n"
"to Quarkus roles which can then be used in authorization with annotations like `@RolesAllowed`.\n"
"If you do not want to map `cognito:groups` to Quarkus roles, then you must explicitly disable it\n"
"in configuration:"
msgstr "Se a reivindicação `cognito:groups` estiver presente, o Quarkus extrairá e mapeará esses grupos para as funções do Quarkus, que podem ser usadas na autorização com anotações como `@RolesAllowed` . Se o senhor não quiser mapear `cognito:groups` para as funções do Quarkus, deverá desativá-lo explicitamente na configuração:"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "quarkus.lambda-http.map-cognito-to-roles=false"
msgstr "quarkus.lambda-http.map-cognito-to-roles=false"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "You can also specify a different Cognito claim to extract roles from:"
msgstr "O senhor também pode especificar uma reivindicação diferente do Cognito para extrair funções:"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "quarkus.lambda-http.cognito-role-claim=cognito:roles"
msgstr "quarkus.lambda-http.cognito-role-claim=cognito:roles"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"By default, it expects roles in a space delimited list enclosed in brackets i.e. `[ user admin ]`.\n"
"You can specify the regular expression to use to find individual roles in the claim string too:"
msgstr "Por padrão, ele espera funções em uma lista delimitada por espaço entre colchetes, ou seja, `[ user admin ]` . O senhor também pode especificar a expressão regular a ser usada para localizar funções individuais na string de reivindicação:"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "quarkus.lambda-http.cognito-claim-matcher=[^\\[\\] \\t]+"
msgstr "quarkus.lambda-http.cognito-claim-matcher=[^\\[\\] \\t]+"

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Custom Security Integration"
msgstr "Integração de segurança personalizada"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"The default support for AWS security only maps the principal name to Quarkus security\n"
"APIs and does nothing to map claims or roles or permissions.  You have full control on\n"
"how security metadata in the lambda HTTP event is mapped to Quarkus Security APIs using\n"
"implementations of the `io.quarkus.amazon.lambda.http.LambdaIdentityProvider`\n"
"interface.  By implementing this interface, you can do things like define role mappings for your principal\n"
"or publish additional attributes provided by IAM or Cognito or your Custom Lambda security integration."
msgstr "O suporte padrão para a segurança da AWS mapeia apenas o nome principal para as APIs de segurança do Quarkus e não faz nada para mapear reivindicações, funções ou permissões. O senhor tem controle total sobre como os metadados de segurança no evento HTTP lambda são mapeados para as APIs de segurança do Quarkus usando implementações da interface `io.quarkus.amazon.lambda.http.LambdaIdentityProvider` . Ao implementar essa interface, o senhor pode fazer coisas como definir mapeamentos de função para o seu principal ou publicar atributos adicionais fornecidos pelo IAM, pelo Cognito ou pela integração de segurança do Lambda personalizado."

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"For HTTP, the important method to override is `LambdaIdentityProvider.authenticate(APIGatewayV2HTTPEvent event)`.  From this\n"
"you will allocate a SecurityIdentity based on how you want to map security data from `APIGatewayV2HTTPEvent`"
msgstr "Para HTTP, o método importante a ser substituído é `LambdaIdentityProvider.authenticate(APIGatewayV2HTTPEvent event)` . A partir daí, o senhor alocará um SecurityIdentity com base em como deseja mapear os dados de segurança de `APIGatewayV2HTTPEvent`"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"For REST, the important method to override is `LambdaIdentityProvider.authenticate(AwsProxyRequest event)`.  From this\n"
"you will allocate a SecurityIdentity based on how you want to map security data from `AwsProxyRequest`."
msgstr "Para REST, o método importante a ser substituído é `LambdaIdentityProvider.authenticate(AwsProxyRequest event)` . A partir daí, o senhor alocará um SecurityIdentity com base em como deseja mapear os dados de segurança de `AwsProxyRequest` ."

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
msgid "Your implemented provider must be a CDI bean.  Here's an example:"
msgstr "O seu provider implementado deve ser um bean CDI. Eis um exemplo:"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid "Here's the same example, but with the AWS Gateway REST API:"
msgstr "Aqui está o mesmo exemplo, mas com a API REST do AWS Gateway:"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"Quarkus should automatically discover this implementation and use it instead of the default implementation\n"
"discussed earlier."
msgstr "O Quarkus deve descobrir automaticamente essa implementação e usá-la em vez da implementação padrão discutida anteriormente."

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy, no-wrap
msgid "Simple SAM Local Principal"
msgstr "Principal local do SAM simples"

#: _versions/3.2/guides/amazon-lambda-http.adoc
#, fuzzy
msgid ""
"If you are testing your application with `sam local` you can\n"
"hardcode a principal name to use when your application runs by setting\n"
"the `QUARKUS_AWS_LAMBDA_FORCE_USER_NAME` environment variable"
msgstr "Se estiver testando o aplicativo com o site `sam local` , é possível codificar um nome principal para ser usado quando o aplicativo for executado, definindo a variável de ambiente `QUARKUS_AWS_LAMBDA_FORCE_USER_NAME` "

#. type: Title ==
#: _versions/3.2/guides/amazon-lambda-http.adoc
#, no-wrap
msgid "SnapStart"
msgstr "SnapStart"

#. type: Plain text
#: _versions/3.2/guides/amazon-lambda-http.adoc
msgid "To optimize your application for Lambda SnapStart, check xref:amazon-snapstart.adoc[the SnapStart Configuration Documentation]."
msgstr "Para otimizar a sua aplicação para o Lambda SnapStart, consulte  link:amazon-snapstart.html[a documentação de configuração do SnapStart]."
