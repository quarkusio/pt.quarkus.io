# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:09+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "Funqy HTTP Binding (Standalone)"
msgstr "Funqy HTTP Binding (autônomo)"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"The guide walks through quickstart code to show you how you can deploy Funqy as a\n"
"standalone service and invoke on Funqy functions using HTTP."
msgstr "O guia apresenta um código de início rápido para mostrar como o senhor pode implantar o Funqy como um serviço autônomo e invocar as funções do Funqy usando HTTP."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"The Funqy HTTP binding is not a replacement for REST over HTTP.  Because Funqy\n"
"needs to be portable across a lot of different protocols and function providers its HTTP binding\n"
"is very minimalistic and you will lose REST features like linking and the ability to leverage\n"
"HTTP features like cache-control and conditional GETs.  You may want to consider using Quarkus's\n"
"Jakarta REST, Spring MVC, or Vert.x Web Reactive Routes support instead, although Funqy will have less overhead\n"
"than these alternatives (except Vert.x which is still super fast)."
msgstr "A vinculação HTTP do Funqy não substitui o REST sobre HTTP. Como o Funqy precisa ser portátil em vários protocolos e provedores de funções diferentes, sua vinculação HTTP é muito minimalista e o senhor perderá os recursos REST, como vinculação, e a capacidade de aproveitar os recursos HTTP, como controle de cache e GETs condicionais. Talvez o senhor queira considerar a possibilidade de usar o suporte a Jakarta REST, Spring MVC ou Vert.x Web Reactive Routes do Quarkus, embora o Funqy tenha menos sobrecarga do que essas alternativas (exceto o Vert.x, que ainda é super rápido)."

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "Read about xref:funqy.adoc[Funqy Basics].  This is a short read!"
msgstr "Leia sobre o xref:funqy.adoc[Funqy Basics] . Esta é uma leitura curta!"

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "The Quickstart"
msgstr "O início rápido"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone o repositório Git: `git clone {quickstarts-clone-url}`, ou baixe um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "The solution is located in the `funqy-http-quickstart` link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[directory]."
msgstr "A solução está localizada no link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[diretório] `funqy-http-quickstart` ."

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, no-wrap
msgid "The Code"
msgstr "O Código"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"If you look at the Java code, you'll see that there is no HTTP specific API.  Its just simple Java methods\n"
"annotated with `@Funq`.  Simple, easy, straightforward."
msgstr "Se o senhor observar o código Java, verá que não há uma API específica para HTTP. São apenas métodos Java simples anotados com `@Funq` . Simples, fácil e direto."

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "Maven Dependencies"
msgstr "Dependências do Maven"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "To write Funqy HTTP functions, simply include the `quarkus-funqy-http` dependency into your Quarkus `pom.xml` file:"
msgstr "Para escrever as funções HTTP do Funqy, basta incluir a dependência `quarkus-funqy-http` no arquivo `pom.xml` do Quarkus:"

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "Build Project"
msgstr "Projeto de construção"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "This starts your functions in Quarkus dev mode."
msgstr "Isso inicia suas funções no modo de desenvolvimento do Quarkus."

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "Execute Funqy HTTP functions"
msgstr "Executar as funções HTTP do Funqy"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"The URL path to execute a function is the function name.  For example if your function name is `foo` then the URL path\n"
"to execute the function would be `/foo`."
msgstr "O caminho do URL para executar uma função é o nome da função. Por exemplo, se o nome da função for `foo` , o caminho do URL para executá-la será `/foo` ."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"The HTTP POST or GET methods can be used to invoke on a function.  The return value of the function\n"
"is marshalled to JSON using the Jackson JSON library.  Jackson annotations can be used.  If your function\n"
"has an input parameter, a POST invocation must use JSON as the input type.  Jackson is also used here for unmarshalling."
msgstr "Os métodos HTTP POST ou GET podem ser usados para invocar uma função. O valor de retorno da função é transformado em JSON usando a biblioteca Jackson JSON. As anotações da Jackson podem ser usadas. Se sua função tiver um parâmetro de entrada, uma invocação POST deverá usar JSON como o tipo de entrada. A Jackson também é usada aqui para desmarcação."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"You can invoke the `hello` function defined in link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java]\n"
"by pointing your browser to http://localhost:8080/hello"
msgstr "O senhor pode invocar a função `hello` definida em link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java] , apontando o navegador para http://localhost:8080/hello"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"Invoking the other functions in the quickstart requires an HTTP POST.\n"
"To execute the `greet` function defined in link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/GreetingFunction.java[GreetingFunction.java]\n"
"invoke this curl script."
msgstr "A chamada das outras funções no início rápido requer um HTTP POST. Para executar a função `greet` definida em link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/GreetingFunction.java[GreetingFunction.java] , invoque este script curl."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"Primitive types can also be passed as input using the standard JSON mapping for them.\n"
"To execute the `toLowerCase` function defined in link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java]\n"
"invoke this curl script:"
msgstr "Os tipos primitivos também podem ser passados como entrada usando o mapeamento JSON padrão para eles. Para executar a função `toLowerCase` definida em link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java] , invoque este script curl:"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"To execute the `double` function defined in link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java]\n"
"invoke this curl script:"
msgstr "Para executar a função `double` definida em link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java] , invoque este script curl:"

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "GET Query Parameter Mapping"
msgstr "Mapeamento de parâmetros de consulta GET"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"For GET requests, the Funqy HTTP Binding also has a query parameter mapping for function input parameters.\n"
"Only bean style classes and `java.util.Map` can be used for your input parameter.  For bean style\n"
"classes, query parameter names are mapped to properties on the bean class.  Here's an example of a simple\n"
"`Map`:"
msgstr "Para solicitações GET, o Funqy HTTP Binding também tem um mapeamento de parâmetro de consulta para parâmetros de entrada de função. Somente as classes de estilo de bean e `java.util.Map` podem ser usadas para o seu parâmetro de entrada. Para classes de estilo de bean, os nomes dos parâmetros de consulta são mapeados para propriedades na classe de bean. Veja um exemplo de um simples `Map` :"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"Key values must be a primitive type (except char) or `String`.  Values can be primitives (except char), `String`, `OffsetDateTime` or a complex\n"
"bean style class.  For the above example, here's the corresponding curl request:"
msgstr "Os valores-chave devem ser um tipo primitivo (exceto char) ou `String` . Os valores podem ser primitivos (exceto char), `String` , `OffsetDateTime` ou uma classe complexa de estilo bean. Para o exemplo acima, aqui está a solicitação curl correspondente:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "The `map` input parameter of the `hello` function would have the key value pairs: `a`->1, `b`->2."
msgstr "O parâmetro de entrada `map` da função `hello` teria os pares de valores-chave: `a` →1, `b` →2."

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "Bean style classes can also be use as the input parameter type.  Here's an example:"
msgstr "As classes de estilo de feijão também podem ser usadas como o tipo de parâmetro de entrada. Aqui está um exemplo:"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"Property values can be any primitive type except `char`. It can also be `String`, and `OffsetDateTime`.\n"
"`OffsetDateTime` query param values must be in ISO-8601 format."
msgstr "Os valores de propriedade podem ser de qualquer tipo primitivo, exceto `char` . Também pode ser `String` e `OffsetDateTime` . Os valores de parâmetro de consulta `OffsetDateTime` devem estar no formato ISO-8601."

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "You can invoke on this using an HTTP GET and query parameters:"
msgstr "O senhor pode invocá-lo usando um HTTP GET e parâmetros de consulta:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "In the above request, the query parameter names are mapped to corresponding properties in the input class."
msgstr "Na solicitação acima, os nomes dos parâmetros de consulta são mapeados para as propriedades correspondentes na classe de entrada."

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "The input class can also have nested bean classes.  Expanding on the previous example:"
msgstr "A classe de entrada também pode ter classes de bean aninhadas. Expandindo o exemplo anterior:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "In this case, query parameters for nested values use the `.` notation.  For example:"
msgstr "Nesse caso, os parâmetros de consulta para valores aninhados usam a notação `.` . Por exemplo:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "`java.util.List` and `Set` are also supported as property values.  For example:"
msgstr "`java.util.List` e `Set` também são suportados como valores de propriedade. Por exemplo:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "To invoke a GET request, just list the `pets` query parameter multiple times."
msgstr "Para invocar uma solicitação GET, basta listar o parâmetro de consulta `pets` várias vezes."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"For more complex types, `List` and `Set` members must have an identifier in the\n"
"query parameter.  For example:"
msgstr "Para tipos mais complexos, os membros `List` e `Set` devem ter um identificador no parâmetro de consulta. Por exemplo:"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"Each `kids` query parameter must identify the kid they are referencing so that\n"
"the runtime can figure out which\n"
"property values go to which members in the list.  Here's the curl request:"
msgstr "Cada parâmetro da consulta `kids` deve identificar a criança que está referenciando para que o tempo de execução possa descobrir quais valores de propriedade correspondem a quais membros da lista. Aqui está a solicitação curl:"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"The above URL uses the value `1` and `2` to identity the target member of the list, but any unique\n"
"string can be used."
msgstr "O URL acima usa os valores `1` e `2` para identificar o membro de destino da lista, mas qualquer string exclusiva pode ser usada."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"A property can also be a `java.util.Map`.  The key of the map can be any primitive type and `String`.\n"
"For example:"
msgstr "Uma propriedade também pode ser um `java.util.Map` . A chave do mapa pode ser qualquer tipo primitivo e `String` . Por exemplo:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "The corresponding call would look like this:"
msgstr "A chamada correspondente teria a seguinte aparência:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "If your `Map` value is a complex type, then just continue the notation by adding the property to set at the end."
msgstr "Se o valor `Map` for um tipo complexo, basta continuar a notação adicionando a propriedade a ser definida no final."
