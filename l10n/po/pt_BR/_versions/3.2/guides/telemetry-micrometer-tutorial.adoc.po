# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:7
#, no-wrap
msgid "Collect metrics using Micrometer"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:13
msgid "Create an application that uses the Micrometer metrics library to collect runtime, extension and application metrics and expose them as a Prometheus (OpenMetrics) endpoint."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:14
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:18
#, no-wrap
msgid "Solution"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:22
msgid "We recommend that you follow the instructions to create the application step by step, but you can skip right to the solution if you prefer.  Either:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:24
msgid "Clone the git repository: `git clone {quickstarts-clone-url}`, or"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:25
msgid "Download an {quickstarts-archive-url}[archive]."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:27
msgid "The solution is located in the `micrometer-quickstart` link:{quickstarts-tree-url}/micrometer-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:30
#, no-wrap
msgid "Create the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:33
msgid "Create a new project with the following command:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:40
msgid "This command generates a Maven project, that imports the `micrometer-registry-prometheus` extension as a dependency.  This extension will load the core `micrometer` extension as well as additional library dependencies required to support prometheus."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:41
#, no-wrap
msgid "Create a REST endpoint"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:44
msgid "Let's first add a simple endpoint that calculates prime numbers."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:48
#, no-wrap
msgid "include::{code-examples}/telemetry-micrometer-tutorial-example-resource.java[tags=example;!ignore;!registry;!gauge;!counted;!timed]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:51
msgid "Start your application in dev mode:"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:54
#, no-wrap
msgid "Review automatically generated metrics"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:57
msgid "The Micrometer extension automatically times HTTP server requests."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:59
msgid "Let's use `curl` (or a browser) to visit our endpoint a few times:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:64
#, no-wrap
msgid ""
"curl http://localhost:8080/example/prime/256\n"
"curl http://localhost:8080/example/prime/7919\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:68
msgid "The Micrometer Prometheus MeterRegistry extension creates an endpoint we can use to observe collected metrics.  Let's take a look at the metrics that have been collected:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:72
#, no-wrap
msgid "curl http://localhost:8080/q/metrics\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:76
msgid "Look for `http_server_requests_seconds_count`, `http_server_requests_seconds_sum`, and `http_server_requests_seconds_max` in the output."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:80
msgid "Dimensional labels are added for the request uri, the HTTP method (GET, POST, etc.), the status code (200, 302, 404, etc.), and a more general outcome field.  You should find something like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:91
#, no-wrap
msgid ""
"# HELP http_server_requests_seconds\n"
"# TYPE http_server_requests_seconds summary\n"
"http_server_requests_seconds_count{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/example/prime/{number}\"} 2.0\n"
"http_server_requests_seconds_sum{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/example/prime/{number}\"} 0.017385896\n"
"# HELP http_server_requests_seconds_max\n"
"# TYPE http_server_requests_seconds_max gauge\n"
"http_server_requests_seconds_max{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/example/prime/{number}\"} 0.017385896\n"
"#\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:94
msgid "Metrics appear lazily, you often won't see any data for your endpoint until it is accessed."
msgstr ""

#. type: Block title
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:95
#, no-wrap
msgid "Exported metrics format"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:99
msgid "By default, the metrics are exported using the Prometheus format `application/openmetrics-text`, you can revert to the former format by specifying the `Accept` request header to `text/plain` (`curl -H \"Accept: text/plain\" localhost:8080/q/metrics/`)."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:100
#, no-wrap
msgid "Inject the MeterRegistry"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:103
msgid "To register meters, you need a reference to the `MeterRegistry` that is configured and maintained by the Micrometer extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:105
msgid "The `MeterRegistry` can be injected into your application as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:109
#, no-wrap
msgid "include::{code-examples}/telemetry-micrometer-tutorial-example-resource.java[tags=registry;!gauge]\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:111
#, no-wrap
msgid "Add a Counter"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:114
msgid "Counters are used to measure values that only increase."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:117
msgid "Let's add a counter that tracks how often we test a number to see if it is prime.  We'll add a dimensional label (also called an attribute or a tag) that will allow us to aggregate this counter value in different ways."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:121
#, no-wrap
msgid "include::{code-examples}/telemetry-micrometer-tutorial-example-resource.java[tags=primeMethod;counted;!ignore;!timed]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:124
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:172
msgid "Find or create a counter called `example.prime.number` that has a `type` label with the specified value."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:125
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:173
msgid "Increment that counter."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:126
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:178
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:221
#, no-wrap
msgid "Review collected metrics"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:129
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:181
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:224
msgid "If you did not leave Quarkus running in dev mode, start it again:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:134
msgid "Try the following sequence and look for `example_prime_number_total` in the plain text output."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:137
msgid "Note that the `_total` suffix is added when Micrometer applies Prometheus naming conventions to `example.prime.number`, the originally specified counter name."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:147
#, no-wrap
msgid ""
"curl http://localhost:8080/example/prime/-1\n"
"curl http://localhost:8080/example/prime/0\n"
"curl http://localhost:8080/example/prime/1\n"
"curl http://localhost:8080/example/prime/2\n"
"curl http://localhost:8080/example/prime/3\n"
"curl http://localhost:8080/example/prime/15\n"
"curl http://localhost:8080/q/metrics\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:150
msgid "Notice that there is one measured value for each unique combination of `example_prime_number_total` and `type` value."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:152
msgid "Looking at the dimensional data produced by this counter, you can count:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:154
msgid "how often a negative number was checked: `type=\"not-natural\"`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:155
msgid "how often the number one was checked: `type=\"one\"`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:156
msgid "how often an even number was checked: `type=\"even\"`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:157
msgid "how often a prime number was checked: `type=\"prime\"`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:158
msgid "how often a non-prime number was checked: `type=\"not-prime\"`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:160
msgid "You can also count how often a number was checked (generally) by aggregating all of these values together."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:161
#, no-wrap
msgid "Add a Timer"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:165
msgid "Timers are a specialized abstraction for measuring duration.  Let's add a timer to measure how long it takes to determine if a number is prime."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:169
#, no-wrap
msgid "include::{code-examples}/telemetry-micrometer-tutorial-example-resource.java[tags=primeMethod;counted;timed;!ignore;!default]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:174
msgid "Call a method that wraps the original `testPrimeNumber` method."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:175
msgid "Create a `Timer.Sample` that tracks the start time"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:176
msgid "Call the method to be timed and store the boolean result"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:177
msgid "Find or create a `Timer` using the specified id and a `prime` label with the result value, and record the duration captured by the `Timer.Sample`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:186
msgid "Micrometer will apply Prometheus conventions when emitting metrics for this timer.  Specifically, measured durations are converted into seconds and this unit is included in the metric name."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:188
msgid "Try the following sequence and look for the following entries in the plain text output:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:190
msgid "`example_prime_number_test_seconds_count` -- how many times the method was called"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:191
msgid "`example_prime_number_test_seconds_sum` -- the total duration of all method calls"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:193
msgid "`example_prime_number_test_seconds_max` -- the maximum observed duration within a decaying interval.  This value will return to 0 if the method is not invoked frequently."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:200
#, no-wrap
msgid ""
"curl http://localhost:8080/example/prime/256\n"
"curl http://localhost:8080/q/metrics\n"
"curl http://localhost:8080/example/prime/7919\n"
"curl http://localhost:8080/q/metrics\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:204
msgid "Looking at the dimensional data produced by this counter, you can use the sum and the count to calculate how long (on average) it takes to determine if a number is prime.  Using the dimensional label, you might be able to understand if there is a significant difference in duration for numbers that are prime when compared with numbers that are not."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:205
#, no-wrap
msgid "Add a Gauge"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:210
msgid "Gauges measure a value that can increase or decrease over time, like the speedometer on a car.  The value of a gauge is not accumulated, it is observed at collection time.  Use a gauge to observe the size of a collection, or the value returned from a function."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:214
#, no-wrap
msgid "include::{code-examples}/telemetry-micrometer-tutorial-example-resource.java[tags=ctor;gauge]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:217
msgid "Define list that will hold arbitrary numbers."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:218
msgid "Register a gauge that will track the size of the list."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:220
msgid "Create a REST endpoint to populate the list.  Even numbers are added to the list, and odd numbers remove an element from the list."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:228
msgid "Then try the following sequence and look for `example_list_size` in the plain text output:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:239
#, no-wrap
msgid ""
"curl http://localhost:8080/example/gauge/1\n"
"curl http://localhost:8080/example/gauge/2\n"
"curl http://localhost:8080/example/gauge/4\n"
"curl http://localhost:8080/q/metrics\n"
"curl http://localhost:8080/example/gauge/6\n"
"curl http://localhost:8080/example/gauge/5\n"
"curl http://localhost:8080/example/gauge/7\n"
"curl http://localhost:8080/q/metrics\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:243
#, no-wrap
msgid "Summary"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:246
msgid "Congratulations!"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer-tutorial.adoc:250
msgid "You have created a project that uses the Micrometer and Prometheus Meter Registry extensions to collect metrics.  You've observed some of the metrics that Quarkus captures automatically, and have added a `Counter` and `Timer` that are unique to the application.  You've also added dimensional labels to metrics, and have observed how those labels shape the data emitted by the prometheus endpoint."
msgstr ""
