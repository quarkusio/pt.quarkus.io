msgid ""
msgstr ""
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "OpenID Connect (OIDC) Bearer token authentication"
msgstr "OpenID Connect (OIDC) Autenticação de token de portador"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Secure HTTP access to Jakarta REST (formerly known as JAX-RS) endpoints in your application with Bearer token authentication by using the Quarkus OpenID Connect (OIDC) extension."
msgstr "Proteja o acesso HTTP aos endpoints Jakarta REST (anteriormente conhecidos como JAX-RS) em seu aplicativo com autenticação de token Bearer usando a extensão Quarkus OpenID Connect (OIDC)."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Overview of the Bearer token authentication mechanism in Quarkus"
msgstr "Visão geral do mecanismo de autenticação do token do portador no Quarkus"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Quarkus supports the Bearer token authentication mechanism through the Quarkus OpenID Connect (OIDC) extension."
msgstr "O Quarkus oferece suporte ao mecanismo de autenticação do token Bearer por meio da extensão Quarkus OpenID Connect (OIDC)."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The bearer tokens are issued by OIDC and OAuth 2.0 compliant authorization servers, such as link:https://www.keycloak.org[Keycloak]."
msgstr "Os tokens de portador são emitidos por servidores de autorização compatíveis com OIDC e OAuth 2.0, como o link:https://www.keycloak.org[Keycloak] ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Bearer token authentication is the process of authorizing HTTP requests based on the existence and validity of a bearer token.\n"
"The bearer token provides information about the subject of the call, which is used to determine whether or not an HTTP resource can be accessed."
msgstr "A autenticação de token de portador é o processo de autorização de solicitações HTTP com base na existência e na validade de um token de portador. O token do portador fornece informações sobre o assunto da chamada, que são usadas para determinar se um recurso HTTP pode ou não ser acessado."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The following diagrams outline the Bearer token authentication mechanism in Quarkus:"
msgstr "Os diagramas a seguir descrevem o mecanismo de autenticação do token do portador no Quarkus:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Bearer token authentication mechanism in Quarkus with Single-page application"
msgstr "Mecanismo de autenticação de token de portador no Quarkus com aplicativo de página única"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Quarkus service retrieves verification keys from the OpenID Connect provider. The verification keys are used to verify the bearer access token signatures."
msgstr "O serviço Quarkus recupera chaves de verificação do provedor OpenID Connect. As chaves de verificação são usadas para verificar as assinaturas do token de acesso ao portador."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Quarkus user accesses the Single-page application."
msgstr "O usuário do Quarkus acessa o aplicativo Single-page."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Single-page application uses Authorization Code Flow to authenticate the user and retrieve tokens from the OpenID Connect provider."
msgstr "O aplicativo de página única usa o Authorization Code Flow para autenticar o usuário e recuperar tokens do provedor OpenID Connect."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Single-page application uses the access token to retrieve the service data from the Quarkus service."
msgstr "O aplicativo de página única usa o token de acesso para recuperar os dados de serviço do serviço Quarkus."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Quarkus service verifies the bearer access token signature using the verification keys, checks the token expiry date and other claims, allows the request to proceed if the token is valid, and returns the service response to the Single-page application."
msgstr "O serviço Quarkus verifica a assinatura do token de acesso do portador usando as chaves de verificação, verifica a data de validade do token e outras reivindicações, permite que a solicitação prossiga se o token for válido e retorna a resposta do serviço para o aplicativo de página única."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Single-page application returns the same data to the Quarkus user."
msgstr "O aplicativo de página única retorna os mesmos dados para o usuário do Quarkus."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Bearer token authentication mechanism in Quarkus with Java or command line client"
msgstr "Mecanismo de autenticação de token de portador no Quarkus com Java ou cliente de linha de comando"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Client uses `client_credentials` that requires client ID and secret or password grant, which also requires client ID, secret, user name, and password to retrieve the access token from the OpenID Connect provider."
msgstr "O cliente usa o site `client_credentials` que requer ID do cliente e segredo ou concessão de senha, que também requer ID do cliente, segredo, nome de usuário e senha para recuperar o token de acesso do provedor OpenID Connect."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Client uses the access token to retrieve the service data from the Quarkus service."
msgstr "O Client usa o token de acesso para recuperar os dados de serviço do serviço Quarkus."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Quarkus service verifies the bearer access token signature using the verification keys, checks the token expiry date and other claims, allows the request to proceed if the token is valid, and returns the service response to the Client."
msgstr "O serviço Quarkus verifica a assinatura do token de acesso do portador usando as chaves de verificação, verifica a data de validade do token e outras reivindicações, permite que a solicitação prossiga se o token for válido e retorna a resposta do serviço para o Cliente."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If you need to authenticate and authorize the users using OpenID Connect Authorization Code Flow, see xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications].\n"
"Also, if you use Keycloak and bearer tokens, see xref:security-keycloak-authorization.adoc[Using Keycloak to Centralize Authorization]."
msgstr "Se o senhor precisar autenticar e autorizar os usuários usando o OpenID Connect Authorization Code Flow, consulte xref:security-oidc-code-flow-authentication.adoc[Mecanismo de fluxo de código OIDC para proteger aplicativos da Web] . Além disso, se o senhor usar Keycloak e tokens de portador, consulte xref:security-keycloak-authorization.adoc[Uso do Keycloak para centralizar a autorização] ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "To learn about how you can protect service applications by using OIDC Bearer token authentication, see xref:security-oidc-bearer-token-authentication-tutorial.adoc[OIDC Bearer token authentication tutorial]."
msgstr "Para saber como o senhor pode proteger os aplicativos de serviço usando a autenticação de token do OIDC Bearer, consulte o xref:security-oidc-bearer-token-authentication-tutorial.adoc[tutorial de autenticação de token do OIDC Bearer] ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you want to protect web applications by using OIDC authorization code flow authentication, see xref:security-oidc-code-flow-authentication-concept.adoc[OIDC authorization code flow authentication]."
msgstr "Se o senhor quiser proteger os aplicativos da Web usando a autenticação de fluxo de código de autorização OIDC, consulte xref:security-oidc-code-flow-authentication-concept.adoc[Autenticação de fluxo de código de autorização OIDC] ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For information about how to support multiple tenants, see xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy]."
msgstr "Para obter informações sobre como oferecer suporte a vários locatários, consulte xref:security-openid-connect-multitenancy.adoc[Usando o OpenID Connect Multi-Tenancy] ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Accessing JWT claims"
msgstr "Acesso a declarações JWT"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you need to access JWT token claims then you can inject `JsonWebToken`:"
msgstr "Se o senhor precisar acessar reivindicações de token JWT, poderá injetar `JsonWebToken` :"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Injection of `JsonWebToken` is supported in `@ApplicationScoped`, `@Singleton` and `@RequestScoped` scopes however the use of `@RequestScoped` is required if the individual claims are injected as simple types, please see xref:security-jwt.adoc#supported-injection-scopes[Support Injection Scopes for JsonWebToken and Claims] for more details."
msgstr "A injeção de `JsonWebToken` é compatível com os escopos `@ApplicationScoped` , `@Singleton` e `@RequestScoped` . No entanto, o uso de `@RequestScoped` é necessário se as declarações individuais forem injetadas como tipos simples. Consulte xref:security-jwt.adoc#supported-injection-scopes[Escopos de injeção de suporte para JsonWebToken e declarações] para obter mais detalhes."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "User Info"
msgstr "Informações do usuário"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Set `quarkus.oidc.authentication.user-info-required=true` if a UserInfo JSON object from the OIDC userinfo endpoint has to be requested.\n"
"A request will be sent to the OpenID Provider UserInfo endpoint and  an `io.quarkus.oidc.UserInfo` (a simple `jakarta.json.JsonObject` wrapper) object will be created.\n"
"`io.quarkus.oidc.UserInfo` can be either injected or accessed as a SecurityIdentity `userinfo` attribute."
msgstr "Defina `quarkus.oidc.authentication.user-info-required=true` se for necessário solicitar um objeto JSON UserInfo do ponto de extremidade userinfo do OIDC. Uma solicitação será enviada ao ponto de extremidade UserInfo do provedor OpenID e um objeto `io.quarkus.oidc.UserInfo` (um invólucro simples `jakarta.json.JsonObject` ) será criado. `io.quarkus.oidc.UserInfo` pode ser injetado ou acessado como um atributo SecurityIdentity `userinfo` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Configuration Metadata"
msgstr "Metadados de configuração"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The current tenant's discovered link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[OpenID Connect Configuration Metadata] is represented by `io.quarkus.oidc.OidcConfigurationMetadata` and can be either injected or accessed as a `SecurityIdentity` `configuration-metadata` attribute."
msgstr "link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[Os metadados de configuração do OpenID Connect] descobertos do locatário atual são representados por `io.quarkus.oidc.OidcConfigurationMetadata` e podem ser injetados ou acessados como um atributo `SecurityIdentity` `configuration-metadata` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The default tenant's `OidcConfigurationMetadata` is injected if the endpoint is public."
msgstr "O `OidcConfigurationMetadata` do locatário padrão é injetado se o ponto de extremidade for público."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Token Claims And SecurityIdentity Roles"
msgstr "Token Claims e funções de SecurityIdentity"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "SecurityIdentity roles can be mapped from the verified JWT access tokens as follows:"
msgstr "As funções de SecurityIdentity podem ser mapeadas a partir dos tokens de acesso JWT verificados da seguinte forma:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If `quarkus.oidc.roles.role-claim-path` property is set and matching array or string claims are found then the roles are extracted from these claims.\n"
"For example, `customroles`, `customroles/array`, `scope`, `\"http://namespace-qualified-custom-claim\"/roles`, `\"http://namespace-qualified-roles\"`, etc."
msgstr "Se a propriedade `quarkus.oidc.roles.role-claim-path` for definida e forem encontradas declarações de matriz ou string correspondentes, as funções serão extraídas dessas declarações. Por exemplo, `customroles` , `customroles/array` , `scope` , `\"http://namespace-qualified-custom-claim\"/roles` , `\"http://namespace-qualified-roles\"` , etc."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If `groups` claim is available then its value is used"
msgstr "Se a reivindicação `groups` estiver disponível, seu valor será usado"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If `realm_access/roles` or `resource_access/client_id/roles` (where `client_id` is the value of the `quarkus.oidc.client-id` property) claim is available then its value is used.\n"
"This check supports the tokens issued by Keycloak"
msgstr "Se a declaração `realm_access/roles` ou `resource_access/client_id/roles` (em que `client_id` é o valor da propriedade `quarkus.oidc.client-id` ) estiver disponível, seu valor será usado. Essa verificação é compatível com os tokens emitidos pelo Keycloak"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If the token is opaque (binary) then a `scope` property from the remote token introspection response will be used."
msgstr "Se o token for opaco (binário), será usada uma propriedade `scope` da resposta de introspecção do token remoto."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If UserInfo is the source of the roles then set `quarkus.oidc.authentication.user-info-required=true` and `quarkus.oidc.roles.source=userinfo`, and if needed, `quarkus.oidc.roles.role-claim-path`."
msgstr "Se UserInfo for a fonte das funções, defina `quarkus.oidc.authentication.user-info-required=true` e `quarkus.oidc.roles.source=userinfo` e, se necessário, `quarkus.oidc.roles.role-claim-path` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Additionally, a custom `SecurityIdentityAugmentor` can also be used to add the roles as documented in xref:security-customization.adoc#security-identity-customization[Security Identity Customization]."
msgstr "Além disso, um `SecurityIdentityAugmentor` personalizado também pode ser usado para adicionar as funções, conforme documentado em xref:security-customization.adoc#security-identity-customization[Personalização da identidade de segurança] ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Token scopes And SecurityIdentity permissions"
msgstr "Escopos de token e permissões de SecurityIdentity"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "SecurityIdentity permissions are mapped in the form of the `io.quarkus.security.StringPermission` from the scope parameter of the xref:token-claims-and-security-identity-roles[source of the roles], using the same claim separator."
msgstr "As permissões de SecurityIdentity são mapeadas na forma de `io.quarkus.security.StringPermission` a partir do parâmetro de escopo da xref:token-claims-and-security-identity-roles[origem das funções] , usando o mesmo separador de declarações."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Only requests with OpenID Connect scope `email` are going to be granted access."
msgstr "Somente solicitações com escopo OpenID Connect `email` terão acesso."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The read access is limited to the client requests with scope `orders_read`."
msgstr "O acesso de leitura é limitado às solicitações do cliente com escopo `orders_read` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Please refer to the Permission annotation section of the xref:security-authorize-web-endpoints-reference.adoc#permission-annotation[Authorization of web endpoints]\n"
"guide for more information about the `io.quarkus.security.PermissionsAllowed` annotation."
msgstr "Consulte a seção Permission annotation (Anotação xref:security-authorize-web-endpoints-reference.adoc#permission-annotation[de] permissão) do guia xref:security-authorize-web-endpoints-reference.adoc#permission-annotation[Authorization of web endpoints (Autorização de pontos de extremidade da Web] ) para obter mais informações sobre a anotação `io.quarkus.security.PermissionsAllowed` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Token Verification And Introspection"
msgstr "Verificação e introspecção de tokens"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If the token is a JWT token then, by default, it will be verified with a `JsonWebKey` (JWK) key from a local `JsonWebKeySet` retrieved from the OpenID Connect Provider's JWK endpoint. The token's key identifier `kid` header value will be used to find the matching JWK key.\n"
"If no matching `JWK` is available locally then `JsonWebKeySet` will be refreshed by fetching the current key set from the JWK endpoint. The `JsonWebKeySet` refresh can be repeated only after the `quarkus.oidc.token.forced-jwk-refresh-interval` (default is 10 minutes) expires.\n"
"If no matching `JWK` is available after the refresh then the JWT token will be sent to the OpenID Connect Provider's token introspection endpoint."
msgstr "Se o token for um token JWT, então, por padrão, ele será verificado com uma chave `JsonWebKey` (JWK) de um `JsonWebKeySet` local recuperado do ponto de extremidade JWK do provedor OpenID Connect. O valor do cabeçalho `kid` do identificador de chave do token será usado para encontrar a chave JWK correspondente. Se não houver um `JWK` correspondente disponível localmente, o `JsonWebKeySet` será atualizado buscando-se o conjunto de chaves atual no endpoint JWK. A atualização do `JsonWebKeySet` pode ser repetida somente depois que o `quarkus.oidc.token.forced-jwk-refresh-interval` (o padrão é 10 minutos) expirar. Se nenhum `JWK` correspondente estiver disponível após a atualização, o token JWT será enviado ao endpoint de introspecção de token do provedor OpenID Connect."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If the token is opaque (it can be a binary token or an encrypted JWT token) then it will always be sent to the OpenID Connect Provider's token introspection endpoint."
msgstr "Se o token for opaco (pode ser um token binário ou um token JWT criptografado), ele sempre será enviado para o endpoint de introspecção de token do provedor OpenID Connect."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you work with JWT tokens only and expect that a matching `JsonWebKey` will always be available (possibly after a key set refresh) then you should disable the token introspection:"
msgstr "Se o senhor trabalha apenas com tokens JWT e espera que um `JsonWebKey` correspondente esteja sempre disponível (possivelmente após uma atualização do conjunto de chaves), deve desativar a introspecção de tokens:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "However, there could be cases where JWT tokens must be verified via the introspection only. It can be forced by configuring an introspection endpoint address only, for example, in case of Keycloak you can do it like this:"
msgstr "No entanto, pode haver casos em que os tokens JWT devem ser verificados somente por meio da introspecção. Isso pode ser forçado configurando apenas um endereço de endpoint de introspecção, por exemplo, no caso do Keycloak, o senhor pode fazer isso da seguinte forma:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "An advantage of this indirect enforcement of JWT tokens being only introspected remotely is that two remote call are avoided: a remote OIDC metadata discovery call followed by another remote call fetching the verification keys which will not be used, while its disavantage is that the users need to know the introspection endpoint address and configure it manually."
msgstr "Uma vantagem dessa aplicação indireta de tokens JWT sendo introspeccionados apenas remotamente é que duas chamadas remotas são evitadas: uma chamada remota de descoberta de metadados do OIDC seguida de outra chamada remota para obter as chaves de verificação que não serão usadas, enquanto sua desvantagem é que os usuários precisam saber o endereço do endpoint de introspecção e configurá-lo manualmente."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The alternative approach is to allow discovering the OIDC metadata (which is a default option) but require that only the remote JWT introspection is performed:"
msgstr "A abordagem alternativa é permitir a descoberta dos metadados do OIDC (que é uma opção padrão), mas exigir que apenas a introspecção remota do JWT seja realizada:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "An advantage of this approach is that the configuration is simple and easy to understand, while its disavantage is that a remote OIDC metadata discovery call is required to discover an introspection endpoint address (though the verification keys will also not be fetched)."
msgstr "Uma vantagem dessa abordagem é que a configuração é simples e fácil de entender, enquanto sua desvantagem é que uma chamada de descoberta de metadados do OIDC remoto é necessária para descobrir um endereço de endpoint de introspecção (embora as chaves de verificação também não sejam obtidas)."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Note that `io.quarkus.oidc.TokenIntrospection` (a simple `jakarta.json.JsonObject` wrapper) object will be created and can be either injected or accessed as a SecurityIdentity `introspection` attribute if either JWT or opaque token has been successfully introspected."
msgstr "Observe que o objeto `io.quarkus.oidc.TokenIntrospection` (um simples wrapper `jakarta.json.JsonObject` ) será criado e poderá ser injetado ou acessado como um atributo SecurityIdentity `introspection` se o JWT ou o token opaco tiver sido introspeccionado com êxito."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Token Introspection and UserInfo Cache"
msgstr "Introspecção de token e cache UserInfo"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "All opaque and sometimes JWT Bearer access tokens have to be remotely introspected. If `UserInfo` is also required then the same access token will be used to do a remote call to OpenID Connect Provider again. So, if `UserInfo` is required and the current access token is opaque then for every such token there will be 2 remote calls done - one to introspect it and one to get UserInfo with it, and if the token is JWT then usually only a single remote call will be needed - to get UserInfo with it."
msgstr "Todos os tokens de acesso opacos e, às vezes, JWT Bearer precisam ser introspeccionados remotamente. Se `UserInfo` também for necessário, o mesmo token de acesso será usado para fazer uma chamada remota para o provedor OpenID Connect novamente. Portanto, se `UserInfo` for necessário e o token de acesso atual for opaco, para cada token desse tipo serão feitas duas chamadas remotas: uma para introspecção e outra para obter UserInfo com ele; se o token for JWT, normalmente será necessária apenas uma única chamada remota: para obter UserInfo com ele."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The cost of making up to 2 remote calls per every incoming bearer or code flow access token can sometimes be problematic."
msgstr "O custo de fazer até duas chamadas remotas por cada token de acesso ao portador ou ao fluxo de código recebido pode, às vezes, ser problemático."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If it is the case in your production then it can be recommended that the token introspection and `UserInfo` data are cached for a short period of time, for example, for 3 or 5 minutes."
msgstr "Se esse for o caso em sua produção, pode ser recomendável que os dados de introspecção de token e `UserInfo` sejam armazenados em cache por um curto período de tempo, por exemplo, por 3 ou 5 minutos."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`quarkus-oidc` provides `quarkus.oidc.TokenIntrospectionCache` and `quarkus.oidc.UserInfoCache` interfaces which can be used to implement `@ApplicationScoped` cache implementation which can be used to store and retrieve `quarkus.oidc.TokenIntrospection` and/or `quarkus.oidc.UserInfo` objects, for example:"
msgstr "`quarkus-oidc` fornece as interfaces `quarkus.oidc.TokenIntrospectionCache` e `quarkus.oidc.UserInfoCache` , que podem ser usadas para implementar a implementação de cache `@ApplicationScoped` , que pode ser usada para armazenar e recuperar objetos `quarkus.oidc.TokenIntrospection` e/ou `quarkus.oidc.UserInfo` , por exemplo:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Each OIDC tenant can either permit or deny storing its `quarkus.oidc.TokenIntrospection` and/or `quarkus.oidc.UserInfo` data with boolean `quarkus.oidc.\"tenant\".allow-token-introspection-cache` and `quarkus.oidc.\"tenant\".allow-user-info-cache` properties."
msgstr "Cada locatário do OIDC pode permitir ou negar o armazenamento de seus dados `quarkus.oidc.TokenIntrospection` e/ou `quarkus.oidc.UserInfo` com as propriedades booleanas `quarkus.oidc.\"tenant\".allow-token-introspection-cache` e `quarkus.oidc.\"tenant\".allow-user-info-cache` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Additionally, `quarkus-oidc` provides a simple default memory based token cache which implements both `quarkus.oidc.TokenIntrospectionCache` and `quarkus.oidc.UserInfoCache` interfaces."
msgstr "Além disso, o site `quarkus-oidc` oferece um cache de token simples baseado em memória padrão que implementa as interfaces `quarkus.oidc.TokenIntrospectionCache` e `quarkus.oidc.UserInfoCache` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "It can be activated and configured as follows:"
msgstr "Ele pode ser ativado e configurado da seguinte forma:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The default cache uses a token as a key and each entry can have `TokenIntrospection` and/or `UserInfo`. It will only keep up to a `max-size` number of entries. If the cache is full when a new entry is to be added then an attempt will be made to find a space for it by removing a single expired entry. Additionally, the cleanup timer, if activated, will periodically check for the expired entries and remove them."
msgstr "O cache padrão usa um token como chave e cada entrada pode ter `TokenIntrospection` e/ou `UserInfo` . Ele só manterá até um número de `max-size` entradas. Se o cache estiver cheio quando uma nova entrada tiver que ser adicionada, será feita uma tentativa de encontrar um espaço para ela removendo uma única entrada expirada. Além disso, o cronômetro de limpeza, se ativado, verificará periodicamente as entradas expiradas e as removerá."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Please experiment with the default cache implementation or register a custom one."
msgstr "Experimente a implementação padrão do cache ou registre uma implementação personalizada."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "JSON Web Token Claim Verification"
msgstr "Verificação de declaração de token da Web JSON"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Once the bearer JWT token's signature has been verified and its `expires at` (`exp`) claim has been checked, the `iss` (`issuer`) claim value is verified next."
msgstr "Depois que a assinatura do token JWT do portador tiver sido verificada e sua reivindicação `expires at` ( `exp` ) tiver sido verificada, o valor da reivindicação `iss` ( `issuer` ) será verificado em seguida."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"By default, the `iss` claim value is compared to the `issuer` property which may have been discovered in the well-known provider configuration.\n"
"But if `quarkus.oidc.token.issuer` property is set then the `iss` claim value is compared to it instead."
msgstr "Por padrão, o valor da declaração `iss` é comparado com a propriedade `issuer` , que pode ter sido descoberta na configuração do provedor conhecido. Mas se a propriedade `quarkus.oidc.token.issuer` estiver definida, o valor da declaração `iss` será comparado a ela."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "In some cases, this `iss` claim verification may not work. For example, if the discovered `issuer` property contains an internal HTTP/IP address while the token `iss` claim value contains an external HTTP/IP address. Or when a discovered `issuer` property contains the template tenant variable but the token `iss` claim value has the complete tenant-specific issuer value."
msgstr "Em alguns casos, essa verificação da declaração `iss` pode não funcionar. Por exemplo, se a propriedade descoberta `issuer` contiver um endereço HTTP/IP interno, enquanto o valor de declaração do token `iss` contiver um endereço HTTP/IP externo. Ou quando uma propriedade descoberta `issuer` contiver a variável de locatário do modelo, mas o valor de declaração do token `iss` tiver o valor completo do emissor específico do locatário."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "In such cases you may want to consider skipping the issuer verification by setting `quarkus.oidc.token.issuer=any`. Please note that it is not recommended and should be avoided unless no other options are available:"
msgstr "Nesses casos, o senhor pode considerar a possibilidade de ignorar a verificação do emissor, definindo `quarkus.oidc.token.issuer=any` . Observe que isso não é recomendado e deve ser evitado, a menos que não haja outras opções disponíveis:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you work with Keycloak and observe the issuer verification errors due to the different host addresses then configure Keycloak with a `KEYCLOAK_FRONTEND_URL` property to ensure the same host address is used."
msgstr "Se o senhor trabalhar com o Keycloak e observar os erros de verificação do emissor devido aos diferentes endereços de host, configure o Keycloak com uma propriedade `KEYCLOAK_FRONTEND_URL` para garantir que o mesmo endereço de host seja usado."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If the `iss` property is tenant specific in a multi-tenant deployment then you can use the `SecurityIdentity` `tenant-id` attribute to check the issuer is correct in the endpoint itself or the custom Jakarta REST filter, for example:"
msgstr "Se a propriedade `iss` for específica do locatário em uma implantação de vários locatários, o senhor poderá usar o atributo `SecurityIdentity` `tenant-id` para verificar se o emissor está correto no próprio endpoint ou no filtro Jakarta REST personalizado, por exemplo:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Note it is also recommended to use `quarkus.oidc.token.audience` property to verify the token `aud` (`audience`) claim value."
msgstr "Observe que também é recomendável usar a propriedade `quarkus.oidc.token.audience` para verificar o valor de reivindicação do token `aud` ( `audience` )."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Single Page Applications"
msgstr "Aplicativos de página única"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Single Page Application (SPA) typically uses `XMLHttpRequest`(XHR) and the JavaScript utility code provided by the OpenID Connect provider to acquire a bearer token and use it\n"
"to access Quarkus `service` applications."
msgstr "O aplicativo de página única (SPA) normalmente usa `XMLHttpRequest` (XHR) e o código utilitário JavaScript fornecido pelo provedor OpenID Connect para adquirir um token de portador e usá-lo para acessar os aplicativos Quarkus `service` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For example, here is how you can use `keycloak.js` to authenticate the users and refresh the expired tokens from the SPA:"
msgstr "Por exemplo, veja como o senhor pode usar o site `keycloak.js` para autenticar os usuários e atualizar os tokens expirados no SPA:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Cross Origin Resource Sharing"
msgstr "Compartilhamento de recursos entre origens"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you plan to consume your OpenID Connect `service` application from a Single Page Application running on a different domain, you will need to configure CORS (Cross-Origin Resource Sharing). Please read the xref:security-cors.adoc#cors-filter[CORS filter] section of the \"Cross-origin resource sharing\" guide for more details."
msgstr "Se o senhor planeja consumir o aplicativo OpenID Connect `service` a partir de um aplicativo de página única executado em um domínio diferente, precisará configurar o CORS (Cross-Origin Resource Sharing). Leia a seção de xref:security-cors.adoc#cors-filter[filtro CORS] do guia \"Cross-origin resource sharing\" (Compartilhamento de recursos entre origens) para obter mais detalhes."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Provider Endpoint configuration"
msgstr "Configuração do endpoint do provedor"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "OIDC `service` application needs to know OpenID Connect provider's token, `JsonWebKey` (JWK) set and possibly `UserInfo` and introspection endpoint addresses."
msgstr "O aplicativo OIDC `service` precisa conhecer o token do provedor OpenID Connect, o conjunto `JsonWebKey` (JWK) e, possivelmente, os endereços de endpoint `UserInfo` e de introspecção."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "By default, they are discovered by adding a `/.well-known/openid-configuration` path to the configured `quarkus.oidc.auth-server-url`."
msgstr "Por padrão, eles são descobertos adicionando um caminho `/.well-known/openid-configuration` ao `quarkus.oidc.auth-server-url` configurado."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Alternatively, if the discovery endpoint is not available, or if you would like to save on the discovery endpoint round-trip, you can disable the discovery and configure them with relative path values, for example:"
msgstr "Como alternativa, se o endpoint de descoberta não estiver disponível ou se o senhor quiser economizar na viagem de ida e volta do endpoint de descoberta, poderá desativar a descoberta e configurá-los com valores de caminho relativos, por exemplo:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Token Propagation"
msgstr "Propagação de token"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Please see xref:security-openid-connect-client-reference.adoc#token-propagation[Token Propagation] section about the Bearer access token propagation to the downstream services."
msgstr "Consulte a seção xref:security-openid-connect-client-reference.adoc#token-propagation[Propagação de to] ken sobre a propagação do token de acesso do portador para os serviços downstream."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Oidc Provider Client Authentication"
msgstr "Autenticação de cliente do provedor Oidc"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`quarkus.oidc.runtime.OidcProviderClient` is used when a remote request to an OpenID Connect Provider has to be done. If the bearer token has to be introspected then `OidcProviderClient` has to authenticate to the OpenID Connect Provider. Please see xref:security-oidc-code-flow-authentication.adoc#oidc-provider-client-authentication[OidcProviderClient Authentication] for more information about all the supported authentication options."
msgstr "`quarkus.oidc.runtime.OidcProviderClient` é usado quando é necessário fazer uma solicitação remota a um provedor OpenID Connect. Se o token do portador tiver de ser introspeccionado, o site `OidcProviderClient` terá de se autenticar no provedor OpenID Connect. Consulte xref:security-oidc-code-flow-authentication.adoc#oidc-provider-client-authentication[OidcProviderClient Authentication] para obter mais informações sobre todas as opções de autenticação compatíveis."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
msgid "Testing"
msgstr "Testando"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Start by adding the following dependencies to your test project:"
msgstr "Comece adicionando as seguintes dependências ao seu projeto de teste:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Wiremock"
msgstr "Wiremock"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Add the following dependencies to your test project:"
msgstr "Adicione as seguintes dependências ao seu projeto de teste:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Prepare the REST test endpoint, set `application.properties`, for example:"
msgstr "Prepare o endpoint de teste REST, defina `application.properties` , por exemplo:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "and finally write the test code, for example:"
msgstr "e, por fim, escrever o código de teste, por exemplo:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Note that the `quarkus-test-oidc-server` extension includes a signing RSA private key file in a `JSON Web Key` (`JWK`) format and points to it with a `smallrye.jwt.sign.key.location` configuration property. It allows to use a no argument `sign()` operation to sign the token."
msgstr "Observe que a extensão `quarkus-test-oidc-server` inclui um arquivo de chave privada RSA de assinatura em um formato `JSON Web Key` ( `JWK` ) e aponta para ele com uma propriedade de configuração `smallrye.jwt.sign.key.location` . Ela permite usar uma operação `sign()` sem argumentos para assinar o token."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Testing your `quarkus-oidc` `service` application with `OidcWiremockTestResource` provides the best coverage as even the communication channel is tested against the Wiremock HTTP stubs.\n"
"`OidcWiremockTestResource` will be enhanced going forward to support more complex bearer token test scenarios."
msgstr "Testar o aplicativo `quarkus-oidc` `service` com o `OidcWiremockTestResource` oferece a melhor cobertura, pois até mesmo o canal de comunicação é testado em relação aos stubs HTTP do Wiremock. O `OidcWiremockTestResource` será aprimorado no futuro para oferecer suporte a cenários de teste de token de portador mais complexos."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If there is an immediate need for a test to define Wiremock stubs not currently supported by `OidcWiremockTestResource`\n"
"one can do so via a `WireMockServer` instance injected into the test class, for example:"
msgstr "Se houver necessidade imediata de um teste para definir stubs do Wiremock que não sejam compatíveis com o site `OidcWiremockTestResource` , o senhor poderá fazer isso por meio de uma instância do `WireMockServer` injetada na classe de teste, por exemplo:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`OidcWiremockTestResource` does not work with `@QuarkusIntegrationTest` against Docker containers, because the Wiremock server is running in the JVM running the test, which cannot be accessed from the Docker container running the Quarkus application."
msgstr "`OidcWiremockTestResource` não funciona com `@QuarkusIntegrationTest` em contêineres Docker, porque o servidor Wiremock está em execução no JVM que executa o teste, que não pode ser acessado pelo contêiner Docker que executa o aplicativo Quarkus."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "OidcTestClient"
msgstr "OidcTestClient"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you work with SaaS OIDC providers such as `Auth0` and would like to run tests against the test (development) domain or prefer to run tests against a remote Keycloak test realm, when you already have `quarkus.oidc.auth-server-url` configured, you can use `OidcTestClient`."
msgstr "Se o senhor trabalhar com provedores SaaS OIDC, como `Auth0` , e quiser executar testes no domínio de teste (desenvolvimento) ou preferir executar testes em um reino de teste remoto do Keycloak, quando já tiver configurado `quarkus.oidc.auth-server-url` , poderá usar `OidcTestClient` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For example, lets assume you have the following configuration:"
msgstr "Por exemplo, vamos supor que o senhor tenha a seguinte configuração:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Start with addding the same dependency as in the xref:integration-testing-wiremock[Wiremock] section, `quarkus-test-oidc-server`."
msgstr "Comece adicionando a mesma dependência da seção xref:integration-testing-wiremock[Wiremock] , `quarkus-test-oidc-server` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Next, write the test code like this:"
msgstr "Em seguida, escreva o código de teste da seguinte forma:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "This test code acquires a token using a `password` grant from the test `Auth0` domain which has an application with the client id `test-auth0-client` registered, and which has a user `alice` with a password `alice` created. The test `Auth0` application must have the `password` grant enabled for a test like this one to work. This example code also shows how to pass additional parameters. For `Auth0`, these are the `audience` and `scope` parameters."
msgstr "Esse código de teste adquire um token usando uma concessão `password` do domínio de teste `Auth0` que tem um aplicativo com o ID do cliente `test-auth0-client` registrado e que tem um usuário `alice` com uma senha `alice` criada. O aplicativo de teste `Auth0` deve ter a concessão `password` ativada para que um teste como esse funcione. Esse código de exemplo também mostra como passar parâmetros adicionais. Para `Auth0` , esses são os parâmetros `audience` e `scope` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Dev Services for Keycloak"
msgstr "Serviços de desenvolvimento para Keycloak"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Using xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] is recommended for the integration testing against Keycloak.\n"
"`Dev Services for Keycloak` will launch and initialize a test container: it will create a `quarkus` realm, a `quarkus-app` client (`secret` secret) and add `alice` (`admin` and `user` roles) and `bob` (`user` role) users, where all of these properties can be customized."
msgstr "Recomenda-se o uso do Dev xref:security-openid-connect-dev-services.adoc[Services for Keycloak] para o teste de integração com o Keycloak. O site `Dev Services for Keycloak` lançará e inicializará um contêiner de teste: ele criará um reino `quarkus` , um cliente `quarkus-app` (segredo `secret` ) e adicionará usuários `alice` (funções `admin` e `user` ) e `bob` (função `user` ), onde todas essas propriedades podem ser personalizadas."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "First you need to add the following dependency:"
msgstr "Primeiro, o senhor precisa adicionar a seguinte dependência:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "which provides a utility class `io.quarkus.test.keycloak.client.KeycloakTestClient` you can use in tests for acquiring the access tokens."
msgstr "que fornece uma classe utilitária `io.quarkus.test.keycloak.client.KeycloakTestClient` que o senhor pode usar em testes para adquirir os tokens de acesso."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Next prepare your `application.properties`. You can start with a completely empty `application.properties` as `Dev Services for Keycloak` will register `quarkus.oidc.auth-server-url` pointing to the running test container as well as `quarkus.oidc.client-id=quarkus-app` and `quarkus.oidc.credentials.secret=secret`."
msgstr "Em seguida, prepare seu `application.properties` . O senhor pode começar com um `application.properties` completamente vazio, pois o `Dev Services for Keycloak` registrará o `quarkus.oidc.auth-server-url` apontando para o contêiner de teste em execução, bem como o `quarkus.oidc.client-id=quarkus-app` e o `quarkus.oidc.credentials.secret=secret` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "But if you already have all the required `quarkus-oidc` properties configured then you only need to associate `quarkus.oidc.auth-server-url` with the `prod` profile for `Dev Services for Keycloak`to start a container, for example:"
msgstr "Mas se o senhor já tiver todas as propriedades necessárias do `quarkus-oidc` configuradas, só precisará associar o `quarkus.oidc.auth-server-url` ao perfil `prod` para `Dev Services for Keycloak` para iniciar um contêiner, por exemplo:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If a custom realm file has to be imported into Keycloak before running the tests then you can configure `Dev Services for Keycloak` as follows:"
msgstr "Se um arquivo de reino personalizado tiver de ser importado para o Keycloak antes de executar os testes, o senhor poderá configurar o site `Dev Services for Keycloak` da seguinte forma:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Finally, write your test which will be executed in JVM mode:"
msgstr "Por fim, escreva o teste que será executado no modo JVM:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "and in native mode:"
msgstr "e no modo nativo:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Please see xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] for more information about the way it is initialized and configured."
msgstr "Consulte Dev xref:security-openid-connect-dev-services.adoc[Services for Keycloak] para obter mais informações sobre a forma como ele é inicializado e configurado."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "KeycloakTestResourceLifecycleManager"
msgstr "KeycloakTestResourceLifecycleManager"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If you need to do some integration testing against Keycloak then you are encouraged to do it with xref:integration-testing-keycloak-devservices[Dev Services For Keycloak].\n"
"Use `KeycloakTestResourceLifecycleManager` for your tests only if there is a good reason not to use `Dev Services for Keycloak`."
msgstr "Se precisar fazer algum teste de integração com o Keycloak, o senhor é incentivado a fazê-lo com o Dev xref:integration-testing-keycloak-devservices[Services For Keycloak] . Use `KeycloakTestResourceLifecycleManager` para seus testes somente se houver um bom motivo para não usar `Dev Services for Keycloak` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Start with adding the following dependency:"
msgstr "Comece adicionando a seguinte dependência:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "which provides `io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager` - an implementation of `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which starts a Keycloak container."
msgstr "que fornece `io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager` - uma implementação de `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` que inicia um contêiner Keycloak."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "And configure the Maven Surefire plugin as follows:"
msgstr "E configure o plug-in Maven Surefire da seguinte forma:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "(and similarly `maven.failsafe.plugin` when testing in native image)."
msgstr "(e da mesma forma `maven.failsafe.plugin` ao testar a imagem nativa)."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`KeycloakTestResourceLifecycleManager` registers `alice` and `admin` users. The user `alice` has the `user` role only by default - it can be customized with a `keycloak.token.user-roles` system property. The user `admin` has the `user` and `admin` roles by default - it can be customized with a `keycloak.token.admin-roles` system property."
msgstr "`KeycloakTestResourceLifecycleManager` registra os usuários `alice` e `admin` . O usuário `alice` tem apenas a função `user` por padrão - ele pode ser personalizado com uma propriedade do sistema `keycloak.token.user-roles` . O usuário `admin` tem as funções `user` e `admin` por padrão - ele pode ser personalizado com uma propriedade do sistema `keycloak.token.admin-roles` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"By default, `KeycloakTestResourceLifecycleManager` uses HTTPS to initialize a Keycloak instance which can be disabled with `keycloak.use.https=false`.\n"
"Default realm name is `quarkus` and client id - `quarkus-service-app` - set `keycloak.realm` and `keycloak.service.client` system properties to customize the values if needed."
msgstr "Por padrão, o site `KeycloakTestResourceLifecycleManager` usa HTTPS para inicializar uma instância do Keycloak, o que pode ser desativado com `keycloak.use.https=false` . O nome do realm padrão é `quarkus` e o ID do cliente é `quarkus-service-app` - defina as propriedades do sistema `keycloak.realm` e `keycloak.service.client` para personalizar os valores, se necessário."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Local Public Key"
msgstr "Chave pública local"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You can also use a local inlined public key for testing your `quarkus-oidc` `service` applications:"
msgstr "O senhor também pode usar uma chave pública local incorporada para testar seus aplicativos `quarkus-oidc` `service` :"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "copy `privateKey.pem` from the `integration-tests/oidc-tenancy` in the `main` Quarkus repository and use a test code similar to the one in the `Wiremock` section above to generate JWT tokens. You can use your own test keys if preferred."
msgstr "Copie `privateKey.pem` do `integration-tests/oidc-tenancy` no repositório `main` do Quarkus e use um código de teste semelhante ao da seção `Wiremock` acima para gerar tokens JWT. O senhor pode usar suas próprias chaves de teste, se preferir."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "This approach provides a more limited coverage compared to the Wiremock approach - for example, the remote communication code is not covered."
msgstr "Essa abordagem oferece uma cobertura mais limitada em comparação com a abordagem Wiremock - por exemplo, o código de comunicação remota não é coberto."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "TestSecurity annotation"
msgstr "Anotação TestSecurity"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You can use `@TestSecurity` and `@OidcSecurity` annotations for testing the `service` application endpoint code which depends on the injected `JsonWebToken` as well as `UserInfo` and `OidcConfigurationMetadata`."
msgstr "O senhor pode usar as anotações `@TestSecurity` e `@OidcSecurity` para testar o código do endpoint do aplicativo `service` que depende do `JsonWebToken` injetado, bem como `UserInfo` e `OidcConfigurationMetadata` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Add the following dependency:"
msgstr "Adicione a seguinte dependência:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "and write a test code like this one:"
msgstr "e escrever um código de teste como este:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "where `ProtectedResource` class may look like this:"
msgstr "onde a classe `ProtectedResource` pode ter a seguinte aparência:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Note that `@TestSecurity` annotation must always be used and its `user` property is returned as `JsonWebToken.getName()` and `roles` property - as `JsonWebToken.getGroups()`.\n"
"`@OidcSecurity` annotation is optional and can be used to set the additional token claims, as well as `UserInfo` and `OidcConfigurationMetadata` properties.\n"
"Additionally, if `quarkus.oidc.token.issuer` property is configured then it will be used as an `OidcConfigurationMetadata` `issuer` property value."
msgstr "Observe que a anotação `@TestSecurity` sempre deve ser usada e sua propriedade `user` é retornada como `JsonWebToken.getName()` e a propriedade `roles` - como `JsonWebToken.getGroups()` . A anotação `@OidcSecurity` é opcional e pode ser usada para definir as declarações de token adicionais, bem como as propriedades `UserInfo` e `OidcConfigurationMetadata` . Além disso, se a propriedade `quarkus.oidc.token.issuer` estiver configurada, ela será usada como um valor de propriedade `OidcConfigurationMetadata` `issuer` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you work with the opaque tokens then you can test them as follows:"
msgstr "Se o senhor trabalhar com os tokens opacos, poderá testá-los da seguinte forma:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Note that `@TestSecurity` `user` and `roles` attributes are available as `TokenIntrospection` `username` and `scope` properties and you can use `io.quarkus.test.security.oidc.TokenIntrospection` to add the additional introspection response properties such as an `email`, etc."
msgstr "Observe que os atributos `@TestSecurity` `user` e `roles` estão disponíveis como propriedades `TokenIntrospection` `username` e `scope` e o senhor pode usar `io.quarkus.test.security.oidc.TokenIntrospection` para adicionar propriedades adicionais de resposta de introspecção, como `email` , etc."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`@TestSecurity` and `@OidcSecurity` can be combined in a meta-annotation, for example like so:"
msgstr "`@TestSecurity` e `@OidcSecurity` podem ser combinados em uma meta-anotação, por exemplo, da seguinte forma:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "This is particularly useful if the same set of security settings needs to be used in multiple test methods."
msgstr "Isso é particularmente útil se o mesmo conjunto de configurações de segurança precisar ser usado em vários métodos de teste."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "How to check the errors in the logs"
msgstr "Como verificar os erros nos logs"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Please enable `io.quarkus.oidc.runtime.OidcProvider` `TRACE` level logging to see more details about the token verification errors:"
msgstr "Ative o registro de nível `io.quarkus.oidc.runtime.OidcProvider` `TRACE` para ver mais detalhes sobre os erros de verificação de token:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Please enable `io.quarkus.oidc.runtime.OidcRecorder` `TRACE` level logging to see more details about the OidcProvider client initialization errors:"
msgstr "Ative o registro de nível `io.quarkus.oidc.runtime.OidcRecorder` `TRACE` para ver mais detalhes sobre os erros de inicialização do cliente OidcProvider:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "External and Internal Access to OpenID Connect Provider"
msgstr "Acesso externo e interno ao provedor OpenID Connect"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Note that the OpenID Connect Provider externally accessible token and other endpoints may have different HTTP(S) URLs compared to the URLs auto-discovered or configured relative to `quarkus.oidc.auth-server-url` internal URL. For example, if your SPA acquires a token from an external token endpoint address and sends it to Quarkus as a bearer token then an issuer verification failure may be reported by the endpoint."
msgstr "Observe que o token acessível externamente do OpenID Connect Provider e outros pontos de extremidade podem ter URLs HTTP(S) diferentes em comparação com os URLs descobertos automaticamente ou configurados em relação ao URL interno do `quarkus.oidc.auth-server-url` . Por exemplo, se o SPA adquirir um token de um endereço de ponto de extremidade de token externo e enviá-lo ao Quarkus como um token de portador, uma falha de verificação do emissor poderá ser relatada pelo ponto de extremidade."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"In such cases, if you work with Keycloak then please start it with a `KEYCLOAK_FRONTEND_URL` system property set to the externally accessible base URL.\n"
"If you work with other Openid Connect providers then please check your provider's documentation."
msgstr "Nesses casos, se o senhor trabalha com o Keycloak, inicie-o com uma propriedade do sistema `KEYCLOAK_FRONTEND_URL` definida para a URL de base acessível externamente. Se o senhor trabalha com outros provedores Openid Connect, consulte a documentação do provedor."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "How to use 'client-id' property"
msgstr "Como usar a propriedade \"client-id\"?"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`quarkus.oidc.client-id` property identifies an OpenID Connect Client which requested the current bearer token. It can be an SPA application running in a browser or a Quarkus `web-app` confidential client application propagating the access token to the Quarkus `service` application."
msgstr "`quarkus.oidc.client-id` A propriedade identifica um cliente OpenID Connect que solicitou o token de portador atual. Pode ser um aplicativo SPA executado em um navegador ou um aplicativo cliente confidencial do Quarkus `web-app` que propaga o token de acesso para o aplicativo Quarkus `service` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"This property is required if the `service` application is expected to introspect the tokens remotely - which is always the case for the opaque tokens.\n"
"This property is optional if the local Json Web Key token verification only is used."
msgstr "Essa propriedade é obrigatória se for esperado que o aplicativo `service` introspeccione os tokens remotamente, o que é sempre o caso dos tokens opacos. Essa propriedade é opcional se for usada somente a verificação local do token Json Web Key."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Nonetheless, setting this property is encouraged even if the endpoint does not require access to the remote introspection endpoint. The reasons behind it that `client-id`, if set, can be used to verify the token audience and will also be included in the logs when the token verification fails for the better traceability of the tokens issued to specific clients to be analyzed over a longer period of time."
msgstr "No entanto, a definição dessa propriedade é incentivada mesmo que o ponto de extremidade não exija acesso ao ponto de extremidade de introspecção remota. As razões por trás disso são que `client-id` , se definido, pode ser usado para verificar o público do token e também será incluído nos logs quando a verificação do token falhar para melhorar a rastreabilidade dos tokens emitidos para clientes específicos a serem analisados em um período de tempo mais longo."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For example, if your OpenID Connect provider sets a token audience then the following configuration pattern is recommended:"
msgstr "Por exemplo, se o seu provedor OpenID Connect definir um público de tokens, o seguinte padrão de configuração é recomendado:"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.client-id` but your endpoint does not require remote access to one of OpenID Connect Provider endpoints (introspection, token acquisition, etc.) then do not set a client secret with the `quarkus.oidc.credentials` or similar properties as it will not be used."
msgstr "Se o senhor definir `quarkus.oidc.client-id` , mas seu endpoint não exigir acesso remoto a um dos endpoints do provedor OpenID Connect (introspecção, aquisição de token etc.), não defina um segredo de cliente com as propriedades `quarkus.oidc.credentials` ou similares, pois ele não será usado."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Note Quarkus `web-app` applications always require `quarkus.oidc.client-id` property."
msgstr "Observação: os aplicativos Quarkus `web-app` sempre exigem a propriedade `quarkus.oidc.client-id` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Authentication after HTTP request has completed"
msgstr "Autenticação após a conclusão da solicitação HTTP"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Sometimes, `SecurityIdentity` for a given token must be created when there is no active HTTP request context.\n"
"The `quarkus-oidc` extension provides `io.quarkus.oidc.TenantIdentityProvider` to convert a token to a `SecurityIdentity` instance.\n"
"For example, one situation when you must verify the token after HTTP request has completed is when you are\n"
"processing messages with the xref:vertx.adoc#event-bus[Vert.x event bus].\n"
"In the example below, the 'product-order' message is consumed within different CDI request context, therefore\n"
"an injected `SecurityIdentity` would not correctly represent the verified identity and be anonymous."
msgstr "Às vezes, o `SecurityIdentity` para um determinado token precisa ser criado quando não há um contexto de solicitação HTTP ativo. A extensão `quarkus-oidc` fornece `io.quarkus.oidc.TenantIdentityProvider` para converter um token em uma instância `SecurityIdentity` . Por exemplo, uma situação em que é necessário verificar o token após a conclusão da solicitação HTTP é quando o usuário está processando mensagens com o xref:vertx.adoc#event-bus[barramento de eventos Vert.x] . No exemplo abaixo, a mensagem \"product-order\" é consumida dentro de um contexto de solicitação de CDI diferente, portanto, um `SecurityIdentity` injetado não representaria corretamente a identidade verificada e seria anônimo."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "At this point, token is not verified when proactive authentication is disabled."
msgstr "Nesse ponto, o token não é verificado quando a autenticação proativa está desativada."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For default tenant, the `TenantFeature` qualifier is optional."
msgstr "Para locatário padrão, o qualificador `TenantFeature` é opcional."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Executes token verification and converts the token to a `SecurityIdentity`."
msgstr "Executa a verificação do token e converte o token em um `SecurityIdentity` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"When the provider is used during an HTTP request, the tenant configuration can be resolved as described in\n"
"the xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy] guide.\n"
"However, when there is no active HTTP request, you need to select tenant explicitly with the `io.quarkus.oidc.TenantFeature` qualifier."
msgstr "Quando o provedor é usado durante uma solicitação HTTP, a configuração do locatário pode ser resolvida conforme descrito no guia xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy] . No entanto, quando não há nenhuma solicitação HTTP ativa, o senhor precisa selecionar o locatário explicitamente com o qualificador `io.quarkus.oidc.TenantFeature` ."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[Dynamic tenant configuration resolution] is currently not supported.\n"
"Authentication that requires dynamic tenant will fail."
msgstr "No momento, não há suporte para a xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[resolução de configuração de locatário dinâmico] . A autenticação que requer um locatário dinâmico falhará."

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
msgid "References"
msgstr "Referências"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-oidc-configuration-properties-reference.adoc[OIDC configuration properties]"
msgstr "xref:security-oidc-configuration-properties-reference.adoc[Propriedades de configuração do OIDC]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication-tutorial.adoc[Protect a service application by using OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication-tutorial.adoc[Proteger um aplicativo de serviço usando a autenticação de token de portador OIDC]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-protect-service-applications-by-using-oidc-bearer-authentication-how-to.adoc[Protect service applications by using OIDC Bearer token authentication]"
msgstr "xref:security-protect-service-applications-by-using-oidc-bearer-authentication-how-to.adoc[Proteja os aplicativos de serviço usando a autenticação de token de portador OIDC]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Documentação do Keycloak]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[Token da Web JSON]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"
msgstr "link:security-openid-connect-client-reference.html[Guia de referência para OpenID Connect e OAuth2: Client e Filters]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr "xref:security-openid-connect-dev-services.adoc[Serviços de desenvolvimento para Keycloak]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "xref:security-jwt-build.adoc[Assine e criptografe tokens JWT com o SmallRye JWT Build]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
msgid "xref:security-authentication-mechanisms.adoc#oidc-jwt-oauth2-comparison[Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms]"
msgstr "link:security-authentication-mechanisms.html#oidc-jwt-oauth2-comparison[Escolhendo entre os mecanismos de autenticação OpenID Connect, SmallRye JWT e OAuth2]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr "link:security-authentication-mechanisms.html#combining-authentication-mechanisms[Combinando de mecanismos de autenticação]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Visão geral do Quarkus Security]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Cliente de administração do Quarkus Keycloak]"

#: _versions/3.6/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy]"
msgstr "xref:security-openid-connect-multitenancy.adoc[Usando o OpenID Connect Multi-Tenancy]"
