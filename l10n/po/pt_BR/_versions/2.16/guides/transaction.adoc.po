# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.16/guides/transaction.adoc
#, fuzzy, no-wrap
msgid "Using Transactions in Quarkus"
msgstr "Uso de transações no Quarkus"

#: _versions/2.16/guides/transaction.adoc
msgid ""
"Quarkus comes with a Transaction Manager and uses it to coordinate and expose transactions to your applications.\n"
"Each extension dealing with persistence will integrate with it for you.\n"
"And you will explicitly interact with transactions via CDI.\n"
"This guide will walk you through all that."
msgstr ""
"O Quarkus vem com um Gerenciador de Transações e o usa para coordenar e expor transações para suas aplicações.\n"
"Cada extensão que lida com persistência irá se integrar com ele para você.\n"
"E você interagirá explicitamente com as transações via CDI.\n"
"Este guia irá guiá-lo através de tudo isso."

#. type: Title ==
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Setting it up"
msgstr "Configuração"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"You don't need to worry about setting it up most of the time as extensions needing it will simply add it as a dependency.\n"
"Hibernate ORM for example will include the transaction manager and set it up properly."
msgstr "O senhor não precisa se preocupar em configurá-lo na maioria das vezes, pois as extensões que precisam dele simplesmente o adicionam como uma dependência. O Hibernate ORM, por exemplo, incluirá o gerenciador de transações e o configurará adequadamente."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"You might need to add it as a dependency explicitly if you are using transactions directly without Hibernate ORM for example.\n"
"Add the following to your build file:"
msgstr "Talvez seja necessário adicioná-lo explicitamente como uma dependência se o senhor estiver usando transações diretamente sem o Hibernate ORM, por exemplo. Adicione o seguinte ao seu arquivo de compilação:"

#. type: Block title
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Starting and stopping transactions: defining your boundaries"
msgstr "Iniciando e interrompendo transações: definindo seus limites"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"You can define your transaction boundaries either declaratively with `@Transactional` or programmatically with `QuarkusTransaction`. You can also use\n"
"the JTA `UserTransaction` API directly, however this is less user-friendly than `QuarkusTransaction`."
msgstr "O senhor pode definir os limites da transação de forma declarativa com `@Transactional` ou de forma programática com `QuarkusTransaction` . Também é possível usar a API JTA `UserTransaction` diretamente, mas isso é menos fácil de usar do que `QuarkusTransaction` ."

#. type: Title ===
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Declarative approach"
msgstr "Abordagem declarativa"

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid "The easiest way to define your transaction boundaries is to use the `@Transactional` annotation on your entry method (`javax.transaction.Transactional`)."
msgstr "A maneira mais fácil de definir os limites da transação é usar a anotação `@Transactional` no seu método de entrada ( `javax.transaction.Transactional` )."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "This annotation defines your transaction boundaries and will wrap this call within a transaction."
msgstr "Essa anotação define os limites da transação e encapsulará essa chamada em uma transação."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "A `RuntimeException` crossing the transaction boundaries will roll back the transaction."
msgstr "Um 'RuntimeException' cruzando os limites da transação reverterá a transação."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"`@Transactional` can be used to control transaction boundaries on any CDI bean at the method level or at the class level to ensure every method is transactional.\n"
"That includes REST endpoints."
msgstr "`@Transactional` pode ser usado para controlar os limites de transação em qualquer bean CDI no nível do método ou no nível da classe para garantir que todos os métodos sejam transacionais. Isso inclui os pontos de extremidade REST."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "You can control whether and how the transaction is started with parameters on `@Transactional`:"
msgstr "Você pode controlar se e como a transação é iniciada com parâmetros em '@Transactional':"

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "`@Transactional(REQUIRED)` (default): starts a transaction if none was started, stays with the existing one otherwise."
msgstr "'@Transactional(REQUIRED)' (padrão): inicia uma transação se nenhuma foi iniciada, permanece com a existente caso contrário."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "`@Transactional(REQUIRES_NEW)`: starts a transaction if none was started ; if an existing one was started, suspends it and starts a new one for the boundary of that method."
msgstr "«@Transactional(REQUIRES_NEW)»: inicia uma transação se não tiver sido iniciada nenhuma; se um existente foi iniciado, suspende-o e inicia um novo para o limite desse método."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "`@Transactional(MANDATORY)`: fails if no transaction was started ; works within the existing transaction otherwise."
msgstr "`@Transactional(MANDATORY)`: falha se não tiver sido iniciada nenhuma transação; caso contrário, funciona dentro da transação existente."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "`@Transactional(SUPPORTS)`: if a transaction was started, joins it ; otherwise works with no transaction."
msgstr "`@Transactional(SUPPORTS)`: se foi iniciada uma transação, junta-se a ela; caso contrário, não funciona com nenhuma transação."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "`@Transactional(NOT_SUPPORTED)`: if a transaction was started, suspends it and works with no transaction for the boundary of the method ; otherwise works with no transaction."
msgstr "`@Transactional(NOT_SUPPORTED)`: Se uma transação foi iniciada, suspende-a e trabalha sem transação durante o limite do método; caso contrário, trabalha sem transação."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "`@Transactional(NEVER)`: if a transaction was started, raises an exception ; otherwise works with no transaction."
msgstr "`@Transactional(NEVER)`: se foi iniciada uma transação, levanta uma exceção; caso contrário, funciona sem transação."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"`REQUIRED` or `NOT_SUPPORTED` are probably the most useful ones.\n"
"This is how you decide whether a method is to be running within or outside a transaction.\n"
"Make sure to check the JavaDoc for the precise semantic."
msgstr "`REQUIRED` ou `NOT_SUPPORTED` são provavelmente os mais úteis. É assim que o senhor decide se um método deve ser executado dentro ou fora de uma transação. Certifique-se de verificar o JavaDoc para obter a semântica exata."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"The transaction context is propagated to all calls nested in the `@Transactional` method as you would expect (in this example `childDAO.addToGiftList()` and `santaDAO.addToSantaTodoList()`).\n"
"The transaction will commit unless a runtime exception crosses the method boundary.\n"
"You can override whether an exception forces the rollback or not by using `@Transactional(dontRollbackOn=SomeException.class)` (or `rollbackOn`)."
msgstr "O contexto da transação é propagado para todas as chamadas aninhadas no método `@Transactional` , como seria de se esperar (neste exemplo, `childDAO.addToGiftList()` e `santaDAO.addToSantaTodoList()` ). A transação será confirmada, a menos que uma exceção de tempo de execução ultrapasse o limite do método. O senhor pode substituir se uma exceção força ou não a reversão usando `@Transactional(dontRollbackOn=SomeException.class)` (ou `rollbackOn` )."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"You can also programmatically ask for a transaction to be marked for rollback.\n"
"Inject a `TransactionManager` for this."
msgstr "O senhor também pode solicitar de forma programática que uma transação seja marcada para reversão. Para isso, o senhor deve injetar um `TransactionManager` ."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "Inject the `TransactionManager` to be able to activate `setRollbackOnly` semantic."
msgstr "Injete o `TransactionManager` para poder ativar a semântica `setRollbackOnly`."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "Programmatically decide to set the transaction for rollback."
msgstr "Decida programaticamente definir a transação para reversão."

#. type: Title ===
#: _versions/2.16/guides/transaction.adoc
#, fuzzy, no-wrap
msgid "Transaction Configuration"
msgstr "Configuração de transações"

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "Advanced configuration of the transaction is possible with the use of the `@TransactionConfiguration` annotation that is set in addition to the standard `@Transactional` annotation on your entry method or at the class level."
msgstr "A configuração avançada da transação é possível com a utilização da anotação `@TransactionConfiguration` que é definida para além da anotação `@Transactional` padrão no seu método de entrada ou ao nível da classe."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "The `@TransactionConfiguration` annotation allows to set a timeout property, in seconds, that applies to transactions created within the annotated method."
msgstr "A anotação '@TransactionConfiguration' permite definir uma propriedade de tempo limite, em segundos, que se aplica a transações criadas dentro do método anotado."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"This annotation may only be placed on the top level method delineating the transaction.\n"
"Annotated nested methods once a transaction has started will throw an exception."
msgstr "Essa anotação só pode ser colocada no método de nível superior que delineia a transação. Os métodos aninhados anotados após o início de uma transação lançarão uma exceção."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"If defined on a class, it is equivalent to defining it on all the methods of the class marked with `@Transactional`.\n"
"The configuration defined on a method takes precedence over the configuration defined on a class."
msgstr "Se definida em uma classe, é equivalente a defini-la em todos os métodos da classe marcados com `@Transactional` . A configuração definida em um método tem precedência sobre a configuração definida em uma classe."

#. type: Title ===
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Reactive extensions"
msgstr "Extensões reativas"

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "If your `@Transactional`-annotated method returns a reactive value, such as:"
msgstr "Se o método anotado '@Transactional' retornar um valor reativo, como:"

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "`CompletionStage` (from the JDK)"
msgstr "`CompletionStage` (do JDK)"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid "`Publisher` (from  Reactive-Streams)"
msgstr "`Publisher` (de Reactive-Streams)"

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid "Any type which can be converted to one of the two previous types using Reactive Type Converters"
msgstr "Qualquer tipo que possa ser convertido em um dos dois tipos anteriores usando Reactive Type Converters (Conversores de tipos reativos)"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"then the behaviour is a bit different, because the transaction will not be terminated until the\n"
"returned reactive value is terminated. In effect, the returned reactive value will be listened to\n"
"and if it terminates exceptionally the transaction will be marked for rollback, and will be committed\n"
"or rolled-back only at termination of the reactive value."
msgstr "então o comportamento é um pouco diferente, pois a transação não será encerrada até que o valor reativo retornado seja encerrado. Na verdade, o valor reativo retornado será ouvido e, se for encerrado excepcionalmente, a transação será marcada para reversão e será confirmada ou revertida somente quando o valor reativo for encerrado."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"This allows your reactive methods to keep on working on the transaction asynchronously until their\n"
"work is really done, and not just until the reactive method returns."
msgstr "Isso permite que os métodos reativos continuem trabalhando na transação de forma assíncrona até que o trabalho seja realmente concluído, e não apenas até que o método reativo retorne."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"If you need to propagate your transaction context across your reactive pipeline, please see the\n"
"xref:context-propagation.adoc[Context Propagation guide]."
msgstr "Se o senhor precisar propagar o contexto da transação em todo o pipeline reativo, consulte o xref:context-propagation.adoc[guia Propagação de contexto] ."

#. type: Title ===
#: _versions/2.16/guides/transaction.adoc
#, fuzzy, no-wrap
msgid "Programmatic Approach"
msgstr "Abordagem programática"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"You can use static methods on `QuarkusTransaction` to define transaction boundaries. This provides two different options,\n"
"a functional approach that allows you to run a lambda within the scope of a transaction, or by using explicit `begin`,\n"
"`commit` and `rollback` methods."
msgstr "O senhor pode usar métodos estáticos em `QuarkusTransaction` para definir os limites da transação. Isso oferece duas opções diferentes: uma abordagem funcional que permite executar um lambda dentro do escopo de uma transação ou usar os métodos explícitos `begin` , `commit` e `rollback` ."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "The above example shows a few different ways the API can be used."
msgstr "O exemplo acima mostra algumas maneiras diferentes de usar a API."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"The first method simply calls begin, does some work and commits it.\n"
"This created transaction is tied to the CDI request scope, so if it is still active when the request scope is destroyed then it will\n"
"be automatically rolled back. This removes the need to explicitly catch exceptions and call `rollback`, and acts as a safety net\n"
"against inadvertent transaction leaks, however it does mean that this can only be used when the request scope is active. The second\n"
"example in the method calls begin with a timeout option, and then rolls back the transaction."
msgstr "O primeiro método simplesmente chama begin, faz algum trabalho e o confirma. Essa transação criada está vinculada ao escopo da solicitação do CDI, portanto, se ainda estiver ativa quando o escopo da solicitação for destruído, ela será automaticamente revertida. Isso elimina a necessidade de capturar exceções explicitamente e chamar `rollback` , e funciona como uma rede de segurança contra vazamentos inadvertidos de transações, mas significa que isso só pode ser usado quando o escopo da solicitação estiver ativo. O segundo exemplo nas chamadas de método começa com uma opção de tempo limite e, em seguida, reverte a transação."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"The second method shows the use of lambda scoped transactions with `QuarkusTransaction.runner(...)`;\n"
"the first example just runs a `Runnable` within a new transaction,\n"
"the second does the same but joining the existing transaction (if any),\n"
"and the third calls a `Callable` with some specific options.\n"
"In particular the `exceptionHandler` method can be used to control if the transaction is rolled back or not on exception."
msgstr "O segundo método mostra o uso de transações com escopo lambda com `QuarkusTransaction.runner(…​)` ; o primeiro exemplo apenas executa um `Runnable` em uma nova transação, o segundo faz o mesmo, mas juntando-se à transação existente (se houver), e o terceiro chama um `Callable` com algumas opções específicas. Em particular, o método `exceptionHandler` pode ser usado para controlar se a transação é revertida ou não em caso de exceção."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "The following semantics are supported:"
msgstr "A seguinte semântica é suportada:"

#. type: Labeled list
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "`QuarkusTransaction.disallowingExisting()`/`DISALLOW_EXISTING`"
msgstr "`QuarkusTransaction.disallowingExisting()`/ `DISALLOW_EXISTING`"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"If a transaction is already associated with the current thread a `QuarkusTransactionException` will be thrown,\n"
"otherwise a new transaction is started, and follows all the normal lifecycle rules."
msgstr "Se uma transação já estiver associada ao thread atual, um `QuarkusTransactionException` será lançado; caso contrário, uma nova transação será iniciada e seguirá todas as regras normais do ciclo de vida."

#. type: Labeled list
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "`QuarkusTransaction.joiningExisting()`/`JOIN_EXISTING`"
msgstr "`QuarkusTransaction.joiningExisting()`/ `JOIN_EXISTING`"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"If no transaction is active then a new transaction will be started, and committed when the method ends.\n"
"If an exception is thrown the exception handler registered by `#exceptionHandler(Function)` will be called to\n"
"decide if the TX should be committed or rolled back.\n"
"If an existing transaction is active then the method is run in the context of the existing transaction. If an\n"
"exception is thrown the exception handler will be called, however\n"
"a result of `ExceptionResult#ROLLBACK` will result in the TX marked as rollback only, while a result of\n"
"`ExceptionResult#COMMIT` will result in no action being taken."
msgstr "Se nenhuma transação estiver ativa, uma nova transação será iniciada e confirmada quando o método terminar. Se uma exceção for lançada, o manipulador de exceções registrado por `#exceptionHandler(Function)` será chamado para decidir se a TX deve ser confirmada ou revertida. Se uma transação existente estiver ativa, o método será executado no contexto da transação existente. Se uma exceção for lançada, o manipulador de exceções será chamado; no entanto, um resultado de `ExceptionResult#ROLLBACK` fará com que o TX seja marcado apenas como rollback, enquanto um resultado de `ExceptionResult#COMMIT` fará com que nenhuma ação seja tomada."

#. type: Labeled list
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "`QuarkusTransaction.requiringNew()`/`REQUIRE_NEW`"
msgstr "`QuarkusTransaction.requiringNew()`/ `REQUIRE_NEW`"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"If an existing transaction is already associated with the current thread then the transaction is suspended,\n"
"then a new transaction is started which follows all the normal lifecycle rules,\n"
"and when it's complete the original transaction is resumed.\n"
"Otherwise, a new transaction is started, and follows all the normal lifecycle rules."
msgstr "Se uma transação existente já estiver associada ao thread atual, a transação será suspensa, uma nova transação será iniciada e seguirá todas as regras normais do ciclo de vida e, quando for concluída, a transação original será retomada. Caso contrário, uma nova transação é iniciada e segue todas as regras normais do ciclo de vida."

#. type: Labeled list
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "`QuarkusTransaction.suspendingExisting()`/`SUSPEND_EXISTING`"
msgstr "`QuarkusTransaction.suspendingExisting()`/ `SUSPEND_EXISTING`"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"If no transaction is active then these semantics are basically a no-op.\n"
"If a transaction is active then it is suspended, and resumed after the task is run.\n"
"The exception handler will never be consulted when these semantics are in use, specifying both an exception handler and\n"
"these semantics are considered an error.\n"
"These semantics allows for code to easily be run outside the scope of a transaction."
msgstr "Se nenhuma transação estiver ativa, essas semânticas são basicamente um \"no-op\". Se uma transação estiver ativa, ela será suspensa e retomada depois que a tarefa for executada. O manipulador de exceções nunca será consultado quando essas semânticas estiverem em uso; especificar um manipulador de exceções e essas semânticas é considerado um erro. Essa semântica permite que o código seja facilmente executado fora do escopo de uma transação."

#. type: Title ===
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Legacy API approach"
msgstr "Abordagem API legada"

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "The less easy way is to inject a `UserTransaction` and use the various transaction demarcation methods."
msgstr "A forma menos fácil é injetar um `UserTransaction` e utilizar os vários métodos de demarcação de transacções."

#. type: delimited block =
#: _versions/2.16/guides/transaction.adoc
msgid "You cannot use `UserTransaction` in a method having a transaction started by a `@Transactional` call."
msgstr "Não é possível utilizar `UserTransaction` num método com uma transação iniciada por uma chamada `@Transactional`."

#. type: Title ==
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Configuring the transaction timeout"
msgstr "Configurando o tempo limite da transação"

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "You can configure the default transaction timeout, the timeout that applies to all transactions managed by the transaction manager, via the property `quarkus.transaction-manager.default-transaction-timeout`, specified as a duration."
msgstr "Pode configurar o tempo limite de transação predefinido, o tempo limite que se aplica a todas as transacções geridas pelo gestor de transacções, através da propriedade `quarkus.transaction-manager.default-transaction-timeout`, especificada como uma duração."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "The default value is 60 seconds."
msgstr "O valor padrão é 60 segundos."

#. type: Title ==
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Configuring transaction node name identifier"
msgstr "Configurando o identificador de nome do nó de transação"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"Narayana, as the underlying transaction manager, has a concept of a unique node identifier.\n"
"This is important if you consider using XA transactions that involve multiple resources."
msgstr "O Narayana, como gerenciador de transações subjacente, tem o conceito de um identificador de nó exclusivo. Isso é importante se o senhor considerar o uso de transações XA que envolvam vários recursos."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"The node name identifier plays a crucial part in the identification of a transaction.\n"
"The node name identifier is forged into the transaction id when the transaction is created.\n"
"Based on the node name identifier, the transaction manager is capable of recognizing the XA transaction\n"
"counterparts created in database or JMS broker. The identifier makes possible for the transaction manager\n"
"to roll back the transaction counterparts during recovery."
msgstr "O identificador do nome do nó desempenha um papel fundamental na identificação de uma transação. O identificador do nome do nó é forjado no ID da transação quando a transação é criada. Com base no identificador do nome do nó, o gerenciador de transações é capaz de reconhecer as contrapartidas da transação XA criadas no banco de dados ou no broker JMS. O identificador permite que o gerenciador de transações reverta as contrapartes da transação durante a recuperação."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"The node name identifier needs to be unique per transaction manager deployment.\n"
"And the node identifier needs to be stable over the transaction manager restarts."
msgstr "O identificador do nome do nó precisa ser exclusivo por implantação do gerenciador de transações. E o identificador do nó precisa ser estável durante as reinicializações do gerenciador de transações."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "The node name identifier may be configured via the property `quarkus.transaction-manager.node-name`."
msgstr "O identificador do nome do nó pode ser configurado através da propriedade `quarkus.transaction-manager.node-name`."

#. type: Title ==
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Using `@TransactionScoped` to bind CDI beans to the transaction lifecycle"
msgstr "Utilizar `@TransactionScoped` para ligar beans CDI ao ciclo de vida da transação"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"You can define beans that live for as long as a transaction,\n"
"and through CDI lifecycle events perform actions when a transaction starts and ends."
msgstr "O senhor pode definir beans que duram tanto quanto uma transação e, por meio de eventos do ciclo de vida do CDI, executam ações quando uma transação começa e termina."

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "Just assign the transaction xref:cdi.adoc#bean-scope[scope] to such beans using the `@TransactionScoped` annotation:"
msgstr "Basta atribuir o  link:cdi.html#bean-scope[âmbito] da transação a esses beans utilizando a anotação `@TransactionScoped`:"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"Alternatively, if you don't necessarily need to hold state during the transaction,\n"
"and just want to react to transaction start/end events,\n"
"you can simply declare event listeners in a differently scoped bean:"
msgstr "Como alternativa, se o usuário não precisar necessariamente manter o estado durante a transação e quiser apenas reagir aos eventos de início/fim da transação, poderá simplesmente declarar os ouvintes de eventos em um bean com escopo diferente:"

#. type: Plain text
#: _versions/2.16/guides/transaction.adoc
msgid "The `event` object represents the transaction ID, and defines `toString()`/`equals()`/`hashCode()` accordingly."
msgstr "O objeto `event` representa o ID da transação e define `toString()`/ `equals()`/ `hashCode()` em conformidade."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"In listener methods, you can access more information about the transaction in progress by accessing the `TransactionManager`,\n"
"which is a CDI bean and can be ``@Inject``ed."
msgstr "Nos métodos listener, o senhor pode acessar mais informações sobre a transação em andamento acessando o `TransactionManager` , que é um bean CDI e pode ser `@Inject` ed."

#. type: Title ==
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Why always having a transaction manager?"
msgstr "Por que sempre ter um gerenciador de transações?"

#. type: Labeled list
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Does it work everywhere I want to?"
msgstr "Funciona em todos os lugares que eu quiser?"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"Yep, it works in your Quarkus application, in your IDE, in your tests, because all of these are Quarkus applications.\n"
"JTA has some bad press for some people.\n"
"I don't know why.\n"
"Let's just say that this is not your grandpa's JTA implementation.\n"
"What we have is perfectly embeddable and lean."
msgstr "Sim, ele funciona no seu aplicativo Quarkus, no seu IDE, nos seus testes, porque todos esses são aplicativos Quarkus. O JTA tem uma má reputação para algumas pessoas. Não sei por quê. Digamos apenas que esta não é a implementação JTA do seu avô. O que temos é perfeitamente incorporável e enxuto."

#. type: Labeled list
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Does it do 2 Phase Commit and slow down my app?"
msgstr "Fazer 2 Phase Commit e torna a minha aplicação mais lenta?"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"No, this is an old folk tale.\n"
"Let's assume it essentially comes for free and let you scale to more complex cases involving several datasources as needed."
msgstr "Não, esse é um conto popular antigo. Vamos supor que ele seja essencialmente gratuito e permita que o senhor amplie para casos mais complexos envolvendo vários recursos de dados, conforme necessário."

#. type: Labeled list
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "I don't need transaction when I do read only operations, it's faster."
msgstr "Não preciso de transação quando faço operações somente leitura, é mais rápido."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"Wrong. +\n"
"First off, just disable the transaction by marking your transaction boundary with `@Transactional(NOT_SUPPORTED)` (or `NEVER` or `SUPPORTS` depending on the semantic you want). +\n"
"Second, it's again fairy tale that not using transaction is faster.\n"
"The answer is, it depends on your DB and how many SQL SELECTs you are making.\n"
"No transaction means the DB does have a single operation transaction context anyway. +\n"
"Third, when you do several SELECTs, it's better to wrap them in a single transaction because they will all be consistent with one another.\n"
"Say your DB represents your car dashboard, you can see the number of kilometers remaining and the fuel gauge level.\n"
"By reading it in one transaction, they will be consistent.\n"
"If you read one and the other from two different transactions, then they can be inconsistent.\n"
"It can be more dramatic if you read data related to rights and access management for example."
msgstr ""
"Errado.\n"
"\n"
" Em primeiro lugar, basta desativar a transação marcando o limite da transação com `@Transactional(NOT_SUPPORTED)` (ou `NEVER` ou `SUPPORTS` , dependendo da semântica que o senhor desejar).\n"
"\n"
" Em segundo lugar, é novamente um conto de fadas dizer que não usar transações é mais rápido. A resposta é que isso depende do seu banco de dados e de quantos SELECTs SQL o senhor está fazendo. De qualquer forma, a ausência de transação significa que o banco de dados tem um contexto de transação de operação única.\n"
"\n"
" Em terceiro lugar, quando o senhor faz vários SELECTs, é melhor envolvê-los em uma única transação porque todos eles serão consistentes entre si. Digamos que o banco de dados represente o painel do seu carro, o senhor pode ver o número de quilômetros restantes e o nível do medidor de combustível. Ao lê-los em uma única transação, eles serão consistentes. Se o senhor ler um e o outro em duas transações diferentes, eles poderão ser inconsistentes. Isso pode ser mais dramático se o senhor ler dados relacionados ao gerenciamento de direitos e acesso, por exemplo."

#. type: Labeled list
#: _versions/2.16/guides/transaction.adoc
#, no-wrap
msgid "Why do you prefer JTA vs Hibernate's transaction management API"
msgstr "Por que você prefere a API de gerenciamento de transações do JTA vs Hibernate"

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"Managing the transactions manually via `entityManager.getTransaction().begin()` and friends lead to a butt ugly code with tons of try catch finally that people get wrong.\n"
"Transactions are also about JMS and other database access, so one API makes more sense."
msgstr "O gerenciamento manual das transações por meio do site `entityManager.getTransaction().begin()` e de amigos resulta em um código muito feio, com toneladas de tentativas de captura que as pessoas entendem errado. As transações também têm a ver com JMS e outros acessos a bancos de dados, portanto, uma API faz mais sentido."

#. type: Labeled list
#: _versions/2.16/guides/transaction.adoc
#, fuzzy, no-wrap
msgid "It's a mess because I don't know if my JPA persistence unit is using `JTA` or `Resource-level` Transaction"
msgstr "É uma bagunça porque não sei se minha unidade de persistência JPA está usando `JTA` ou `Resource-level` Transaction."

#: _versions/2.16/guides/transaction.adoc
#, fuzzy
msgid ""
"It's not a mess in Quarkus :)\n"
"Resource-level was introduced to support JPA in a non managed environment.\n"
"But Quarkus is both lean and a managed environment, so we can safely always assume we are in JTA mode.\n"
"The end result is that the difficulties of running Hibernate ORM + CDI + a transaction manager in Java SE mode are solved by Quarkus."
msgstr "Não é uma bagunça no Quarkus :) O Resource-level foi introduzido para dar suporte ao JPA em um ambiente não gerenciado. Mas o Quarkus é um ambiente enxuto e gerenciado, portanto, podemos sempre presumir com segurança que estamos no modo JTA. O resultado final é que as dificuldades de executar o Hibernate ORM + CDI + um gerenciador de transações no modo Java SE são resolvidas pelo Quarkus."
