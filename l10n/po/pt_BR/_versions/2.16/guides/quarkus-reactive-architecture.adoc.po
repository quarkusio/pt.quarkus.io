# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, no-wrap
msgid "Quarkus Reactive Architecture"
msgstr "Arquitetura Reativa do Quarkus"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Quarkus is reactive.\n"
"It's even more than this: Quarkus unifies reactive and imperative programming.\n"
"You don't even have to choose: you can implement reactive components and imperative components then combine them inside the very **same** application.\n"
"No need to use different stacks, tooling or APIs; Quarkus bridges both worlds."
msgstr "O Quarkus é reativo. É ainda mais do que isso: O Quarkus unifica a programação reativa e imperativa. O senhor nem precisa escolher: pode implementar componentes reativos e componentes imperativos e combiná-los no *mesmo* aplicativo. Não há necessidade de usar pilhas, ferramentas ou APIs diferentes; o Quarkus une os dois mundos."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"This page will explain what we mean by _Reactive_ and how Quarkus enables it.\n"
"We will also discuss execution and programming models.\n"
"Finally, we will list the Quarkus extensions offering reactive facets."
msgstr "Esta página explicará o que queremos dizer com _Reativo_ e como o Quarkus permite isso. Também discutiremos modelos de execução e programação. Por fim, listaremos as extensões do Quarkus que oferecem facetas reativas."

#. type: Title ==
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "What is _Reactive_?"
msgstr "O que é _Reativo_ ?"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"The _Reactive_ word is overloaded and associated with many concepts such as back-pressure, monads, or event-driven architecture.\n"
"So, let's clarify what we mean by _Reactive_."
msgstr "A palavra _reativo_ é sobrecarregada e associada a muitos conceitos, como pressão de retorno, mônadas ou arquitetura orientada a eventos. Portanto, vamos esclarecer o que queremos dizer com _Reativo_ ."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"_Reactive_ is a set of principles and guidelines to build responsive distributed systems and applications.\n"
"The https://www.reactivemanifesto.org/[Reactive Manifesto] characterizes _Reactive Systems_ as distributed systems having four characteristics:"
msgstr "_Reativo_ é um conjunto de princípios e diretrizes para criar sistemas e aplicativos distribuídos responsivos. O link:https://www.reactivemanifesto.org/[Manifesto Reativo] caracteriza _os Sistemas Reativos_ como sistemas distribuídos com quatro características:"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Responsive - they must respond in a timely fashion"
msgstr "Responsividade - eles devem responder em tempo hábil"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Elastic - they adapt themselves to the fluctuating load"
msgstr "Elástico - eles se adaptam à carga flutuante"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Resilient - they handle failures gracefully"
msgstr "Resiliente - eles lidam com falhas de forma graciosa"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Asynchronous message passing - the component of a reactive system interact using messages"
msgstr "Passagem de mensagem assíncrona - o componente de um sistema reativo interage usando mensagens"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "In addition to this, the https://principles.reactive.foundation/[Reactive Principles white paper] lists a set of rules and patterns to help the construction of reactive systems."
msgstr "Além disso, o link:https://principles.reactive.foundation/[white paper Reactive Principles] lista um conjunto de regras e padrões para ajudar na construção de sistemas reativos."

#. type: Title ==
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "Reactive Systems and Quarkus"
msgstr "Sistemas reativos e Quarkus"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Reactive System is an architectural style that can be summarized by: distributed systems done right.\n"
"Relying on asynchronous message passing helps enforce the loose coupling (both in terms of space and time) between the different components.\n"
"You send messages to virtual destinations. The receiver can be located anywhere, or even not yet exist at the time of the message dispatch.\n"
"The elasticity pillar allows scaling up and down individual components according to the load.\n"
"Elasticity also provides redundancy, which helps with the resilience pillar.\n"
"Failures are inevitable.\n"
"Components forming a reactive system must handle them gracefully, avoid cascading failures, and self-adapt themselves."
msgstr "O sistema reativo é um estilo de arquitetura que pode ser resumido em: sistemas distribuídos bem feitos. Contar com a passagem de mensagens assíncronas ajuda a reforçar o acoplamento frouxo (tanto em termos de espaço quanto de tempo) entre os diferentes componentes. O usuário envia mensagens para destinos virtuais. O destinatário pode estar localizado em qualquer lugar ou até mesmo não existir no momento do envio da mensagem. O pilar da elasticidade permite aumentar e diminuir a escala de componentes individuais de acordo com a carga. A elasticidade também proporciona redundância, o que ajuda no pilar da resiliência. As falhas são inevitáveis. Os componentes que formam um sistema reativo devem lidar com elas com elegância, evitar falhas em cascata e se autoadaptar."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"A responsive system can continue to handle the request while facing failures and under fluctuating load.\n"
"Quarkus has been tailored for that.\n"
"It provides features that will help you design, implement and operate reactive systems."
msgstr "Um sistema responsivo pode continuar a atender à solicitação enquanto enfrenta falhas e sob carga flutuante. O Quarkus foi feito sob medida para isso. Ele oferece recursos que o ajudarão a projetar, implementar e operar sistemas reativos."

#. type: Title ==
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "Reactive Applications"
msgstr "Aplicativos reativos"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Quarkus is not only going to help you build reactive systems.\n"
"It's also going to make sure that each constituent enforces the reactive principles and is highly efficient."
msgstr "O Quarkus não vai apenas ajudar o senhor a criar sistemas reativos. Ele também garantirá que cada componente aplique os princípios reativos e seja altamente eficiente."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Efficiency is essential, especially in the Cloud and in containerized environments.\n"
"Resources, such as CPU and memory, are shared among multiple applications.\n"
"Greedy applications that consume lots of memory are inefficient and put penalties on sibling applications.\n"
"You may need to request more memory, CPU, or bigger virtual machines.\n"
"It either increases your monthly Cloud bill or decreases your deployment density."
msgstr "A eficiência é essencial, especialmente na nuvem e em ambientes com contêineres. Os recursos, como CPU e memória, são compartilhados entre vários aplicativos. Aplicativos gananciosos que consomem muita memória são ineficientes e penalizam os aplicativos irmãos. Talvez o senhor precise solicitar mais memória, CPU ou máquinas virtuais maiores. Isso aumenta sua conta mensal da nuvem ou diminui a densidade da implementação."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"I/O is an essential part of almost any modern system.\n"
"Whether it is to call a remote service, interact with a database, or send messages to a broker, there are all I/O-based operations.\n"
"Efficiently handling them is critical to avoid greedy applications.\n"
"For this reason, Quarkus uses non-blocking I/O, which allows a low number of OS threads to manage many concurrent I/Os.\n"
"As a result, Quarkus applications allow for higher concurrency, use less memory, and improve the deployment density."
msgstr "A E/S é uma parte essencial de quase todos os sistemas modernos. Seja para chamar um serviço remoto, interagir com um banco de dados ou enviar mensagens a um corretor, todas essas operações são baseadas em E/S. O tratamento eficiente dessas operações é fundamental para evitar aplicativos gananciosos. Por esse motivo, o Quarkus usa E/S sem bloqueio, o que permite que um número reduzido de threads do sistema operacional gerencie muitas E/Ss simultâneas. Como resultado, os aplicativos Quarkus permitem maior simultaneidade, usam menos memória e melhoram a densidade da implementação."

#. type: Title ==
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "How does Quarkus enable Reactive?"
msgstr "Como o Quarkus habilita o Reactive?"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Under the hood, Quarkus has a reactive engine.\n"
"This engine, powered by Eclipse Vert.x and Netty, handles the non-blocking I/O interactions."
msgstr "Sob o capô, o Quarkus tem um mecanismo reativo. Esse mecanismo, alimentado pelo Eclipse Vert.x e Netty, lida com as interações de E/S sem bloqueio."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Quarkus extensions and the application code can use this engine to orchestrate I/O interactions, interact with databases, send and receive messages, and so on."
msgstr "As extensões do Quarkus e o código do aplicativo podem usar esse mecanismo para orquestrar interações de E/S, interagir com bancos de dados, enviar e receber mensagens e assim por diante."

#. type: Title ==
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "Reactive execution model"
msgstr "Modelo de execução reativa"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"While using non-blocking I/O has tremendous benefits, it does not come for free.\n"
"Indeed, it introduces a new execution model quite different from the one used by classical frameworks."
msgstr "Embora o uso de E/S sem bloqueio tenha enormes benefícios, ele não é gratuito. De fato, ele introduz um novo modelo de execução bastante diferente daquele usado pelas estruturas clássicas."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Traditional applications use blocking I/O and an imperative (sequential) execution model.\n"
"So, in an application exposing an HTTP endpoint, each HTTP request is associated with a thread.\n"
"In general, that thread is going to process the whole request and the thread is tied up serving only that request for the duration of that request.\n"
"When the processing requires interacting with a remote service, it uses blocking I/O.\n"
"The thread is blocked, waiting for the result of the I/O.\n"
"While that model is simple to develop with (as everything is sequential), it has a few drawbacks.\n"
"To handle concurrent requests, you need multiple threads, so, you need to introduce a worker thread pool.\n"
"The size of this pool constrains the concurrency of the application.\n"
"In addition, each thread has a cost in terms of memory and CPU.\n"
"Large thread pools result in greedy applications."
msgstr "Os aplicativos tradicionais usam E/S de bloqueio e um modelo de execução imperativo (sequencial). Portanto, em um aplicativo que expõe um endpoint HTTP, cada solicitação HTTP é associada a um thread. Em geral, esse thread processará toda a solicitação e estará vinculado ao atendimento apenas dessa solicitação durante o período em que ela durar. Quando o processamento exige a interação com um serviço remoto, ele usa E/S de bloqueio. O thread fica bloqueado, aguardando o resultado da E/S. Embora esse modelo seja simples de desenvolver (já que tudo é sequencial), ele tem algumas desvantagens. Para lidar com solicitações simultâneas, são necessários vários threads, portanto, é preciso introduzir um pool de threads de trabalho. O tamanho desse pool restringe a simultaneidade do aplicativo. Além disso, cada thread tem um custo em termos de memória e CPU. Grandes pools de threads resultam em aplicativos ávidos."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"As we have seen above, non-blocking I/O avoids that problem.\n"
"A few threads can handle many concurrent I/O.\n"
"If we go back to the HTTP endpoint example, the request processing is executed on one of these I/O threads.\n"
"Because there are only a few of them, you need to use them wisely.\n"
"When the request processing needs to call a remote service, you can't block the thread anymore.\n"
"You schedule the I/O and pass a continuation, i.e., the code to execute once the I/O completes."
msgstr "Como vimos acima, a E/S sem bloqueio evita esse problema. Alguns threads podem lidar com muitas E/S simultâneas. Se voltarmos ao exemplo do endpoint HTTP, o processamento da solicitação é executado em um desses threads de E/S. Como há apenas alguns deles, o senhor precisa usá-los com sabedoria. Quando o processamento da solicitação precisa chamar um serviço remoto, o senhor não pode mais bloquear o thread. O senhor agenda a E/S e passa uma continuação, ou seja, o código a ser executado quando a E/S for concluída."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "This model is much more efficient, but we need a way to write code to express these continuations."
msgstr "Esse modelo é muito mais eficiente, mas precisamos de uma maneira de escrever código para expressar essas continuações."

#. type: Title ==
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "Reactive Programming Models"
msgstr "Modelos de programação reativa"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"The Quarkus architecture, based on non-blocking I/O and message passing, allows multiple supporting reactive development models that are all different in how they express continuations.\n"
"The two main ways to write reactive code with Quarkus are:"
msgstr "A arquitetura do Quarkus, baseada em E/S sem bloqueio e passagem de mensagens, permite vários modelos de desenvolvimento reativo de suporte, todos diferentes na forma como expressam as continuações. As duas principais formas de escrever código reativo com o Quarkus são:"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Reactive Programming with https://smallrye.io/smallrye-mutiny[Mutiny], and"
msgstr "Programação reativa com link:https://smallrye.io/smallrye-mutiny[Mutiny] , e"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Coroutines with Kotlin"
msgstr "Corrotinas com Kotlin"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"First, https://smallrye.io/smallrye-mutiny[Mutiny] is an intuitive, event-driven reactive programming library.\n"
"With Mutiny, you write event-driven code.\n"
"Your code is a pipeline receiving events and processing them.\n"
"Each stage in your pipeline can be seen as a continuation, as Mutiny invokes them when the upstream part of the pipeline emits an event."
msgstr "Em primeiro lugar, link:https://smallrye.io/smallrye-mutiny[o Mutiny] é uma biblioteca de programação reativa intuitiva e orientada por eventos. Com o Mutiny, o senhor escreve código orientado por eventos. Seu código é um pipeline que recebe eventos e os processa. Cada estágio em seu pipeline pode ser visto como uma continuação, pois o Mutiny os invoca quando a parte anterior do pipeline emite um evento."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"The Mutiny API has been tailored to improve the readability and maintenance of the codebase.\n"
"Mutiny provides everything you need to orchestrate asynchronous actions, including concurrent execution.\n"
"It also offers a large set of operators to manipulate individual events and streams of events."
msgstr "A API do Mutiny foi adaptada para melhorar a legibilidade e a manutenção da base de código. O Mutiny fornece tudo o que o senhor precisa para orquestrar ações assíncronas, inclusive a execução simultânea. Ele também oferece um grande conjunto de operadores para manipular eventos individuais e fluxos de eventos."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Find more info about Mutiny and its usage in Quarkus on xref:mutiny-primer.adoc[Mutiny support documentation]."
msgstr "Para obter mais informações sobre o Mutiny e seu uso no Quarkus, consulte a xref:mutiny-primer.adoc[documentação de suporte do Mutiny] ."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Co-routines are a way to write asynchronous code sequentially.\n"
"It suspends the execution of the code during I/O and registers the rest of the code as the continuation.\n"
"Kotlin coroutines are great when developing in Kotlin and only need to express sequential compositions (chain of co-dependent asynchronous tasks)."
msgstr "As co-rotinas são uma forma de escrever código assíncrono sequencialmente. Ele suspende a execução do código durante a E/S e registra o restante do código como a continuação. As corrotinas Kotlin são ótimas para o desenvolvimento em Kotlin e só precisam expressar composições sequenciais (cadeia de tarefas assíncronas co-dependentes)."

#. type: Title ==
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "Unification of Imperative and Reactive"
msgstr "Unificação de imperativo e reativo"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Changing your development model is not simple.\n"
"It requires relearning and restructuring code in a non-blocking fashion.\n"
"Fortunately, you don't have to do it!"
msgstr "Mudar seu modelo de desenvolvimento não é simples. É necessário reaprender e reestruturar o código de forma não bloqueante. Felizmente, o senhor não precisa fazer isso!"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Quarkus is inherently reactive thanks to its reactive engine.\n"
"But, you, as an application developer, don't have to write reactive code.\n"
"Quarkus unifies reactive and imperative.\n"
"It means that you can write traditional blocking applications on Quarkus.\n"
"But how do you avoid blocking the I/O threads?\n"
"Quarkus implements a https://en.wikipedia.org/wiki/Proactor_pattern[proactor pattern] that switches to worker thread when needed."
msgstr "O Quarkus é inerentemente reativo graças ao seu mecanismo reativo. Mas o senhor, como desenvolvedor de aplicativos, não precisa escrever código reativo. O Quarkus unifica o reativo e o imperativo. Isso significa que o senhor pode escrever aplicativos tradicionais de bloqueio no Quarkus. Mas como o senhor evita o bloqueio dos threads de E/S? O Quarkus implementa um link:https://en.wikipedia.org/wiki/Proactor_pattern[padrão proator] que alterna para o thread de trabalho quando necessário."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Thanks to hints in your code (such as the `@Blocking` and `@NonBlocking` annotations), Quarkus extensions can decide when the application logic is blocking or non-blocking.\n"
"If we go back to the HTTP endpoint example from above, the HTTP request is always received on an I/O thread.\n"
"Then, the extension dispatching that request to your code decides whether to call it on the I/O thread, avoiding thread switches, or on a worker thread.\n"
"This decision depends on the extension.\n"
"For example, the RESTEasy Reactive extension uses the `@Blocking` annotation to determine if the method needs to be invoked using a worker thread, or if it can be invoked using the I/O thread."
msgstr "Graças às dicas no seu código (como as anotações `@Blocking` e `@NonBlocking` ), as extensões do Quarkus podem decidir quando a lógica do aplicativo é bloqueante ou não bloqueante. Se voltarmos ao exemplo do endpoint HTTP acima, a solicitação HTTP é sempre recebida em um thread de E/S. Em seguida, a extensão que despacha essa solicitação para o seu código decide se deve chamá-la no thread de E/S, evitando trocas de thread, ou em um thread de trabalho. Essa decisão depende da extensão. Por exemplo, a extensão RESTEasy Reactive usa a anotação `@Blocking` para determinar se o método precisa ser chamado usando um thread de trabalho ou se pode ser chamado usando o thread de E/S."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Quarkus is pragmatic and versatile.\n"
"You decide how to develop and execute your application.\n"
"You can use the imperative way, the reactive way, or mix them, using reactive on the parts of the application under high concurrency."
msgstr "O Quarkus é pragmático e versátil. O senhor decide como desenvolver e executar seu aplicativo. O senhor pode usar o modo imperativo, o modo reativo ou misturá-los, usando o reativo nas partes do aplicativo com alta simultaneidade."

#. type: Title ==
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "Quarkus Extensions enabling Reactive"
msgstr "Extensões do Quarkus que permitem o Reactive"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Quarkus offers a large set of reactive APIs and features.\n"
"This section lists the most important, but it's not an exhaustive list.\n"
"Quarkus adds new features in every release, and the https://github.com/quarkiverse[Quarkiverse] proposes many extensions enabling _Reactive_."
msgstr "O Quarkus oferece um grande conjunto de APIs e recursos reativos. Esta seção lista os mais importantes, mas não é uma lista exaustiva. O Quarkus adiciona novos recursos em cada versão, e o link:https://github.com/quarkiverse[Quarkiverse] propõe muitas extensões que permitem o _Reactive_ ."

#. type: Title ===
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "HTTP"
msgstr "HTTP"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"RESTEasy Reactive: an implementation of JAX-RS tailored for the Quarkus architecture.\n"
"It follows a reactive-first approach but allows imperative code using the `@Blocking` annotation."
msgstr "RESTEasy Reactive: uma implementação do JAX-RS adaptada para a arquitetura Quarkus. Ela segue uma abordagem reativa em primeiro lugar, mas permite código imperativo usando a anotação `@Blocking` ."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Reactive Routes: a declarative way to register HTTP routes directly on the Vert.x router used by Quarkus to route HTTP requests to methods."
msgstr "Rotas reativas: uma forma declarativa de registrar rotas HTTP diretamente no roteador Vert.x usado pelo Quarkus para rotear solicitações HTTP para métodos."

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Reactive Rest Client: allows consuming HTTP endpoints.\n"
"Under the hood, it uses the non-blocking I/O features from Quarkus."
msgstr "Reactive Rest Client: permite o consumo de pontos de extremidade HTTP. Na parte interna, ele usa os recursos de E/S sem bloqueio do Quarkus."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Qute - the Qute template engine exposes a reactive API to render templates in a non-blocking manner."
msgstr "Qute - o mecanismo de modelo Qute expõe uma API reativa para renderizar modelos de forma não bloqueada."

#. type: Title ===
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, no-wrap
msgid "Data"
msgstr "Dados"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Hibernate Reactive: a version of Hibernate ORM using asynchronous and non-blocking clients to interact with the database."
msgstr "Hibernate Reactive: uma versão do Hibernate ORM que usa clientes assíncronos e sem bloqueio para interagir com o banco de dados."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Hibernate Reactive with Panache: provide active record and repository support on top of Hibernate Reactive."
msgstr "Hibernate Reactive with Panache: oferece suporte a registros ativos e repositórios sobre o Hibernate Reactive."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Reactive PostgreSQL client: an asynchronous and non-blocking client interacting with a PostgreSQL database, allowing high concurrency."
msgstr "Cliente PostgreSQL reativo: um cliente assíncrono e sem bloqueio que interage com um banco de dados PostgreSQL, permitindo alta simultaneidade."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Reactive MySQL client: an asynchronous and non-blocking client interacting with a MySQL database"
msgstr "Cliente MySQL reativo: um cliente assíncrono e sem bloqueio que interage com um banco de dados MySQL"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "The MongoDB extension: exposes an imperative and reactive (Mutiny) APIs to interact with MongoDB."
msgstr "A extensão do MongoDB: expõe APIs imperativas e reativas (Mutiny) para interagir com o MongoDB."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Mongo with Panache offers active record support for both the imperative and reactive APIs."
msgstr "O Mongo with Panache oferece suporte a registros ativos para APIs imperativas e reativas."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "The Cassandra extension: exposes an imperative and reactive (Mutiny) APIs to interact with Cassandra"
msgstr "A extensão Cassandra: expõe APIs imperativas e reativas (Mutiny) para interagir com o Cassandra"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "The Redis extension: exposes an imperative and reactive (Mutiny) APIs to store and retrieve data from a Redis key-value store."
msgstr "A extensão Redis: expõe APIs imperativas e reativas (Mutiny) para armazenar e recuperar dados de um armazenamento de valores-chave Redis."

#. type: Title ===
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "Event-Driven Architecture"
msgstr "Arquitetura orientada a eventos"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Reactive Messaging: allows implementing event-driven applications using reactive and imperative code."
msgstr "Mensagens reativas: permite implementar aplicativos orientados por eventos usando código reativo e imperativo."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Kafka Connector for Reactive Messaging: allows implementing applications consuming and writing Kafka records"
msgstr "Kafka Connector for Reactive Messaging: permite implementar aplicativos que consomem e gravam registros do Kafka"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "AMQP 1.0 Connector for Reactive Message: allows implementing applications sending and receiving AMQP messages."
msgstr "AMQP 1.0 Connector for Reactive Message: permite implementar aplicativos que enviam e recebem mensagens AMQP."

#. type: Title ===
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "Network Protocols and Utilities"
msgstr "Protocolos e utilitários de rede"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"gRPC: implement and consume gRPC services.\n"
"Offer reactive and imperative programming interfaces."
msgstr "gRPC: implementa e consome serviços gRPC. Oferece interfaces de programação reativas e imperativas."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "GraphQL: implement and query (client) data store using GraphQL. Offers Mutiny APIs and subscriptions as event streams."
msgstr "GraphQL: implemente e consulte o armazenamento de dados (cliente) usando o GraphQL. Oferece APIs Mutiny e assinaturas como fluxos de eventos."

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Fault Tolerance: provide retry, fallback, circuit breakers abilities to your application.It can be used with Mutiny types."
msgstr "Tolerância a falhas: fornece capacidades de retry, fallback e disjuntores para o seu aplicativo, podendo ser usado com os tipos Mutiny."

#. type: Title ===
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy, no-wrap
msgid "Engine"
msgstr "Motor"

#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid ""
"Vert.x : the underlying reactive engine of Quarkus.\n"
"The extension allows accessing to the managed Vert.x instance, as well as its Mutiny variant (exposing the Vert.x API using Mutiny types)"
msgstr "Vert.x: o mecanismo reativo subjacente do Quarkus. A extensão permite acessar a instância gerenciada do Vert.x, bem como sua variante Mutiny (expondo a API do Vert.x usando tipos Mutiny)"

#. type: Plain text
#: _versions/2.16/guides/quarkus-reactive-architecture.adoc
#, fuzzy
msgid "Context Propagation: capture and propagate contextual objects (transaction, principal…) in a reactive pipeline"
msgstr "Propagação de contexto: capturar e propagar objetos contextuais (transação, principal...) em um pipeline reativo"
