# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Quarkus Security overview"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Quarkus Security is a framework that provides the architecture, multiple authentication and authorization mechanisms, and other tools for you to build secure and production-quality Java applications."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Getting started with Quarkus Security"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Before you start building security into your Quarkus applications, review the overview information to learn about the Quarkus Security architecture and the different authentication and authorization mechanisms that Quarkus supports."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"To get started with security in Quarkus, we recommend that you first combine the Quarkus built-in xref:security-basic-authentication-concept.adoc[Basic HTTP authentication] with the JPA identity provider to enable role-based access control (RBAC).\n"
"Complete the steps in the xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication] tutorial.\n"
"After you have successfully secured your Quarkus application with basic HTTP authentication, you can increase the security further by adding more advanced authentication mechanisms, for example, OpenID Connect (OIDC) authentication."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Security architecture"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The `HttpAuthenticationMechanism` interface is the main entry mechanism for securing HTTP applications in Quarkus."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Quarkus Security uses `HttpAuthenticationMechanism` to extract the authentication credentials from the HTTP request and delegates them to `IdentityProvider` to convert the credentials to `SecurityIdentity`.\n"
"For example, the credentials can come from the `Authorization` header, client HTTPS certificates, or cookies."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`IdentityProvider` verifies the authentication credentials and maps them to `SecurityIdentity`, which has the username, roles, original authentication credentials, and other attributes."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For every authenticated resource, you can inject a `SecurityIdentity` instance to get the authenticated identity information."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"In other contexts, it is possible to have other parallel representations of the same information or parts of it, for example, `SecurityContext`\n"
"for JAX-RS or `JsonWebToken` for JSON Web Tokens (JWT)."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Authentication mechanisms"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Quarkus supports multiple authentication mechanisms"
msgstr ""

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Basic and Form HTTP authentication"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "xref:security-basic-authentication-concept.adoc[Basic HTTP Authentication] and xref:security-built-in-authentication-support-concept.adoc#form-auth[Form HTTP authentication] are the core authentication mechanisms supported in Quarkus."
msgstr ""

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "WebAuthn authentication"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"https://webauthn.guide/[WebAuthn] is an authentication mechanism that replaces passwords.\n"
"When you write a service for registering new users, or logging them in, instead of asking for a password, you can use WebAuthn, which replaces the password.\n"
"For more information, see xref:security-webauthn.adoc[Secure a Quarkus application by using the WebAuthn authentication mechanism]."
msgstr ""

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Mutual TLS (mTLS) authentication"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Quarkus provides mutual TLS (mTLS) authentication so that you can authenticate users based on their X.509 certificates.\n"
"For more information, see xref:security-built-in-authentication-support-concept.adoc#mutual-tls[mutual TLS authentication]."
msgstr ""

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "OpenID Connect authentication"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "OpenID Connect (OIDC) is an identity layer that works on top of the OAuth 2.0 protocol. OIDC enables client applications to verify the identity of a user based on the authentication performed by the OIDC provider and to retrieve basic information about that user."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"The Quarkus `quarkus-oidc` extension provides a reactive, interoperable, multitenant-enabled OIDC adapter that supports Bearer Token and Authorization Code Flow authentication mechanisms.\n"
"The Bearer Token mechanism extracts the token from the HTTP Authorization header.\n"
"The Authorization Code Flow mechanism redirects the user to an OIDC provider to authenticate the identity of the user.\n"
"After the user is redirected back to Quarkus, the mechanism completes the authentication process by exchanging the provided code that was granted for the ID, access, and refresh tokens."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"You can verify ID and access JWT tokens by using the refreshable JSON Web Key (JWK) set or you can introspect them remotely.\n"
"However, opaque (binary) tokens can only be introspected remotely."
msgstr ""

#. type: delimited block =
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Using the Quarkus OIDC extension, both Bearer Token and Authorization Code Flow mechanisms use <<smallrye-jwt, SmallRye JWT>> to represent JWT tokens as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr ""

#. type: Title ====
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Additional Quarkus resources for OIDC authentication"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information about OIDC authentication and authorization methods you can use to secure your Quarkus applications, see the following detailed resources:"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "OIDC topic"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Quarkus information resource"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Bearer Token authentication mechanism"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "xref:security-openid-connect.adoc[Using OpenID Connect (OIDC) to protect service applications using Bearer Token authorization]"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Authorization Code Flow authentication mechanism"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "xref:security-openid-connect-web-authentication.adoc[OpenID Connect (OIDC) authorization code flow mechanism]"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Multiple tenants that can support Bearer Token or Authorization Code Flow mechanisms"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect (OIDC) multi-tenancy]"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Using Keycloak to centralize authorization"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "xref:security-keycloak-authorization.adoc[Using OpenID Connect (OIDC) and Keycloak to centralize authorization]"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Configuring Keycloak programmatically"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "xref:security-keycloak-admin-client.adoc[Using the Keycloak admin client]"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If you need to enable the Quarkus OIDC extension at runtime, set `quarkus.oidc.tenant-enabled=false` at build time and then re-enable it at runtime by using a system property.\n"
"For more information about managing the individual tenant configurations in multitenant OIDC deployments, see the _Disabling tenant configurations_ section in the xref:security-openid-connect-multitenancy.adoc#disable-tenant[Using OpenID Connect (OIDC) multi-tenancy] guide."
msgstr ""

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "OpenID Connect client and filters"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"The `quarkus-oidc-client` extension provides `OidcClient` for acquiring and refreshing access tokens from OpenID Connect and OAuth2 providers that support the following token grants:\n"
"* `client-credentials`\n"
"* `password`\n"
"* `refresh_token`"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"The `quarkus-oidc-client-filter` extension requires the `quarkus-oidc-client` extension and provides JAX-RS `OidcClientRequestFilter`, which sets the access token acquired by `OidcClient` as the `Bearer` scheme value of the HTTP `Authorization` header.\n"
"This filter can be registered with MP RestClient implementations injected into the current Quarkus endpoint, but it is not related to the authentication requirements of this service endpoint.\n"
"For example, it can be a public endpoint, or it can be protected with mTLS."
msgstr ""

#. type: delimited block =
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "In this scenario, you do not need to protect your Quarkus endpoint by using the Quarkus OpenID Connect adapter."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"The `quarkus-oidc-token-propagation` extension requires the `quarkus-oidc` extension and provides JAX-RS `TokenCredentialRequestFilter`, which sets the OpenID Connect Bearer or Authorization Code Flow access token as the `Bearer` scheme value of the HTTP `Authorization` header.\n"
"This filter can be registered with MP RestClient implementations injected into the current Quarkus endpoint, which in turn must be protected by using the Quarkus OpenID Connect adapter.\n"
"This filter can be used to propagate the access token to the downstream services."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information, see the xref:security-openid-connect-client.adoc[OpenID Connect client and token propagation quickstart] and xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) and OAuth2 client and filters reference] guides."
msgstr ""

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "SmallRye JWT authentication"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The `quarkus-smallrye-jwt` extension provides a MicroProfile JSON Web Token (JWT) 1.2.1 implementation and multiple options to verify signed and encrypted `JWT` tokens and represents them as `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`quarkus-smallrye-jwt` is an alternative to the `quarkus-oidc` Bearer Token authentication mechanism, and verifies only `JWT` tokens by using either PEM keys or the refreshable `JWK` key set.\n"
"`quarkus-smallrye-jwt` also provides the JWT generation API, which you can use to easily create `signed`, `inner-signed`, and `encrypted` `JWT` tokens."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information, see xref:security-jwt.adoc[Using SmallRye JWT role-based access control]."
msgstr ""

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "OAuth2 authentication"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`quarkus-elytron-security-oauth2` provides an alternative to the `quarkus-oidc` Bearer Token authentication mechanism. `quarkus-elytron-security-oauth2` is based on `Elytron` and is primarily intended for introspecting opaque tokens remotely.\n"
"For more information, see xref:security-oauth2.adoc[Using OAuth2]."
msgstr ""

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Use the following information to help you to decide which authentication mechanism to use to secure your Quarkus applications:"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`quarkus-oidc` requires an OpenID Connect provider such as Keycloak, which can be used to verify the Bearer tokens or authenticate the end users with the Authorization Code flow.\n"
"In both cases, `quarkus-oidc` requires a connection to the specified OpenID Connect provider."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If the user authentication requires Authorization Code flow or you need to support multiple tenants, use `quarkus-oidc`.\n"
"`quarkus-oidc` can also request user information by using both Authorization Code Flow and Bearer access tokens."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "If your Bearer tokens must be verified, use `quarkus-oidc`, `quarkus-smallrye-jwt`, or `quarkus-elytron-security-oauth2`."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If your Bearer tokens are in a JWT format, you can use either of the three extensions. Both `quarkus-oidc` and `quarkus-smallrye-jwt` support refreshing the JsonWebKey (JWK) set when the OpenID Connect provider rotates the keys.\n"
"Therefore, if remote token introspection must be avoided or is unsupported by the providers, use `quarkus-oidc` or `quarkus-smallrye-jwt` for verifying JWT tokens."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If you need to introspect the JWT tokens remotely, you can use either `quarkus-oidc` or `quarkus-elytron-security-oauth2` because they support the verification of the opaque or binary tokens by using remote introspection.\n"
"`quarkus-smallrye-jwt` does not support the remote introspection of both opaque or JWT tokens but instead relies on the locally available keys that are usually retrieved from the OpenID Connect provider."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`quarkus-oidc` and `quarkus-smallrye-jwt` support the injecting of JWT and opaque tokens into the endpoint code.\n"
"Injected JWT tokens provide more information about the user. All extensions can have the tokens injected as `Principal`."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`quarkus-smallrye-jwt` supports more key formats than `quarkus-oidc`. `quarkus-oidc` uses only the JWK-formatted keys that are part of a JWK set, whereas `quarkus-smallrye-jwt` supports PEM keys."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`quarkus-smallrye-jwt` handles locally signed, inner-signed-and-encrypted, and encrypted tokens.\n"
"While `quarkus-oidc` and `quarkus-elytron-security-oauth2` can also verify such tokens but treats them as opaque tokens and verifies them through remote introspection."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "If you need a lightweight library for the remote introspection of opaque or JWT tokens, use `quarkus-elytron-security-oauth2`."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Your decision to choose whether to use opaque or JWT token format will be driven by architectural considerations.\n"
"Opaque tokens tend to be much shorter than JWT tokens but need most of the token-associated state to be maintained in the provider database.\n"
"Opaque tokens are effectively database pointers.\n"
"JWT tokens are significantly longer than the opaque tokens but the providers are effectively delegating storing most of the token-associated state to the client by storing it as the token claims and either signing or encrypting them."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The following table provides a summary of the options for each authentication mechanism:"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "quarkus-oidc"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "quarkus-smallrye-jwt"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "quarkus-elytron-security-oauth2"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Requires Bearer JWT verification"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Local verification or introspection"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Local verification"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Introspection"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Requires Bearer opaque token verification"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "No"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Refreshing `JsonWebKey` set for verifying JWT tokens"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Yes"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Represent token as `Principal`"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Inject JWT as MP JSON Web Token (JWT)"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Authorization Code Flow"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Multi-tenancy"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "User info support"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "PEM key format support"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "SecretKey support"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "In JSON Web Key (JWK) format"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Inner-signed and encrypted or encrypted tokens"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Custom token verification"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "With injected JWT parser"
msgstr ""

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Accept JWT as a cookie"
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Identity providers"
msgstr "Identity providers"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The JPA `IdentityProvider` creates a `SecurityIdentity` instance, which is used during user authentication to verify and authorize access requests making your Quarkus application secure."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`IdentityProvider` converts the authentication credentials provided by `HttpAuthenticationMechanism` to a `SecurityIdentity` instance."
msgstr "`IdentityProvider` converte as credenciais de autenticação fornecidas por `HttpAuthenticationMechanism` para uma instância `SecurityIdentity`."

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Some extensions, for example, `OIDC`, `OAuth2`, and `SmallRye JWT` have inline `IdentityProvider` implementations specific to the supported authentication flow.\n"
"For example, `quarkus-oidc` uses its own `IdentityProvider` to convert a token to a `SecurityIdentity` instance."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "If you use `Basic` or `Form` HTTP-based authentication then you must add an `IdentityProvider` instance that can convert a username and password to a `SecurityIdentity` instance."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information about `Basic` or `Form` HTTP-based authentication, see the following resources:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication]"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "xref:security-jdbc.adoc[Using security with JDBC]"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "xref:security-ldap.adoc[Using security with an LDAP realm]"
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Authorization"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Quarkus also supports role-based access control (RBAC).\n"
"For more information about RBAC and other authorization options in Quarkus, see xref:security-authorize-web-endpoints-reference.adoc[Security authorization]."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Quarkus Security customization"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Quarkus Security is highly customizable. You can customize the following core security components of Quarkus:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`HttpAuthenticationMechanism`"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`IdentityProvider`"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`SecurityidentityAugmentor`"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information about customizing Quarkus Security including reactive security, and how to register a security provider, see xref:security-customization.adoc[Security customization]."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Combining authentication mechanisms"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If the user credentials are provided by different sources, you can combine  authentication mechanisms.\n"
"For example, you can combine built-in `Basic` and `quarkus-oidc` `Bearer` authentication mechanisms."
msgstr ""

#. type: delimited block =
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "You cannot combine the `quarkus-oidc` `Bearer` and `smallrye-jwt` authentication mechanisms because both mechanisms attempt to verify the token extracted from the HTTP `Authorization Bearer` scheme."
msgstr ""

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Path-specific authentication mechanisms"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The following configuration example demonstrates how you can enforce a single selectable authentication mechanism for a given request path:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Ensure that the value of the `auth-mechanism` property matches the authentication scheme supported by `HttpAuthenticationMechanism`, for example, `basic`, `bearer`, or `form`."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Proactive authentication"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"By default, Quarkus does proactive authentication, which means that all incoming requests with credentials are authenticated regardless of whether the target page requires authentication.\n"
"For more information, see xref:security-built-in-authentication-support-concept.adoc#proactive-authentication[Proactive authentication]."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Secure connections with SSL/TLS"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information about how Quarkus supports secure connections with SSL/TLS, see the xref:http-reference.adoc#ssl[HTTP reference] information."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Cross-origin resource sharing"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"To make your Quarkus application accessible to another application running on a different domain, you need to configure cross-origin resource sharing (CORS).\n"
"For more information about the CORS filter that is provided by Quarkus, see the xref:http-reference.adoc#cors-filter[HTTP reference] information."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Cross-site Request Forgery (CSRF) prevention"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Quarkus Security provides a RESTEasy Reactive filter that can protect your applications against a https://owasp.org/www-community/attacks/csrf[Cross-Site Request Forgery] attack.\n"
"For more information, see xref:security-csrf-prevention.adoc[Cross-Site Request Forgery Prevention]."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "SameSite cookies"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"You can add a https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite[SameSite] cookie property to any of the cookies set by a Quarkus endpoint.\n"
"For more information, see xref:http-reference.adoc#same-site-cookie[SameSite cookies]."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Secret engines"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Secrets engines are components that store, generate, or encrypt data."
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Quarkus provides comprehensive HashiCorp Vault support.\n"
"For more information, see the link:{vault-guide}[Quarkus and HashiCorp Vault] documentation."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Secure serialization"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If your Quarkus Security architecture includes RESTEasy Reactive and Jackson, Quarkus can limit the fields that are included in JSON serialization based on the configured security.\n"
"For more information, see xref:resteasy-reactive.adoc#secure-serialization[Writing REST services with RESTEasy Reactive]."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Secure auto-generated resources by REST Data with Panache"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If you're using the REST Data with Panache extension to auto-generate your resources, you can still use the Security annotations within the package `javax.annotation.security`.\n"
"For more information, see xref:rest-data-panache.adoc#securing-endpoints[Securing auto-generated resources]."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "National Vulnerability Database"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Most of the Quarkus tags are registered in the US link:https://nvd.nist.gov[National Vulnerability Database] (NVD) in Common Platform Enumeration (CPE) name format.\n"
"To view the registered Quarkus CPE names, use link:https://nvd.nist.gov/products/cpe/search/results?namingFormat=2.3&keyword=quarkus[this search query]."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "If the NVE database flags a CVE against a Quarkus tag, a link that provides more details about the CVE is added to the given CPE name entry."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The NVD CPE team updates the list regularly, but if you encounter a false positive, report the details by creating an issue in the link:https://github.com/quarkusio/quarkus/issues/2611[quarkusio] repository."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "You can detect the vulnerabilities at the application build time with an NVD feed by using the Maven link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP Dependency check plugin]."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "To add the OWASP Dependency check plugin to your Quarkus Maven project, add the following XML configuration to the `pom.xml` file:"
msgstr ""

#. type: delimited block =
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Set the `owasp-dependency-check-plugin.version` value to `7.4.4` or later."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Next, configure the plugin as follows:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "To detect less severe issues, adjust the value of `failBuildOnCVSS` to suppress the false positives, as demonstrated in the following code sample:"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Ensure that you review and update the suppression list regularly to ensure that the results are up to date.\n"
"You can optionally apply a time limit to individual suppressions by adding an expiry attribute, as outlined in the following example:"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`<suppress until=\"2022-01-01Z\">...</suppress>`\n"
"You can adjust the expiry date if you need to."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Quarkus Security testing"
msgstr ""

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"When testing Quarkus security, ensure that  your `IdentityProvider` is already set with usernames, passwords, and roles in `application.properties`.\n"
"For more information about testing Quarkus Security, see xref:security-testing.adoc#configuring-user-information[Configuring user information]."
msgstr ""
