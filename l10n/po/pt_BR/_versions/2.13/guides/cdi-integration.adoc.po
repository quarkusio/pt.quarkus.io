# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:11+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "CDI Integration Guide"
msgstr "Guia de integração CDI"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"ArC, the CDI container, is bootstrapped at build time.\n"
"The downside of this approach is that CDI Portable Extensions cannot be supported.\n"
"Nevertheless, the functionality can be achieved using the Quarkus-specific extensions API."
msgstr "O ArC, o contêiner CDI, é inicializado no momento da compilação. A desvantagem dessa abordagem é que não há suporte para as extensões portáteis de CDI. No entanto, a funcionalidade pode ser obtida usando a API de extensões específicas do Quarkus."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"The container is bootstrapped in multiple phases.\n"
"From a high level perspective these phases go as follows:"
msgstr "O contêiner é inicializado em várias fases. De uma perspectiva de alto nível, essas fases são as seguintes:"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Initialization"
msgstr "Inicialização"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Bean discovery"
msgstr "Descoberta do feijão"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Registration of synthetic components"
msgstr "Registro de componentes sintéticos"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Validation"
msgstr "Validação"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"In the _initialization_ phase the preparatory work is being carried out and custom contexts are registered.\n"
"_Bean discovery_ is then the process where the container analyzes all application classes, identifies beans and wires them all together based on the provided metadata.\n"
"Subsequently, the extensions can register _synthetic components_.\n"
"Attributes of these components are fully controlled by the extensions, i.e. are not derived from an existing class.\n"
"Finally, the _deployment is validated_.\n"
"For example, the container validates every injection point in the application and fails the build if there is no bean that satisfies the given required type and qualifiers."
msgstr "Na fase _de inicialização_ , o trabalho preparatório está sendo realizado e os contextos personalizados são registrados. _A descoberta de beans_ é o processo em que o contêiner analisa todas as classes do aplicativo, identifica os beans e os conecta com base nos metadados fornecidos. Posteriormente, as extensões podem registrar _componentes sintéticos_ . Os atributos desses componentes são totalmente controlados pelas extensões, ou seja, não são derivados de uma classe existente. Por fim, a _implementação é validada_ . Por exemplo, o contêiner valida cada ponto de injeção no aplicativo e reprova a compilação se não houver nenhum bean que satisfaça o tipo e os qualificadores exigidos."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "You can see more information about the bootstrap by enabling additional logging. Simply run the Maven build with `-X` or `--debug` and grep the lines that contain `io.quarkus.arc`. In the <<cdi-reference.adoc#dev-mode,development mode>>, you can use `quarkus.log.category.\"io.quarkus.arc.processor\".level=DEBUG` and two special endpoints are also registered automatically to provide some basic debug info in the JSON format."
msgstr "O senhor pode ver mais informações sobre o bootstrap ativando o registro adicional. Basta executar a compilação do Maven com `-X` ou `--debug` e usar o grep nas linhas que contêm `io.quarkus.arc` . No xref:cdi-reference.adoc#dev-mode[modo de desenvolvimento] , o senhor pode usar `quarkus.log.category.\"io.quarkus.arc.processor\".level=DEBUG` e dois pontos de extremidade especiais também são registrados automaticamente para fornecer algumas informações básicas de depuração no formato JSON."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"Quarkus build steps can produce and consume various build items and hook into each phase.\n"
"In the following sections we will describe all the relevant build items and common scenarios."
msgstr "As etapas de compilação do Quarkus podem produzir e consumir vários itens de compilação e se conectar a cada fase. Nas seções a seguir, descreveremos todos os itens de compilação relevantes e os cenários comuns."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Metadata Sources"
msgstr "Fontes de metadados"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"Classes and annotations are the primary source of bean-level metadata.\n"
"The initial metadata are read from the _bean archive index_, an immutable https://github.com/wildfly/jandex[Jandex index, window=\"_blank\"] which is built from various sources during <<cdi-reference.adoc#bean_discovery,bean discovery>>.\n"
"However, extensions can add, remove or transform the metadata at certain stages of the bootstrap.\n"
"Moreover, extensions can also register <<synthetic_beans,synthetic components>>.\n"
"This is an important aspect to realize when integrating CDI components in Quarkus."
msgstr "As classes e as anotações são a principal fonte de metadados no nível do bean. Os metadados iniciais são lidos do _índice do arquivo do bean_ , um link:https://github.com/wildfly/jandex[índice Jandex] imutável que é criado a partir de várias fontes durante a xref:cdi-reference.adoc#bean_discovery[descoberta do bean] . No entanto, as extensões podem adicionar, remover ou transformar os metadados em determinados estágios do bootstrap. Além disso, as extensões também podem registrar xref:synthetic_beans[componentes sintéticos] . Esse é um aspecto importante a ser percebido ao integrar componentes CDI no Quarkus."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"This way, extensions can turn classes, that would be otherwise ignored, into beans and vice versa.\n"
"For example, a class that declares a `@Scheduled` method is always registered as a bean even if it is not annotated with a bean defining annotation and would be normally ignored."
msgstr "Dessa forma, as extensões podem transformar classes, que de outra forma seriam ignoradas, em beans e vice-versa. Por exemplo, uma classe que declara um método `@Scheduled` é sempre registrada como um bean, mesmo que não tenha sido anotada com uma anotação de definição de bean e, normalmente, seria ignorada."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - My Class Is Not Recognized as a Bean"
msgstr "Caso de uso - Minha classe não é reconhecida como um bean"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"An `UnsatisfiedResolutionException` indicates a problem during <<cdi.adoc#typesafe_resolution,typesafe resolution>>.\n"
"Sometimes an injection point cannot be satisfied even if there is a class on the classpath that appears to be eligible for injection.\n"
"There are several reasons why a class is not recognized and also several ways to fix it.\n"
"In the first step we should identify the _reason_."
msgstr "Um `UnsatisfiedResolutionException` indica um problema durante a xref:cdi.adoc#typesafe_resolution[resolução typesafe] . Às vezes, um ponto de injeção não pode ser satisfeito, mesmo que haja uma classe no classpath que pareça ser elegível para injeção. Há vários motivos pelos quais uma classe não é reconhecida e também várias maneiras de corrigi-los. Na primeira etapa, devemos identificar o _motivo_ ."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "_Reason 1_: Class Is Not discovered"
msgstr "_Razão 1_ : A classe não é descoberta"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"Quarkus has a <<cdi-reference.adoc#bean_discovery,simplified discovery>>.\n"
"It might happen that the class is not part of the application index.\n"
"For example, classes from the _runtime module_ of a Quarkus extension are not indexed automatically."
msgstr "O Quarkus tem uma xref:cdi-reference.adoc#bean_discovery[descoberta simplificada] . Pode acontecer que a classe não faça parte do índice do aplicativo. Por exemplo, as classes do _módulo de tempo de execução_ de uma extensão do Quarkus não são indexadas automaticamente."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"_Solution_: Use the `AdditionalBeanBuildItem`.\n"
"This build item can be used to specify one or more additional classes to be analyzed during the discovery.\n"
"Additional bean classes are transparently added to the application index processed by the container."
msgstr "_Solução_ : Use o `AdditionalBeanBuildItem` . Esse item de compilação pode ser usado para especificar uma ou mais classes adicionais a serem analisadas durante a descoberta. As classes de bean adicionais são adicionadas de forma transparente ao índice do aplicativo processado pelo contêiner."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "It is not possible to conditionally enable/disable additional beans via the `@IfBuildProfile`, `@UnlessBuildProfile`, `@IfBuildProperty` and `@UnlessBuildProperty` annotations as described in <<cdi-reference.adoc#enable_build_profile>> and <<cdi-reference.adoc#enable_build_properties>>. Extensions should inspect the configuration or the current profile and only produce an `AdditionalBeanBuildItem` if really needed."
msgstr "Não é possível ativar/desativar condicionalmente beans adicionais por meio das anotações `@IfBuildProfile` , `@UnlessBuildProfile` , `@IfBuildProperty` e `@UnlessBuildProperty` , conforme descrito em <<cdi-reference.adoc#enable_build_profile>> e <<cdi-reference.adoc#enable_build_properties>> . As extensões devem inspecionar a configuração ou o perfil atual e produzir um `AdditionalBeanBuildItem` somente se for realmente necessário."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`AdditionalBeanBuildItem` Example"
msgstr "`AdditionalBeanBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`AdditionalBeanBuildItem.Builder` can be used for more complex use cases."
msgstr "`AdditionalBeanBuildItem.Builder` pode ser usado para casos de uso mais complexos."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"Bean classes added via `AdditionalBeanBuildItem` are _removable_ by default.\n"
"If the container considers them <<cdi-reference.adoc#remove_unused_beans,unused>>, they are just ignored.\n"
"However, you can use `AdditionalBeanBuildItem.Builder.setUnremovable()` method to instruct the container to never remove bean classes registered via this build item.\n"
"See also <<cdi-reference.adoc#remove_unused_beans,Removing Unused Beans>> and <<unremovable_builditem>> for more details."
msgstr "As classes Bean adicionadas por meio do site `AdditionalBeanBuildItem` são _removíveis_ por padrão. Se o contêiner as considerar xref:cdi-reference.adoc#remove_unused_beans[não utilizadas] , elas serão simplesmente ignoradas. No entanto, é possível usar o método `AdditionalBeanBuildItem.Builder.setUnremovable()` para instruir o contêiner a nunca remover as classes de bean registradas por meio desse item de compilação. Consulte também xref:cdi-reference.adoc#remove_unused_beans[Removing Unused Beans] e <<unremovable_builditem>> para obter mais detalhes."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"It is aso possible to set the default scope via `AdditionalBeanBuildItem.Builder#setDefaultScope()`.\n"
"The default scope is only used if there is no scope declared on the bean class."
msgstr "Também é possível definir o escopo padrão por meio de `AdditionalBeanBuildItem.Builder#setDefaultScope()` . O escopo padrão só é usado se não houver um escopo declarado na classe do bean."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "If no default scope is specified the `@Dependent` pseudo-scope is used."
msgstr "Se nenhum escopo padrão for especificado, será usado o pseudoescopo `@Dependent` ."

#. type: Title ===
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "_Reason 2_: Class Is Discovered but Has No Bean Defining Annotation"
msgstr "_Motivo 2_ : A classe foi descoberta, mas não tem uma anotação de definição de feijão"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"In Quarkus, the application is represented by a single bean archive with the https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#default_bean_discovery[bean discovery mode `annotated`, window=\"_blank\"].\n"
"Therefore, bean classes that don't have a https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#bean_defining_annotations[bean defining annotation, window=\"_blank\"] are ignored.\n"
"Bean defining annotations are declared on the class-level and include scopes, stereotypes and `@Interceptor`."
msgstr "No Quarkus, o aplicativo é representado por um único arquivo de bean com o link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#default_bean_discovery[modo de descoberta de bean annotated] . Portanto, as classes de bean que não têm uma link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#bean_defining_annotations[anotação de definição de bean] são ignoradas. As anotações que definem o bean são declaradas no nível da classe e incluem escopos, estereótipos e `@Interceptor` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "_Solution 1_: Use the `AutoAddScopeBuildItem`. This build item can be used to add a scope to a class that meets certain conditions."
msgstr "_Solução 1_ : use o `AutoAddScopeBuildItem` . Esse item de compilação pode ser usado para adicionar um escopo a uma classe que atenda a determinadas condições."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`AutoAddScopeBuildItem` Example"
msgstr "`AutoAddScopeBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Find all classes annotated with `@Scheduled`."
msgstr "Encontre todas as classes anotadas com `@Scheduled` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Add `@Singleton` as default scope. Classes already annotated with a scope are skipped automatically."
msgstr "Adicionar `@Singleton` como escopo padrão. As classes já anotadas com um escopo são ignoradas automaticamente."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "_Solution 2_: If you need to process classes annotated with a specific annotation then it's possible to extend the set of bean defining annotations via the `BeanDefiningAnnotationBuildItem`."
msgstr "_Solução 2_ : Se o senhor precisar processar classes anotadas com uma anotação específica, é possível estender o conjunto de anotações que definem o bean por meio do site `BeanDefiningAnnotationBuildItem` ."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`BeanDefiningAnnotationBuildItem` Example"
msgstr "`BeanDefiningAnnotationBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Add `org.eclipse.microprofile.graphql.GraphQLApi` to the set of bean defining annotations."
msgstr "Adicione `org.eclipse.microprofile.graphql.GraphQLApi` ao conjunto de anotações que definem o bean."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"Bean classes added via `BeanDefiningAnnotationBuildItem` are _not removable_ by default, i.e. the resulting beans must not be removed even if they are considered unused.\n"
"However, you can change the default behavior.\n"
"See also <<cdi-reference.adoc#remove_unused_beans,Removing Unused Beans>> and <<unremovable_builditem>> for more details."
msgstr "As classes de beans adicionadas por meio do site `BeanDefiningAnnotationBuildItem` _não_ são _removíveis_ por padrão, ou seja, os beans resultantes não devem ser removidos, mesmo que sejam considerados não utilizados. Entretanto, o senhor pode alterar o comportamento padrão. Consulte também xref:cdi-reference.adoc#remove_unused_beans[Removendo beans não utilizados] e <<unremovable_builditem>> para obter mais detalhes."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"It is also possible to specify the default scope.\n"
"The default scope is only used if there is no scope declared on the bean class."
msgstr "Também é possível especificar o escopo padrão. O escopo padrão só é usado se não houver um escopo declarado na classe bean."

#. type: Title ===
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "_Reason 3_: Class Was Discovered and Has a Bean Defining Annotation but Was Removed"
msgstr "_Motivo 3_ : A classe foi descoberta e tem uma anotação de definição de feijão, mas foi removida"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"The container attempts to <<cdi-reference.adoc#remove_unused_beans,remove all unused beans>> during the build by default.\n"
"This optimization allows for _framework-level dead code elimination_.\n"
"In few special cases, it's not possible to correctly identify an unused bean.\n"
"In particular, Quarkus is not able to detect the usage of the `CDI.current()` static method yet.\n"
"Extensions can eliminate possible false positives by producing an `UnremovableBeanBuildItem`."
msgstr "Por padrão, o contêiner tenta xref:cdi-reference.adoc#remove_unused_beans[remover todos os beans não utilizados] durante a compilação. Essa otimização permite a _eliminação de código morto no nível da estrutura_ . Em alguns casos especiais, não é possível identificar corretamente um bean não utilizado. Em particular, o Quarkus ainda não é capaz de detectar o uso do método estático `CDI.current()` . As extensões podem eliminar possíveis falsos positivos produzindo um `UnremovableBeanBuildItem` ."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`UnremovableBeanBuildItem` Example"
msgstr "`UnremovableBeanBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Make all classes annotated with `@Startup` unremovable."
msgstr "Tornar todas as classes anotadas com `@Startup` irremovíveis."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - My Annotation Is Not Recognized as a Qualifier or an Interceptor Binding"
msgstr "Caso de uso - Minha anotação não é reconhecida como um qualificador ou um vínculo de interceptador"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"It is likely that the annotation class is not part of the application index.\n"
"For example, classes from the _runtime module_ of a Quarkus extension are not indexed automatically."
msgstr "É provável que a classe de anotação não faça parte do índice do aplicativo. Por exemplo, as classes do _módulo de tempo de execução_ de uma extensão do Quarkus não são indexadas automaticamente."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "_Solution_: Use the `AdditionalBeanBuildItem` as described in <<additional_bean_build_item>>."
msgstr "_Solução_ : Use o site `AdditionalBeanBuildItem` conforme descrito em <<additional_bean_build_item>> ."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - I Need To Transform Metadata"
msgstr "Caso de uso - Preciso transformar metadados"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"In some cases, it's useful to be able to modify the metadata.\n"
"Quarkus provides a powerful alternative to https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#process_annotated_type[`javax.enterprise.inject.spi.ProcessAnnotatedType`, window=\"_blank\"].\n"
"With an `AnnotationsTransformerBuildItem` it's possible to override the annotations that exist on bean classes."
msgstr "Em alguns casos, é útil poder modificar os metadados. O Quarkus oferece uma alternativa eficiente ao link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#process_annotated_type[javax.enterprise.inject.spi.ProcessAnnotatedType] . Com um `AnnotationsTransformerBuildItem` , é possível substituir as anotações existentes nas classes de bean."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"For example, you might want to add an interceptor binding to a specific bean class.\n"
"Here is how to do it:"
msgstr "Por exemplo, o senhor pode querer adicionar uma ligação de interceptador a uma classe de bean específica. Veja como fazer isso:"

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`AnnotationsTransformerBuildItem` Example"
msgstr "`AnnotationsTransformerBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "The transformer is only applied to classes."
msgstr "O transformador é aplicado somente às classes."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "If the class name equals to `org.acme.Bar` then add `@MyInterceptorBinding`. Don't forget to invoke `Transformation#done()`."
msgstr "Se o nome da classe for igual a `org.acme.Bar` , adicione `@MyInterceptorBinding` . Não se esqueça de invocar `Transformation#done()` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Keep in mind that annotation transformers must be produced _before_ the bean discovery starts."
msgstr "Lembre-se de que os transformadores de anotação devem ser produzidos _antes do_ início da descoberta do bean."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Build steps can query the transformed annotations for a given annotation target via the `TransformedAnnotationsBuildItem`."
msgstr "As etapas de construção podem consultar as anotações transformadas para um determinado alvo de anotação por meio do site `TransformedAnnotationsBuildItem` ."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`TransformedAnnotationsBuildItem` Example"
msgstr "`TransformedAnnotationsBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`TransformedAnnotationsBuildItem.getAnnotations()` will return a possibly transformed set of annotations."
msgstr "`TransformedAnnotationsBuildItem.getAnnotations()` retornará um conjunto de anotações possivelmente transformado."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "There are other build items specialized in transformation: <<additional_interceptor_bindings>> and <<injection_point_transformation>>."
msgstr "Há outros itens de compilação especializados em transformação: <<additional_interceptor_bindings>> e <<injection_point_transformation>> ."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - Inspect Beans, Observers and Injection Points"
msgstr "Caso de uso - Inspecionar beans, observadores e pontos de injeção"

#. type: Title ===
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "_Solution 1_: `BeanDiscoveryFinishedBuildItem`"
msgstr "_Solução 1_ : `BeanDiscoveryFinishedBuildItem`"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"Consumers of `BeanDiscoveryFinishedBuildItem` can easily inspect all class-based beans, observers and injection points registered in the application.\n"
"However, synthetic beans and observers are _not included_ because this build item is produced _before_ the synthetic components are registered."
msgstr "Os consumidores do site `BeanDiscoveryFinishedBuildItem` podem inspecionar facilmente todos os beans, observadores e pontos de injeção baseados em classe registrados no aplicativo. No entanto, os beans e observadores sintéticos _não_ estão _incluídos_ porque esse item de compilação é produzido _antes que_ os componentes sintéticos sejam registrados."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Additionally, the bean resolver returned from `BeanDiscoveryFinishedBuildItem#getBeanResolver()` can be used to apply the type-safe resolution rules, e.g. to find out whether there is a bean that would satisfy certain combination of required type and qualifiers."
msgstr "Além disso, o resolvedor de bean retornado de `BeanDiscoveryFinishedBuildItem#getBeanResolver()` pode ser usado para aplicar as regras de resolução type-safe, por exemplo, para descobrir se há um bean que satisfaça determinada combinação de tipo e qualificadores necessários."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`BeanDiscoveryFinishedBuildItem` Example"
msgstr "`BeanDiscoveryFinishedBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "The resulting list will not contain `@Named` synthetic beans."
msgstr "A lista resultante não conterá `@Named` feijões sintéticos."

#. type: Title ===
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "_Solution 2_: `SynthesisFinishedBuildItem`"
msgstr "_Solução 2_ : `SynthesisFinishedBuildItem`"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Consumers of `SynthesisFinishedBuildItem` can easily inspect all beans, observers and injection points registered in the application. Synthetic beans and observers are included because this build item is produced _after_ the synthetic components are registered."
msgstr "Os consumidores do site `SynthesisFinishedBuildItem` podem inspecionar facilmente todos os beans, observadores e pontos de injeção registrados no aplicativo. Os beans e observadores sintéticos estão incluídos porque esse item de compilação é produzido _depois que_ os componentes sintéticos são registrados."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Additionally, the bean resolver returned from `SynthesisFinishedBuildItem#getBeanResolver()` can be used to apply the type-safe resolution rules, e.g. to find out whether there is a bean that would satisfy certain combination of required type and qualifiers."
msgstr "Além disso, o resolvedor de bean retornado de `SynthesisFinishedBuildItem#getBeanResolver()` pode ser usado para aplicar as regras de resolução type-safe, por exemplo, para descobrir se há um bean que satisfaça determinada combinação de tipo e qualificadores necessários."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`SynthesisFinishedBuildItem` Example"
msgstr "`SynthesisFinishedBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "The resulting list will contain `@Named` synthetic beans."
msgstr "A lista resultante conterá `@Named` synthetic beans."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - The Need for Synthetic Beans"
msgstr "Caso de uso - A necessidade de feijões sintéticos"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"Sometimes it is practical to be able to register a _synthetic bean_.\n"
"Bean attributes of a synthetic bean are not derived from a Java class, method or field.\n"
"Instead, all the attributes are defined by an extension.\n"
"In regular CDI, this could be achieved using the https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#after_bean_discovery[`AfterBeanDiscovery.addBean()`, window=\"_blank\"] methods."
msgstr "Às vezes, é prático poder registrar um _bean sintético_ . Os atributos do bean de um bean sintético não são derivados de uma classe, método ou campo Java. Em vez disso, todos os atributos são definidos por uma extensão. No CDI normal, isso poderia ser feito usando os métodos link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#after_bean_discovery[AfterBeanDiscovery.addBean()] métodos."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "_Solution_: If you need to register a synthetic bean then use the `SyntheticBeanBuildItem`."
msgstr "_Solução_ : Se o senhor precisar registrar um bean sintético, use o site `SyntheticBeanBuildItem` ."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`SyntheticBeanBuildItem` Example 1"
msgstr "`SyntheticBeanBuildItem` Exemplo 1"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Generate the bytecode of the `javax.enterprise.context.spi.Contextual#create(CreationalContext<T>)` implementation."
msgstr "Gerar o bytecode da implementação do `javax.enterprise.context.spi.Contextual#create(CreationalContext<T>)` ."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"The output of a bean configurator is recorded as bytecode.\n"
"Therefore, there are some limitations in how a synthetic bean instance is created at runtime.\n"
"You can:"
msgstr "A saída de um configurador de bean é registrada como bytecode. Portanto, há algumas limitações na forma como uma instância de bean sintético é criada em tempo de execução. O senhor pode:"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Generate the bytecode of the `Contextual#create(CreationalContext<T>)` method directly via `ExtendedBeanConfigurator.creator(Consumer<MethodCreator>)`."
msgstr "Gerar o bytecode do método `Contextual#create(CreationalContext<T>)` diretamente via `ExtendedBeanConfigurator.creator(Consumer<MethodCreator>)` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Pass a `io.quarkus.arc.BeanCreator` implementation class via `ExtendedBeanConfigurator#creator(Class<? extends BeanCreator<U>>)`, and possibly specify some parameters via `ExtendedBeanConfigurator#param()`."
msgstr "Passe uma classe de implementação `io.quarkus.arc.BeanCreator` via `ExtendedBeanConfigurator#creator(Class<? extends BeanCreator<U>>)` , e possivelmente especifique alguns parâmetros via `ExtendedBeanConfigurator#param()` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Produce the runtime instance through a proxy returned from a <<writing-extensions.adoc#bytecode-recording,`@Recorder` method>> and set it via `ExtendedBeanConfigurator#runtimeValue(RuntimeValue<?>)` or `ExtendedBeanConfigurator#supplier(Supplier<?>)`."
msgstr "Produza a instância de tempo de execução por meio de um proxy retornado de um xref:writing-extensions.adoc#bytecode-recording[método@Recorder] e defina-o por meio de `ExtendedBeanConfigurator#runtimeValue(RuntimeValue<?>)` ou `ExtendedBeanConfigurator#supplier(Supplier<?>)` ."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`SyntheticBeanBuildItem` Example 2"
msgstr "`SyntheticBeanBuildItem` Exemplo 2"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "By default, a synthetic bean is initialized during `STATIC_INIT`."
msgstr "Por padrão, um bean sintético é inicializado durante `STATIC_INIT` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "The bean instance is supplied by a value returned from a recorder method."
msgstr "A instância do bean é fornecida por um valor retornado de um método de registrador."

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"It is possible to mark a synthetic bean to be initialized during `RUNTIME_INIT`.\n"
"See the <<writing-extensions.adoc#bootstrap-three-phases,Three Phases of Bootstrap and Quarkus Philosophy>> for more information about the difference between `STATIC_INIT` and `RUNTIME_INIT`."
msgstr "É possível marcar um bean sintético para ser inicializado durante `RUNTIME_INIT` . Consulte as xref:writing-extensions.adoc#bootstrap-three-phases[Três fases do Bootstrap e a Filosofia Quarkus] para obter mais informações sobre a diferença entre `STATIC_INIT` e `RUNTIME_INIT` ."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`RUNTIME_INIT` `SyntheticBeanBuildItem` Example"
msgstr "`RUNTIME_INIT` `SyntheticBeanBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "The recorder must be executed in the `ExecutionTime.RUNTIME_INIT` phase."
msgstr "O registrador deve ser executado na fase `ExecutionTime.RUNTIME_INIT` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "The bean instance is initialized during `RUNTIME_INIT`."
msgstr "A instância do bean é inicializada durante `RUNTIME_INIT` ."

#. type: delimited block =
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Synthetic beans initialized during `RUNTIME_INIT` must not be accessed during `STATIC_INIT`. `RUNTIME_INIT` build steps that access a runtime-init synthetic bean should consume the `SyntheticBeansRuntimeInitBuildItem`:"
msgstr "Os beans sintéticos inicializados durante `RUNTIME_INIT` não devem ser acessados durante `STATIC_INIT` . As etapas de compilação de `RUNTIME_INIT` que acessam um bean sintético inicializado em tempo de execução devem consumir o `SyntheticBeansRuntimeInitBuildItem` :"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "This build step must be executed after `syntheticBean()` completes."
msgstr "Essa etapa de compilação deve ser executada após a conclusão do site `syntheticBean()` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "This recorder method results in an invocation upon the `Foo` bean instance and thus we need to make sure that the build step is executed after all synthetic beans are initialized."
msgstr "Esse método de registro resulta em uma invocação da instância do bean `Foo` e, portanto, precisamos garantir que a etapa de compilação seja executada depois que todos os beans sintéticos forem inicializados."

#. type: delimited block =
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "It is also possible to use the `BeanRegistrationPhaseBuildItem` to register a synthetic bean. However, we recommend extension authors to stick with `SyntheticBeanBuildItem` which is more idiomatic for Quarkus."
msgstr "Também é possível usar o site `BeanRegistrationPhaseBuildItem` para registrar um bean sintético. No entanto, recomendamos que os autores de extensões usem `SyntheticBeanBuildItem` , que é mais idiomático para o Quarkus."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - Synthetic Observers"
msgstr "Caso de uso - Observadores sintéticos"

#. type: delimited block =
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Similar to <<synthetic_beans,synthetic beans>>, the attributes of a synthetic observer method are not derived from a Java method. Instead, all the attributes are defined by an extension."
msgstr "Semelhante aos xref:synthetic_beans[beans sintéticos] , os atributos de um método de observador sintético não são derivados de um método Java. Em vez disso, todos os atributos são definidos por uma extensão."

#. type: delimited block =
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "_Solution_: If you need to register a synthetic observer, use the `ObserverRegistrationPhaseBuildItem`."
msgstr "_Solução_ : Se o senhor precisar registrar um observador sintético, use o site `ObserverRegistrationPhaseBuildItem` ."

#. type: delimited block =
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "A build step that consumes the `ObserverRegistrationPhaseBuildItem` should always produce an `ObserverConfiguratorBuildItem` or at least inject a `BuildProducer` for this build item, otherwise it could be ignored or processed at the wrong time (e.g. after the correct CDI bootstrap phase)."
msgstr "Uma etapa de compilação que consome o `ObserverRegistrationPhaseBuildItem` deve sempre produzir um `ObserverConfiguratorBuildItem` ou, pelo menos, injetar um `BuildProducer` para esse item de compilação; caso contrário, ele poderá ser ignorado ou processado no momento errado (por exemplo, após a fase de inicialização correta do CDI)."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`ObserverRegistrationPhaseBuildItem` Example"
msgstr "`ObserverRegistrationPhaseBuildItem` Exemplo"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"The output of a `ObserverConfigurator` is recorded as bytecode.\n"
"Therefore, there are some limitations in how a synthetic observer is invoked at runtime.\n"
"Currently, you must generate the bytecode of the method body directly."
msgstr "A saída de um `ObserverConfigurator` é registrada como bytecode. Portanto, há algumas limitações na forma como um observador sintético é chamado no tempo de execução. Atualmente, o senhor deve gerar o bytecode do corpo do método diretamente."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - I Have a Generated Bean Class"
msgstr "Caso de uso - Tenho uma classe de feijão gerada"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"No problem.\n"
"You can generate the bytecode of a bean class manually and then all you need to do is to produce a `GeneratedBeanBuildItem` instead of `GeneratedClassBuildItem`."
msgstr "Não há problema. O senhor pode gerar o bytecode de uma classe bean manualmente e, então, tudo o que precisa fazer é produzir um `GeneratedBeanBuildItem` em vez de `GeneratedClassBuildItem` ."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`GeneratedBeanBuildItem` Example"
msgstr "`GeneratedBeanBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`io.quarkus.arc.deployment.GeneratedBeanGizmoAdaptor` makes it easy to produce ``GeneratedBeanBuildItem``s from Gizmo constructs."
msgstr "`io.quarkus.arc.deployment.GeneratedBeanGizmoAdaptor` facilita a produção de `GeneratedBeanBuildItem` s a partir de construções do Gizmo."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "The resulting bean class is something like `public class @Singleton MyBean { }`."
msgstr "A classe de feijão resultante é algo como `public class @Singleton MyBean { }` ."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - I Need to Validate the Deployment"
msgstr "Caso de uso - Preciso validar a implantação"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Sometimes extensions need to inspect the beans, observers and injection points, then perform additional validations and fail the build if something is wrong."
msgstr "Às vezes, as extensões precisam inspecionar os beans, os observadores e os pontos de injeção e, em seguida, executar validações adicionais e falhar na compilação se algo estiver errado."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "_Solution_: If an extension needs to validate the deployment it should use the `ValidationPhaseBuildItem`."
msgstr "_Solução_ : Se uma extensão precisar validar a implantação, ela deverá usar o site `ValidationPhaseBuildItem` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "A build step that consumes the `ValidationPhaseBuildItem` should always produce a `ValidationErrorBuildItem` or at least inject a `BuildProducer` for this build item, otherwise it could be ignored or processed at the wrong time (e.g. after the correct CDI bootstrap phase)."
msgstr "Uma etapa de compilação que consome o `ValidationPhaseBuildItem` deve sempre produzir um `ValidationErrorBuildItem` ou, pelo menos, injetar um `BuildProducer` para esse item de compilação; caso contrário, ele poderá ser ignorado ou processado no momento errado (por exemplo, após a fase de inicialização correta do CDI)."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "You can easily filter all registered beans via the convenient `BeanStream` returned from the `ValidationPhaseBuildItem.getContext().beans()` method."
msgstr "O senhor pode filtrar facilmente todos os beans registrados por meio do conveniente `BeanStream` retornado do método `ValidationPhaseBuildItem.getContext().beans()` ."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - Register a Custom CDI Context"
msgstr "Caso de uso - Registrar um contexto CDI personalizado"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Sometimes extensions need to extend the set of built-in CDI contexts."
msgstr "Às vezes, as extensões precisam ampliar o conjunto de contextos CDI incorporados."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "_Solution_: If you need to register a custom context, use the `ContextRegistrationPhaseBuildItem`."
msgstr "_Solução_ : Se o senhor precisar registrar um contexto personalizado, use o site `ContextRegistrationPhaseBuildItem` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "A build step that consumes the `ContextRegistrationPhaseBuildItem` should always produce a `ContextConfiguratorBuildItem` or at least inject a `BuildProducer` for this build item, otherwise it could be ignored or processed at the wrong time (e.g. after the correct CDI bootstrap phase)."
msgstr "Uma etapa de compilação que consome o `ContextRegistrationPhaseBuildItem` deve sempre produzir um `ContextConfiguratorBuildItem` ou, pelo menos, injetar um `BuildProducer` para esse item de compilação; caso contrário, ele poderá ser ignorado ou processado no momento errado (por exemplo, após a fase de inicialização correta do CDI)."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`ContextRegistrationPhaseBuildItem` Example"
msgstr "`ContextRegistrationPhaseBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Additionally, each extension that registers a custom CDI context via `ContextRegistrationPhaseBuildItem` should also produce the `CustomScopeBuildItem` in order to contribute the custom scope annotation name to the set of bean defining annotations."
msgstr "Além disso, cada extensão que registra um contexto CDI personalizado via `ContextRegistrationPhaseBuildItem` também deve produzir o `CustomScopeBuildItem` para contribuir com o nome da anotação do escopo personalizado para o conjunto de anotações que definem o bean."

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`CustomScopeBuildItem` Example"
msgstr "`CustomScopeBuildItem` Exemplo"

#. type: Title ===
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "What if I Need to Know All the Scopes Used in the Application?"
msgstr "E se eu precisar conhecer todos os escopos usados no aplicativo?"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "_Solution_: You can inject the `CustomScopeAnnotationsBuildItem` in a build step and use the convenient methods such as `CustomScopeAnnotationsBuildItem.isScopeDeclaredOn()`."
msgstr "_Solução_ : O senhor pode injetar o `CustomScopeAnnotationsBuildItem` em uma etapa de compilação e usar os métodos convenientes, como `CustomScopeAnnotationsBuildItem.isScopeDeclaredOn()` ."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - Additional Interceptor Bindings"
msgstr "Caso de uso - ligações adicionais de interceptores"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"In rare cases it might be handy to programmatically register an existing annotation that is not annotated with `@javax.interceptor.InterceptorBinding` as an interceptor binding.\n"
"This is similar to what CDI achieves through `BeforeBeanDiscovery#addInterceptorBinding()`.\n"
"We are going to use `InterceptorBindingRegistrarBuildItem` to get it done."
msgstr "Em casos raros, pode ser útil registrar programaticamente uma anotação existente que não esteja anotada com `@javax.interceptor.InterceptorBinding` como uma ligação de interceptador. Isso é semelhante ao que o CDI consegue fazer por meio de `BeforeBeanDiscovery#addInterceptorBinding()` . Vamos usar o site `InterceptorBindingRegistrarBuildItem` para fazer isso."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`InterceptorBindingRegistrarBuildItem` Example"
msgstr "`InterceptorBindingRegistrarBuildItem` Exemplo"

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - Additional Qualifiers"
msgstr "Caso de uso - Qualificadores adicionais"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"Sometimes it might be useful to register an existing annotation that is not annotated with `@javax.inject.Qualifier` as a CDI qualifier.\n"
"This is similar to what CDI achieves through `BeforeBeanDiscovery#addQualifier()`.\n"
"We are going to use `QualifierRegistrarBuildItem` to get it done."
msgstr "Às vezes, pode ser útil registrar uma anotação existente que não esteja anotada em `@javax.inject.Qualifier` como um qualificador de CDI. Isso é semelhante ao que a CDI faz por meio do site `BeforeBeanDiscovery#addQualifier()` . Vamos usar o site `QualifierRegistrarBuildItem` para fazer isso."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`QualifierRegistrarBuildItem` Example"
msgstr "`QualifierRegistrarBuildItem` Exemplo"

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - Additional Stereotypes"
msgstr "Caso de uso - Estereótipos adicionais"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"It is sometimes useful to register an existing annotation that is not annotated with `@javax.enterprise.inject.Stereotype` as a CDI stereotype.\n"
"This is similar to what CDI achieves through `BeforeBeanDiscovery#addStereotype()`.\n"
"We are going to use `StereotypeRegistrarBuildItem` to get it done."
msgstr "Às vezes, é útil registrar uma anotação existente que não esteja anotada em `@javax.enterprise.inject.Stereotype` como um estereótipo de CDI. Isso é semelhante ao que a CDI consegue fazer por meio do site `BeforeBeanDiscovery#addStereotype()` . Vamos usar o site `StereotypeRegistrarBuildItem` para fazer isso."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`StereotypeRegistrarBuildItem` Example"
msgstr "`StereotypeRegistrarBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "If the newly registered stereotype annotation doesn't have the appropriate meta-annotations, such as scope or interceptor bindings, use an <<annotations_transformer_build_item,annotation transformation>> to add them."
msgstr "Se a anotação de estereótipo recém-registrada não tiver as meta-anotações apropriadas, como escopo ou ligações de interceptador, use uma xref:annotations_transformer_build_item[transformação de anotação] para adicioná-las."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - Injection Point Transformation"
msgstr "Caso de uso - Transformação do ponto de injeção"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"Every now and then it is handy to be able to change the qualifiers of an injection point programmatically.\n"
"You can do just that with `InjectionPointTransformerBuildItem`.\n"
"The following sample shows how to apply transformation to injection points with type `Foo` that contain qualifier `MyQualifier`:"
msgstr "De vez em quando, é útil poder alterar os qualificadores de um ponto de injeção de forma programática. O senhor pode fazer exatamente isso com `InjectionPointTransformerBuildItem` . O exemplo a seguir mostra como aplicar a transformação aos pontos de injeção com o tipo `Foo` que contém o qualificador `MyQualifier` :"

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`InjectionPointTransformerBuildItem` Example"
msgstr "`InjectionPointTransformerBuildItem` Exemplo"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "In theory, you can use <<annotations_transformer_build_item,an `AnnotationsTransformer`>> to achieve the same goal. However, there are few differences that make `InjectionPointsTransformer` more suitable for this particular task: (1) annotation transformers are applied to all classes during bean discovery, whereas `InjectionPointsTransformer` is only applied to discovered injection points after bean discovery; (2) with `InjectionPointsTransformer` you don't need to handle various types of injection points (field, parameters of initializer methods, etc.)."
msgstr "Em teoria, o senhor pode usar xref:annotations_transformer_build_item[um AnnotationsTransformer] para atingir o mesmo objetivo. No entanto, há algumas diferenças que tornam o `InjectionPointsTransformer` mais adequado para essa tarefa específica: (1) os transformadores de anotação são aplicados a todas as classes durante a descoberta do bean, enquanto o `InjectionPointsTransformer` só é aplicado aos pontos de injeção descobertos após a descoberta do bean; (2) com o `InjectionPointsTransformer` , o senhor não precisa lidar com vários tipos de pontos de injeção (campo, parâmetros de métodos inicializadores etc.)."

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Use Case - Resource Annotations and Injection"
msgstr "Caso de uso - Anotações e injeção de recursos"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"The `ResourceAnnotationBuildItem` can be used to specify resource annotations that make it possible to resolve non-CDI injection points, such as Jakarta EE resources.\n"
"An integrator must also provide a corresponding `io.quarkus.arc.ResourceReferenceProvider` service provider implementation."
msgstr "O `ResourceAnnotationBuildItem` pode ser usado para especificar anotações de recursos que possibilitam a resolução de pontos de injeção não-CDI, como os recursos do Jakarta EE. Um integrador também deve fornecer uma implementação correspondente do provedor de serviços `io.quarkus.arc.ResourceReferenceProvider` ."

#. type: Block title
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "`ResourceAnnotationBuildItem` Example"
msgstr "`ResourceAnnotationBuildItem` Exemplo"

#. type: Title ==
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "Available Build Time Metadata"
msgstr "Metadados de tempo de construção disponíveis"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"Any of the above extensions that operates with `BuildExtension.BuildContext` can leverage certain build time metadata that are generated during build.\n"
"The built-in keys located in `io.quarkus.arc.processor.BuildExtension.Key` are:"
msgstr "Qualquer uma das extensões acima que opere com o site `BuildExtension.BuildContext` pode aproveitar determinados metadados de tempo de compilação gerados durante a compilação. As chaves incorporadas localizadas em `io.quarkus.arc.processor.BuildExtension.Key` são:"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "ANNOTATION_STORE"
msgstr "ANNOTATION_STORE"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Contains an `AnnotationStore` that keeps information about all `AnnotationTarget` annotations after application of annotation transformers"
msgstr "Contém um `AnnotationStore` que mantém informações sobre todas as anotações do `AnnotationTarget` após a aplicação de transformadores de anotações"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "INJECTION_POINTS"
msgstr "INJECTION_POINTS"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`Collection<InjectionPointInfo>` containing all injection points"
msgstr "`Collection<InjectionPointInfo>` contendo todos os pontos de injeção"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "BEANS"
msgstr "FEIJÕES"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`Collection<BeanInfo>` containing all beans"
msgstr "`Collection<BeanInfo>` contendo todos os grãos"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "REMOVED_BEANS"
msgstr "FEIJÕES REMOVIDOS"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`Collection<BeanInfo>` containing all the removed beans; see <<cdi-reference.adoc#remove_unused_beans,Removing unused beans>> for more information"
msgstr "`Collection<BeanInfo>` contendo todos os beans removidos; consulte xref:cdi-reference.adoc#remove_unused_beans[Remoção de beans não utilizados] para obter mais informações"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "OBSERVERS"
msgstr "OBSERVADORES"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`Collection<ObserverInfo>` containing all observers"
msgstr "`Collection<ObserverInfo>` contendo todos os observadores"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "SCOPES"
msgstr "ESCOPAS"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`Collection<ScopeInfo>` containing all scopes, including custom ones"
msgstr "`Collection<ScopeInfo>` contendo todos os escopos, inclusive os personalizados"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "QUALIFIERS"
msgstr "QUALIFICADORES"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`Map<DotName, ClassInfo>` containing all qualifiers"
msgstr "`Map<DotName, ClassInfo>` contendo todos os qualificadores"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "INTERCEPTOR_BINDINGS"
msgstr "INTERCEPTOR_BINDINGS"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`Map<DotName, ClassInfo>` containing all interceptor bindings"
msgstr "`Map<DotName, ClassInfo>` contendo todos os vínculos de interceptores"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "STEREOTYPES"
msgstr "ESTEREÓTIPOS"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "`Map<DotName, StereotypeInfo>` containing all stereotypes"
msgstr "`Map<DotName, StereotypeInfo>` contendo todos os estereótipos"

#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid ""
"To get hold of these, simply query the extension context object for given key.\n"
"Note that these metadata are made available as build proceeds which means that extensions can only leverage metadata that were built before the extensions are invoked.\n"
"If your extension attempts to retrieve metadata that wasn't yet produced, `null` will be returned.\n"
"Here is a summary of which extensions can access which metadata:"
msgstr "Para obtê-los, basta consultar o objeto de contexto da extensão para uma determinada chave. Observe que esses metadados são disponibilizados à medida que a compilação avança, o que significa que as extensões só podem aproveitar os metadados que foram criados antes de as extensões serem invocadas. Se sua extensão tentar recuperar metadados que ainda não foram produzidos, será retornado o endereço `null` . Aqui está um resumo de quais extensões podem acessar quais metadados:"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "AnnotationsTransformer"
msgstr "AnnotationsTransformer"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Shouldn't rely on any metadata as it could be used at any time in any phase of the bootstrap"
msgstr "Não deve depender de nenhum metadado, pois pode ser usado a qualquer momento em qualquer fase do bootstrap"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "ContextRegistrar"
msgstr "Registrador de contexto"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Has access to `ANNOTATION_STORE`, `QUALIFIERS`, `INTERCEPTOR_BINDINGS`, `STEREOTYPES`"
msgstr "Tem acesso a `ANNOTATION_STORE` , `QUALIFIERS` , `INTERCEPTOR_BINDINGS` , `STEREOTYPES`"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "InjectionPointsTransformer"
msgstr "InjectionPointsTransformer (Transformador de pontos de injeção)"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "ObserverTransformer"
msgstr "ObserverTransformer"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "BeanRegistrar"
msgstr "Registrador de feijão"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Has access to `ANNOTATION_STORE`, `QUALIFIERS`, `INTERCEPTOR_BINDINGS`, `STEREOTYPES`, `BEANS` (class-based beans only), `OBSERVERS` (class-based observers only), `INJECTION_POINTS`"
msgstr "Tem acesso a `ANNOTATION_STORE` , `QUALIFIERS` , `INTERCEPTOR_BINDINGS` , `STEREOTYPES` , `BEANS` (somente beans baseados em classe), `OBSERVERS` (somente observadores baseados em classe), `INJECTION_POINTS`"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "ObserverRegistrar"
msgstr "ObservadorRegistrador"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Has access to `ANNOTATION_STORE`, `QUALIFIERS`, `INTERCEPTOR_BINDINGS`, `STEREOTYPES`, `BEANS`, `OBSERVERS` (class-based observers only), `INJECTION_POINTS`"
msgstr "Tem acesso a `ANNOTATION_STORE` , `QUALIFIERS` , `INTERCEPTOR_BINDINGS` , `STEREOTYPES` , `BEANS` , `OBSERVERS` (somente observadores baseados em classe), `INJECTION_POINTS`"

#. type: Labeled list
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy, no-wrap
msgid "BeanDeploymentValidator"
msgstr "Validador de implantação de feijão (BeanDeploymentValidator)"

#. type: Plain text
#: _versions/2.13/guides/cdi-integration.adoc
#, fuzzy
msgid "Has access to all build metadata"
msgstr "Tem acesso a todos os metadados de compilação"
