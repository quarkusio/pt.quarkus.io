# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:11+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:6
#, no-wrap
msgid "Using Blaze-Persistence"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:14
msgid "Blaze-Persistence offers a fluent query builder API on top of JPA with a deep Hibernate ORM integration that enables the use of advanced SQL features like Common Table Expressions while staying in the realm of the JPA model."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:19
msgid "On top of that, the Blaze-Persistence Entity-View module allows for DTO definitions that can be applied to business logic queries which are then transformed to optimized queries that only fetch the data that is needed to construct the DTO instances.  The same DTO definitions can further be used for applying database updates, leading to a great reduction in boilerplate code and removing the need for object mapping tools."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:22
#, no-wrap
msgid "Setting up and configuring Blaze-Persistence"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:28
msgid "The extension comes with default producers for `CriteriaBuilderFactory` and `EntityViewManager` that work out of the box given a working Hibernate ORM configuration. For customization, overriding of the default producers is possible via the standard mechanism as documented in the xref:cdi-reference.adoc#default_beans[Quarkus CDI reference].  This is needed if you need to set custom link:https://persistence.blazebit.com/documentation/entity-view/manual/en_US/index.html#anchor-configuration-properties[Blaze-Persistence properties]."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:30
msgid "In Quarkus, you just need to:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:32
msgid "`@Inject` `CriteriaBuilderFactory` or `EntityViewManager` and use it"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:33
msgid "annotate your entity views with `@EntityView` and any other mapping annotation as usual"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:35
msgid "Add the following dependencies to your project:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:37
msgid "the Blaze-Persistence extension: `com.blazebit:blaze-persistence-integration-quarkus`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:38
msgid "further Blaze-Persistence integrations as needed:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:39
msgid "`blaze-persistence-integration-jackson` for link:https://persistence.blazebit.com/documentation/entity-view/manual/en_US/index.html#Jackson%20integration[Jackson]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:40
msgid "`blaze-persistence-integration-jaxrs` for link:https://persistence.blazebit.com/documentation/entity-view/manual/en_US/index.html#jaxrs-integration[JAX-RS]"
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:43
#, no-wrap
msgid "Example dependencies using Maven"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:55
#, no-wrap
msgid ""
"<!-- Blaze-Persistence specific dependencies -->\n"
"<dependency>\n"
"    <groupId>com.blazebit</groupId>\n"
"    <artifactId>blaze-persistence-integration-quarkus</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>com.blazebit</groupId>\n"
"    <artifactId>blaze-persistence-integration-hibernate-5.6</artifactId>\n"
"    <scope>runtime</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:58
#, no-wrap
msgid "Using Gradle"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:62
#, no-wrap
msgid ""
"implementation(\"com.blazebit:blaze-persistence-integration-quarkus\")\n"
"runtimeOnly(\"com.blazebit:blaze-persistence-integration-hibernate-5.6\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:65
msgid "The use in native images requires a dependency on the entity view annotation processor that may be extracted into a separate `native` profile:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:80
#, no-wrap
msgid ""
"<profiles>\n"
"    <profile>\n"
"        <id>native</id>\n"
"        <dependencies>\n"
"            <dependency>\n"
"                <groupId>com.blazebit</groupId>\n"
"                <artifactId>blaze-persistence-entity-view-processor</artifactId>\n"
"                <scope>provided</scope>\n"
"            </dependency>\n"
"        </dependencies>\n"
"    </profile>\n"
"</profiles>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:83
msgid "A `CriteriaBuilderFactory` and an `EntityViewManager` will be created based on the configured `EntityManagerFactory` as provided by the xref:hibernate-orm.adoc[Hibernate-ORM extension]."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:85
msgid "You can then access these beans via injection:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:87
#, no-wrap
msgid "Example application bean using Hibernate"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:97
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class SantaClausService {\n"
"    @Inject\n"
"    EntityManager em; <1>\n"
"    @Inject\n"
"    CriteriaBuilderFactory cbf; <2>\n"
"    @Inject\n"
"    EntityViewManager evm; <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:104
#, no-wrap
msgid ""
"    @Transactional <4>\n"
"    public List<GiftView> findAllGifts() {\n"
"        CriteriaBuilder<Gift> cb = cbf.create(em, Gift.class);\n"
"        return evm.applySetting(EntityViewSetting.create(GiftView.class), cb).getResultList();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:107
msgid "Inject the `EntityManager`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:108
msgid "Inject the `CriteriaBuilderFactory`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:109
msgid "Inject the `EntityViewManager`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:110
msgid "Mark your CDI bean method as `@Transactional` so that a transaction is started or joined."
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:112
#, no-wrap
msgid "Example Entity"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:119
#, no-wrap
msgid ""
"@Entity\n"
"public class Gift {\n"
"    private Long id;\n"
"    private String name;\n"
"    private String description;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:124
#, no-wrap
msgid ""
"    @Id @GeneratedValue(strategy = GenerationType.SEQUENCE, generator=\"giftSeq\")\n"
"    public Long getId() {\n"
"        return id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:128
#, no-wrap
msgid ""
"    public void setId(Long id) {\n"
"        this.id = id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:132
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:136
#, no-wrap
msgid ""
"    public void setName(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:141
#, no-wrap
msgid ""
"    public String getDescription() {\n"
"        return description;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:146
#, no-wrap
msgid ""
"    public void setDescription(String description) {\n"
"        this.description = description;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:149
#, no-wrap
msgid "Example Entity-View"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:153
#, no-wrap
msgid ""
"@EntityView(Gift.class)\n"
"public interface GiftView {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:156
#, no-wrap
msgid ""
"    @IdMapping\n"
"    Long getId();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:159
#, no-wrap
msgid ""
"    String getName();\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:162
#, no-wrap
msgid "Example updatable Entity-View"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:168
#, no-wrap
msgid ""
"@UpdatableEntityView\n"
"@CreatableEntityView\n"
"@EntityView(Gift.class)\n"
"public interface GiftUpdateView extends GiftView {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:171
#, no-wrap
msgid ""
"    void setName(String name);\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:174
#, no-wrap
msgid "Example JAX-RS Resource"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:184
#, no-wrap
msgid ""
"@Path(\"/gifts\")\n"
"public class GiftResource {\n"
"    @Inject\n"
"    EntityManager entityManager;\n"
"    @Inject\n"
"    EntityViewManager entityViewManager;\n"
"    @Inject\n"
"    SantaClausService santaClausService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:191
#, no-wrap
msgid ""
"    @POST\n"
"    @Transactional\n"
"    public Response createGift(GiftUpdateView view) {\n"
"        entityViewManager.save(entityManager, view);\n"
"        return Response.created(URI.create(\"/gifts/\" + view.getId())).build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:197
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public List<GiftView> getGifts() {\n"
"        return santaClausService.findAllGifts();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:205
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"{id}\")\n"
"    @Transactional\n"
"    public GiftView updateGift(@EntityViewId(\"id\") GiftUpdateView view) {\n"
"        entityViewManager.save(entityManager, view);\n"
"        return entityViewManager.find(entityManager, GiftView.class, view.getId());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:213
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"{id\"})\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public GiftView getGift(Long id) {\n"
"        return return entityViewManager.find(entityManager, GiftView.class, view.getId());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:216
#, no-wrap
msgid "Blaze-Persistence configuration properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:219
msgid "There are various optional properties useful to refine your `EntityViewManager` and `CriteriaBuilderFactory` or guide guesses of Quarkus."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:221
msgid "There are no required properties, as long as the Hibernate ORM extension is configured properly."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:223
msgid "When no property is set, the Blaze-Persistence defaults apply."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:225
msgid "The configuration properties listed here allow you to override such defaults, and customize and tune various aspects."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:229
msgid "Apart from these configuration options, further configuration and customization can be applied by observing a `CriteriaBuilderConfiguration` or `EntityViewConfiguration` events and applying customizations on these objects. The various customization use cases can be found in the link:https://persistence.blazebit.com/documentation/entity-view/manual/en_US/index.html#quarkus-customization[Quarkus section of the entity-view documentation]."
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:231
#, no-wrap
msgid "Example CriteriaBuilderConfiguration and EntityViewConfiguration observing"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:235
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class BlazePersistenceConfigurer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:239
#, no-wrap
msgid ""
"    public void configure(@Observes CriteriaBuilderConfiguration config) {\n"
"        config.setProperty(\"...\", \"...\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:245
#, no-wrap
msgid ""
"    public void configure(@Observes EntityViewConfiguration config) {\n"
"        // Register custom BasicUserType or register type test values\n"
"        config.registerBasicUserType(MyClass.class, MyClassBasicUserType.class);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:247
#, no-wrap
msgid "Limitations"
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:249
#, no-wrap
msgid "Apache Derby"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/blaze-persistence.adoc:251
msgid "Blaze-Persistence currently does not come with support for Apache Derby.  This limitation could be lifted in the future, if there's a compelling need for it and if someone contributes it."
msgstr ""
