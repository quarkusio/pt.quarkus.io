# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:11+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:6
#, no-wrap
msgid "Deploying on OpenShift"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:12
msgid "This guide covers generating and deploying OpenShift resources based on sane default and user supplied configuration."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:14
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:19
msgid "Access to an OpenShift cluster (Minishift is a viable option)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:20
msgid "OpenShift CLI (Optional, only required for manual deployment)"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:21
#, no-wrap
msgid "Bootstrapping the project"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:24
msgid "First, we need a new project that contains the OpenShift extension. This can be done using the following command:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:33
msgid "Quarkus offers the ability to automatically generate OpenShift resources based on sane defaults and user supplied configuration.  The OpenShift extension is actually a wrapper extension that brings together the xref:deploying-to-kubernetes.adoc[kubernetes] and xref:container-image.adoc#s2i[container-image-s2i] extensions with sensible defaults so that it's easier for the user to get started with Quarkus on OpenShift."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:35
msgid "When we added the OpenShift extension to the command line invocation above, the following dependency was added to the `pom.xml`"
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:37
#, no-wrap
msgid "pom.xml"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:43
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-openshift</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:46
#, no-wrap
msgid "build.gradle"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:49
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-openshift\")\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:51
#, no-wrap
msgid "Log Into the OpenShift Cluster"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:55
msgid "Before we build and deploy our application we need to log into an OpenShift cluster.  You can log in via the https://docs.openshift.com/container-platform/4.9/cli_reference/openshift_cli/getting-started-cli.html[OpenShift CLI]:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:56
#, no-wrap
msgid "Log In - OpenShift CLI Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:60
#, no-wrap
msgid "oc login -u myUsername <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:62
msgid "You'll be prompted for the required information such as server URL, password, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:64
msgid "Alternatively, you may log in using the API token:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:65
#, no-wrap
msgid "Log In - OpenShift CLI With API Token Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:69
#, no-wrap
msgid "oc login --token=myToken --server=myServerUrl\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:72
msgid "You can request the token via the _Copy Login Command_ link in the OpenShift web console."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:75
msgid "Finally, you don't need to use the OpenShift CLI at all.  Instead, set the `quarkus.kubernetes-client.master-url` config property and authenticate with the `quarkus.kubernetes-client.token`, or `quarkus.kubernetes-client.username` and `quarkus.kubernetes-client.password` respectively:"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:80
#, no-wrap
msgid "Build and Deployment"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:83
msgid "You can trigger a build and deployment in a single step or build the container image first and then configure the OpenShift application manually if you need <<control_application_config,more control over the deployment configuration>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:85
msgid "To trigger a build and deployment in a single step:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:91
msgid "If you want to test your application immediately then set the `quarkus.openshift.route.expose` config property to `true` to <<exposing_routes,expose the service automatically>>, e.g. add `-Dquarkus.openshift.route.expose=true` to the command above."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:95
msgid "This command will build your application locally, then trigger a container image build and finally apply the generated OpenShift resources automatically.  The generated resources use OpenShift's `DeploymentConfig` that is configured to automatically trigger a redeployment when a change in the `ImageStream` is noticed.  In other words, any container image build after the initial deployment will automatically trigger redeployment, without the need to delete, update or re-apply the generated resources."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:98
msgid "You can use the OpenShift web console to verify that the above command has created an image stream, a service resource and has deployed the application.  Alternatively, you can run the following OpenShift CLI commands:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:103
#, no-wrap
msgid ""
"oc get is <1>\n"
"oc get pods <2>\n"
"oc get svc <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:105
msgid "Lists the image streams created."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:106
msgid "Get the list of pods."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:107
msgid "Get the list of Kubernetes services."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:110
msgid "Note that the service is not exposed to the outside world by default.  So unless you've used the `quarkus.openshift.route.expose` config property to expose the created service automatically you'll need to expose the service manually."
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:111
#, no-wrap
msgid "Expose The Service - OpenShift CLI Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:117
#, no-wrap
msgid ""
"oc expose svc/greeting <1>\n"
"oc get routes <2>\n"
"curl http://<route>/greeting <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:119
msgid "Expose the service."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:120
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:164
msgid "Get the list of exposed routes."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:121
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:165
msgid "Access your application."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:123
#, no-wrap
msgid "Configure the OpenShift Application Manually "
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:126
msgid "If you need more control over the deployment configuration you can build the container image first and then configure the OpenShift application manually."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:128
msgid "To trigger a container image build:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:132
#, no-wrap
msgid "./mvnw clean package -Dquarkus.container-image.build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:136
msgid "The build that will be performed is a _s2i binary_ build.  The input of the build is the jar that has been built locally and the output of the build is an `ImageStream` that is configured to automatically trigger a deployment."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:140
msgid "During the build you may find the `Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed` exception due to self-signed certificate. To solve this, just add the following line to your `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:144
#, no-wrap
msgid "quarkus.kubernetes-client.trust-certs=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:147
msgid "For more information, see link:https://quarkus.io/guides/deploying-to-kubernetes#client-connection-configuration[deploying to kubernetes]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:150
msgid "Once the build is done we can create a new application from the relevant `ImageStream`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:159
#, no-wrap
msgid ""
"oc get is <1>\n"
"oc new-app --name=greeting <project>/openshift-quickstart:1.0.0-SNAPSHOT <2>\n"
"oc get svc\n"
"oc expose svc/greeting <3>\n"
"oc get routes <4>\n"
"curl http://<route>/greeting <5>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:161
msgid "Lists the image streams created. The image stream of our application should be tagged as <project>/openshift-quickstart:1.0.0-SNAPSHOT."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:162
msgid "Create a new application from the image source."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:163
msgid "Expose the service to the outside world."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:168
msgid "After this setup the next time the container image is built a deployment to OpenShift is triggered automatically.  In other words, you don't need to repeat the above steps."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:169
#, no-wrap
msgid "Non-S2I Builds"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:172
msgid "Out of the box the OpenShift extension is configured to use xref:container-image.adoc#s2i[container-image-s2i]. However, it's still possible to use other container image extensions like:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:174
msgid "xref:container-image.adoc#docker[container-image-docker]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:175
msgid "xref:container-image.adoc#jib[container-image-jib]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:177
msgid "When a non-s2i container image extension is used, an `ImageStream` is created that is pointing to an external `dockerImageRepository`. The image is built and pushed to the registry and the `ImageStream` populates the tags that are available in the `dockerImageRepository`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:179
msgid "To select which extension will be used for building the image:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:183
#, no-wrap
msgid "quarkus.container-image.builder=docker\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:186
msgid "or"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:190
#, no-wrap
msgid "quarkus.container-image.builder=jib\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:192
#, no-wrap
msgid "Customizing"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:195
msgid "All available customization options are available in the xref:deploying-to-kubernetes.adoc#openshift[OpenShift configuration options]."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:197
msgid "Some examples are provided in the sections below:"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:199
#, no-wrap
msgid "Exposing Routes"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:202
msgid "To expose a `Route` for the Quarkus application:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:206
#, no-wrap
msgid "quarkus.openshift.route.expose=true\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:211
msgid "You don't necessarily need to add this property in the `application.properties`. You can pass it as a command line argument:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:215
#, no-wrap
msgid "./mvnw clean package -Dquarkus.openshift.route.expose=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:218
msgid "The same applies to all properties listed below."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:220
#, no-wrap
msgid "Labels"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:223
msgid "To add a label in the generated resources:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:227
#, no-wrap
msgid "quarkus.openshift.labels.foo=bar\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:229
#, no-wrap
msgid "Annotations"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:232
msgid "To add an annotation in the generated resources:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:236
#, no-wrap
msgid "quarkus.openshift.annotations.foo=bar\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:239
#, no-wrap
msgid "Environment variables"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:242
msgid "OpenShift provides multiple ways of defining environment variables:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:244
msgid "key/value pairs"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:245
msgid "import all values from a Secret or ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:246
msgid "interpolate a single value identified by a given field in a Secret or ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:247
msgid "interpolate a value from a field within the same resource"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:248
#, no-wrap
msgid "Environment variables from key/value pairs"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:251
msgid "To add a key/value pair as an environment variable in the generated resources:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:255
#, no-wrap
msgid "quarkus.openshift.env.vars.my-env-var=foobar\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:259
msgid "The command above will add `MY_ENV_VAR=foobar` as an environment variable.  Please note that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`."
msgstr ""

#. type: Title ====
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:260
#, no-wrap
msgid "Environment variables from Secret"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:264
msgid "To add all key/value pairs of `Secret` as environment variables just apply the following configuration, separating each `Secret` to be used as source by a comma (`,`):"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:268
#, no-wrap
msgid "quarkus.openshift.env.secrets=my-secret,my-other-secret\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:271
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:315
msgid "which would generate the following in the container definition:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:281
#, no-wrap
msgid ""
"envFrom:\n"
"  - secretRef:\n"
"      name: my-secret\n"
"      optional: false\n"
"  - secretRef:\n"
"      name: my-other-secret\n"
"      optional: false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:284
msgid "The following extracts a value identified by the `keyName` field from the `my-secret` Secret into a `foo` environment variable:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:289
#, no-wrap
msgid ""
"quarkus.openshift.env.mapping.foo.from-secret=my-secret\n"
"quarkus.openshift.env.mapping.foo.with-key=keyName\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:292
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:337
msgid "This would generate the following in the `env` section of your container:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:302
#, no-wrap
msgid ""
"- env:\n"
"  - name: FOO\n"
"    valueFrom:\n"
"      secretKeyRef:\n"
"        key: keyName\n"
"        name: my-secret\n"
"        optional: false\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:304
#, no-wrap
msgid "Environment variables from ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:308
msgid "To add all key/value pairs from `ConfigMap` as environment variables just apply the following configuration, separating each `ConfigMap` to be used as source by a comma (`,`):"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:312
#, no-wrap
msgid "quarkus.openshift.env.configmaps=my-config-map,another-config-map\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:325
#, no-wrap
msgid ""
"envFrom:\n"
"  - configMapRef:\n"
"      name: my-config-map\n"
"      optional: false\n"
"  - configMapRef:\n"
"      name: another-config-map\n"
"      optional: false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:329
msgid "The following extracts a value identified by the `keyName` field from the `my-config-map` ConfigMap into a `foo` environment variable:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:334
#, no-wrap
msgid ""
"quarkus.openshift.env.mapping.foo.from-configmap=my-configmap\n"
"quarkus.openshift.env.mapping.foo.with-key=keyName\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:347
#, no-wrap
msgid ""
"- env:\n"
"  - name: FOO\n"
"    valueFrom:\n"
"      configMapRefKey:\n"
"        key: keyName\n"
"        name: my-configmap\n"
"        optional: false\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:349
#, no-wrap
msgid "Environment variables from fields"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:352
msgid "It's also possible to use the value from another field to add a new environment variable by specifying the path of the field to be used as a source, as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:356
#, no-wrap
msgid "quarkus.openshift.env.fields.foo=metadata.name\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:358
#, no-wrap
msgid "Using Deployment instead of DeploymentConfig"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:361
msgid "Out of the box the extension will generate a `DeploymentConfig` resource. Often users, prefer to use `Deployment` as the main deployment resource, but still make use of OpenShift specific resources like `Route`, `BuildConfig` etc.  This feature is enabled by setting `quarkus.openshift.deployment-kind` to `Deployment`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:365
#, no-wrap
msgid "quarkus.openshift.deployment-kind=Deployment\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:369
msgid "Since `Deployment` is a Kubernetes resource and not OpenShift specific, it can't possibly leverage `ImageStream` resources, as is the case with `DeploymentConfig`. This means that the image references need to include the container image registry that hosts the image.  When the image is built, using OpenShift builds (s2i binary and docker strategy) the OpenShift internal image registry `image-registry.openshift-image-registry.svc:5000` will be used, unless another registry has been explicitly specified by the user. Please note, that in the internal registry the project/namespace name is added as part of the image repository: `image-registry.openshift-image-registry.svc:5000/<project name>/<name>:<tag>`, so users will need to make sure that the target project/namespace name is aligned with the `quarkus.container-image.group`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:373
#, no-wrap
msgid "quarkus.container-image.group=<project/namespace name>\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:375
#, no-wrap
msgid "Validation"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:378
msgid "A conflict between two definitions, e.g. mistakenly assigning both a value and specifying that a variable is derived from a field, will result in an error being thrown at build time so that you get the opportunity to fix the issue before you deploy your application to your cluster where it might be more difficult to diagnose the source of the issue."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:380
msgid "Similarly, two redundant definitions, e.g. defining an injection from the same secret twice, will not cause an issue but will indeed report a warning to let you know that you might not have intended to duplicate that definition."
msgstr ""

#. type: Title =====
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:382
#, no-wrap
msgid "Backwards compatibility"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:385
msgid "Previous versions of the OpenShift extension supported a different syntax to add environment variables. The older syntax is still supported but is deprecated, and it's advised that you migrate to the new syntax."
msgstr ""

#. type: Block title
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:386
#, no-wrap
msgid "Old vs. new syntax"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:388
#, no-wrap
msgid "Old"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:388
#, no-wrap
msgid "New"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:389
#, no-wrap
msgid "Plain variable"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:389
#, no-wrap
msgid "`quarkus.openshift.env-vars.my-env-var.value=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:389
#, no-wrap
msgid "`quarkus.openshift.env.vars.my-env-var=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:390
#, no-wrap
msgid "From field"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:390
#, no-wrap
msgid "`quarkus.openshift.env-vars.my-env-var.field=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:390
#, no-wrap
msgid "`quarkus.openshift.env.fields.my-env-var=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:391
#, no-wrap
msgid "All from `ConfigMap`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:391
#, no-wrap
msgid "`quarkus.openshift.env-vars.xxx.configmap=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:391
#, no-wrap
msgid "`quarkus.openshift.env.configmaps=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:392
#, no-wrap
msgid "All from `Secret`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:392
#, no-wrap
msgid "`quarkus.openshift.env-vars.xxx.secret=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:392
#, no-wrap
msgid "`quarkus.openshift.env.secrets=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:393
#, no-wrap
msgid "From one `Secret` field"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:393
#, no-wrap
msgid "`quarkus.openshift.env-vars.foo.secret=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:393
#, no-wrap
msgid "`quarkus.openshift.env.mapping.foo.from-secret=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:394
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:396
#, no-wrap
msgid "`quarkus.openshift.env-vars.foo.value=field`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:394
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:396
#, no-wrap
msgid "`quarkus.openshift.env.mapping.foo.with-key=field`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:395
#, no-wrap
msgid "From one `ConfigMap` field"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:395
#, no-wrap
msgid "`quarkus.openshift.env-vars.foo.configmap=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:395
#, no-wrap
msgid "`quarkus.openshift.env.mapping.foo.from-configmap=foobar`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:401
msgid "If you redefine the same variable using the new syntax while keeping the old syntax, **ONLY** the new version will be kept, and a warning will be issued to alert you of the problem. For example, if you define both `quarkus.openshift.env-vars.my-env-var.value=foobar` and `quarkus.openshift.env.vars.my-env-var=newValue`, the extension will only generate an environment variable `MY_ENV_VAR=newValue` and issue a warning."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:402
#, no-wrap
msgid "Mounting volumes"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:405
msgid "The OpenShift extension allows the user to configure both volumes and mounts for the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:407
msgid "Any volume can be mounted with a simple configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:411
#, no-wrap
msgid "quarkus.openshift.mounts.my-volume.path=/where/to/mount\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:414
msgid "This will add a mount to my pod for volume `my-volume` to path `/where/to/mount`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:416
msgid "The volumes themselves can be configured as shown in the sections below:"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:417
#, no-wrap
msgid "Secret volumes"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:422
#, no-wrap
msgid "quarkus.openshift.secret-volumes.my-volume.secret-name=my-secret\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:424
#, no-wrap
msgid "ConfigMap volumes"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:429
#, no-wrap
msgid "quarkus.openshift.config-map-volumes.my-volume.config-map-name=my-secret\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:431
#, no-wrap
msgid "Persistent Volume Claims"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:436
#, no-wrap
msgid "quarkus.openshift.pvc-volumes.my-pvc.claim-name=my-pvc\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:438
#, no-wrap
msgid "Knative - OpenShift Serverless"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:441
msgid "OpenShift also provides the ability to use Knative via the link:https://www.openshift.com/learn/topics/serverless[OpenShift Serverless] functionality."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:443
msgid "The first order of business is to instruct Quarkus to generate Knative resources by setting:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:447
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=knative\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:451
msgid "In order to leverage OpenShift S2I to build the container image on the cluster and use the resulting container image for the Knative application, we need to set a couple of configuration properties:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:458
#, no-wrap
msgid ""
"# set the Kubernetes namespace which will be used to run the application\n"
"quarkus.container-image.group=geoand\n"
"# set the container image registry - this is the standard URL used to refer to the internal OpenShift registry\n"
"quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:461
msgid "The application can then be deployed to OpenShift Serverless by enabling the standard `quarkus.kubernetes.deploy=true` property."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.13/guides/deploying-to-openshift.adoc:462
#, no-wrap
msgid "Configuration Reference"
msgstr ""
