# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:11+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "Authorization of Web Endpoints"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Quarkus has an integrated pluggable web security layer. If security is enabled all HTTP requests will have a permission\n"
"check performed to make sure they are allowed to continue."
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Configuration authorization checks are executed before any annotation-based authorization check is done, so both\n"
"checks have to pass for a request to be allowed. This means you cannot use `@PermitAll` to open up a path if the path has\n"
"been blocked using `quarkus.http.auth.` configuration. If you are using JAX-RS you may want to consider using the\n"
"`quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security\n"
"requirements instead of HTTP path level matching, as these properties can be overridden by annotations on an individual\n"
"endpoint."
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Authorization is based on user roles that are provided by the security provider.\n"
"To customize these roles, a `SecurityIdentityAugmentor` can be created, see\n"
"xref:security-customization.adoc#security-identity-customization[Security Identity Customization]."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "Authorization using Configuration"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"The default implementation allows you to define permissions using config in `application.properties`. An example\n"
"config is shown below:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "This defines a role based policy that allows users with the `user` and `admin` roles. This is referenced by later rules."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "This is a permission set that references the previously defined policy. `roles1` is an arbitrary name, you can call the permission sets whatever you want."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "This permission references the default `permit` built-in policy to allow `GET` methods to `/public`. This is actually a no-op in this example, as this request would have been allowed anyway."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "This permission references the built-in `deny` policy for `/forbidden`. This is an exact path match as it does not end with `*`."
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Permissions are defined in config using permission sets. These are arbitrarily named permission grouping. Each permission\n"
"set must specify a policy that is used to control access. There are three built-in policies: `deny`, `permit` and `authenticated`,\n"
"which respectively permits all, denies all and only allows authenticated users."
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"It is also possible to define role based policies, as shown in the example. These policies will only allow users with the\n"
"specified roles to access the resources."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "Matching on paths, methods"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Permission sets can also specify paths and methods as a comma separated list. If a path ends with `*` then it is considered\n"
"to be a wildcard match and will match all sub paths, otherwise it is an exact match and will only match that specific path:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "Matching path but not method"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"If a request would match one or more permission sets based on the path, but does not match any due to method requirements\n"
"then the request is rejected."
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Given the above permission set, `GET /public/foo` would match both the path and method and thus be allowed,\n"
"whereas `POST /public/foo` would match the path but not the method and would thus be rejected."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "Matching multiple paths: longest path wins"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Matching is always done on a longest path wins basis, less specific permission sets are not considered if a more specific one\n"
"has been matched:"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Given the above permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths,\n"
"but because it matches the `deny1` permission set's path on a longer match, `deny1` will be chosen and the request will\n"
"be rejected."
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Subpath permissions always win against the root path permissions as explained above in the `deny1` versus `permit1` permission example.\n"
"Here is another example showing a subpath permission allowing a public resource access with the root path permission requiring the authorization:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "Matching multiple paths: most specific method wins"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"If a path is registered with multiple permission sets then any permission sets that specify an HTTP method will take\n"
"precedence and permissions sets without a method will not be considered (assuming of course the method matches). In this\n"
"instance, the permission sets without methods will only come into effect if the request method does not match any of the\n"
"sets with method permissions."
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Given the above permission set, `GET /public/foo` would match both permission sets' paths,\n"
"but because it matches the `permit1` permission set's explicit method, `permit1` will be chosen and the request will\n"
"be accepted. `PUT /public/foo` on the other hand, will not match the method permissions of `permit1` and so\n"
"`deny1` will be activated and reject the request."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "Matching multiple paths and methods: both win"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"If multiple permission sets specify the same path and method (or multiple have no method) then both permissions have to\n"
"allow access for the request to proceed. Note that for this to happen both have to either have specified the method, or\n"
"have no method, method specific matches take precedence as stated above:"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Given the above permission set, `GET /api/foo` would match both permission sets' paths,\n"
"so would require both the `user` and `admin` roles."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "Configuration Properties to Deny access"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "There are three configuration settings that alter the RBAC Deny behavior:"
msgstr ""

#. type: Labeled list
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"If set to true, the access will be denied for all JAX-RS endpoints by default, so if a JAX-RS endpoint does not have any security annotations\n"
"then it will default to `@DenyAll` behaviour. This is useful to ensure you cannot accidentally expose an endpoint that is supposed to be secured. Defaults to `false`."
msgstr ""

#. type: Labeled list
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Defines the default role requirements for unannotated endpoints. The role '**' is a special role that means any authenticated user. This cannot be combined with\n"
"`deny-unannotated-endpoints`, as the deny will take effect instead."
msgstr ""

#. type: Labeled list
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "`quarkus.security.deny-unannotated-members=true|false`"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"if set to true, the access will be denied to all CDI methods\n"
"and JAX-RS endpoints that do not have security annotations but are defined in classes that contain methods with\n"
"security annotations. Defaults to `false`."
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid "Disabling permissions"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "Permissions can be disabled at build time with an `enabled` property for each declared permission, for example:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "and enabled at runtime with a system property or environment variable, for example: `-Dquarkus.http.auth.permission.permit1.enabled=true`."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "Permission paths and http root path"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "The `quarkus.http.root-path` configuration property is used to change the xref:http-reference.adoc#context-path[http endpoint context path]."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "By default, `quarkus.http.root-path` is prepended automatically to configured permission paths then do not use a forward slash, for example:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "This configuration is equivalent to the following:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "A leading slash will change how the configured permission path is interpreted. The configured URL will be used as-is, and paths will not be adjusted if the value of `quarkus.http.root-path` is changed. For example:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "This configuration will only impact resources served from the fixed/static URL `/public`, which may not match your application resources if `quarkus.http.root-path` has been set to something other than `/`."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "See link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus] for more information."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "Authorization using Annotations"
msgstr ""

#: _versions/2.13/guides/security-authorization.adoc
msgid ""
"Quarkus comes with built-in security to allow for Role-Based Access Control (link:https://en.wikipedia.org/wiki/Role-based_access_control[RBAC])\n"
"based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans.\n"
"An example of an endpoint that makes use of both JAX-RS and Common Security annotations to describe and secure its endpoints is given in <<subject-example>>. Quarkus also provides\n"
"the `io.quarkus.security.Authenticated` annotation that will permit any authenticated user to access the resource\n"
"(equivalent to `@RolesAllowed(\"**\")`)."
msgstr ""

#. type: Block title
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "SubjectExposingResource Example"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "This `/subject/secured` endpoint requires an authenticated user that has been granted the role \"Tester\" through the use of the `@RolesAllowed(\"Tester\")` annotation."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "The endpoint obtains the user principal from the JAX-RS `SecurityContext`. This will be non-null for a secured endpoint."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "The `/subject/unsecured` endpoint allows for unauthenticated access by specifying the `@PermitAll` annotation."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "This call to obtain the user principal will return null if the caller is unauthenticated, non-null if the caller is authenticated."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "The `/subject/denied` endpoint disallows any access regardless of whether the call is authenticated by specifying the `@DenyAll` annotation."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/security-authorization.adoc
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-authorization.adoc
msgid "xref:security.adoc[Quarkus Security]"
msgstr ""
