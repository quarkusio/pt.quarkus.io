# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:11+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/cdi-reference.adoc
#, no-wrap
msgid "Contexts and Dependency Injection"
msgstr "Contextos e Injeção de Dependência"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Quarkus DI solution (also called ArC) is based on the https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html[Contexts and Dependency Injection for Java 2.0, window=\"_blank\"] specification.\n"
"However, it is not a full CDI implementation verified by the TCK.\n"
"Only a subset of the CDI features is implemented - see also <<supported_features,the list of supported features>> and <<limitations,the list of limitations>>."
msgstr "A solução Quarkus DI (também chamada de ArC) é baseada na especificação link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html[Contexts and Dependency Injection for Java 2.0] . No entanto, não é uma implementação completa de CDI verificada pelo TCK. Apenas um subconjunto dos recursos de CDI está implementado - consulte também xref:supported_features[a lista de recursos suportados] e xref:limitations[a lista de limitações] ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "If you're new to CDI then we recommend you to read the xref:cdi.adoc[Introduction to CDI] first."
msgstr "Se o senhor for novo no CDI, recomendamos que leia primeiro a xref:cdi.adoc[Introdução ao CDI] ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Most of the existing CDI code should work just fine but there are some small differences which follow from the Quarkus architecture and goals."
msgstr "A maior parte do código CDI existente deve funcionar perfeitamente, mas há algumas pequenas diferenças que decorrem da arquitetura e dos objetivos do Quarkus."

#. type: Title ==
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Bean Discovery"
msgstr "Descoberta do feijão"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Bean discovery in CDI is a complex process which involves legacy deployment structures and accessibility requirements of the underlying module architecture.\n"
"However, Quarkus is using a *simplified bean discovery*.\n"
"There is only single bean archive with the https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#default_bean_discovery[bean discovery mode `annotated`, window=\"_blank\"] and no visibility boundaries."
msgstr "A descoberta de beans no CDI é um processo complexo que envolve estruturas de implantação herdadas e requisitos de acessibilidade da arquitetura do módulo subjacente. No entanto, o Quarkus está usando uma *descoberta de beans simplificada* . Há apenas um único arquivo de bean com o link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#default_bean_discovery[modo de descoberta de bean annotated] e sem limites de visibilidade."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The bean archive is synthesized from:"
msgstr "O arquivo de feijão é sintetizado a partir de:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "the application classes,"
msgstr "as classes de aplicativos,"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "dependencies that contain a `beans.xml` descriptor (content is ignored),"
msgstr "dependências que contêm um descritor `beans.xml` (o conteúdo é ignorado),"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "dependencies that contain a Jandex index - `META-INF/jandex.idx`,"
msgstr "Dependências que contêm um índice Jandex - `META-INF/jandex.idx` ,"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "dependencies referenced by `quarkus.index-dependency` in `application.properties`,"
msgstr "Dependências referenciadas por `quarkus.index-dependency` em `application.properties` ,"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "and Quarkus integration code."
msgstr "e o código de integração do Quarkus."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Bean classes that don't have a https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#bean_defining_annotations[bean defining annotation, window=\"_blank\"] are not discovered.\n"
"This behavior is defined by CDI.\n"
"But producer methods and fields and observer methods are discovered even if the declaring class is not annotated with a bean defining annotation (this behavior is different to what is defined in CDI).\n"
"In fact, the declaring bean classes are considered annotated with `@Dependent`."
msgstr "As classes de bean que não têm uma link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#bean_defining_annotations[anotação de definição de bean] não são descobertas. Esse comportamento é definido pelo CDI. Mas os métodos e campos do produtor e os métodos do observador são descobertos mesmo que a classe declarante não seja anotada com uma anotação de definição de bean (esse comportamento é diferente do que é definido no CDI). Na verdade, as classes de bean declarantes são consideradas anotadas com `@Dependent` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Quarkus extensions may declare additional discovery rules. For example, `@Scheduled` business methods are registered even if the declaring class is not annotated with a bean defining annotation."
msgstr "As extensões do Quarkus podem declarar regras de descoberta adicionais. Por exemplo, os métodos comerciais do `@Scheduled` são registrados mesmo que a classe declarante não seja anotada com uma anotação de definição de bean."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "How to Generate a Jandex Index"
msgstr "Como gerar um índice Jandex"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"A dependency with a Jandex index is automatically scanned for beans.\n"
"To generate the index just add the following plugin to your build file:"
msgstr "Uma dependência com um índice Jandex é automaticamente verificada em busca de beans. Para gerar o índice, basta adicionar o seguinte plug-in ao seu arquivo de compilação:"

#. type: Block title
#: _versions/2.13/guides/cdi-reference.adoc
#, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: Block title
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Gradle (Groovy DSL)"
msgstr "Gradle (Groovy DSL)"

#. type: Block title
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Gradle (Kotlin DSL)"
msgstr "Gradle (Kotlin DSL)"

#. type: delimited block *
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "If you can't modify the dependency, you can still index it by adding `quarkus.index-dependency` entries to your `application.properties`:"
msgstr "Se não for possível modificar a dependência, o senhor ainda poderá indexá-la adicionando entradas `quarkus.index-dependency` ao seu site `application.properties` :"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "For example, the following entries ensure that the `org.acme:acme-api` dependency is indexed:"
msgstr "Por exemplo, as entradas a seguir garantem que a dependência `org.acme:acme-api` seja indexada:"

#. type: Block title
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Example application.properties"
msgstr "Exemplo de application.properties"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Value is a group id for a dependency identified by name `acme`."
msgstr "O valor é um ID de grupo para uma dependência identificada pelo nome `acme` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Value is an artifact id for a dependency identified by name `acme`."
msgstr "O valor é um ID de artefato para uma dependência identificada pelo nome `acme` ."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "How To Exclude Types and Dependencies from Discovery"
msgstr "Como excluir tipos e dependências da descoberta"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"It may happen that some beans from third-party libraries do not work correctly in Quarkus.\n"
"A typical example is a bean injecting a portable extension.\n"
"In such case, it's possible to exclude types and dependencies from the bean discovery.\n"
"The `quarkus.arc.exclude-types` property accepts a list of string values that are used to match classes that should be excluded."
msgstr "Pode acontecer de alguns beans de bibliotecas de terceiros não funcionarem corretamente no Quarkus. Um exemplo típico é um bean que injeta uma extensão portátil. Nesse caso, é possível excluir tipos e dependências da descoberta do bean. A propriedade `quarkus.arc.exclude-types` aceita uma lista de valores de cadeia de caracteres que são usados para corresponder às classes que devem ser excluídas."

#. type: Block title
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Value Examples"
msgstr "Exemplos de valores"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Value"
msgstr "Valor"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, no-wrap
msgid "Description"
msgstr "Descrição"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "`org.acme.Foo`"
msgstr "`org.acme.Foo`"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Match the fully qualified name of the class"
msgstr "Corresponde ao nome totalmente qualificado da classe"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "`org.acme.*`"
msgstr "`org.acme.*`"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Match classes with package `org.acme`"
msgstr "Combinar classes com pacotes `org.acme`"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "`org.acme.**`"
msgstr "`org.acme.**`"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Match classes where the package starts with `org.acme`"
msgstr "Combine as classes em que o pacote começa com `org.acme`"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "`Bar`"
msgstr "`Bar`"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Match the simple name of the class"
msgstr "Corresponder o nome simples da classe"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Exclude the type `org.acme.Foo`."
msgstr "Exclua o tipo `org.acme.Foo` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Exclude all types from the `org.acme` package."
msgstr "Excluir todos os tipos do pacote `org.acme` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Exclude all types whose simple name is `Bar`"
msgstr "Excluir todos os tipos cujo nome simples seja `Bar`"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"It is also possible to exclude a dependency artifact that would be otherwise scanned for beans.\n"
"For example, because it contains a `beans.xml` descriptor."
msgstr "Também é possível excluir um artefato de dependência que, de outra forma, seria verificado em busca de beans. Por exemplo, porque ele contém um descritor `beans.xml` ."

#. type: Title ==
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Native Executables and Private Members"
msgstr "Executáveis nativos e membros privados"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Quarkus is using GraalVM to build a native executable.\n"
"One of the limitations of GraalVM is the usage of https://www.graalvm.org/{graalvm-version}/reference-manual/native-image/Reflection/[Reflection, window=\"_blank\"].\n"
"Reflective operations are supported but all relevant members must be registered for reflection explicitly.\n"
"Those registrations result in a bigger native executable."
msgstr "O Quarkus está usando o GraalVM para criar um executável nativo. Uma das limitações do GraalVM é o uso de link:https://www.graalvm.org/{graalvm-version}/reference-manual/native-image/Reflection/[Reflexão] . As operações reflexivas são suportadas, mas todos os membros relevantes devem ser registrados explicitamente para reflexão. Esses registros resultam em um executável nativo maior."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"And if Quarkus DI needs to access a private member it *has to use reflection*.\n"
"That's why Quarkus users are encouraged __not to use private members__ in their beans.\n"
"This involves injection fields, constructors and initializers, observer methods, producer methods and fields, disposers and interceptor methods."
msgstr "E se o Quarkus DI precisar acessar um membro privado, *terá de usar a reflexão* . É por isso que os usuários do Quarkus são incentivados a _não usar membros privados_ em seus beans. Isso envolve campos de injeção, construtores e inicializadores, métodos de observação, métodos e campos de produção, descartadores e métodos de interceptação."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"How to avoid using private members?\n"
"You can use package-private modifiers:"
msgstr "Como evitar o uso de membros privados? O senhor pode usar modificadores package-private:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "A package-private injection field."
msgstr "Um campo de injeção privada de pacote."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "A package-private observer method."
msgstr "Um método de observador privado de pacote."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Or constructor injection:"
msgstr "Ou injeção de construtor:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "A package-private constructor injection. `@Inject` is optional in this particular case."
msgstr "Uma injeção de construtor privado de pacote. `@Inject` é opcional nesse caso específico."

#. type: Title ==
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Supported Features"
msgstr "Recursos suportados"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Programming model"
msgstr "Modelo de programação"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Managed beans implemented by a Java class"
msgstr "Beans gerenciados implementados por uma classe Java"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`@PostConstruct` and `@PreDestroy` lifecycle callbacks"
msgstr "`@PostConstruct` e `@PreDestroy` callbacks do ciclo de vida"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Producer methods and fields, disposers"
msgstr "Métodos e campos de produção, descartadores"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Qualifiers"
msgstr "Qualificadores"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Alternatives"
msgstr "Alternativas"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Stereotypes"
msgstr "Estereótipos"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Dependency injection and lookup"
msgstr "Injeção e pesquisa de dependência"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Field, constructor and initializer/setter injection"
msgstr "Injeção de campo, construtor e inicializador/setter"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Type-safe resolution"
msgstr "Resolução com segurança de tipo"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Programmatic lookup via `javax.enterprise.inject.Instance`"
msgstr "Pesquisa programática via `javax.enterprise.inject.Instance`"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Client proxies"
msgstr "Proxies de clientes"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Injection point metadata"
msgstr "Metadados do ponto de injeção"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Scopes and contexts"
msgstr "Escopos e contextos"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`@Dependent`, `@ApplicationScoped`, `@Singleton`, `@RequestScoped` and `@SessionScoped`"
msgstr "`@Dependent` , `@ApplicationScoped` , `@Singleton` , `@RequestScoped` e `@SessionScoped`"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Custom scopes and contexts"
msgstr "Escopos e contextos personalizados"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Interceptors"
msgstr "Interceptadores"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Business method interceptors: `@AroundInvoke`"
msgstr "Interceptadores de métodos de negócios: `@AroundInvoke`"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Interceptors for lifecycle event callbacks: `@PostConstruct`, `@PreDestroy`, `@AroundConstruct`"
msgstr "Interceptadores para retornos de chamada de eventos do ciclo de vida: `@PostConstruct` , `@PreDestroy` , `@AroundConstruct`"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Decorators"
msgstr "Decoradores"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Events and observer methods, including asynchronous events and transactional observer methods"
msgstr "Eventos e métodos de observador, incluindo eventos assíncronos e métodos de observador transacional"

#. type: Title ====
#: _versions/2.13/guides/cdi-reference.adoc
#, no-wrap
msgid "Limitations"
msgstr "Limitações"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`@ConversationScoped` is not supported"
msgstr "`@ConversationScoped` não é suportado"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Portable Extensions are not supported"
msgstr "As extensões portáteis não são suportadas"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`BeanManager` - only the following methods are implemented: `getBeans()`, `createCreationalContext()`, `getReference()`, `getInjectableReference()` , `resolve()`, `getContext()`, `fireEvent()`, `getEvent()` and `createInstance()`"
msgstr "`BeanManager` - Somente os seguintes métodos são implementados: `getBeans()` , `createCreationalContext()` , `getReference()` , `getInjectableReference()` , `resolve()` , `getContext()` , `fireEvent()` , `getEvent()` e `createInstance()`"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Specialization is not supported"
msgstr "A especialização não é suportada"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`beans.xml` descriptor content is ignored"
msgstr "`beans.xml` o conteúdo do descritor é ignorado"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Passivation and passivating scopes are not supported"
msgstr "Não há suporte para escopos de passivação e passivação"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Interceptor methods on superclasses are not implemented yet"
msgstr "Os métodos de interceptação em superclasses ainda não foram implementados"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`@Interceptors` is not supported"
msgstr "`@Interceptors` não é suportado"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Decoration of built-in beans, such as `Event`, is not supported"
msgstr "A decoração de beans incorporados, como `Event` , não é suportada"

#. type: Title ==
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Non-standard Features"
msgstr "Características não normalizadas"

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Eager Instantiation of Beans"
msgstr "Instanciação ansiosa de beans"

#. type: Title ====
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Lazy By Default"
msgstr "Preguiçoso por padrão"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"By default, CDI beans are created lazily, when needed.\n"
"What exactly \"needed\" means depends on the scope of a bean."
msgstr "Por padrão, os beans CDI são criados de forma preguiçosa, quando necessário. O significado exato de \"necessário\" depende do escopo de um bean."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "A *normal scoped bean* (`@ApplicationScoped`, `@RequestScoped`, etc.) is needed when a method is invoked upon an injected instance (contextual reference per the specification)."
msgstr "Um *bean com escopo normal* ( `@ApplicationScoped` , `@RequestScoped` , etc.) é necessário quando um método é invocado em uma instância injetada (referência contextual de acordo com a especificação)."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "In other words, injecting a normal scoped bean will not suffice because a _client proxy_ is injected instead of a contextual instance of the bean."
msgstr "Em outras palavras, injetar um bean com escopo normal não será suficiente porque um _proxy de cliente_ é injetado em vez de uma instância contextual do bean."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "A *bean with a pseudo-scope* (`@Dependent` and `@Singleton` ) is created when injected."
msgstr "Um *bean com um pseudoescopo* ( `@Dependent` e `@Singleton` ) é criado quando injetado."

#. type: Block title
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Lazy Instantiation Example"
msgstr "Exemplo de instanciação preguiçosa"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Injection triggers the instantiation of `AmazingService`."
msgstr "A injeção aciona a instanciação de `AmazingService` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Injection itself does not result in the instantiation of `CoolService`. A client proxy is injected."
msgstr "A injeção em si não resulta na instanciação de `CoolService` . Um proxy de cliente é injetado."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The first invocation upon the injected proxy triggers the instantiation of `CoolService`."
msgstr "A primeira invocação do proxy injetado aciona a instanciação de `CoolService` ."

#. type: Title ====
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Startup Event"
msgstr "Evento de inicialização"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "However, if you really need to instantiate a bean eagerly you can:"
msgstr "No entanto, se o senhor realmente precisar instanciar um bean com antecedência, poderá fazê-lo:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Declare an observer of the `StartupEvent` - the scope of the bean does not matter in this case:"
msgstr "Declarar um observador do site `StartupEvent` - o escopo do bean não importa nesse caso:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "A `CoolService` is created during startup to service the observer method invocation."
msgstr "Um `CoolService` é criado durante a inicialização para atender à invocação do método do observador."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Use the bean in an observer of the `StartupEvent` - normal scoped beans must be used as described in <<lazy_by_default>>:"
msgstr "Use o bean em um observador do site `StartupEvent` - beans com escopo normal devem ser usados conforme descrito em <<lazy_by_default>> :"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The `AmazingService` is created during injection."
msgstr "O site `AmazingService` é criado durante a injeção."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The `CoolService` is a normal scoped bean, so we have to invoke a method upon the injected proxy to force the instantiation."
msgstr "O `CoolService` é um bean com escopo normal, portanto, temos que invocar um método no proxy injetado para forçar a instanciação."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Annotate the bean with `@io.quarkus.runtime.Startup` as described in xref:lifecycle.adoc#startup_annotation[Startup annotation]:"
msgstr "Anotar o bean com `@io.quarkus.runtime.Startup` conforme descrito em xref:lifecycle.adoc#startup_annotation[Anotação de inicialização] :"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "For each bean annotated with `@Startup` a synthetic observer of `StartupEvent` is generated. The default priority is used."
msgstr "Para cada bean anotado com `@Startup` é gerado um observador sintético de `StartupEvent` . A prioridade padrão é usada."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The bean constructor is called when the application starts and the resulting contextual instance is stored in the application context."
msgstr "O construtor do bean é chamado quando o aplicativo é iniciado e a instância contextual resultante é armazenada no contexto do aplicativo."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Quarkus users are encouraged to always prefer the `@Observes StartupEvent` to `@Initialized(ApplicationScoped.class)` as explained in the xref:lifecycle.adoc[Application Initialization and Termination] guide."
msgstr "Os usuários do Quarkus são incentivados a sempre preferir o endereço `@Observes StartupEvent` a `@Initialized(ApplicationScoped.class)` , conforme explicado no guia xref:lifecycle.adoc[Application Initialization and Termination (Inicialização e encerramento do aplicativo] )."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Request Context Lifecycle"
msgstr "Ciclo de vida do contexto da solicitação"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The request context is also active:"
msgstr "O contexto da solicitação também está ativo:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "during notification of a synchronous observer method."
msgstr "durante a notificação de um método de observador síncrono."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The request context is destroyed:"
msgstr "O contexto da solicitação é destruído:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "after the observer notification completes for an event, if it was not already active when the notification started."
msgstr "depois que a notificação do observador for concluída para um evento, se ele ainda não estiver ativo quando a notificação for iniciada."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "An event with qualifier `@Initialized(RequestScoped.class)` is fired when the request context is initialized for an observer notification. Moreover, the events with qualifiers `@BeforeDestroyed(RequestScoped.class)` and `@Destroyed(RequestScoped.class)` are fired when the request context is destroyed."
msgstr "Um evento com o qualificador `@Initialized(RequestScoped.class)` é disparado quando o contexto da solicitação é inicializado para uma notificação do observador. Além disso, os eventos com os qualificadores `@BeforeDestroyed(RequestScoped.class)` e `@Destroyed(RequestScoped.class)` são disparados quando o contexto da solicitação é destruído."

#. type: Title ====
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "How to Enable Trace Logging for Request Context Activation"
msgstr "Como habilitar o registro de rastreamento para a ativação do contexto da solicitação"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "You can set the `TRACE` level for the logger `io.quarkus.arc.requestContext` and try to analyze the log output afterwards."
msgstr "O senhor pode definir o nível de `TRACE` para o registrador `io.quarkus.arc.requestContext` e tentar analisar a saída do registro posteriormente."

#. type: Block title
#: _versions/2.13/guides/cdi-reference.adoc
#, no-wrap
msgid "`application.properties` Example"
msgstr "Exemplo de `application.properties`"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
msgid "You also need to adjust the minimum log level for the relevant category."
msgstr "Também é necessário ajustar o nível mínimo de log para a categoria relevante."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Qualified Injected Fields"
msgstr "Campos Injectados Qualificados"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "In CDI, if you declare a field injection point you need to use `@Inject` and optionally a set of qualifiers."
msgstr "No CDI, se o senhor declarar um ponto de injeção de campo, precisará usar `@Inject` e, opcionalmente, um conjunto de qualificadores."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "In Quarkus, you can skip the `@Inject` annotation completely if the injected field declares at least one qualifier."
msgstr "No Quarkus, o senhor pode ignorar completamente a anotação `@Inject` se o campo injetado declarar pelo menos um qualificador."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "With the notable exception of one special case discussed below, `@Inject` is still required for constructor and method injection."
msgstr "Com a notável exceção de um caso especial discutido abaixo, o site `@Inject` ainda é necessário para a injeção de construtores e métodos."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Simplified Constructor Injection"
msgstr "Injeção de Construtor Simplificada"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"In CDI, a normal scoped bean must always declare a no-args constructor (this constructor is normally generated by the compiler unless you declare any other constructor).\n"
"However, this requirement complicates constructor injection - you need to provide a dummy no-args constructor to make things work in CDI."
msgstr "No CDI, um bean com escopo normal deve sempre declarar um construtor no-args (esse construtor é normalmente gerado pelo compilador, a menos que o usuário declare qualquer outro construtor). No entanto, esse requisito complica a injeção de construtor - o senhor precisa fornecer um construtor no-args fictício para que as coisas funcionem no CDI."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"There is no need to declare dummy constructors for normal scoped bean in Quarkus - they are generated automatically.\n"
"Also, if there's only one constructor there is no need for `@Inject`."
msgstr "Não há necessidade de declarar construtores fictícios para o bean com escopo normal no Quarkus - eles são gerados automaticamente. Além disso, se houver apenas um construtor, não há necessidade de `@Inject` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "We don't generate a no-args constructor automatically if a bean class extends a class that does not declare a no-args constructor."
msgstr "Não geramos um construtor no-args automaticamente se uma classe bean estender uma classe que não declara um construtor no-args."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Removing Unused Beans"
msgstr "Remoção de beans não utilizados"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"The container attempts to remove all unused beans, interceptors and decorators during build by default.\n"
"This optimization helps to minimize the amount of generated classes, thus conserving memory.\n"
"However, Quarkus can't detect the programmatic lookup performed via the `CDI.current()` static method.\n"
"Therefore, it is possible that a removal results in a false positive error, i.e. a bean is removed although it's actually used.\n"
"In such cases, you'll notice a big warning in the log.\n"
"Users and extension authors have several options <<eliminate_false_positives,how to eliminate false positives>>."
msgstr "Por padrão, o contêiner tenta remover todos os beans, interceptadores e decoradores não utilizados durante a compilação. Essa otimização ajuda a minimizar a quantidade de classes geradas, conservando assim a memória. No entanto, o Quarkus não consegue detectar a pesquisa programática realizada por meio do método estático `CDI.current()` . Portanto, é possível que uma remoção resulte em um erro falso positivo, ou seja, um bean é removido embora seja realmente usado. Nesses casos, o senhor notará um grande aviso no log. Os usuários e autores de extensões têm várias opções para xref:eliminate_false_positives[eliminar os falsos positivos] ."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"The optimization can be disabled by setting `quarkus.arc.remove-unused-beans` to `none` or `false`.\n"
"Quarkus also provides a middle ground where application beans are never removed whether or not they are unused, while the optimization proceeds normally for non application classes.\n"
"To use this mode, set `quarkus.arc.remove-unused-beans` to `fwk` or `framework`."
msgstr "A otimização pode ser desativada definindo `quarkus.arc.remove-unused-beans` como `none` ou `false` . O Quarkus também oferece um meio-termo em que os beans de aplicativos nunca são removidos, estejam eles sem uso ou não, enquanto a otimização prossegue normalmente para as classes que não são de aplicativos. Para usar esse modo, defina `quarkus.arc.remove-unused-beans` como `fwk` ou `framework` ."

#. type: Title ====
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "What's Removed?"
msgstr "O que foi removido?"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Quarkus first identifies so-called _unremovable_ beans that form the roots in the dependency tree.\n"
"A good example is a JAX-RS resource class or a bean which declares a `@Scheduled` method."
msgstr "O Quarkus identifica primeiro os chamados beans _não removíveis_ que formam as raízes da árvore de dependência. Um bom exemplo é uma classe de recurso JAX-RS ou um bean que declara um método `@Scheduled` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "An _unremovable_ bean:"
msgstr "Um feijão que _não pode ser removido_ :"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "is excluded from removal by an extension, or"
msgstr "for excluído da remoção por uma extensão, ou"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "has a name designated via `@Named`, or"
msgstr "tem um nome designado via `@Named` , ou"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "declares an observer method."
msgstr "declara um método de observador."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "An _unused_ bean:"
msgstr "Um feijão _não utilizado_:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "is not _unremovable_, and"
msgstr "não é _inamovível_ , e"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "is not eligible for injection to any injection point in the dependency tree, and"
msgstr "não é elegível para injeção em qualquer ponto de injeção na árvore de dependências, e"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "does not declare any producer which is eligible for injection to any injection point in the dependency tree, and"
msgstr "não declara qualquer produtor que seja elegível para injeção em qualquer ponto de injeção na árvore de dependências, e"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "is not eligible for injection into any `javax.enterprise.inject.Instance` or `javax.inject.Provider` injection point."
msgstr "não é elegível para injeção em qualquer ponto de injeção `javax.enterprise.inject.Instance` ou `javax.inject.Provider`."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Unused interceptors and decorators are not associated with any bean."
msgstr "Os interceptadores e decoradores não utilizados não são associados a nenhum bean."

#. type: delimited block =
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "When using the dev mode (running `./mvnw clean compile quarkus:dev`), you can see more information about which beans are being removed:"
msgstr "Ao usar o modo de desenvolvimento (executando `./mvnw clean compile quarkus:dev` ), o senhor pode ver mais informações sobre quais beans estão sendo removidos:"

#. type: delimited block =
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "In the console - just enable the DEBUG level in your `application.properties`, i.e. `quarkus.log.category.\"io.quarkus.arc.processor\".level=DEBUG`"
msgstr "No console, basta ativar o nível DEBUG em `application.properties` , ou seja `quarkus.log.category.\"io.quarkus.arc.processor\".level=DEBUG`"

#. type: delimited block =
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "In the relevant Dev UI page"
msgstr "Na página relevante da Dev UI"

#. type: Title ====
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "How To Eliminate False Positives"
msgstr "Como eliminar os falsos positivos"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Users can instruct the container to not remove any of their specific beans (even if they satisfy all the rules specified above) by annotating them with `@io.quarkus.arc.Unremovable`.\n"
"This annotation can be declared on a class, a producer method or field."
msgstr "Os usuários podem instruir o contêiner a não remover nenhum de seus beans específicos (mesmo que eles satisfaçam todas as regras especificadas acima) anotando-os com `@io.quarkus.arc.Unremovable` . Essa anotação pode ser declarada em uma classe, um método ou campo produtor."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Since this is not always possible, there is an option to achieve the same via `application.properties`.\n"
"The `quarkus.arc.unremovable-types` property accepts a list of string values that are used to match beans based on their name or package."
msgstr "Como isso nem sempre é possível, há uma opção para conseguir o mesmo por meio de `application.properties` . A propriedade `quarkus.arc.unremovable-types` aceita uma lista de valores de cadeia de caracteres que são usados para combinar beans com base em seu nome ou pacote."

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Match the fully qualified name of the bean class"
msgstr "Corresponde ao nome totalmente qualificado da classe do bean"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Match beans where the package of the bean class is `org.acme`"
msgstr "Corresponde aos beans em que o pacote da classe do bean é `org.acme`"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Match beans where the package of the bean class starts with `org.acme`"
msgstr "Combine os beans em que o pacote da classe do bean começa com `org.acme`"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Match the simple name of the bean class"
msgstr "Corresponder o nome simples da classe do bean"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Furthermore, extensions can eliminate false positives by producing an `UnremovableBeanBuildItem`."
msgstr "Além disso, as extensões podem eliminar falsos positivos produzindo um `UnremovableBeanBuildItem` ."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Default Beans"
msgstr "Feijões por defeito"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Quarkus adds a capability that CDI currently does not support which is to conditionally declare a bean if no other bean with equal types and qualifiers was declared by any available means (bean class, producer, synthetic bean, ...)\n"
"This is done using the `@io.quarkus.arc.DefaultBean` annotation and is best explained with an example."
msgstr "O Quarkus adiciona um recurso que o CDI não suporta atualmente, que é declarar condicionalmente um bean se nenhum outro bean com tipos e qualificadores iguais tiver sido declarado por qualquer meio disponível (classe de bean, produtor, bean sintético, ...) Isso é feito usando a anotação `@io.quarkus.arc.DefaultBean` e é melhor explicado com um exemplo."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Say there is a Quarkus extension that among other things declares a few CDI beans like the following code does:"
msgstr "Digamos que haja uma extensão do Quarkus que, entre outras coisas, declare alguns beans CDI como o código a seguir faz:"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"The idea is that the extension autoconfigures things for the user, eliminating a lot of boilerplate - we can just `@Inject` a `Tracer` wherever it is needed.\n"
"Now imagine that in our application we would like to utilize the configured `Tracer`, but we need to customize it a little, for example by providing a custom `Reporter`.\n"
"The only thing that would be needed in our application would be something like the following:"
msgstr "A ideia é que a extensão autoconfigure as coisas para o usuário, eliminando uma grande quantidade de clichês - podemos simplesmente `@Inject` a `Tracer` onde quer que seja necessário. Agora imagine que em nosso aplicativo gostaríamos de utilizar o `Tracer` configurado, mas precisamos personalizá-lo um pouco, por exemplo, fornecendo um `Reporter` personalizado. A única coisa que seria necessária em nosso aplicativo seria algo como o seguinte:"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"`@DefaultBean` allows extensions (or any other code for that matter) to provide defaults while backing off if beans of that type are supplied in any\n"
"way Quarkus supports."
msgstr "`@DefaultBean` permite que as extensões (ou qualquer outro código) forneçam padrões e, ao mesmo tempo, recuem se os beans desse tipo forem fornecidos de qualquer forma suportada pelo Quarkus."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Enabling Beans for Quarkus Build Profile"
msgstr "Habilitação de beans para o perfil de compilação do Quarkus"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Quarkus adds a capability that CDI currently does not support which is to conditionally enable a bean when a Quarkus build time profile is enabled,\n"
"via the `@io.quarkus.arc.profile.IfBuildProfile` and `@io.quarkus.arc.profile.UnlessBuildProfile` annotations.\n"
"When used in conjunction with `@io.quarkus.arc.DefaultBean`, these annotations allow for the creation of different bean configurations for different build profiles."
msgstr "O Quarkus adiciona um recurso que o CDI não suporta atualmente, que é habilitar condicionalmente um bean quando um perfil de tempo de construção do Quarkus é habilitado, por meio das anotações `@io.quarkus.arc.profile.IfBuildProfile` e `@io.quarkus.arc.profile.UnlessBuildProfile` . Quando usadas em conjunto com `@io.quarkus.arc.DefaultBean` , essas anotações permitem a criação de diferentes configurações de bean para diferentes perfis de construção."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Imagine for instance that an application contains a bean named `Tracer`, which needs to do nothing when in tests or in dev mode, but works in its normal capacity for the production artifact.\n"
"An elegant way to create such beans is the following:"
msgstr "Imagine, por exemplo, que um aplicativo contenha um bean chamado `Tracer` , que não precisa fazer nada quando está em testes ou no modo de desenvolvimento, mas funciona em sua capacidade normal para o artefato de produção. Uma maneira elegante de criar esses beans é a seguinte:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "If instead, it is required that the `Tracer` bean also works in dev mode and only default to doing nothing for tests, then `@UnlessBuildProfile` would be ideal. The code would look like:"
msgstr "Se, em vez disso, for necessário que o bean `Tracer` também funcione no modo de desenvolvimento e só deixe de fazer nada por padrão nos testes, então o `@UnlessBuildProfile` seria o ideal. O código seria parecido com o seguinte:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The runtime profile has absolutely no effect on the bean resolution using `@IfBuildProfile` and `@UnlessBuildProfile`."
msgstr "O perfil de tempo de execução não tem absolutamente nenhum efeito sobre a resolução do bean usando `@IfBuildProfile` e `@UnlessBuildProfile` ."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Enabling Beans for Quarkus Build Properties"
msgstr "Habilitação de beans para propriedades de compilação do Quarkus"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Quarkus adds a capability that CDI currently does not support which is to conditionally enable a bean when a Quarkus build time property has/has not a specific value,\n"
"via the `@io.quarkus.arc.properties.IfBuildProperty` and `@io.quarkus.arc.properties.UnlessBuildProperty` annotations.\n"
"When used in conjunction with `@io.quarkus.arc.DefaultBean`, this annotation allow for the creation of different bean configurations for different build properties."
msgstr "O Quarkus adiciona um recurso que o CDI não suporta atualmente, que é habilitar condicionalmente um bean quando uma propriedade de tempo de construção do Quarkus tem/não tem um valor específico, por meio das anotações `@io.quarkus.arc.properties.IfBuildProperty` e `@io.quarkus.arc.properties.UnlessBuildProperty` . Quando usada em conjunto com `@io.quarkus.arc.DefaultBean` , essa anotação permite a criação de diferentes configurações de bean para diferentes propriedades de construção."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The scenario we mentioned above with `Tracer` could also be implemented in the following way:"
msgstr "O cenário mencionado acima com `Tracer` também pode ser implementado da seguinte forma:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`@IfBuildProperty` and `@UnlessBuildProperty` are repeatable annotations, i.e. a bean will only be enabled if **all** the conditions defined by these annotations are satisfied."
msgstr "`@IfBuildProperty` e `@UnlessBuildProperty` são anotações repetíveis, ou seja, um bean só será ativado se *todas as* condições definidas por essas anotações forem atendidas."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "If instead, it is required that the `RealTracer` bean is only used if the `some.tracer.enabled` property is not `false`, then `@UnlessBuildProperty` would be ideal. The code would look like:"
msgstr "Se, em vez disso, for necessário que o bean `RealTracer` seja usado somente se a propriedade `some.tracer.enabled` não for `false` , então `@UnlessBuildProperty` seria o ideal. O código seria parecido com o seguinte:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Properties set at runtime have absolutely no effect on the bean resolution using `@IfBuildProperty`."
msgstr "As propriedades definidas em tempo de execução não têm absolutamente nenhum efeito sobre a resolução do bean usando `@IfBuildProperty` ."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Declaring Selected Alternatives"
msgstr "Declaração de alternativas selecionadas"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"In CDI, an alternative bean may be selected either globally for an application by means of `@Priority`, or for a bean archive using a `beans.xml` descriptor.\n"
"Quarkus has a simplified bean discovery and the content of `beans.xml` is ignored."
msgstr "Na CDI, um bean alternativo pode ser selecionado globalmente para um aplicativo por meio de `@Priority` ou para um arquivo de bean usando um descritor `beans.xml` . O Quarkus tem uma descoberta de bean simplificada e o conteúdo de `beans.xml` é ignorado."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"The disadvantage of `@javax.annotation.Priority` is that it has `@Target({ TYPE, PARAMETER })` and so it cannot be used for producer methods and fields.\n"
"This problem should be fixed in Common Annotations 2.1.\n"
"Users are encouraged to use `@io.quarkus.arc.Priority` instead, until Quarkus upgrades to this version of `jakarta.annotation-api`."
msgstr "A desvantagem do `@javax.annotation.Priority` é que ele tem `@Target({ TYPE, PARAMETER })` e, portanto, não pode ser usado para métodos e campos de produtores. Esse problema deve ser corrigido no Common Annotations 2.1. Os usuários são incentivados a usar `@io.quarkus.arc.Priority` em vez disso, até que o Quarkus atualize para essa versão de `jakarta.annotation-api` ."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"However, it is also possible to select alternatives for an application using the unified configuration.\n"
"The `quarkus.arc.selected-alternatives` property accepts a list of string values that are used to match alternative beans.\n"
"If any value matches then the priority of `Integer#MAX_VALUE` is used for the relevant bean.\n"
"The priority declared via `@Priority` or `@AlternativePriority` is overridden."
msgstr "No entanto, também é possível selecionar alternativas para um aplicativo usando a configuração unificada. A propriedade `quarkus.arc.selected-alternatives` aceita uma lista de valores de cadeia de caracteres que são usados para corresponder a beans alternativos. Se algum valor corresponder, a prioridade de `Integer#MAX_VALUE` será usada para o bean relevante. A prioridade declarada por meio de `@Priority` ou `@AlternativePriority` é substituída."

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Match the fully qualified name of the bean class or the bean class of the bean that declares the producer"
msgstr "Corresponde ao nome totalmente qualificado da classe do bean ou à classe do bean que declara o produtor"

#. type: Table
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Match the simple name of the bean class or the bean class of the bean that declares the producer"
msgstr "Faça a correspondência com o nome simples da classe do bean ou com a classe do bean que declara o produtor"

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Simplified Producer Method Declaration"
msgstr "Declaração Simplificada do Método do Produtor"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "In CDI, a producer method must be always annotated with `@Produces`."
msgstr "No CDI, um método produtor deve ser sempre anotado com `@Produces` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "In Quarkus, you can skip the `@Produces` annotation completely if the producer method is annotated with a scope annotation, a stereotype or a qualifier."
msgstr "No Quarkus, o senhor pode ignorar completamente a anotação `@Produces` se o método produtor for anotado com uma anotação de escopo, um estereótipo ou um qualificador."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Interception of Static Methods"
msgstr "Interceptação de métodos estáticos"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"The Interceptors specification is clear that _around-invoke_ methods must not be declared static.\n"
"However, this restriction was driven mostly by technical limitations.\n"
"And since Quarkus is a build-time oriented stack that allows for additional class transformations, those limitations don't apply anymore.\n"
"It's possible to annotate a non-private static method with an interceptor binding:"
msgstr "A especificação dos interceptadores deixa claro que os métodos _around-invoke_ não devem ser declarados estáticos. No entanto, essa restrição foi motivada principalmente por limitações técnicas. E como o Quarkus é uma pilha orientada para o tempo de construção que permite transformações adicionais de classe, essas limitações não se aplicam mais. É possível anotar um método estático não privado com uma ligação de interceptador:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`Logged` is an interceptor binding."
msgstr "`Logged` é uma ligação de interceptador."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Each method invocation is intercepted if there is an interceptor associated with `Logged`."
msgstr "Cada invocação de método é interceptada se houver um interceptador associado a `Logged` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Only *method-level bindings* are considered for backward compatibility reasons (otherwise static methods of bean classes that declare class-level bindings would be suddenly intercepted)"
msgstr "Somente *as vinculações em nível de método* são consideradas por motivos de compatibilidade com versões anteriores (caso contrário, os métodos estáticos de classes de bean que declaram vinculações em nível de classe seriam subitamente interceptados)"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Private static methods are never intercepted"
msgstr "Os métodos estáticos privados nunca são interceptados"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`InvocationContext#getTarget()` returns `null` for obvious reasons; therefore not all existing interceptors may behave correctly when intercepting static methods"
msgstr "`InvocationContext#getTarget()` retorna `null` por razões óbvias; portanto, nem todos os interceptadores existentes podem se comportar corretamente ao interceptar métodos estáticos"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Interceptors can use `InvocationContext.getMethod()` to detect static methods and adjust the behavior accordingly."
msgstr "Os interceptadores podem usar o site `InvocationContext.getMethod()` para detectar métodos estáticos e ajustar o comportamento de acordo."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Ability to handle 'final' classes and methods"
msgstr "Capacidade de lidar com classes e métodos \"finais\"."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"In normal CDI, classes that are marked as `final` and / or have `final` methods are not eligible for proxy creation,\n"
"which in turn means that interceptors and normal scoped beans don't work properly.\n"
"This situation is very common when trying to use CDI with alternative JVM languages like Kotlin where classes and methods are `final` by default."
msgstr "Na CDI normal, as classes marcadas como `final` e/ou que tenham métodos `final` não são elegíveis para a criação de proxy, o que, por sua vez, significa que os interceptadores e os beans com escopo normal não funcionam corretamente. Essa situação é muito comum quando se tenta usar o CDI com linguagens JVM alternativas, como Kotlin, em que as classes e os métodos são `final` por padrão."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Quarkus however, can overcome these limitations when `quarkus.arc.transform-unproxyable-classes` is set to `true` (which is the default value)."
msgstr "No entanto, o Quarkus pode superar essas limitações quando `quarkus.arc.transform-unproxyable-classes` é definido como `true` (que é o valor padrão)."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Container-managed Concurrency"
msgstr "Concorrência gerenciada por contêineres"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"There is no standard concurrency control mechanism for CDI beans.\n"
"Nevertheless, a bean instance can be shared and accessed concurrently from multiple threads.\n"
"In that case it should be thread-safe.\n"
"You can use standard Java constructs (`volatile`, `synchronized`, `ReadWriteLock`, etc.) or let the container control the concurrent access.\n"
"Quarkus provides `@io.quarkus.arc.Lock` and a built-in interceptor for this interceptor binding.\n"
"Each interceptor instance associated with a contextual instance of an intercepted bean holds a separate `ReadWriteLock` with non-fair ordering policy."
msgstr "Não existe um mecanismo padrão de controle de simultaneidade para beans CDI. No entanto, uma instância de bean pode ser compartilhada e acessada simultaneamente a partir de vários threads. Nesse caso, ela deve ser thread-safe. É possível usar construções Java padrão ( `volatile` , `synchronized` , `ReadWriteLock` , etc.) ou deixar que o contêiner controle o acesso simultâneo. O Quarkus fornece o site `@io.quarkus.arc.Lock` e um interceptador interno para essa vinculação de interceptador. Cada instância de interceptador associada a uma instância contextual de um bean interceptado mantém um `ReadWriteLock` separado com uma política de ordenação não justa."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`io.quarkus.arc.Lock` is a regular interceptor binding and as such can be used for any bean with any scope. However, it is especially useful for \"shared\" scopes, e.g. `@Singleton` and `@ApplicationScoped`."
msgstr "`io.quarkus.arc.Lock` é uma ligação de interceptador regular e, como tal, pode ser usada para qualquer bean com qualquer escopo. Entretanto, é especialmente útil para escopos \"compartilhados\", por exemplo, `@Singleton` e `@ApplicationScoped` ."

#. type: Block title
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Container-managed Concurrency Example"
msgstr "Exemplo de simultaneidade gerenciada por contêineres"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`@Lock` (which maps to `@Lock(Lock.Type.WRITE)`) declared on the class instructs the container to lock the bean instance for any invocation of any business method, i.e. the client has \"exclusive access\" and no concurrent invocations will be allowed."
msgstr "`@Lock` (que mapeia para `@Lock(Lock.Type.WRITE)` ) declarado na classe instrui o contêiner a bloquear a instância do bean para qualquer invocação de qualquer método comercial, ou seja, o cliente tem \"acesso exclusivo\" e nenhuma invocação simultânea será permitida."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`@Lock(Lock.Type.READ)` overrides the value specified at class level. It means that any number of clients can invoke the method concurrently, unless the bean instance is locked by `@Lock(Lock.Type.WRITE)`."
msgstr "`@Lock(Lock.Type.READ)` substitui o valor especificado no nível da classe. Isso significa que qualquer número de clientes pode invocar o método simultaneamente, a menos que a instância do bean esteja bloqueada por `@Lock(Lock.Type.WRITE)` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "You can also specify the \"wait time\". If it's not possible to acquire the lock in the given time a `LockException` is thrown."
msgstr "O senhor também pode especificar o \"tempo de espera\". Se não for possível adquirir o bloqueio no tempo determinado, será lançado um `LockException` ."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Repeatable interceptor bindings"
msgstr "Vinculações de interceptores repetíveis"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Quarkus has limited support for `@Repeatable` interceptor binding annotations."
msgstr "O Quarkus tem suporte limitado para as anotações de ligação do interceptador `@Repeatable` ."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"When binding an interceptor to a component, you can declare multiple `@Repeatable` annotations on methods.\n"
"Repeatable interceptor bindings declared on classes and stereotypes are not supported, because there are some open questions around interactions with the Interceptors specification.\n"
"This might be added in the future."
msgstr "Ao vincular um interceptador a um componente, o senhor pode declarar várias anotações `@Repeatable` em métodos. Não há suporte para associações repetidas de interceptores declaradas em classes e estereótipos, pois há algumas questões em aberto sobre interações com a especificação de interceptores. Isso poderá ser adicionado no futuro."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"As an example, suppose we have an interceptor that clears a cache.\n"
"The corresponding interceptor binding would be called `@CacheInvalidateAll` and would be declared as `@Repeatable`.\n"
"If we wanted to clear two caches at the same time, we would add `@CacheInvalidateAll` twice:"
msgstr "Como exemplo, suponha que tenhamos um interceptador que limpa um cache. A ligação do interceptor correspondente seria chamada de `@CacheInvalidateAll` e seria declarada como `@Repeatable` . Se quiséssemos limpar dois caches ao mesmo tempo, adicionaríamos `@CacheInvalidateAll` duas vezes:"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"This is how interceptors are used.\n"
"What about creating an interceptor?"
msgstr "É assim que os interceptadores são usados. E quanto à criação de um interceptador?"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"When declaring interceptor bindings of an interceptor, you can add multiple `@Repeatable` annotations to the interceptor class as usual.\n"
"This is useless when the annotation members are `@Nonbinding`, as would be the case for the `@Cached` annotation, but is important otherwise."
msgstr "Ao declarar os vínculos de um interceptador, o senhor pode adicionar várias anotações `@Repeatable` à classe do interceptador como de costume. Isso é inútil quando os membros da anotação são `@Nonbinding` , como seria o caso da anotação `@Cached` , mas é importante em outros casos."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"For example, suppose we have an interceptor that can automatically log method invocations to certain targets.\n"
"The interceptor binding annotation `@Logged` would have a member called `target`, which specifies where to store the log.\n"
"Our implementation could be restricted to console logging and file logging:"
msgstr "Por exemplo, suponha que tenhamos um interceptador que possa registrar automaticamente as invocações de métodos para determinados destinos. A anotação de ligação do interceptador `@Logged` teria um membro chamado `target` , que especifica onde armazenar o registro. Nossa implementação poderia se restringir ao log do console e ao log do arquivo:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Other interceptors could be provided to log method invocations to different targets."
msgstr "Outros interceptadores podem ser fornecidos para registrar invocações de métodos para diferentes alvos."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Caching the Result of Programmatic Lookup"
msgstr "Armazenamento em cache do resultado da pesquisa programática"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"In certain situations, it is practical to obtain a bean instance programmatically via an injected `javax.enterprise.inject.Instance` and `Instance.get()`.\n"
"However, according to the specification the `get()` method must identify the matching bean and obtain a contextual reference.\n"
"As a consequence, a new instance of a  `@Dependent` bean is returned from each invocation of `get()`.\n"
"Moreover, this instance is a dependent object of the injected `Instance`.\n"
"This behavior is well-defined, but it may lead to unexpected errors and memory leaks.\n"
"Therefore, Quarkus comes with the `io.quarkus.arc.WithCaching` annotation.\n"
"An injected `Instance` annotated with this annotation will cache the result of the `Instance#get()` operation.\n"
"The result is computed on the first call and the same value is returned for all subsequent calls, even for `@Dependent` beans."
msgstr "Em determinadas situações, é prático obter uma instância de bean de forma programática por meio de um `javax.enterprise.inject.Instance` e `Instance.get()` injetados. No entanto, de acordo com a especificação, o método `get()` deve identificar o bean correspondente e obter uma referência contextual. Como consequência, uma nova instância de um bean `@Dependent` é retornada de cada invocação de `get()` . Além disso, essa instância é um objeto dependente do `Instance` injetado. Esse comportamento é bem definido, mas pode levar a erros inesperados e vazamentos de memória. Portanto, o Quarkus vem com a anotação `io.quarkus.arc.WithCaching` . Um `Instance` injetado anotado com essa anotação armazenará em cache o resultado da operação `Instance#get()` . O resultado é computado na primeira chamada e o mesmo valor é retornado para todas as chamadas subsequentes, mesmo para os beans `@Dependent` ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "It is also possible to clear the cached value via `io.quarkus.arc.InjectableInstance.clearCache()`. In this case, you'll need to inject the Quarkus-specific `io.quarkus.arc.InjectableInstance` instead of `javax.enterprise.inject.Instance`."
msgstr "Também é possível limpar o valor armazenado em cache por meio de `io.quarkus.arc.InjectableInstance.clearCache()` . Nesse caso, o senhor precisará injetar o `io.quarkus.arc.InjectableInstance` específico do Quarkus em vez do `javax.enterprise.inject.Instance` ."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Declaratively Choose Beans That Can Be Obtained by Programmatic Lookup"
msgstr "Escolha declarativamente os beans que podem ser obtidos pela pesquisa programática"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"It is sometimes useful to narrow down the set of beans that can be obtained by programmatic lookup via `javax.enterprise.inject.Instance`.\n"
"Typically, a user needs to choose the appropriate implementation of an interface based on a runtime configuration property."
msgstr "Às vezes, é útil restringir o conjunto de beans que podem ser obtidos por pesquisa programática via `javax.enterprise.inject.Instance` . Normalmente, um usuário precisa escolher a implementação apropriada de uma interface com base em uma propriedade de configuração de tempo de execução."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Imagine that we have two beans implementing the interface `org.acme.Service`.\n"
"You can't inject the `org.acme.Service` directly unless your implementations declare a CDI qualifier.\n"
"However, you can inject the `Instance<Service>` instead, then iterate over all implementations and choose the correct one manually.\n"
"Alternatively, you can use the `@LookupIfProperty` and `@LookupUnlessProperty` annotations.\n"
"`@LookupIfProperty` indicates that a bean should only be obtained if a runtime configuration property matches the provided value.\n"
"`@LookupUnlessProperty`, on the other hand, indicates that a bean should only be obtained if a runtime configuration property does not match the provided value."
msgstr "Imagine que temos dois beans implementando a interface `org.acme.Service` . O senhor não pode injetar o `org.acme.Service` diretamente, a menos que suas implementações declarem um qualificador de CDI. No entanto, em vez disso, o senhor pode injetar a `Instance<Service>` e, em seguida, iterar todas as implementações e escolher a correta manualmente. Como alternativa, o senhor pode usar as anotações `@LookupIfProperty` e `@LookupUnlessProperty` . `@LookupIfProperty` indica que um bean só deve ser obtido se uma propriedade de configuração em tempo de execução corresponder ao valor fornecido. `@LookupUnlessProperty` A anotação , por outro lado, indica que um bean só deve ser obtido se uma propriedade de configuração de tempo de execução não corresponder ao valor fornecido."

#. type: Block title
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "`@LookupIfProperty` Example"
msgstr "`@LookupIfProperty` Exemplo"

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Injecting Multiple Bean Instances Intuitively"
msgstr "Injetando várias instâncias de beans de forma intuitiva"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"In CDI, it's possible to inject multiple bean instances (aka contextual references) via the `javax.enterprise.inject.Instance` which implements `java.lang.Iterable`.\n"
"However, it's not exactly intuitive.\n"
"Therefore, a new way was introduced in Quarkus - you can inject a `java.util.List` annotated with the `io.quarkus.arc.All` qualifier.\n"
"The type of elements in the list is used as the required type when performing the lookup."
msgstr "No CDI, é possível injetar várias instâncias de bean (também conhecidas como referências contextuais) por meio do site `javax.enterprise.inject.Instance` que implementa `java.lang.Iterable` . No entanto, isso não é exatamente intuitivo. Portanto, uma nova maneira foi introduzida no Quarkus: o senhor pode injetar um `java.util.List` anotado com o qualificador `io.quarkus.arc.All` . O tipo de elementos na lista é usado como o tipo necessário ao realizar a pesquisa."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The injected instance is an _immutable list_ of the contextual references of the _disambiguated_ beans."
msgstr "A instância injetada é uma _lista imutável_ das referências contextuais dos beans _desambiguados_ ."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "For this injection point the required type is `Service` and no additional qualifiers are declared."
msgstr "Para esse ponto de injeção, o tipo necessário é `Service` e nenhum qualificador adicional é declarado."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "The list is sorted by priority as defined by `io.quarkus.arc.InjectableBean#getPriority()`. Higher priority goes first. In general, the `@javax.annotation.Priority` and `@io.quarkus.arc.Priority` annotations can be used to assign the priority to a class bean, producer method or producer field."
msgstr "A lista é classificada por prioridade, conforme definido em `io.quarkus.arc.InjectableBean#getPriority()` . A prioridade mais alta vai primeiro. Em geral, as anotações `@javax.annotation.Priority` e `@io.quarkus.arc.Priority` podem ser usadas para atribuir a prioridade a um bean de classe, método produtor ou campo produtor."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "If an injection point declares no other qualifier than `@All` then `@Any` is used, i.e. the behavior is equivalent to `@Inject @Any Instance<Service>`."
msgstr "Se um ponto de injeção não declarar nenhum outro qualificador além de `@All` , então `@Any` é usado, ou seja, o comportamento é equivalente a `@Inject @Any Instance<Service>` ."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"You can also inject a list of bean instances wrapped in `io.quarkus.arc.InstanceHandle`.\n"
"This can be useful if you need to inspect the related bean metadata."
msgstr "O senhor também pode injetar uma lista de instâncias de bean envolvidas em `io.quarkus.arc.InstanceHandle` . Isso pode ser útil se o senhor precisar inspecionar os metadados do bean relacionado."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "Neither a type variable nor a wildcard is a legal type parameter for an `@All List<>` injection point, i.e. `@Inject @All List<?> all` is not supported and results in a deployment error."
msgstr "Nem uma variável de tipo nem um curinga é um parâmetro de tipo legal para um ponto de injeção `@All List<>` , ou seja, `@Inject @All List<?> all` não é compatível e resulta em um erro de implantação."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "It is also possible to obtain the list of all bean instance handles programmatically via the `Arc.container().listAll()` methods."
msgstr "Também é possível obter a lista de todos os identificadores de instância do bean de forma programática por meio dos métodos `Arc.container().listAll()` ."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Ignoring Class-Level Interceptor Bindings for Methods and Constructors"
msgstr "Ignorando as ligações de interceptores de nível de classe para métodos e construtores"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"If a managed bean declares interceptor binding annotations on the class level, the corresponding `@AroundInvoke` interceptors will apply to all business methods.\n"
"Similarly, the corresponding `@AroundConstruct` interceptors will apply to the bean constructor."
msgstr "Se um bean gerenciado declarar anotações de vinculação de interceptores no nível da classe, os interceptores `@AroundInvoke` correspondentes serão aplicados a todos os métodos de negócios. Da mesma forma, os interceptores `@AroundConstruct` correspondentes serão aplicados ao construtor do bean."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "For example, suppose we have a logging interceptor with the `@Logged` binding annotation and a tracing interceptor with the `@Traced` binding annotation:"
msgstr "Por exemplo, suponha que tenhamos um interceptor de registro com a anotação de vinculação `@Logged` e um interceptor de rastreamento com a anotação de vinculação `@Traced` :"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"In this example, both `doSomething` and `doSomethingElse` will be intercepted by the hypothetical logging interceptor.\n"
"Additionally, the `doSomethingElse` method will be intercepted by the hypothetical tracing interceptor."
msgstr "Neste exemplo, tanto o `doSomething` quanto o `doSomethingElse` serão interceptados pelo interceptor de registro hipotético. Além disso, o método `doSomethingElse` será interceptado pelo interceptor de rastreamento hipotético."

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Now, if that `@Traced` interceptor also performed all the necessary logging, we'd like to skip the `@Logged` interceptor for this method, but keep it for all other methods.\n"
"To achieve that, you can annotate the method with `@NoClassInterceptors`:"
msgstr "Agora, se o interceptor `@Traced` também executou todo o registro necessário, gostaríamos de ignorar o interceptor `@Logged` para esse método, mas mantê-lo para todos os outros métodos. Para isso, o senhor pode anotar o método com `@NoClassInterceptors` :"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"The `@NoClassInterceptors` annotation may be put on methods and constructors and means that all class-level interceptors are ignored for these methods and constructors.\n"
"In other words, if a method/constructor is annotated `@NoClassInterceptors`, then the only interceptors that will apply to this method/constructor are interceptors declared directly on the method/constructor."
msgstr "A anotação `@NoClassInterceptors` pode ser colocada em métodos e construtores e significa que todos os interceptores de nível de classe são ignorados para esses métodos e construtores. Em outras palavras, se um método/construtor tiver a anotação `@NoClassInterceptors` , os únicos interceptores que se aplicarão a esse método/construtor serão os interceptores declarados diretamente no método/construtor."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "This annotation affects only business method interceptors (`@AroundInvoke`) and constructor lifecycle callback interceptors (`@AroundConstruct`)."
msgstr "Essa anotação afeta apenas os interceptores de métodos de negócios ( `@AroundInvoke` ) e os interceptores de retorno de chamada do ciclo de vida do construtor ( `@AroundConstruct` )."

#. type: Title ===
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Exceptions Thrown By An Asynchronous Observer Method"
msgstr "Exceções lançadas por um método de observador assíncrono"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"If an exception is thrown by an asynchronous observer then the `CompletionStage` returned by the `fireAsync()` method completes exceptionally so that the event producer may react appropriately.\n"
"However, if the event producer does not care then the exception is ignored silently.\n"
"Therefore, Quarkus logs an error message by default.\n"
"It is also possible to implement a custom `AsyncObserverExceptionHandler`.\n"
"A bean that implements this interface should be `@javax.inject.Singleton` or `@javax.enterprise.context.ApplicationScoped`."
msgstr "Se uma exceção for lançada por um observador assíncrono, o `CompletionStage` retornado pelo método `fireAsync()` será concluído excepcionalmente para que o produtor do evento possa reagir adequadamente. Entretanto, se o produtor de eventos não se importar, a exceção será ignorada silenciosamente. Portanto, o Quarkus registra uma mensagem de erro por padrão. Também é possível implementar um `AsyncObserverExceptionHandler` personalizado. Um bean que implemente essa interface deve ser `@javax.inject.Singleton` ou `@javax.enterprise.context.ApplicationScoped` ."

#. type: Block title
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "`NoopAsyncObserverExceptionHandler`"
msgstr "`NoopAsyncObserverExceptionHandler`"

#. type: Title ==
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "Build Time Extensions"
msgstr "Extensões do tempo de construção"

#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid ""
"Quarkus incorporates build-time optimizations in order to provide instant startup and low memory footprint.\n"
"The downside of this approach is that CDI Portable Extensions cannot be supported.\n"
"Nevertheless, most of the functionality can be achieved using Quarkus xref:writing-extensions.adoc[extensions].\n"
"See the xref:cdi-integration.adoc[integration guide] for more information."
msgstr "O Quarkus incorpora otimizações de tempo de construção para oferecer inicialização instantânea e baixo consumo de memória. A desvantagem dessa abordagem é que não há suporte para as extensões portáteis do CDI. No entanto, a maior parte da funcionalidade pode ser obtida usando xref:writing-extensions.adoc[as extensões] do Quarkus. Consulte o xref:cdi-integration.adoc[guia de integração] para obter mais informações."

#. type: Title ==
#: _versions/2.13/guides/cdi-reference.adoc
#, no-wrap
msgid "Development Mode"
msgstr "Modo de desenvolvimento"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "In the development mode, two special endpoints are registered automatically to provide some basic debug info in the JSON format:"
msgstr "No modo de desenvolvimento, dois pontos de extremidade especiais são registrados automaticamente para fornecer algumas informações básicas de depuração no formato JSON:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "HTTP GET `/q/arc` - returns the summary; number of beans, config properties, etc."
msgstr "HTTP GET `/q/arc` - retorna o resumo; número de beans, propriedades de configuração, etc."

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "HTTP GET `/q/arc/beans` - returns the list of all beans"
msgstr "HTTP GET `/q/arc/beans` - retorna a lista de todos os beans"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "You can use query params to filter the output:"
msgstr "O senhor pode usar parâmetros de consulta para filtrar a saída:"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`scope` - include beans with scope that ends with the given value, i.e. `http://localhost:8080/q/arc/beans?scope=ApplicationScoped`"
msgstr "`scope` - incluem beans com escopo que termina com o valor fornecido, ou seja, o `http://localhost:8080/q/arc/beans?scope=ApplicationScoped`"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`beanClass` - include beans with bean class that starts with the given value, i.e. `http://localhost:8080/q/arc/beans?beanClass=org.acme.Foo`"
msgstr "`beanClass` - inclui beans com classe de bean que começa com o valor fornecido, ou seja, o `http://localhost:8080/q/arc/beans?beanClass=org.acme.Foo`"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "`kind` - include beans of the specified kind (`CLASS`, `PRODUCER_FIELD`, `PRODUCER_METHOD`, `INTERCEPTOR` or `SYNTHETIC`), i.e. `http://localhost:8080/q/arc/beans?kind=PRODUCER_METHOD`"
msgstr "`kind` - incluir beans do tipo especificado ( `CLASS` , `PRODUCER_FIELD` , `PRODUCER_METHOD` , `INTERCEPTOR` ou `SYNTHETIC` ), ou seja `http://localhost:8080/q/arc/beans?kind=PRODUCER_METHOD`"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "HTTP GET `/q/arc/removed-beans` - returns the list of unused beans removed during build"
msgstr "HTTP GET `/q/arc/removed-beans` - retorna a lista de beans não utilizados removidos durante a construção"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "HTTP GET `/q/arc/observers` - returns the list of all observer methods"
msgstr "HTTP GET `/q/arc/observers` - retorna a lista de todos os métodos do observador"

#. type: Plain text
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy
msgid "These endpoints are only available in the development mode, i.e. when you run your application via `mvn quarkus:dev` (or `./gradlew quarkusDev`)."
msgstr "Esses endpoints só estão disponíveis no modo de desenvolvimento, ou seja, quando o senhor executa o aplicativo via `mvn quarkus:dev` (ou `./gradlew quarkusDev` )."

#. type: Title ==
#: _versions/2.13/guides/cdi-reference.adoc
#, fuzzy, no-wrap
msgid "ArC Configuration Reference"
msgstr "Referência de configuração do ArC"

#: _versions/2.13/guides/cdi-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Propriedade de Configuração Fixa no Momento da Compilação - Todas as outras propriedades de configuração podem ser sobrepostas em tempo de execução. <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
