msgid ""
msgstr ""
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid "Simplified MongoDB with Panache and Kotlin"
msgstr "MongoDB simplificado com Panache e Kotlin"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"MongoDB is a well known NoSQL Database that is widely used. MongoDB with Panache offers a\n"
"new layer atop this familiar framework.  This guide will not dive in to the specifics of either as those are already\n"
"covered in the xref:mongodb-panache.adoc[MongoDB with Panache guide].  In this guide, we'll cover the Kotlin specific changes\n"
"needed to use MongoDB with Panache in your Kotlin-based Quarkus applications."
msgstr "O MongoDB é um banco de dados NoSQL bem conhecido e amplamente utilizado. O MongoDB com Panache oferece uma nova camada sobre essa estrutura familiar. Este guia não vai se aprofundar nas especificidades de nenhum dos dois, pois elas já foram abordadas no xref:mongodb-panache.adoc[guia MongoDB com Panache] . Neste guia, abordaremos as alterações específicas do Kotlin necessárias para usar o MongoDB com Panache em seus aplicativos Quarkus baseados em Kotlin."

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid "First: an example"
msgstr "Primeiro: um exemplo"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"As we saw in the MongoDB with Panache guide, it allows us to extend the functionality in our entities and repositories (also known as DAOs) with some automatically\n"
"provided functionality.  When using Kotlin, the approach is very similar to what we see in the Java version with a slight\n"
"change or two.  To Panache-enable your entity, you would define it something like:"
msgstr "Como vimos no guia MongoDB com Panache, ele nos permite estender a funcionalidade em nossas entidades e repositórios (também conhecidos como DAOs) com algumas funcionalidades fornecidas automaticamente. Ao usar o Kotlin, a abordagem é muito semelhante à que vemos na versão Java, com uma ou duas pequenas alterações. Para habilitar sua entidade com o Panache, o senhor a definiria como:"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"As you can see our entities remain simple.  There is, however, a slight difference from the Java version.  The Kotlin\n"
"language doesn't support the notion of static methods in quite the same way as Java does.  Instead, we must use a\n"
"https://kotlinlang.org/docs/tutorials/kotlin-for-py/objects-and-companion-objects.html#companion-objects[companion object]:"
msgstr "Como o senhor pode ver, nossas entidades permanecem simples. Há, no entanto, uma pequena diferença em relação à versão Java. A linguagem Kotlin não suporta a noção de métodos estáticos da mesma forma que o Java. Em vez disso, precisamos usar um link:https://kotlinlang.org/docs/tutorials/kotlin-for-py/objects-and-companion-objects.html#companion-objects[objeto complementar] :"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"The companion object holds all the methods not related to a specific instance allowing for general management and\n"
"querying bound to a specific type."
msgstr "O objeto complementar contém todos os métodos não relacionados a uma instância específica, permitindo o gerenciamento geral e a consulta vinculada a um tipo específico."

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"Here there are options, but we've chosen the `lateinit` approach.  This allows us to declare these fields as non-null\n"
"knowing they will be properly assigned either by the constructor (not shown) or by the MongoDB POJO codec loading data from the\n"
"database."
msgstr "Aqui há opções, mas escolhemos a abordagem `lateinit` . Isso nos permite declarar esses campos como não nulos, sabendo que eles serão atribuídos adequadamente pelo construtor (não mostrado) ou pelo codec POJO do MongoDB que carrega os dados do banco de dados."

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"These types differ from the Java types mentioned in those tutorials.  For Kotlin support, all the Panache\n"
"types will be found in the `io.quarkus.mongodb.panache.kotlin` package.  This subpackage allows for the distinction\n"
"between the Java and Kotlin variants and allows for both to be used unambiguously in a single project."
msgstr "Esses tipos são diferentes dos tipos Java mencionados nesses tutoriais. Para suporte ao Kotlin, todos os tipos do Panache serão encontrados no pacote `io.quarkus.mongodb.panache.kotlin` . Esse subpacote permite a distinção entre as variantes Java e Kotlin e permite que ambas sejam usadas sem ambiguidade em um único projeto."

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"In the Kotlin version, we've simply moved the bulk of the link:https://www.martinfowler.com/eaaCatalog/activeRecord.html[`active record pattern`]\n"
"functionality to the `companion object`.  Apart from this slight change, we can then work with our types in ways that map easily\n"
"from the Java side of world."
msgstr "Na versão Kotlin, simplesmente movemos a maior parte da funcionalidade do link:https://www.martinfowler.com/eaaCatalog/activeRecord.html[active record pattern] para `companion object` . Além dessa pequena mudança, podemos trabalhar com nossos tipos de maneiras que são facilmente mapeadas do lado Java do mundo."

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid "Using the repository pattern"
msgstr "Usando o padrão de repositório"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid "Defining your entity"
msgstr "Definição de sua entidade"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid "When using the repository pattern, you can define your entities as regular POJO."
msgstr "Ao usar o padrão de repositório, o senhor pode definir suas entidades como um POJO comum."

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid "Defining your repository"
msgstr "Definição de seu repositório"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"When using Repositories, you get the exact same convenient methods as with the active record pattern, injected in your Repository,\n"
"by making them implement `PanacheMongoRepository`:"
msgstr "Ao usar Repositórios, o senhor obtém exatamente os mesmos métodos convenientes do padrão de registro ativo, injetados em seu Repositório, fazendo com que eles implementem `PanacheMongoRepository` :"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"All the operations that are defined on `PanacheMongoEntityBase` are available on your repository, so using it\n"
"is exactly the same as using the active record pattern, except you need to inject it:"
msgstr "Todas as operações definidas em `PanacheMongoEntityBase` estão disponíveis no seu repositório, portanto, usá-lo é exatamente o mesmo que usar o padrão de registro ativo, exceto que o senhor precisa injetá-lo:"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid "Most useful operations"
msgstr "Operações mais úteis"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid "Once you have written your repository, here are the most common operations you will be able to perform:"
msgstr "Depois de escrever seu repositório, aqui estão as operações mais comuns que o senhor poderá realizar:"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid "All `list` methods have equivalent `stream` versions."
msgstr "Todos os métodos do site `list` têm versões equivalentes do site `stream` ."

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"For more examples, please consult the xref:mongodb-panache.adoc[Java version] for complete details.  Both APIs\n"
"are the same and work identically except for some Kotlin-specific tweaks to make things feel more natural to\n"
"Kotlin developers.  These tweaks include things like better use of nullability and the lack of `Optional` on API\n"
"methods."
msgstr "Para obter mais exemplos, consulte a xref:mongodb-panache.adoc[versão Java] para obter detalhes completos. Ambas as APIs são as mesmas e funcionam de forma idêntica, exceto por alguns ajustes específicos do Kotlin para tornar as coisas mais naturais para os desenvolvedores do Kotlin. Esses ajustes incluem coisas como o melhor uso da anulabilidade e a falta de `Optional` nos métodos da API."

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid "Setting up and configuring MongoDB with Panache"
msgstr "Instalação e configuração do MongoDB com o Panache"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"To get started using MongoDB with Panache with Kotlin, you can, generally, follow the steps laid out in the Java tutorial.  The biggest\n"
"change to configuring your project is the Quarkus artifact to include.  You can, of course, keep the Java version if you\n"
"need but if all you need are the Kotlin APIs then include the following dependency instead:"
msgstr "Para começar a usar o MongoDB com o Panache com Kotlin, o senhor pode, em geral, seguir as etapas descritas no tutorial Java. A maior mudança na configuração do seu projeto é o artefato Quarkus a ser incluído. O senhor pode, é claro, manter a versão Java se precisar, mas se tudo o que precisa são as APIs do Kotlin, inclua a seguinte dependência:"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
#, fuzzy
msgid ""
"Note the addition of `-kotlin` on the end.  Generally you'll only need this version but if your project will be using\n"
"both Java and Kotlin code, you can safely include both artifacts."
msgstr "Observe a adição de `-kotlin` no final. Geralmente, o senhor só precisará dessa versão, mas se o seu projeto usar código Java e Kotlin, poderá incluir com segurança os dois artefatos."

#: _versions/3.8/guides/mongodb-panache-kotlin.adoc
msgid "build.gradle"
msgstr "build.gradle"
