# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:5
msgid "icon:lock[title=Fixed at build time] Configuration property fixed at build time - All other configuration properties are overridable at runtime"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:10
#, no-wrap
msgid "[[quarkus-package-pkg-package-config_configuration]]link:#quarkus-package-pkg-package-config_configuration[Configuration property]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:11
#, no-wrap
msgid "Type"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:13
#, no-wrap
msgid "Default"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:28
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.type]]`link:#quarkus-package-pkg-package-config_quarkus.package.type[quarkus.package.type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The requested output type.\n"
"\n"
"The default built in types are 'jar' (which will use 'fast-jar'), 'legacy-jar' for the pre-1.12 default jar packaging, 'uber-jar', 'mutable-jar' (for remote development mode), 'native' and 'native-sources'.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:29
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:65
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:147
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:181
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:198
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:232
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:276
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:327
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:344
#, no-wrap
msgid "string"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:32
#, no-wrap
msgid "`jar`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:45
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.manifest.add-implementation-entries]]`link:#quarkus-package-pkg-package-config_quarkus.package.manifest.add-implementation-entries[quarkus.package.manifest.add-implementation-entries]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If the Implementation information should be included in the runner jar's MANIFEST.MF.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_MANIFEST_ADD_IMPLEMENTATION_ENTRIES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_MANIFEST_ADD_IMPLEMENTATION_ENTRIES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:46
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:130
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:164
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:215
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:255
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:293
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:310
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:361
#, no-wrap
msgid "boolean"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:49
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:167
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:258
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:296
#, no-wrap
msgid "`true`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:64
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.main-class]]`link:#quarkus-package-pkg-package-config_quarkus.package.main-class[quarkus.package.main-class]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The entry point of the application. This can either be a fully qualified name of a standard Java class with a main method, or `io.quarkus.runtime.QuarkusApplication`.\n"
"\n"
"If your application has main classes annotated with `io.quarkus.runtime.annotations.QuarkusMain` then this can also reference the name given in the annotation, to avoid the need to specify fully qualified names in the config.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_MAIN_CLASS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_MAIN_CLASS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:81
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.user-configured-ignored-entries]]`link:#quarkus-package-pkg-package-config_quarkus.package.user-configured-ignored-entries[quarkus.package.user-configured-ignored-entries]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Files that should not be copied to the output artifact\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_USER_CONFIGURED_IGNORED_ENTRIES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_USER_CONFIGURED_IGNORED_ENTRIES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:82
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:111
#, no-wrap
msgid "list of string"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:110
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.included-optional-dependencies]]`link:#quarkus-package-pkg-package-config_quarkus.package.included-optional-dependencies[quarkus.package.included-optional-dependencies]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"List of all the dependencies that have been defined as optional to include into the final package of the application. Each optional dependency needs to be expressed in the following format:\n"
"\n"
"groupId:artifactId:classifier:type\n"
"\n"
"With the classifier and type being optional.\n"
"\n"
"If the type is missing, the artifact is assumed to be of type `jar`.\n"
"\n"
"This parameter is optional, if absent, no optional dependencies will be included into the final package of the application.\n"
"\n"
"For backward compatibility reasons, this parameter is ignored by default and can be enabled by setting the parameter `quarkus.package.filter-optional-dependencies` to `true`.\n"
"\n"
"This parameter is meant to be used in modules where multi-builds have been configured to avoid getting a final package with unused dependencies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_INCLUDED_OPTIONAL_DEPENDENCIES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_INCLUDED_OPTIONAL_DEPENDENCIES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:129
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.filter-optional-dependencies]]`link:#quarkus-package-pkg-package-config_quarkus.package.filter-optional-dependencies[quarkus.package.filter-optional-dependencies]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Flag indicating whether the optional dependencies should be filtered out or not.\n"
"\n"
"This parameter is meant to be used in modules where multi-builds have been configured to avoid getting a final package with unused dependencies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_FILTER_OPTIONAL_DEPENDENCIES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_FILTER_OPTIONAL_DEPENDENCIES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:133
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:218
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:313
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:364
#, no-wrap
msgid "`false`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:146
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.runner-suffix]]`link:#quarkus-package-pkg-package-config_quarkus.package.runner-suffix[quarkus.package.runner-suffix]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The suffix that is applied to the runner jar and native images\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_RUNNER_SUFFIX+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_RUNNER_SUFFIX+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:150
#, no-wrap
msgid "`-runner`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:163
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.add-runner-suffix]]`link:#quarkus-package-pkg-package-config_quarkus.package.add-runner-suffix[quarkus.package.add-runner-suffix]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Indicates whether the generated binary file (uber-jar or native image) should have the runner suffix appended. Turning off the runner suffix in case of the uber-jar package type, the original build system (Maven, Gradle, etc) built JAR will be replaced with the Quarkus built uber JAR.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_ADD_RUNNER_SUFFIX+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_ADD_RUNNER_SUFFIX+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:180
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.output-directory]]`link:#quarkus-package-pkg-package-config_quarkus.package.output-directory[quarkus.package.output-directory]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The output folder in which to place the output, this is resolved relative to the build systems target directory.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_OUTPUT_DIRECTORY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_OUTPUT_DIRECTORY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:197
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.output-name]]`link:#quarkus-package-pkg-package-config_quarkus.package.output-name[quarkus.package.output-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The name of the final artifact\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_OUTPUT_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_OUTPUT_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:214
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.create-appcds]]`link:#quarkus-package-pkg-package-config_quarkus.package.create-appcds[quarkus.package.create-appcds]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Whether to automate the creation of AppCDS. This has no effect when a native binary is needed and will be ignored in that case. Furthermore, this option only works for Java 11{plus} and is considered experimental for the time being. Finally, care must be taken to use the same exact JVM version when building and running the application.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_CREATE_APPCDS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_CREATE_APPCDS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:231
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.appcds-builder-image]]`link:#quarkus-package-pkg-package-config_quarkus.package.appcds-builder-image[quarkus.package.appcds-builder-image]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"When AppCDS generation is enabled, if this property is set, then the JVM used to generate the AppCDS file will be the JVM present in the container image. The builder image is expected to have the 'java' binary on its PATH. This flag is useful when the JVM to be used at runtime is not the same exact JVM version as the one used to build the jar. Note that this property is consulted only when `quarkus.package.create-appcds=true` and it requires having docker available during the build.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_APPCDS_BUILDER_IMAGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_APPCDS_BUILDER_IMAGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:254
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.appcds-use-container]]`link:#quarkus-package-pkg-package-config_quarkus.package.appcds-use-container[quarkus.package.appcds-use-container]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Whether creation of the AppCDS archive should run in a container if available.\n"
"\n"
"Normally, if either a suitable container image to create the AppCDS archive inside of can be determined automatically or if one is explicitly set using the `quarkus.package.appcds-builder-image` setting, the AppCDS archive is generated by running the JDK contained in the image as a container.\n"
"\n"
"If this option is set to `false`, a container will not be used to generate the AppCDS archive. Instead, the JDK used to build the application is also used to create the archive. Note that the exact same JDK version must be used to run the application in this case.\n"
"\n"
"Ignored if `quarkus.package.create-appcds` is set to `false`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_APPCDS_USE_CONTAINER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_APPCDS_USE_CONTAINER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:275
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.user-providers-directory]]`link:#quarkus-package-pkg-package-config_quarkus.package.user-providers-directory[quarkus.package.user-providers-directory]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"This is an advanced option that only takes effect for the mutable-jar format.\n"
"\n"
"If this is specified a directory of this name will be created in the jar distribution. Users can place jar files in this directory, and when re-augmentation is performed these will be processed and added to the class-path.\n"
"\n"
"Note that before reaugmentation has been performed these jars will be ignored, and if they are updated the app should be reaugmented again.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_USER_PROVIDERS_DIRECTORY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_USER_PROVIDERS_DIRECTORY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:292
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.include-dependency-list]]`link:#quarkus-package-pkg-package-config_quarkus.package.include-dependency-list[quarkus.package.include-dependency-list]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"This option only applies when using fast-jar or mutable-jar. If this option is true then a list of all the coordinates of the artifacts that made up this image will be included in the quarkus-app directory. This list can be used by vulnerability scanners to determine if your application has any vulnerable dependencies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_INCLUDE_DEPENDENCY_LIST+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_INCLUDE_DEPENDENCY_LIST+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:309
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.quiltflower.enabled]]`link:#quarkus-package-pkg-package-config_quarkus.package.quiltflower.enabled[quarkus.package.quiltflower.enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An advanced option that will decompile generated and transformed bytecode into the 'decompiled' directory. This is only taken into account when fast-jar is used.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_QUILTFLOWER_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_QUILTFLOWER_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:326
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.quiltflower.version]]`link:#quarkus-package-pkg-package-config_quarkus.package.quiltflower.version[quarkus.package.quiltflower.version]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The version of Quiltflower to use\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_QUILTFLOWER_VERSION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_QUILTFLOWER_VERSION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:330
#, no-wrap
msgid "`1.8.1`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:343
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.quiltflower.jar-directory]]`link:#quarkus-package-pkg-package-config_quarkus.package.quiltflower.jar-directory[quarkus.package.quiltflower.jar-directory]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The directory into which to save the Quiltflower tool if it doesn't exist\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_QUILTFLOWER_JAR_DIRECTORY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_QUILTFLOWER_JAR_DIRECTORY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:347
#, no-wrap
msgid "`${user.home}/.quarkus`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:360
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.write-transformed-bytecode-to-build-output]]`link:#quarkus-package-pkg-package-config_quarkus.package.write-transformed-bytecode-to-build-output[quarkus.package.write-transformed-bytecode-to-build-output]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If set to `true`, it will result in the Quarkus writing the transformed application bytecode to the build tool's output directory. This is useful for post-build tools that need to scan the application bytecode - for example for offline code-coverage tools. For example, if using Maven, enabling this feature will result in the classes in `target/classes` being updated with the versions that result after Quarkus has applied its transformations. Setting this to `true` however, should be done with a lot of caution and only if subsequent builds are done in a clean environment (i.e. the build tool's output directory has been completely cleaned).\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_WRITE_TRANSFORMED_BYTECODE_TO_BUILD_OUTPUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_WRITE_TRANSFORMED_BYTECODE_TO_BUILD_OUTPUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:377
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.manifest.attributes-attributes]]`link:#quarkus-package-pkg-package-config_quarkus.package.manifest.attributes-attributes[quarkus.package.manifest.attributes]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom manifest attributes to be added to the main section of the MANIFEST.MF file. An example of the user defined property: quarkus.package.manifest.attributes.\"Entry-key1\"=Value1 quarkus.package.manifest.attributes.\"Entry-key2\"=Value2\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_MANIFEST_ATTRIBUTES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_MANIFEST_ATTRIBUTES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:378
#, no-wrap
msgid "`Map<String,String>`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:394
#, no-wrap
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-package-pkg-package-config_quarkus.package.manifest.manifest-sections-manifest-sections]]`link:#quarkus-package-pkg-package-config_quarkus.package.manifest.manifest-sections-manifest-sections[quarkus.package.manifest.manifest-sections]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom manifest sections to be added to the MANIFEST.MF file. An example of the user defined property: quarkus.package.manifest.manifest-sections.\"Section-Name\".\"Entry-Key1\"=Value1 quarkus.package.manifest.manifest-sections.\"Section-Name\".\"Entry-Key2\"=Value2\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_PACKAGE_MANIFEST_MANIFEST_SECTIONS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_PACKAGE_MANIFEST_MANIFEST_SECTIONS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-package-pkg-package-config.adoc:395
#, no-wrap
msgid "`Map<String,Map<String,String>>`"
msgstr ""
