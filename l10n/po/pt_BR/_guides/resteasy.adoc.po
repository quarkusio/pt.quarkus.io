# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/resteasy.adoc:6
#, fuzzy, no-wrap
msgid "RESTEasy Classic"
msgstr "RESTEasy Clássico"

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:13
#, fuzzy
msgid "This guide is about https://resteasy.dev[RESTEasy Classic] which used to be the default Jakarta REST (formerly known as JAX-RS) implementation until Quarkus 2.8."
msgstr "Este guia é sobre o  link:https://resteasy.dev[RESTEasy Classic], que costumava ser a implementação padrão do Jakarta REST (anteriormente conhecido como JAX-RS) até o Quarkus 2.8."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:17
#, fuzzy
msgid "It is now recommended to use RESTEasy Reactive, which supports both traditional blocking workloads and reactive workloads equally well.  For more information about RESTEasy Reactive, please see the xref:rest-json.adoc[introductory REST JSON guide] or the xref:resteasy-reactive.adoc[RESTEasy Reactive reference documentation]."
msgstr "Agora é recomendável usar o RESTEasy Reactive, que oferece suporte a cargas de trabalho de bloqueio tradicionais e cargas de trabalho reativas igualmente bem. Para obter mais informações sobre o RESTEasy Reactive, consulte o  link:rest-json.html[guia REST JSON introdutório] ou a  link:resteasy-reactive.html[documentação de referência do RESTEasy Reactive]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:20
#, fuzzy
msgid "there is another guide if you need a xref:rest-client.adoc[REST client based on RESTEasy Classic] (including support for JSON)."
msgstr "existe outro guia se precisar de um  link:rest-client.html[cliente REST baseado no RESTEasy Classic] (incluindo suporte para JSON)."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:21
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitetura"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:24
#, fuzzy
msgid "The application built in this guide is quite simple: the user can add elements in a list using a form and the list is updated."
msgstr "A aplicação construída neste guia é bastante simples: o utilizador pode adicionar elementos a uma lista utilizando um formulário e a lista é actualizada."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:26
#, fuzzy
msgid "All the information between the browser and the server are formatted as JSON."
msgstr "Todas as informações entre o navegador e o servidor são formatadas como JSON."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:27
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:30
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Primeiro, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:37
#, fuzzy
msgid "This command generates a new project importing the RESTEasy/Jakarta REST and https://github.com/FasterXML/jackson[Jackson] extensions, and in particular adds the following dependency:"
msgstr "Este comando gera um novo projeto que importa as extensões RESTEasy/Jakarta REST e  link:https://github.com/FasterXML/jackson[Jackson] e, em particular, adiciona a seguinte dependência:"

#. type: Block title
#: upstream/_guides/resteasy.adoc:39 upstream/_guides/resteasy.adoc:68
#: upstream/_guides/resteasy.adoc:604
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:45
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/resteasy.adoc:48 upstream/_guides/resteasy.adoc:77
#: upstream/_guides/resteasy.adoc:613
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:51
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-jackson\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:56
#, fuzzy
msgid "To improve user experience, Quarkus registers the three Jackson https://github.com/FasterXML/jackson-modules-java8[Java 8 modules] so you don't need to do it manually."
msgstr "Para melhorar a experiência do utilizador, o Quarkus regista os três  link:https://github.com/FasterXML/jackson-modules-java8[módulos] Jackson  link:https://github.com/FasterXML/jackson-modules-java8[Java 8] para que não tenha de o fazer manualmente."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:59
#, fuzzy
msgid "Quarkus also supports https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] so, if you prefer JSON-B over Jackson, you can create a project relying on the RESTEasy JSON-B extension instead:"
msgstr "O Quarkus também suporta  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B], pelo que, se preferir JSON-B em vez de Jackson, pode criar um projeto com base na extensão RESTEasy JSON-B:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:66
#, fuzzy
msgid "This command generates a new project importing the RESTEasy/Jakarta REST and https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] extensions, and in particular adds the following dependency:"
msgstr "Este comando gera um novo projeto que importa as extensões RESTEasy/Jakarta REST e  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] e, em particular, adiciona a seguinte dependência:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:74
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jsonb</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:80
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-jsonb\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/resteasy.adoc:82
#, fuzzy, no-wrap
msgid "Creating your first JSON REST service"
msgstr "Criar o seu primeiro serviço JSON REST"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:85
#, fuzzy
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "Neste exemplo, vamos criar uma aplicação para gerir uma lista de frutos."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:87
#, fuzzy
msgid "First, let's create the `Fruit` bean as follows:"
msgstr "Primeiro, vamos criar o bean `Fruit` da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:91 upstream/_guides/resteasy.adoc:114
#: upstream/_guides/resteasy.adoc:477 upstream/_guides/resteasy.adoc:500
#: upstream/_guides/resteasy.adoc:655
#, no-wrap
msgid "package org.acme.rest.json;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:93
#, no-wrap
msgid "public class Fruit {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:96 upstream/_guides/resteasy.adoc:482
#, no-wrap
msgid ""
"    public String name;\n"
"    public String description;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:99
#, no-wrap
msgid ""
"    public Fruit() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:105
#, no-wrap
msgid ""
"    public Fruit(String name, String description) {\n"
"        this.name = name;\n"
"        this.description = description;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:108
#, fuzzy
msgid "Nothing fancy. One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr "Nada de especial. Uma coisa importante a notar é que ter um construtor padrão é exigido pela camada de serialização JSON."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:110
#, fuzzy
msgid "Now, create the `org.acme.rest.json.FruitResource` class as follows:"
msgstr "Agora, crie a classe `org.acme.rest.json.FruitResource` da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:118
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.LinkedHashMap;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:123
#, no-wrap
msgid ""
"import jakarta.ws.rs.DELETE;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:126
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:128
#, no-wrap
msgid "    private Set<Fruit> fruits = Collections.newSetFromMap(Collections.synchronizedMap(new LinkedHashMap<>()));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:133
#, no-wrap
msgid ""
"    public FruitResource() {\n"
"        fruits.add(new Fruit(\"Apple\", \"Winter fruit\"));\n"
"        fruits.add(new Fruit(\"Pineapple\", \"Tropical fruit\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:138
#, no-wrap
msgid ""
"    @GET\n"
"    public Set<Fruit> list() {\n"
"        return fruits;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:144
#, no-wrap
msgid ""
"    @POST\n"
"    public Set<Fruit> add(Fruit fruit) {\n"
"        fruits.add(fruit);\n"
"        return fruits;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:151
#, no-wrap
msgid ""
"    @DELETE\n"
"    public Set<Fruit> delete(Fruit fruit) {\n"
"        fruits.removeIf(existingFruit -> existingFruit.name.contentEquals(fruit.name));\n"
"        return fruits;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:154
#, fuzzy
msgid "The implementation is pretty straightforward, and you just need to define your endpoints using the Jakarta REST annotations."
msgstr "A implementação é bastante simples e só precisa de definir os seus pontos finais utilizando as anotações Jakarta REST."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:157
#, fuzzy
msgid "The `Fruit` objects will be automatically serialized/deserialized by https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] or https://github.com/FasterXML/jackson[Jackson], depending on the extension you chose when initializing the project."
msgstr "Os objectos `Fruit` serão automaticamente serializados/deserializados por  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] ou  link:https://github.com/FasterXML/jackson[Jackson], dependendo da extensão que escolheu ao inicializar o projeto."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:164
#, fuzzy
msgid "When a JSON extension is installed such as `quarkus-resteasy-jackson` or `quarkus-resteasy-jsonb`, Quarkus will use the `application/json` media type by default for most return values, unless the media type is explicitly set via `@Produces` or `@Consumes` annotations (there are some exceptions for well known types, such as `String` and `File`, which default to `text/plain` and `application/octet-stream` respectively)."
msgstr "Quando uma extensão JSON é instalada, como `quarkus-resteasy-jackson` ou `quarkus-resteasy-jsonb`, o Quarkus utilizará o tipo de suporte `application/json` por predefinição para a maioria dos valores de retorno, a menos que o tipo de suporte seja explicitamente definido através das anotações `@Produces` ou `@Consumes` (existem algumas excepções para tipos bem conhecidos, como `String` e `File`, que são predefinidos para `text/plain` e `application/octet-stream` respetivamente)."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:167
#, fuzzy
msgid "If you don't want JSON by default you can set `quarkus.resteasy-json.default-json=false` and the default will change back to being auto-negotiated. If you set this you will need to add `@Produces(MediaType.APPLICATION_JSON)` and `@Consumes(MediaType.APPLICATION_JSON)` to your endpoints in order to use JSON."
msgstr "Se não quiser JSON por predefinição, pode definir `quarkus.resteasy-json.default-json=false` e a predefinição voltará a ser auto-negociada. Se definir esta opção, terá de adicionar `@Produces(MediaType.APPLICATION_JSON)` e `@Consumes(MediaType.APPLICATION_JSON)` aos seus pontos finais para poder utilizar JSON."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:170
#, fuzzy
msgid "If you don't rely on the JSON default, it is heavily recommended to annotate your endpoints with the `@Produces` and `@Consumes` annotations to define precisely the expected content-types.  It will allow to narrow down the number of Jakarta REST providers (which can be seen as converters) included in the native executable."
msgstr "Se não confiar no JSON predefinido, recomenda-se vivamente que anote os seus pontos finais com as anotações `@Produces` e `@Consumes` para definir com precisão os tipos de conteúdo esperados. Isso permitirá reduzir o número de provedores Jakarta REST (que podem ser vistos como conversores) incluídos no executável nativo."

#. type: Title ===
#: upstream/_guides/resteasy.adoc:173
#, fuzzy, no-wrap
msgid "Configuring JSON support"
msgstr "Configuração do suporte JSON"

#. type: Title ====
#: upstream/_guides/resteasy.adoc:175
#, fuzzy, no-wrap
msgid "Jackson"
msgstr "Jackson"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:179
#, fuzzy
msgid "In Quarkus, the default Jackson `ObjectMapper` obtained via CDI (and consumed by the Quarkus extensions) is configured to ignore unknown properties (by disabling the `DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES` feature)."
msgstr "No Quarkus, a predefinição Jackson `ObjectMapper` obtida através do CDI (e consumida pelas extensões Quarkus) está configurada para ignorar propriedades desconhecidas (desactivando a funcionalidade `DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES` )."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:182
#, fuzzy
msgid "You can restore the default behavior of Jackson by setting `quarkus.jackson.fail-on-unknown-properties=true` in your `application.properties` or on a per-class basis via `@JsonIgnoreProperties(ignoreUnknown = false)`."
msgstr "Pode restaurar o comportamento predefinido da Jackson definindo `quarkus.jackson.fail-on-unknown-properties=true` no seu `application.properties` ou numa base por turma através de `@JsonIgnoreProperties(ignoreUnknown = false)`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:185
#, fuzzy
msgid "Furthermore, the `ObjectMapper` is configured to format dates and time in ISO-8601 (by disabling the `SerializationFeature.WRITE_DATES_AS_TIMESTAMPS` feature)."
msgstr "Além disso, o `ObjectMapper` está configurado para formatar datas e horas em ISO-8601 (desactivando a funcionalidade `SerializationFeature.WRITE_DATES_AS_TIMESTAMPS` )."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:189
#, fuzzy
msgid "The default behaviour of Jackson can be restored by setting `quarkus.jackson.write-dates-as-timestamps=true` in your `application.properties`. If you want to change the format for a single field, you can use the `@JsonFormat` annotation."
msgstr "O comportamento predefinido da Jackson pode ser restaurado definindo `quarkus.jackson.write-dates-as-timestamps=true` na sua `application.properties`. Se pretender alterar o formato de um único campo, pode utilizar a anotação `@JsonFormat`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:193
#, fuzzy
msgid "Also, Quarkus makes it very easy to configure various Jackson settings via CDI beans.  The simplest (and suggested) approach is to define a CDI bean of type `io.quarkus.jackson.ObjectMapperCustomizer` inside of which any Jackson configuration can be applied."
msgstr "Além disso, o Quarkus facilita muito a configuração de várias definições da Jackson através de beans CDI. A abordagem mais simples (e sugerida) é definir um feijão CDI do tipo `io.quarkus.jackson.ObjectMapperCustomizer` dentro do qual pode ser aplicada qualquer configuração Jackson."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:195
#, fuzzy
msgid "An example where a custom module needs to be registered would look like so:"
msgstr "Um exemplo em que é necessário registar um módulo personalizado seria o seguinte:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:201
#, no-wrap
msgid ""
"import com.fasterxml.jackson.databind.ObjectMapper;\n"
"import io.quarkus.jackson.ObjectMapperCustomizer;\n"
"import jakarta.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:204
#, no-wrap
msgid ""
"@Singleton\n"
"public class RegisterCustomModuleCustomizer implements ObjectMapperCustomizer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:209
#, no-wrap
msgid ""
"    public void customize(ObjectMapper mapper) {\n"
"        mapper.registerModule(new CustomModule());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:214
#, fuzzy
msgid "Users can even provide their own `ObjectMapper` bean if they so choose.  If this is done, it is very important to manually inject and apply all `io.quarkus.jackson.ObjectMapperCustomizer` beans in the CDI producer that produces `ObjectMapper`.  Failure to do so will prevent Jackson specific customizations provided by various extensions from being applied."
msgstr "Os utilizadores podem até fornecer o seu próprio `ObjectMapper` bean, se assim o desejarem. Se tal for feito, é muito importante injetar e aplicar manualmente todos os feijões `io.quarkus.jackson.ObjectMapperCustomizer` no produtor CDI que produz `ObjectMapper`. Se isso não for feito, as personalizações específicas de Jackson fornecidas por várias extensões não serão aplicadas."

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:222
#, no-wrap
msgid ""
"import com.fasterxml.jackson.databind.ObjectMapper;\n"
"import io.quarkus.arc.All;\n"
"import io.quarkus.jackson.ObjectMapperCustomizer;\n"
"import java.util.List;\n"
"import jakarta.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:224
#, no-wrap
msgid "public class CustomObjectMapper {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:229
#, no-wrap
msgid ""
"    // Replaces the CDI producer for ObjectMapper built into Quarkus\n"
"    @Singleton\n"
"    ObjectMapper objectMapper(@All List<ObjectMapperCustomizer> customizers) {\n"
"        ObjectMapper mapper = myObjectMapper(); // Custom `ObjectMapper`\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:234
#, no-wrap
msgid ""
"        // Apply all ObjectMapperCustomizer beans (incl. Quarkus)\n"
"        for (ObjectMapperCustomizer customizer : customizers) {\n"
"            customizer.customize(mapper);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:238
#, no-wrap
msgid ""
"        return mapper;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/resteasy.adoc:240
#, fuzzy, no-wrap
msgid "JSON-B"
msgstr "JSON-B"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:243
#, fuzzy
msgid "As stated above, Quarkus provides the option of using JSON-B instead of Jackson via the use of the `quarkus-resteasy-jsonb` extension."
msgstr "Tal como referido anteriormente, o Quarkus oferece a opção de utilizar JSON-B em vez de Jackson através da utilização da extensão `quarkus-resteasy-jsonb`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:245
#, fuzzy
msgid "Following the same approach as described in the previous section, JSON-B can be configured using a `io.quarkus.jsonb.JsonbConfigCustomizer` bean."
msgstr "Seguindo a mesma abordagem descrita na secção anterior, o JSON-B pode ser configurado utilizando um bean `io.quarkus.jsonb.JsonbConfigCustomizer`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:247
#, fuzzy
msgid "If for example a custom serializer named `FooSerializer` for type `com.example.Foo` needs to be registered with JSON-B, the addition of a bean like the following would suffice:"
msgstr "Se, por exemplo, um serializador personalizado chamado `FooSerializer` para o tipo `com.example.Foo` precisar de ser registado com JSON-B, a adição de um bean como o seguinte será suficiente:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:254
#, no-wrap
msgid ""
"import io.quarkus.jsonb.JsonbConfigCustomizer;\n"
"import jakarta.inject.Singleton;\n"
"import jakarta.json.bind.JsonbConfig;\n"
"import jakarta.json.bind.serializer.JsonbSerializer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:257
#, no-wrap
msgid ""
"@Singleton\n"
"public class FooSerializerRegistrationCustomizer implements JsonbConfigCustomizer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:262
#, no-wrap
msgid ""
"    public void customize(JsonbConfig config) {\n"
"        config.withSerializers(new FooSerializer());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:267
#, fuzzy
msgid "A more advanced option would be to directly provide a bean of `jakarta.json.bind.JsonbConfig` (with a `Dependent` scope) or in the extreme case to provide a bean of type `jakarta.json.bind.Jsonb` (with a `Singleton` scope).  If the latter approach is leveraged it is very important to manually inject and apply all `io.quarkus.jsonb.JsonbConfigCustomizer` beans in the CDI producer that produces `jakarta.json.bind.Jsonb`.  Failure to do so will prevent JSON-B specific customizations provided by various extensions from being applied."
msgstr "Uma opção mais avançada seria fornecer diretamente um bean de `jakarta.json.bind.JsonbConfig` (com um âmbito `Dependent` ) ou, no caso extremo, fornecer um bean do tipo `jakarta.json.bind.Jsonb` (com um âmbito `Singleton` ). Se for utilizada a última abordagem, é muito importante injetar e aplicar manualmente todos os feijões `io.quarkus.jsonb.JsonbConfigCustomizer` no produtor CDI que produz `jakarta.json.bind.Jsonb`. Se não o fizer, impedirá a aplicação de personalizações específicas do JSON-B fornecidas por várias extensões."

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:271
#, no-wrap
msgid "import io.quarkus.jsonb.JsonbConfigCustomizer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:275
#, no-wrap
msgid ""
"import jakarta.enterprise.context.Dependent;\n"
"import jakarta.enterprise.inject.Instance;\n"
"import jakarta.json.bind.JsonbConfig;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:277
#, no-wrap
msgid "public class CustomJsonbConfig {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:282
#, no-wrap
msgid ""
"    // Replaces the CDI producer for JsonbConfig built into Quarkus\n"
"    @Dependent\n"
"    JsonbConfig jsonConfig(Instance<JsonbConfigCustomizer> customizers) {\n"
"        JsonbConfig config = myJsonbConfig(); // Custom `JsonbConfig`\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:287
#, no-wrap
msgid ""
"        // Apply all JsonbConfigCustomizer beans (incl. Quarkus)\n"
"        for (JsonbConfigCustomizer customizer : customizers) {\n"
"            customizer.customize(config);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:291
#, no-wrap
msgid ""
"        return config;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy.adoc:294
#, fuzzy, no-wrap
msgid "JSON Hypertext Application Language (HAL) support"
msgstr "Suporte da linguagem de aplicação de hipertexto (HAL) JSON"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:297
#, fuzzy
msgid "The https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL] standard is a simple format to represent web links."
msgstr "A norma  link:https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL] é um formato simples para representar ligações Web."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:299
#, fuzzy
msgid "To enable the HAL support, add the `quarkus-hal` extension to your project. Also, as HAL needs JSON support, you need to add either the `quarkus-resteasy-jsonb` or the `quarkus-resteasy-jackson` extension."
msgstr "Para habilitar o suporte a HAL, adicione a extensão `quarkus-hal` ao seu projeto. Além disso, como o HAL precisa de suporte a JSON, você precisa adicionar a extensão `quarkus-resteasy-jsonb` ou `quarkus-resteasy-jackson`."

#. type: Block title
#: upstream/_guides/resteasy.adoc:300
#, fuzzy, no-wrap
msgid "Table Context object"
msgstr "Objeto de contexto de tabela"

#. type: Table
#: upstream/_guides/resteasy.adoc:302
#, fuzzy, no-wrap
msgid "GAV"
msgstr "GAV"

#. type: Table
#: upstream/_guides/resteasy.adoc:304
#, fuzzy, no-wrap
msgid "Usage"
msgstr "Utilização"

#. type: Table
#: upstream/_guides/resteasy.adoc:305
#, fuzzy, no-wrap
msgid "`io.quarkus:quarkus-hal`"
msgstr "`io.quarkus:quarkus-hal`"

#. type: Table
#: upstream/_guides/resteasy.adoc:307
#, fuzzy, no-wrap
msgid "https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL]"
msgstr "link:https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL]"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:310
#, fuzzy
msgid "After adding the extensions, we can now annotate the REST resources to produce the media type `application/hal+json` (or use RestMediaType.APPLICATION_HAL_JSON). For example:"
msgstr "Depois de adicionar as extensões, podemos agora anotar os recursos REST para produzir o tipo de media `application/hal+json` (ou utilizar RestMediaType.APPLICATION_HAL_JSON). Por exemplo:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:315
#, no-wrap
msgid ""
"@Path(\"/records\")\n"
"public class RecordsResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:322
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces({ MediaType.APPLICATION_JSON, \"application/hal+json\" })\n"
"    @LinkResource(entityClassName = \"org.acme.Record\", rel = \"list\")\n"
"    public List<TestRecord> getAll() {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:331
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/first\")\n"
"    @Produces({ MediaType.APPLICATION_JSON, \"application/hal+json\" })\n"
"    @LinkResource(rel = \"first\")\n"
"    public TestRecord getFirst() {\n"
"        // ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:334
#, fuzzy
msgid "Now, the endpoints `/records` and `/records/first` will accept the media type both `json` and `hal+json` to print the records in Hal format."
msgstr "Agora, os pontos finais `/records` e `/records/first` aceitam o tipo de suporte `json` e `hal+json` para imprimir os registos em formato Hal."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:336
#, fuzzy
msgid "For example, if we invoke the `/records` endpoint using curl to return a list of records, the HAL format will look like as follows:"
msgstr "Por exemplo, se invocarmos o ponto de extremidade `/records` utilizando curl para devolver uma lista de registos, o formato HAL será semelhante ao seguinte:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:377
#, no-wrap
msgid ""
"& curl -H \"Accept:application/hal+json\" -i localhost:8080/records\n"
"{\n"
"    \"_embedded\": {\n"
"        \"items\": [\n"
"            {\n"
"                \"id\": 1,\n"
"                \"slug\": \"first\",\n"
"                \"value\": \"First value\",\n"
"                \"_links\": {\n"
"                    \"list\": {\n"
"                        \"href\": \"http://localhost:8081/records\"\n"
"                    },\n"
"                    \"first\": {\n"
"                        \"href\": \"http://localhost:8081/records/first\"\n"
"                    }\n"
"                }\n"
"            },\n"
"            {\n"
"                \"id\": 2,\n"
"                \"slug\": \"second\",\n"
"                \"value\": \"Second value\",\n"
"                \"_links\": {\n"
"                    \"list\": {\n"
"                        \"href\": \"http://localhost:8081/records\"\n"
"                    },\n"
"                    \"first\": {\n"
"                        \"href\": \"http://localhost:8081/records/first\"\n"
"                    }\n"
"                }\n"
"            }\n"
"        ]\n"
"    },\n"
"    \"_links\": {\n"
"        \"list\": {\n"
"            \"href\": \"http://localhost:8081/records\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:380
#, fuzzy
msgid "When we call a resource `/records/first` that returns only one instance, then the output is:"
msgstr "Quando chamamos um recurso `/records/first` que devolve apenas uma instância, o resultado é:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:397
#, no-wrap
msgid ""
"& curl -H \"Accept:application/hal+json\" -i localhost:8080/records/first\n"
"{\n"
"    \"id\": 1,\n"
"    \"slug\": \"first\",\n"
"    \"value\": \"First value\",\n"
"    \"_links\": {\n"
"        \"list\": {\n"
"            \"href\": \"http://localhost:8081/records\"\n"
"        },\n"
"        \"first\": {\n"
"            \"href\": \"http://localhost:8081/records/first\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/resteasy.adoc:399
#, fuzzy, no-wrap
msgid "Creating a frontend"
msgstr "Criar um frontend"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:404
#, fuzzy
msgid "Now let's add a simple web page to interact with our `FruitResource`.  Quarkus automatically serves static resources located under the `META-INF/resources` directory.  In the `src/main/resources/META-INF/resources` directory, add a `fruits.html` file with the content from this link:{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html] file in it."
msgstr "Agora vamos adicionar uma página Web simples para interagir com o nosso `FruitResource`. O Quarkus serve automaticamente recursos estáticos localizados no diretório `META-INF/resources`. No diretório `src/main/resources/META-INF/resources`, adicione um ficheiro `fruits.html` com o conteúdo deste ficheiro  link:{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:406
#, fuzzy
msgid "You can now interact with your REST service:"
msgstr "Pode agora interagir com o seu serviço REST:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:410
#, fuzzy
msgid "start Quarkus with:"
msgstr "iniciar o Quarkus com:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:413
#, fuzzy
msgid "open a browser to `http://localhost:8080/fruits.html`"
msgstr "abrir um browser para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;`"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:414
#, fuzzy
msgid "add new fruits to the list via the form"
msgstr "adicionar novos frutos à lista através do formulário"

#. type: Title ==
#: upstream/_guides/resteasy.adoc:417
#, fuzzy, no-wrap
msgid "Building a native executable"
msgstr "Construir um executável nativo"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:420
#, fuzzy
msgid "You can build a native executable with the usual command:"
msgstr "Pode construir um executável nativo com o comando habitual:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:424
#, fuzzy
msgid "Running it is as simple as executing `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "Executá-lo é tão simples quanto executar `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:426
#, fuzzy
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "Pode então apontar o seu browser para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;` e utilizar a sua aplicação."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:427
#, fuzzy, no-wrap
msgid "About serialization"
msgstr "Acerca da serialização"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:430
#, fuzzy
msgid "JSON serialization libraries use Java reflection to get the properties of an object and serialize them."
msgstr "As bibliotecas de serialização JSON utilizam a reflexão Java para obter as propriedades de um objeto e serializá-las."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:434
#, fuzzy
msgid "When using native executables with GraalVM, all classes that will be used with reflection need to be registered.  The good news is that Quarkus does that work for you most of the time.  So far, we haven't registered any class, not even `Fruit`, for reflection usage and everything is working fine."
msgstr "Ao usar executáveis nativos com o GraalVM, todas as classes que serão usadas com reflexão precisam ser registradas. A boa notícia é que o Quarkus faz esse trabalho por ti na maioria das vezes. Até agora, não registámos nenhuma classe, nem mesmo `Fruit`, para uso de reflexão e tudo está a funcionar bem."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:437
#, fuzzy
msgid "Quarkus performs some magic when it is capable of inferring the serialized types from the REST methods.  When you have the following REST method, Quarkus determines that `Fruit` will be serialized:"
msgstr "O Quarkus faz alguma magia quando é capaz de inferir os tipos serializados a partir dos métodos REST. Quando se tem o seguinte método REST, o Quarkus determina que `Fruit` será serializado:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:444
#, no-wrap
msgid ""
"@GET\n"
"public List<Fruit> list() {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:448
#, fuzzy
msgid "Quarkus does that for you automatically by analyzing the REST methods at build time and that's why we didn't need any reflection registration in the first part of this guide."
msgstr "O Quarkus faz isso automaticamente, analisando os métodos REST no momento da construção e é por isso que não precisamos de nenhum registo de reflexão na primeira parte deste guia."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:451
#, fuzzy
msgid "Another common pattern in the Jakarta REST world is to use the `Response` object.  `Response` comes with some nice perks:"
msgstr "Outro padrão comum no mundo Jakarta REST é usar o objeto `Response`. `Response` vem com algumas vantagens interessantes:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:453
#, fuzzy
msgid "you can return different entity types depending on what happens in your method (a `Legume` or an `Error` for instance);"
msgstr "pode devolver diferentes tipos de entidades, dependendo do que acontece no seu método (um `Legume` ou um `Error`, por exemplo);"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:454
#, fuzzy
msgid "you can set the attributes of the `Response` (the status comes to mind in the case of an error)."
msgstr "pode definir os atributos do `Response` (o estado vem à mente no caso de um erro)."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:456
#, fuzzy
msgid "Your REST method then looks like this:"
msgstr "O seu método REST tem então o seguinte aspeto:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:463
#, no-wrap
msgid ""
"@GET\n"
"public Response list() {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:467
#, fuzzy
msgid "It is not possible for Quarkus to determine at build time the type included in the `Response` as the information is not available.  In this case, Quarkus won't be able to automatically register for reflection the required classes."
msgstr "Não é possível ao Quarkus determinar no momento da construção o tipo incluído em `Response`, uma vez que a informação não está disponível. Neste caso, o Quarkus não poderá registar automaticamente as aulas de reflexão necessárias."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:469
#, fuzzy
msgid "This leads us to our next section."
msgstr "Isto leva-nos à nossa próxima secção."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:470
#, fuzzy, no-wrap
msgid "Using Response"
msgstr "Utilizar a resposta"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:473
#, fuzzy
msgid "Let's create the `Legume` class which will be serialized as JSON, following the same model as for our `Fruit` class:"
msgstr "Vamos criar a classe `Legume` que será serializada como JSON, seguindo o mesmo modelo da nossa classe `Fruit`:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:479
#, no-wrap
msgid "public class Legume {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:485
#, no-wrap
msgid ""
"    public Legume() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:491
#, no-wrap
msgid ""
"    public Legume(String name, String description) {\n"
"        this.name = name;\n"
"        this.description = description;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:494
#, fuzzy
msgid "Now let's create a `LegumeResource` REST service with only one method which returns the list of legumes."
msgstr "Agora vamos criar um serviço `LegumeResource` REST com apenas um método que devolve a lista de leguminosas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:496
#, fuzzy
msgid "This method returns a `Response` and not a list of `Legume`."
msgstr "Este método devolve um `Response` e não uma lista de `Legume`."

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:504
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.LinkedHashSet;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:511
#, no-wrap
msgid ""
"import jakarta.ws.rs.Consumes;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
"import jakarta.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:516
#, no-wrap
msgid ""
"@Path(\"/legumes\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"public class LegumeResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:518
#, no-wrap
msgid "    private Set<Legume> legumes = Collections.synchronizedSet(new LinkedHashSet<>());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:523
#, no-wrap
msgid ""
"    public LegumeResource() {\n"
"        legumes.add(new Legume(\"Carrot\", \"Root vegetable, usually orange\"));\n"
"        legumes.add(new Legume(\"Zucchini\", \"Summer squash\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:529
#, no-wrap
msgid ""
"    @GET\n"
"    public Response list() {\n"
"        return Response.ok(legumes).build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:534
#, fuzzy
msgid "Now let's add a simple web page to display our list of legumes.  In the `src/main/resources/META-INF/resources` directory, add a `legumes.html` file with the content from this {quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/legumes.html[legumes.html] file in it."
msgstr "Agora vamos adicionar uma página Web simples para apresentar a nossa lista de leguminosas. No diretório `src/main/resources/META-INF/resources`, adicione um ficheiro `legumes.html` com o conteúdo deste ficheiro {quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/legumes.html[legumes.html]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:536
#, fuzzy
msgid "Open a browser to http://localhost:8080/legumes.html, and you will see our list of legumes."
msgstr "Abra um browser em  http://localhost:8080/legumes.html  e verá a nossa lista de leguminosas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:538
#, fuzzy
msgid "The interesting part starts when running the application as a native executable:"
msgstr "A parte interessante começa quando se executa a aplicação como um executável nativo:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:542 upstream/_guides/resteasy.adoc:581
#, fuzzy
msgid "create the native executable with:"
msgstr "criar o executável nativo com:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:545 upstream/_guides/resteasy.adoc:584
#, fuzzy
msgid "execute it with `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"
msgstr "executá-lo com `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:546 upstream/_guides/resteasy.adoc:585
#, fuzzy
msgid "open a browser and go to http://localhost:8080/legumes.html"
msgstr "abrir um browser e ir para  http://localhost:8080/legumes.html"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:550
#, fuzzy
msgid "No legumes there."
msgstr "Não há leguminosas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:553
#, fuzzy
msgid "As mentioned above, the issue is that Quarkus was not able to determine the `Legume` class will require some reflection by analyzing the REST endpoints.  The JSON serialization library tries to get the list of fields of `Legume` and gets an empty list, so it does not serialize the fields' data."
msgstr "Como mencionado acima, o problema é que o Quarkus não foi capaz de determinar a classe `Legume` exigirá alguma reflexão analisando os pontos de extremidade REST. A biblioteca de serialização JSON tenta obter a lista de campos de `Legume` e obtém uma lista vazia, pelo que não serializa os dados dos campos."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:558
#, fuzzy
msgid "At the moment, when JSON-B or Jackson tries to get the list of fields of a class, if the class is not registered for reflection, no exception will be thrown.  GraalVM will simply return an empty list of fields."
msgstr "Neste momento, quando JSON-B ou Jackson tentam obter a lista de campos de uma classe, se a classe não estiver registada para reflexão, não será lançada qualquer exceção. O GraalVM simplesmente retornará uma lista vazia de campos."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:560
#, fuzzy
msgid "Hopefully, this will change in the future and make the error more obvious."
msgstr "Esperemos que isto mude no futuro e que o erro seja mais óbvio."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:563
#, fuzzy
msgid "We can register `Legume` for reflection manually by adding the `@RegisterForReflection` annotation on our `Legume` class:"
msgstr "Podemos registar `Legume` para reflexão manualmente, adicionando a anotação `@RegisterForReflection` à nossa classe `Legume`:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:566
#, no-wrap
msgid "import io.quarkus.runtime.annotations.RegisterForReflection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:571
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class Legume {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:574
#, fuzzy
msgid "The `@RegisterForReflection` annotation instructs Quarkus to keep the class and its members during the native compilation. More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr "A anotação `@RegisterForReflection` instrui o Quarkus a manter a classe e seus membros durante a compilação nativa. Mais detalhes sobre a anotação `@RegisterForReflection` podem ser encontrados na página de  link:writing-native-applications-tips.html#registerForReflection[dicas de aplicações nativas]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:576
#, fuzzy
msgid "Let's do that and follow the same steps as before:"
msgstr "Vamos fazer isso e seguir os mesmos passos que antes:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:580
#, fuzzy
msgid "hit `Ctrl+C` to stop the application"
msgstr "prima `Ctrl+C` para parar a aplicação"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:589
#, fuzzy
msgid "This time, you can see our list of legumes."
msgstr "Desta vez, pode ver a nossa lista de leguminosas."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:591
#, fuzzy, no-wrap
msgid "Being reactive"
msgstr "Ser reativo"

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:596
#, fuzzy
msgid "For reactive workloads, please always use xref:resteasy-reactive.adoc[RESTEasy Reactive]."
msgstr "Para cargas de trabalho reactivas, utilize sempre o  link:resteasy-reactive.html[RESTEasy Reactive]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:600
#, fuzzy
msgid "You can return _reactive types_ to handle asynchronous processing.  Quarkus recommends the usage of https://smallrye.io/smallrye-mutiny[Mutiny] to write reactive and asynchronous code."
msgstr "Pode devolver _tipos reactivos_ para lidar com o processamento assíncrono. A Quarkus recomenda a utilização do  link:https://smallrye.io/smallrye-mutiny[Mutiny] para escrever código reativo e assíncrono."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:602
#, fuzzy
msgid "To integrate Mutiny and RESTEasy, you need to add the `quarkus-resteasy-mutiny` dependency to your project:"
msgstr "Para integrar o Mutiny e o RESTEasy, é necessário adicionar a dependência `quarkus-resteasy-mutiny` ao seu projeto:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:610
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-mutiny</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:616
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-mutiny\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:619
#, fuzzy
msgid "Then, your endpoint can return `Uni` or `Multi` instances:"
msgstr "Em seguida, o seu ponto de extremidade pode devolver `Uni` ou `Multi` instâncias:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:628
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/{name}\")\n"
"public Uni<Fruit> getOne(@PathParam String name) {\n"
"    return findByName(name);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:633
#, no-wrap
msgid ""
"@GET\n"
"public Multi<Fruit> getAll() {\n"
"    return findAll();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:637
#, fuzzy
msgid "Use `Uni` when you have a single result.  Use `Multi` when you have multiple items that may be emitted asynchronously."
msgstr "Utilize `Uni` quando tiver um único resultado. Utilize `Multi` quando tiver vários itens que possam ser emitidos de forma assíncrona."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:639
#, fuzzy
msgid "You can use `Uni` and `Response` to return asynchronous HTTP responses: `Uni<Response>`."
msgstr "Pode utilizar `Uni` e `Response` para devolver respostas HTTP assíncronas: `Uni&amp;lt;Response&amp;gt;`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:641
#, fuzzy
msgid "More details about Mutiny can be found in xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Mais detalhes sobre o Mutiny podem ser encontrados em  link:mutiny-primer.html[Mutiny - uma biblioteca de programação reactiva intuitiva]."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:642
#, fuzzy, no-wrap
msgid "HTTP filters and interceptors"
msgstr "Filtros e interceptores HTTP"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:648
#, fuzzy
msgid "Both HTTP request and response can be intercepted by providing `ContainerRequestFilter` or `ContainerResponseFilter` implementations respectively. These filters are suitable for processing the metadata associated with a message: HTTP headers, query parameters, media type, and other metadata. They also have the capability to abort the request processing, for instance when the user does not have the permissions to access the endpoint."
msgstr "Tanto o pedido como a resposta HTTP podem ser interceptados através de implementações em `ContainerRequestFilter` ou `ContainerResponseFilter`, respetivamente. Estes filtros são adequados para processar os metadados associados a uma mensagem: Cabeçalhos HTTP, parâmetros de consulta, tipo de media e outros metadados. Também têm a capacidade de abortar o processamento do pedido, por exemplo, quando o utilizador não tem permissões para aceder ao ponto final."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:651
#, fuzzy
msgid "Let's use `ContainerRequestFilter` to add logging capability to our service. We can do that by implementing `ContainerRequestFilter` and annotating it with the `@Provider` annotation:"
msgstr "Vamos utilizar `ContainerRequestFilter` para adicionar a capacidade de registo ao nosso serviço. Podemos fazer isso implementando `ContainerRequestFilter` e anotando-o com a anotação `@Provider`:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:658
#, no-wrap
msgid ""
"import io.vertx.core.http.HttpServerRequest;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:664
#, no-wrap
msgid ""
"import jakarta.ws.rs.container.ContainerRequestContext;\n"
"import jakarta.ws.rs.container.ContainerRequestFilter;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.UriInfo;\n"
"import jakarta.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:667
#, no-wrap
msgid ""
"@Provider\n"
"public class LoggingFilter implements ContainerRequestFilter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:669
#, no-wrap
msgid "    private static final Logger LOG = Logger.getLogger(LoggingFilter.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:672
#, no-wrap
msgid ""
"    @Context\n"
"    UriInfo info;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:675
#, no-wrap
msgid ""
"    @Context\n"
"    HttpServerRequest request;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:678
#, no-wrap
msgid ""
"    @Override\n"
"    public void filter(ContainerRequestContext context) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:682
#, no-wrap
msgid ""
"        final String method = context.getMethod();\n"
"        final String path = info.getPath();\n"
"        final String address = request.remoteAddress().toString();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:686
#, no-wrap
msgid ""
"        LOG.infof(\"Request %s %s from IP %s\", method, path, address);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:689
#, fuzzy
msgid "Now, whenever a REST method is invoked, the request will be logged into the console:"
msgstr "Agora, sempre que um método REST for invocado, o pedido será registado na consola:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:696
#, no-wrap
msgid ""
"2019-06-05 12:44:26,526 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request GET /legumes from IP 127.0.0.1\n"
"2019-06-05 12:49:19,623 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request GET /fruits from IP 0:0:0:0:0:0:0:1\n"
"2019-06-05 12:50:44,019 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request POST /fruits from IP 0:0:0:0:0:0:0:1\n"
"2019-06-05 12:51:04,485 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request GET /fruits from IP 127.0.0.1\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/resteasy.adoc:698
#, fuzzy, no-wrap
msgid "CORS filter"
msgstr "Filtro CORS"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:703
#, fuzzy
msgid "link:https://en.wikipedia.org/wiki/Cross-origin_resource_sharing[Cross-origin resource sharing] (CORS) is a mechanism that allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource was served."
msgstr "link:https://en.wikipedia.org/wiki/Cross-origin_resource_sharing[A partilha de recursos entre origens] (CORS) é um mecanismo que permite que recursos restritos numa página Web sejam solicitados a partir de outro domínio fora do domínio a partir do qual o primeiro recurso foi servido."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:706
#, fuzzy
msgid "Quarkus comes with a CORS filter. Read the xref:http-reference.adoc#cors-filter[HTTP Reference Documentation] to learn how to use it."
msgstr "O Quarkus vem com um filtro CORS. Leia a  link:http-reference.html#cors-filter[documentação de referência HTTP] para saber como o utilizar."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:707
#, fuzzy, no-wrap
msgid "GZip Support"
msgstr "Suporte GZip"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:710
#, fuzzy
msgid "Quarkus comes with GZip support (even though it is not enabled by default). The following configuration knobs allow to configure GZip support."
msgstr "O Quarkus vem com suporte para GZip (embora não esteja ativado por defeito). Os seguintes botões de configuração permitem configurar o suporte GZip."

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:715
#, no-wrap
msgid ""
"quarkus.resteasy.gzip.enabled=true // <1>\n"
"quarkus.resteasy.gzip.max-input=10M // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:718
#, fuzzy
msgid "Enable Gzip support."
msgstr "Ativar o suporte Gzip."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:720
#, fuzzy
msgid "Configure the upper limit on deflated request body. This is useful to mitigate potential attacks by limiting their reach. The default value is `10M`.  This configuration option would recognize strings in this format (shown as a regular expression): `[0-9]+[KkMmGgTtPpEeZzYy]?`. If no suffix is given, assume bytes."
msgstr "Configurar o limite superior do corpo do pedido deflacionado. Isto é útil para mitigar potenciais ataques, limitando o seu alcance. O valor predefinido é `10M`. Esta opção de configuração reconheceria cadeias de caracteres neste formato (mostrado como uma expressão regular): `[0-9]+[KkMmGgTtPpEeZzYy]?`. Se não for fornecido nenhum sufixo, assume bytes."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:722
#, fuzzy
msgid "Once GZip support has been enabled you can use it on an endpoint by adding the `@org.jboss.resteasy.annotations.GZIP` annotation to your endpoint method."
msgstr "Assim que o suporte GZip tiver sido ativado, pode utilizá-lo num ponto final adicionando a anotação `@org.jboss.resteasy.annotations.GZIP` ao seu método de ponto final."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:724
#, fuzzy
msgid "There is also the `quarkus.http.enable-compression` configuration property which enables HTTP response compression globally. If enabled then a response body is compressed if the `Content-Type` HTTP header is set and the value is a compressed media type as configured via the `quarkus.http.compress-media-types` configuration property."
msgstr "Existe também a propriedade de configuração `quarkus.http.enable-compression` que ativa globalmente a compressão da resposta HTTP. Se estiver activada, um corpo de resposta é comprimido se o cabeçalho HTTP `Content-Type` estiver definido e o valor for um tipo de suporte comprimido, conforme configurado através da propriedade de configuração `quarkus.http.compress-media-types`."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:725
#, fuzzy, no-wrap
msgid "Multipart Support"
msgstr "Suporte multipartes"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:728
#, fuzzy
msgid "RESTEasy supports multipart via the https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]."
msgstr "O RESTEasy suporta multipartes através do  link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:730
#, fuzzy
msgid "Quarkus provides an extension called `quarkus-resteasy-multipart` to make things easier for you."
msgstr "O Quarkus fornece uma extensão chamada `quarkus-resteasy-multipart` para lhe facilitar as coisas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:732
#, fuzzy
msgid "This extension slightly differs from the RESTEasy default behavior as the default charset (if none is specified in your request) is UTF-8 rather than US-ASCII."
msgstr "Esta extensão difere ligeiramente do comportamento padrão do RESTEasy, uma vez que o conjunto de caracteres padrão (se nenhum for especificado no pedido) é UTF-8 em vez de US-ASCII."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:734
#, fuzzy
msgid "You can configure this behavior with the following configuration properties:"
msgstr "Pode configurar este comportamento com as seguintes propriedades de configuração:"

#. type: Title ==
#: upstream/_guides/resteasy.adoc:737
#, fuzzy, no-wrap
msgid "Servlet compatibility"
msgstr "Compatibilidade de servlet"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:740
#, fuzzy
msgid "In Quarkus, RESTEasy can either run directly on top of the Vert.x HTTP server, or on top of Undertow if you have any servlet dependency."
msgstr "No Quarkus, o RESTEasy pode ser executado diretamente sobre o servidor HTTP Vert.x ou sobre o Undertow, caso exista alguma dependência de servlet."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:747
#, fuzzy
msgid "As a result, certain classes, such as `HttpServletRequest` are not always available for injection. Most use-cases for this particular class are covered by Jakarta REST equivalents, except for getting the remote client's IP. RESTEasy comes with a replacement API which you can inject: https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html[`HttpRequest`], which has the methods https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteAddress--[`getRemoteAddress()`] and https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteHost--[`getRemoteHost()`] to solve this problem."
msgstr "Como resultado, certas classes, como `HttpServletRequest`, nem sempre estão disponíveis para injeção. A maioria dos casos de uso para essa classe em particular é coberta por equivalentes Jakarta REST, exceto para obter o IP do cliente remoto. O RESTEasy vem com uma API de substituição que pode ser injetada:  link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html[`HttpRequest`], que tem os métodos  link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteAddress--[`getRemoteAddress()`] e  link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteHost--[`getRemoteHost()`] para resolver este problema."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:748
#, fuzzy, no-wrap
msgid "RESTEasy and REST Client interactions"
msgstr "Interacções entre o RESTEasy e o cliente REST"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:752
#, fuzzy
msgid "In Quarkus, the RESTEasy extension and xref:rest-client.adoc[the REST Client extension] share the same infrastructure.  One important consequence of this consideration is that they share the same list of providers (in the Jakarta REST meaning of the word)."
msgstr "No Quarkus, a extensão RESTEasy e  link:rest-client.html[a extensão Cliente REST] partilham a mesma infraestrutura. Uma consequência importante desta consideração é que partilham a mesma lista de fornecedores (no sentido da palavra REST de Jacarta)."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:755
#, fuzzy
msgid "For instance, if you declare a `WriterInterceptor`, it will by default intercept both the servers calls and the client calls, which might not be the desired behavior."
msgstr "Por exemplo, se declarar um `WriterInterceptor`, este irá, por defeito, intercetar tanto as chamadas dos servidores como as chamadas dos clientes, o que pode não ser o comportamento desejado."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:757
#, fuzzy
msgid "However, you can change this default behavior and constrain a provider to:"
msgstr "No entanto, é possível alterar esse comportamento padrão e restringir um provedor a:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:759
#, fuzzy
msgid "only consider *server* calls by adding the `@ConstrainedTo(RuntimeType.SERVER)` annotation to your provider;"
msgstr "considerar apenas as chamadas *do servidor*, adicionando a anotação `@ConstrainedTo(RuntimeType.SERVER)` ao seu fornecedor;"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:760
#, fuzzy
msgid "only consider *client* calls by adding the `@ConstrainedTo(RuntimeType.CLIENT)` annotation to your provider."
msgstr "considerar apenas chamadas de *clientes*, adicionando a anotação `@ConstrainedTo(RuntimeType.CLIENT)` ao seu fornecedor."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:761
#, fuzzy, no-wrap
msgid "What's Different from Jakarta EE Development"
msgstr "O que é diferente do desenvolvimento do Jakarta EE"

#. type: Title ===
#: upstream/_guides/resteasy.adoc:763
#, fuzzy, no-wrap
msgid "No Need for `Application` Class"
msgstr "Não há necessidade de `Application` Class"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:766
#, fuzzy
msgid "Configuration via an application-supplied subclass of `Application` is supported, but not required."
msgstr "A configuração através de uma subclasse de `Application` fornecida pela aplicação é suportada, mas não é obrigatória."

#. type: Title ===
#: upstream/_guides/resteasy.adoc:767
#, fuzzy, no-wrap
msgid "Only a single Jakarta REST application"
msgstr "Apenas uma única aplicação Jakarta REST"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:771
#, fuzzy
msgid "In contrast to Jakarta REST (and RESTeasy) running in a standard servlet-container, Quarkus only supports the deployment of a single Jakarta REST application.  If multiple Jakarta REST `Application` classes are defined, the build will fail with the message `Multiple classes have been annotated with @ApplicationPath which is currently not supported`."
msgstr "Em contraste com o Jakarta REST (e o RESTeasy) executado num contentor de servlet padrão, o Quarkus apenas suporta a implementação de uma única aplicação Jakarta REST. Se forem definidas várias classes Jakarta REST `Application`, a construção falhará com a mensagem `Multiple classes have been annotated with @ApplicationPath which is currently not supported`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:773
#, fuzzy
msgid "If multiple Jakarta REST applications are defined, the property `quarkus.resteasy.ignore-application-classes=true` can be used to ignore all explicit `Application` classes. This makes all resource-classes available via the application-path as defined by `quarkus.resteasy.path` (default: `/`)."
msgstr "Se forem definidas várias aplicações Jakarta REST, a propriedade `quarkus.resteasy.ignore-application-classes=true` pode ser utilizada para ignorar todas as classes `Application` explícitas. Isto torna todas as classes de recursos disponíveis através do caminho da aplicação, tal como definido por `quarkus.resteasy.path` (predefinição: `/`)."

#. type: Title ===
#: upstream/_guides/resteasy.adoc:774
#, fuzzy, no-wrap
msgid "Support limitations of Jakarta REST application"
msgstr "Limitações de suporte da aplicação Jakarta REST"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:779
#, fuzzy
msgid "The RESTEasy extension doesn't support the method `getProperties()` of the class `jakarta.ws.rs.core.Application`. Moreover, it only relies on the methods `getClasses()` and `getSingletons()` to filter out the annotated resource, provider and feature classes.  It doesn't filter out the built-in resource, provider and feature classes and also the resource, provider and feature classes registered by the other extensions.  Finally, the objects returned by the method `getSingletons()` are ignored, only the classes are taken into account to filter out the resource, provider and feature classes, in other words the method `getSingletons()` is actually managed the same way as `getClasses()`."
msgstr "A extensão RESTEasy não suporta o método `getProperties()` da classe `jakarta.ws.rs.core.Application`. Além disso, apenas se baseia nos métodos `getClasses()` e `getSingletons()` para filtrar as classes de recursos, fornecedores e características anotadas. Não filtra as classes de recursos, de fornecedores e de elementos incorporados, nem as classes de recursos, de fornecedores e de elementos registadas por outras extensões. Finalmente, os objectos devolvidos pelo método `getSingletons()` são ignorados, apenas as classes são tidas em conta para filtrar as classes de recurso, fornecedor e caraterística, por outras palavras, o método `getSingletons()` é gerido da mesma forma que `getClasses()`."

#. type: Title ===
#: upstream/_guides/resteasy.adoc:780
#, fuzzy, no-wrap
msgid "Lifecycle of Resources"
msgstr "Ciclo de vida dos recursos"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:784
#, fuzzy
msgid "In Quarkus all Jakarta REST resources are treated as CDI beans.  It's possible to inject other beans via `@Inject`, bind interceptors using bindings such as `@Transactional`, define `@PostConstruct` callbacks, etc."
msgstr "No Quarkus, todos os recursos Jakarta REST são tratados como beans CDI. É possível injetar outros beans através de `@Inject`, associar interceptores utilizando ligações como `@Transactional`, definir retornos de chamada `@PostConstruct`, etc."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:790
#, fuzzy
msgid "If there is no scope annotation declared on the resource class then the scope is defaulted.  The default scope can be controlled through the `quarkus.resteasy.singleton-resources` property.  If set to `true` (default) then a *single instance* of a resource class is created to service all requests (as defined by `@jakarta.inject.Singleton`).  If set to `false` then a *new instance* of the resource class is created per each request.  An explicit CDI scope annotation (`@RequestScoped`, `@ApplicationScoped`, etc.) always overrides the default behavior and specifies the lifecycle of resource instances."
msgstr "Se não existir uma anotação de âmbito declarada na classe de recurso, o âmbito é predefinido. O âmbito predefinido pode ser controlado através da propriedade `quarkus.resteasy.singleton-resources`. Se definido para `true` (predefinição), é criada uma *única instância* de uma classe de recurso para servir todos os pedidos (tal como definido por `@jakarta.inject.Singleton`). Se for definida como `false`, é criada uma *nova instância* da classe de recurso por cada pedido. Uma anotação de âmbito CDI explícita ( `@RequestScoped`, `@ApplicationScoped`, etc.) substitui sempre o comportamento predefinido e especifica o ciclo de vida das instâncias de recursos."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:791
#, fuzzy, no-wrap
msgid "Include/Exclude Jakarta REST classes with build time conditions"
msgstr "Incluir/Excluir classes Jakarta REST com condições de tempo de compilação"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:795
#, fuzzy
msgid "Quarkus enables the inclusion or exclusion of Jakarta REST Resources, Providers and Features directly thanks to build time conditions in the same that it does for CDI beans.  Thus, the various Jakarta REST classes can be annotated with profile conditions (`@io.quarkus.arc.profile.IfBuildProfile` or `@io.quarkus.arc.profile.UnlessBuildProfile`) and/or with property conditions (`io.quarkus.arc.properties.IfBuildProperty` or `io.quarkus.arc.properties.UnlessBuildProperty`) to indicate to Quarkus at build time under which conditions these Jakarta REST classes should be included."
msgstr "O Quarkus permite a inclusão ou exclusão de recursos, fornecedores e funcionalidades Jakarta REST diretamente graças às condições de tempo de construção, tal como acontece com os beans CDI. Assim, as várias classes Jakarta REST podem ser anotadas com condições de perfil ( `@io.quarkus.arc.profile.IfBuildProfile` ou `@io.quarkus.arc.profile.UnlessBuildProfile`) e/ou com condições de propriedade ( `io.quarkus.arc.properties.IfBuildProperty` ou `io.quarkus.arc.properties.UnlessBuildProperty`) para indicar ao Quarkus, em tempo de construção, em que condições estas classes Jakarta REST devem ser incluídas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:797
#, fuzzy
msgid "In the following example, Quarkus includes the endpoint `sayHello` if and only if the build profile `app1` has been enabled."
msgstr "No exemplo seguinte, o Quarkus inclui o ponto final `sayHello` se e apenas se o perfil de construção `app1` tiver sido ativado."

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:802
#, no-wrap
msgid ""
"@IfBuildProfile(\"app1\")\n"
"public class ResourceForApp1Only {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:809
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"sayHello\")\n"
"    public String sayHello() {\n"
"        return \"hello\";\n"
"     }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:812
#, fuzzy
msgid "Please note that if a Jakarta REST Application has been detected and the method `getClasses()` and/or `getSingletons()` has/have been overridden, Quarkus will ignore the build time conditions and consider only what has been defined in the Jakarta REST Application."
msgstr "Tenha em atenção que se uma aplicação Jakarta REST tiver sido detectada e o método `getClasses()` e/ou `getSingletons()` tiver sido substituído, o Quarkus ignorará as condições de tempo de construção e considerará apenas o que foi definido na aplicação Jakarta REST."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:813
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:816
#, fuzzy
msgid "Creating JSON REST services with Quarkus is easy as it relies on proven and well known technologies."
msgstr "Criar serviços JSON REST com o Quarkus é fácil, uma vez que se baseia em tecnologias comprovadas e bem conhecidas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:818
#, fuzzy
msgid "As usual, Quarkus further simplifies things under the hood when running your application as a native executable."
msgstr "Como de costume, o Quarkus simplifica ainda mais as coisas quando executa a sua aplicação como um executável nativo."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:819
#, fuzzy
msgid "There is only one thing to remember: if you use `Response` and Quarkus can't determine the beans that are serialized, you need to annotate them with `@RegisterForReflection`."
msgstr "Há apenas um aspeto a ter em conta: se utilizar `Response` e o Quarkus não conseguir determinar os beans que são serializados, é necessário anotá-los com `@RegisterForReflection`."
