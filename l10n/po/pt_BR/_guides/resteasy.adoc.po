# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "RESTEasy Classic"
msgstr "RESTEasy Clássico"

#. type: delimited block =
#: _guides/resteasy.adoc
#, fuzzy
msgid "This guide is about https://resteasy.dev[RESTEasy Classic] which used to be the default Jakarta REST (formerly known as JAX-RS) implementation until Quarkus 2.8."
msgstr "Este guia é sobre o  link:https://resteasy.dev[RESTEasy Classic], que costumava ser a implementação padrão do Jakarta REST (anteriormente conhecido como JAX-RS) até o Quarkus 2.8."

#: _guides/resteasy.adoc
msgid ""
"It is now recommended to use RESTEasy Reactive, which supports both traditional blocking workloads and reactive workloads equally well.\n"
"For more information about RESTEasy Reactive,\n"
"please see the xref:rest-json.adoc[introductory REST JSON guide] or the xref:resteasy-reactive.adoc[RESTEasy Reactive reference documentation]."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "there is another guide if you need a xref:rest-client.adoc[REST client based on RESTEasy Classic] (including support for JSON)."
msgstr "existe outro guia se precisar de um  link:rest-client.html[cliente REST baseado no RESTEasy Classic] (incluindo suporte para JSON)."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitetura"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "The application built in this guide is quite simple: the user can add elements in a list using a form and the list is updated."
msgstr "A aplicação construída neste guia é bastante simples: o utilizador pode adicionar elementos a uma lista utilizando um formulário e a lista é actualizada."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "All the information between the browser and the server are formatted as JSON."
msgstr "Todas as informações entre o navegador e o servidor são formatadas como JSON."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Primeiro, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#: _guides/resteasy.adoc
msgid ""
"This command generates a new project importing the RESTEasy/Jakarta REST and https://github.com/FasterXML/jackson[Jackson] extensions,\n"
"and in particular adds the following dependency:"
msgstr ""

#. type: Block title
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block =
#: _guides/resteasy.adoc
#, fuzzy
msgid "To improve user experience, Quarkus registers the three Jackson https://github.com/FasterXML/jackson-modules-java8[Java 8 modules] so you don't need to do it manually."
msgstr "Para melhorar a experiência do utilizador, o Quarkus regista os três  link:https://github.com/FasterXML/jackson-modules-java8[módulos] Jackson  link:https://github.com/FasterXML/jackson-modules-java8[Java 8] para que não tenha de o fazer manualmente."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Quarkus also supports https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] so, if you prefer JSON-B over Jackson, you can create a project relying on the RESTEasy JSON-B extension instead:"
msgstr "O Quarkus também suporta  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B], pelo que, se preferir JSON-B em vez de Jackson, pode criar um projeto com base na extensão RESTEasy JSON-B:"

#: _guides/resteasy.adoc
msgid ""
"This command generates a new project importing the RESTEasy/Jakarta REST and https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] extensions,\n"
"and in particular adds the following dependency:"
msgstr ""

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Creating your first JSON REST service"
msgstr "Criar o seu primeiro serviço JSON REST"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "Neste exemplo, vamos criar uma aplicação para gerir uma lista de frutos."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "First, let's create the `Fruit` bean as follows:"
msgstr "Primeiro, vamos criar o bean `Fruit` da seguinte forma:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Nothing fancy. One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr "Nada de especial. Uma coisa importante a notar é que ter um construtor padrão é exigido pela camada de serialização JSON."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Now, create the `org.acme.rest.json.FruitResource` class as follows:"
msgstr "Agora, crie a classe `org.acme.rest.json.FruitResource` da seguinte forma:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "The implementation is pretty straightforward, and you just need to define your endpoints using the Jakarta REST annotations."
msgstr "A implementação é bastante simples e só precisa de definir os seus pontos finais utilizando as anotações Jakarta REST."

#: _guides/resteasy.adoc
msgid ""
"The `Fruit` objects will be automatically serialized/deserialized by https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] or https://github.com/FasterXML/jackson[Jackson],\n"
"depending on the extension you chose when initializing the project."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"When a JSON extension is installed such as `quarkus-resteasy-jackson` or `quarkus-resteasy-jsonb`, Quarkus will use the `application/json` media type\n"
"by default for most return values, unless the media type is explicitly set via\n"
"`@Produces` or `@Consumes` annotations (there are some exceptions for well known types, such as `String` and `File`, which default to `text/plain` and `application/octet-stream`\n"
"respectively)."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"If you don't want JSON by default you can set `quarkus.resteasy-json.default-json=false` and the default will change back to being auto-negotiated. If you set this\n"
"you will need to add `@Produces(MediaType.APPLICATION_JSON)` and `@Consumes(MediaType.APPLICATION_JSON)` to your endpoints in order to use JSON."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"If you don't rely on the JSON default, it is heavily recommended to annotate your endpoints with the `@Produces` and `@Consumes` annotations to define precisely the expected content-types.\n"
"It will allow to narrow down the number of Jakarta REST providers (which can be seen as converters) included in the native executable."
msgstr ""

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Configuring JSON support"
msgstr "Configuração do suporte JSON"

#. type: Title ====
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Jackson"
msgstr "Jackson"

#: _guides/resteasy.adoc
msgid ""
"In Quarkus, the default Jackson `ObjectMapper` obtained via CDI (and consumed by the Quarkus extensions) is configured to ignore unknown properties\n"
"(by disabling the `DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES` feature)."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"You can restore the default behavior of Jackson by setting `quarkus.jackson.fail-on-unknown-properties=true` in your `application.properties`\n"
"or on a per-class basis via `@JsonIgnoreProperties(ignoreUnknown = false)`."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"Furthermore, the `ObjectMapper` is configured to format dates and time in ISO-8601\n"
"(by disabling the `SerializationFeature.WRITE_DATES_AS_TIMESTAMPS` feature)."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"The default behaviour of Jackson can be restored by setting `quarkus.jackson.write-dates-as-timestamps=true`\n"
"in your `application.properties`. If you want to change the format for a single field, you can use the\n"
"`@JsonFormat` annotation."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"Also, Quarkus makes it very easy to configure various Jackson settings via CDI beans.\n"
"The simplest (and suggested) approach is to define a CDI bean of type `io.quarkus.jackson.ObjectMapperCustomizer`\n"
"inside of which any Jackson configuration can be applied."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "An example where a custom module needs to be registered would look like so:"
msgstr "Um exemplo em que é necessário registar um módulo personalizado seria o seguinte:"

#: _guides/resteasy.adoc
msgid ""
"Users can even provide their own `ObjectMapper` bean if they so choose.\n"
"If this is done, it is very important to manually inject and apply all `io.quarkus.jackson.ObjectMapperCustomizer` beans in the CDI producer that produces `ObjectMapper`.\n"
"Failure to do so will prevent Jackson specific customizations provided by various extensions from being applied."
msgstr ""

#. type: Title ====
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "JSON-B"
msgstr "JSON-B"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "As stated above, Quarkus provides the option of using JSON-B instead of Jackson via the use of the `quarkus-resteasy-jsonb` extension."
msgstr "Tal como referido anteriormente, o Quarkus oferece a opção de utilizar JSON-B em vez de Jackson através da utilização da extensão `quarkus-resteasy-jsonb`."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Following the same approach as described in the previous section, JSON-B can be configured using a `io.quarkus.jsonb.JsonbConfigCustomizer` bean."
msgstr "Seguindo a mesma abordagem descrita na secção anterior, o JSON-B pode ser configurado utilizando um bean `io.quarkus.jsonb.JsonbConfigCustomizer`."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "If for example a custom serializer named `FooSerializer` for type `com.example.Foo` needs to be registered with JSON-B, the addition of a bean like the following would suffice:"
msgstr "Se, por exemplo, um serializador personalizado chamado `FooSerializer` para o tipo `com.example.Foo` precisar de ser registado com JSON-B, a adição de um bean como o seguinte será suficiente:"

#: _guides/resteasy.adoc
msgid ""
"A more advanced option would be to directly provide a bean of `jakarta.json.bind.JsonbConfig` (with a `Dependent` scope) or in the extreme case to provide a bean of type `jakarta.json.bind.Jsonb` (with a `Singleton` scope).\n"
"If the latter approach is leveraged it is very important to manually inject and apply all `io.quarkus.jsonb.JsonbConfigCustomizer` beans in the CDI producer that produces `jakarta.json.bind.Jsonb`.\n"
"Failure to do so will prevent JSON-B specific customizations provided by various extensions from being applied."
msgstr ""

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "JSON Hypertext Application Language (HAL) support"
msgstr "Suporte da linguagem de aplicação de hipertexto (HAL) JSON"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "The https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL] standard is a simple format to represent web links."
msgstr "A norma  link:https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL] é um formato simples para representar ligações Web."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "To enable the HAL support, add the `quarkus-hal` extension to your project. Also, as HAL needs JSON support, you need to add either the `quarkus-resteasy-jsonb` or the `quarkus-resteasy-jackson` extension."
msgstr "Para habilitar o suporte a HAL, adicione a extensão `quarkus-hal` ao seu projeto. Além disso, como o HAL precisa de suporte a JSON, você precisa adicionar a extensão `quarkus-resteasy-jsonb` ou `quarkus-resteasy-jackson`."

#. type: Block title
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Table Context object"
msgstr "Objeto de contexto de tabela"

#. type: Table
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "GAV"
msgstr "GAV"

#. type: Table
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Usage"
msgstr "Utilização"

#. type: Table
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "`io.quarkus:quarkus-hal`"
msgstr "`io.quarkus:quarkus-hal`"

#. type: Table
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL]"
msgstr "link:https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL]"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "After adding the extensions, we can now annotate the REST resources to produce the media type `application/hal+json` (or use RestMediaType.APPLICATION_HAL_JSON). For example:"
msgstr "Depois de adicionar as extensões, podemos agora anotar os recursos REST para produzir o tipo de media `application/hal+json` (ou utilizar RestMediaType.APPLICATION_HAL_JSON). Por exemplo:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Now, the endpoints `/records` and `/records/first` will accept the media type both `json` and `hal+json` to print the records in Hal format."
msgstr "Agora, os pontos finais `/records` e `/records/first` aceitam o tipo de suporte `json` e `hal+json` para imprimir os registos em formato Hal."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "For example, if we invoke the `/records` endpoint using curl to return a list of records, the HAL format will look like as follows:"
msgstr "Por exemplo, se invocarmos o ponto de extremidade `/records` utilizando curl para devolver uma lista de registos, o formato HAL será semelhante ao seguinte:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "When we call a resource `/records/first` that returns only one instance, then the output is:"
msgstr "Quando chamamos um recurso `/records/first` que devolve apenas uma instância, o resultado é:"

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Creating a frontend"
msgstr "Criar um frontend"

#: _guides/resteasy.adoc
msgid ""
"Now let's add a simple web page to interact with our `FruitResource`.\n"
"Quarkus automatically serves static resources located under the `META-INF/resources` directory.\n"
"In the `src/main/resources/META-INF/resources` directory, add a `fruits.html` file with the content from this link:{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html] file in it."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can now interact with your REST service:"
msgstr "Pode agora interagir com o seu serviço REST:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "start Quarkus with:"
msgstr "iniciar o Quarkus com:"

#: _guides/resteasy.adoc
msgid "CLI"
msgstr ""

#: _guides/resteasy.adoc
msgid "Maven"
msgstr ""

#: _guides/resteasy.adoc
msgid "Gradle"
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "open a browser to `http://localhost:8080/fruits.html`"
msgstr "abrir um browser para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;`"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "add new fruits to the list via the form"
msgstr "adicionar novos frutos à lista através do formulário"

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Building a native executable"
msgstr "Construir um executável nativo"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can build a native executable with the usual command:"
msgstr "Pode construir um executável nativo com o comando habitual:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Running it is as simple as executing `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "Executá-lo é tão simples quanto executar `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "Pode então apontar o seu browser para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;` e utilizar a sua aplicação."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "About serialization"
msgstr "Acerca da serialização"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "JSON serialization libraries use Java reflection to get the properties of an object and serialize them."
msgstr "As bibliotecas de serialização JSON utilizam a reflexão Java para obter as propriedades de um objeto e serializá-las."

#: _guides/resteasy.adoc
msgid ""
"When using native executables with GraalVM, all classes that will be used with reflection need to be registered.\n"
"The good news is that Quarkus does that work for you most of the time.\n"
"So far, we haven't registered any class, not even `Fruit`, for reflection usage and everything is working fine."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"Quarkus performs some magic when it is capable of inferring the serialized types from the REST methods.\n"
"When you have the following REST method, Quarkus determines that `Fruit` will be serialized:"
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"Quarkus does that for you automatically by analyzing the REST methods at build time\n"
"and that's why we didn't need any reflection registration in the first part of this guide."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"Another common pattern in the Jakarta REST world is to use the `Response` object.\n"
"`Response` comes with some nice perks:"
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "you can return different entity types depending on what happens in your method (a `Legume` or an `Error` for instance);"
msgstr "pode devolver diferentes tipos de entidades, dependendo do que acontece no seu método (um `Legume` ou um `Error`, por exemplo);"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "you can set the attributes of the `Response` (the status comes to mind in the case of an error)."
msgstr "pode definir os atributos do `Response` (o estado vem à mente no caso de um erro)."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Your REST method then looks like this:"
msgstr "O seu método REST tem então o seguinte aspeto:"

#: _guides/resteasy.adoc
msgid ""
"It is not possible for Quarkus to determine at build time the type included in the `Response` as the information is not available.\n"
"In this case, Quarkus won't be able to automatically register for reflection the required classes."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "This leads us to our next section."
msgstr "Isto leva-nos à nossa próxima secção."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Using Response"
msgstr "Utilizar a resposta"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Let's create the `Legume` class which will be serialized as JSON, following the same model as for our `Fruit` class:"
msgstr "Vamos criar a classe `Legume` que será serializada como JSON, seguindo o mesmo modelo da nossa classe `Fruit`:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Now let's create a `LegumeResource` REST service with only one method which returns the list of legumes."
msgstr "Agora vamos criar um serviço `LegumeResource` REST com apenas um método que devolve a lista de leguminosas."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "This method returns a `Response` and not a list of `Legume`."
msgstr "Este método devolve um `Response` e não uma lista de `Legume`."

#: _guides/resteasy.adoc
msgid ""
"Now let's add a simple web page to display our list of legumes.\n"
"In the `src/main/resources/META-INF/resources` directory, add a `legumes.html` file with the content from this\n"
"{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/legumes.html[legumes.html] file in it."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Open a browser to http://localhost:8080/legumes.html, and you will see our list of legumes."
msgstr "Abra um browser em  http://localhost:8080/legumes.html  e verá a nossa lista de leguminosas."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "The interesting part starts when running the application as a native executable:"
msgstr "A parte interessante começa quando se executa a aplicação como um executável nativo:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "create the native executable with:"
msgstr "criar o executável nativo com:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "execute it with `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"
msgstr "executá-lo com `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "open a browser and go to http://localhost:8080/legumes.html"
msgstr "abrir um browser e ir para  http://localhost:8080/legumes.html"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "No legumes there."
msgstr "Não há leguminosas."

#: _guides/resteasy.adoc
msgid ""
"As mentioned above, the issue is that Quarkus was not able to determine the `Legume` class will require some reflection by analyzing the REST endpoints.\n"
"The JSON serialization library tries to get the list of fields of `Legume` and gets an empty list, so it does not serialize the fields' data."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"At the moment, when JSON-B or Jackson tries to get the list of fields of a class, if the class is not registered for reflection, no exception will be thrown.\n"
"GraalVM will simply return an empty list of fields."
msgstr ""

#. type: delimited block =
#: _guides/resteasy.adoc
#, fuzzy
msgid "Hopefully, this will change in the future and make the error more obvious."
msgstr "Esperemos que isto mude no futuro e que o erro seja mais óbvio."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "We can register `Legume` for reflection manually by adding the `@RegisterForReflection` annotation on our `Legume` class:"
msgstr "Podemos registar `Legume` para reflexão manualmente, adicionando a anotação `@RegisterForReflection` à nossa classe `Legume`:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "The `@RegisterForReflection` annotation instructs Quarkus to keep the class and its members during the native compilation. More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr "A anotação `@RegisterForReflection` instrui o Quarkus a manter a classe e seus membros durante a compilação nativa. Mais detalhes sobre a anotação `@RegisterForReflection` podem ser encontrados na página de  link:writing-native-applications-tips.html#registerForReflection[dicas de aplicações nativas]."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Let's do that and follow the same steps as before:"
msgstr "Vamos fazer isso e seguir os mesmos passos que antes:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "hit `Ctrl+C` to stop the application"
msgstr "prima `Ctrl+C` para parar a aplicação"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "This time, you can see our list of legumes."
msgstr "Desta vez, pode ver a nossa lista de leguminosas."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Being reactive"
msgstr "Ser reativo"

#. type: delimited block =
#: _guides/resteasy.adoc
#, fuzzy
msgid "For reactive workloads, please always use xref:resteasy-reactive.adoc[RESTEasy Reactive]."
msgstr "Para cargas de trabalho reactivas, utilize sempre o  link:resteasy-reactive.html[RESTEasy Reactive]."

#: _guides/resteasy.adoc
msgid ""
"You can return _reactive types_ to handle asynchronous processing.\n"
"Quarkus recommends the usage of https://smallrye.io/smallrye-mutiny[Mutiny] to write reactive and asynchronous code."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "To integrate Mutiny and RESTEasy, you need to add the `quarkus-resteasy-mutiny` dependency to your project:"
msgstr "Para integrar o Mutiny e o RESTEasy, é necessário adicionar a dependência `quarkus-resteasy-mutiny` ao seu projeto:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Then, your endpoint can return `Uni` or `Multi` instances:"
msgstr "Em seguida, o seu ponto de extremidade pode devolver `Uni` ou `Multi` instâncias:"

#: _guides/resteasy.adoc
msgid ""
"Use `Uni` when you have a single result.\n"
"Use `Multi` when you have multiple items that may be emitted asynchronously."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can use `Uni` and `Response` to return asynchronous HTTP responses: `Uni<Response>`."
msgstr "Pode utilizar `Uni` e `Response` para devolver respostas HTTP assíncronas: `Uni&amp;lt;Response&amp;gt;`."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "More details about Mutiny can be found in xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Mais detalhes sobre o Mutiny podem ser encontrados em  link:mutiny-primer.html[Mutiny - uma biblioteca de programação reactiva intuitiva]."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "HTTP filters and interceptors"
msgstr "Filtros e interceptores HTTP"

#: _guides/resteasy.adoc
msgid ""
"Both HTTP request and response can be intercepted by providing `ContainerRequestFilter` or `ContainerResponseFilter`\n"
"implementations respectively. These filters are suitable for processing the metadata associated with a message: HTTP\n"
"headers, query parameters, media type, and other metadata. They also have the capability to abort the request\n"
"processing, for instance when the user does not have the permissions to access the endpoint."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"Let's use `ContainerRequestFilter` to add logging capability to our service. We can do that by implementing\n"
"`ContainerRequestFilter` and annotating it with the `@Provider` annotation:"
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Now, whenever a REST method is invoked, the request will be logged into the console:"
msgstr "Agora, sempre que um método REST for invocado, o pedido será registado na consola:"

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "CORS filter"
msgstr "Filtro CORS"

#: _guides/resteasy.adoc
msgid ""
"link:https://en.wikipedia.org/wiki/Cross-origin_resource_sharing[Cross-origin resource sharing] (CORS) is a mechanism that\n"
"allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource\n"
"was served."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"Quarkus comes with a CORS filter. Read the xref:http-reference.adoc#cors-filter[HTTP Reference Documentation] to learn\n"
"how to use it."
msgstr ""

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "GZip Support"
msgstr "Suporte GZip"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Quarkus comes with GZip support (even though it is not enabled by default). The following configuration knobs allow to configure GZip support."
msgstr "O Quarkus vem com suporte para GZip (embora não esteja ativado por defeito). Os seguintes botões de configuração permitem configurar o suporte GZip."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Enable Gzip support."
msgstr "Ativar o suporte Gzip."

#: _guides/resteasy.adoc
msgid ""
"Configure the upper limit on deflated request body. This is useful to mitigate potential attacks by limiting their reach. The default value is `10M`.\n"
"This configuration option would recognize strings in this format (shown as a regular expression): `[0-9]+[KkMmGgTtPpEeZzYy]?`. If no suffix is given, assume bytes."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Once GZip support has been enabled you can use it on an endpoint by adding the `@org.jboss.resteasy.annotations.GZIP` annotation to your endpoint method."
msgstr "Assim que o suporte GZip tiver sido ativado, pode utilizá-lo num ponto final adicionando a anotação `@org.jboss.resteasy.annotations.GZIP` ao seu método de ponto final."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "There is also the `quarkus.http.enable-compression` configuration property which enables HTTP response compression globally. If enabled then a response body is compressed if the `Content-Type` HTTP header is set and the value is a compressed media type as configured via the `quarkus.http.compress-media-types` configuration property."
msgstr "Existe também a propriedade de configuração `quarkus.http.enable-compression` que ativa globalmente a compressão da resposta HTTP. Se estiver activada, um corpo de resposta é comprimido se o cabeçalho HTTP `Content-Type` estiver definido e o valor for um tipo de suporte comprimido, conforme configurado através da propriedade de configuração `quarkus.http.compress-media-types`."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Multipart Support"
msgstr "Suporte multipartes"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "RESTEasy supports multipart via the https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]."
msgstr "O RESTEasy suporta multipartes através do  link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Quarkus provides an extension called `quarkus-resteasy-multipart` to make things easier for you."
msgstr "O Quarkus fornece uma extensão chamada `quarkus-resteasy-multipart` para lhe facilitar as coisas."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "This extension slightly differs from the RESTEasy default behavior as the default charset (if none is specified in your request) is UTF-8 rather than US-ASCII."
msgstr "Esta extensão difere ligeiramente do comportamento padrão do RESTEasy, uma vez que o conjunto de caracteres padrão (se nenhum for especificado no pedido) é UTF-8 em vez de US-ASCII."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can configure this behavior with the following configuration properties:"
msgstr "Pode configurar este comportamento com as seguintes propriedades de configuração:"

#: _guides/resteasy.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Servlet compatibility"
msgstr "Compatibilidade de servlet"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "In Quarkus, RESTEasy can either run directly on top of the Vert.x HTTP server, or on top of Undertow if you have any servlet dependency."
msgstr "No Quarkus, o RESTEasy pode ser executado diretamente sobre o servidor HTTP Vert.x ou sobre o Undertow, caso exista alguma dependência de servlet."

#: _guides/resteasy.adoc
msgid ""
"As a result, certain classes, such as `HttpServletRequest` are not always available for injection. Most use-cases for this particular\n"
"class are covered by Jakarta REST equivalents, except for getting the remote client's IP. RESTEasy comes with a replacement API which you can inject:\n"
"https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html[`HttpRequest`], which has the methods\n"
"https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteAddress--[`getRemoteAddress()`]\n"
"and https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteHost--[`getRemoteHost()`]\n"
"to solve this problem."
msgstr ""

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "RESTEasy and REST Client interactions"
msgstr "Interacções entre o RESTEasy e o cliente REST"

#: _guides/resteasy.adoc
msgid ""
"In Quarkus, the RESTEasy extension and xref:rest-client.adoc[the REST Client extension] share the same infrastructure.\n"
"One important consequence of this consideration is that they share the same list of providers (in the Jakarta REST meaning of the word)."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"For instance, if you declare a `WriterInterceptor`, it will by default intercept both the servers calls and the client calls,\n"
"which might not be the desired behavior."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "However, you can change this default behavior and constrain a provider to:"
msgstr "No entanto, é possível alterar esse comportamento padrão e restringir um provedor a:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "only consider *server* calls by adding the `@ConstrainedTo(RuntimeType.SERVER)` annotation to your provider;"
msgstr "considerar apenas as chamadas *do servidor*, adicionando a anotação `@ConstrainedTo(RuntimeType.SERVER)` ao seu fornecedor;"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "only consider *client* calls by adding the `@ConstrainedTo(RuntimeType.CLIENT)` annotation to your provider."
msgstr "considerar apenas chamadas de *clientes*, adicionando a anotação `@ConstrainedTo(RuntimeType.CLIENT)` ao seu fornecedor."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "What's Different from Jakarta EE Development"
msgstr "O que é diferente do desenvolvimento do Jakarta EE"

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "No Need for `Application` Class"
msgstr "Não há necessidade de `Application` Class"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Configuration via an application-supplied subclass of `Application` is supported, but not required."
msgstr "A configuração através de uma subclasse de `Application` fornecida pela aplicação é suportada, mas não é obrigatória."

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Only a single Jakarta REST application"
msgstr "Apenas uma única aplicação Jakarta REST"

#: _guides/resteasy.adoc
msgid ""
"In contrast to Jakarta REST (and RESTeasy) running in a standard servlet-container, Quarkus only supports the deployment of a single Jakarta REST application.\n"
"If multiple Jakarta REST `Application` classes are defined, the build will fail with the message `Multiple classes have been annotated with @ApplicationPath which is currently not supported`."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "If multiple Jakarta REST applications are defined, the property `quarkus.resteasy.ignore-application-classes=true` can be used to ignore all explicit `Application` classes. This makes all resource-classes available via the application-path as defined by `quarkus.resteasy.path` (default: `/`)."
msgstr "Se forem definidas várias aplicações Jakarta REST, a propriedade `quarkus.resteasy.ignore-application-classes=true` pode ser utilizada para ignorar todas as classes `Application` explícitas. Isto torna todas as classes de recursos disponíveis através do caminho da aplicação, tal como definido por `quarkus.resteasy.path` (predefinição: `/`)."

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Support limitations of Jakarta REST application"
msgstr "Limitações de suporte da aplicação Jakarta REST"

#: _guides/resteasy.adoc
msgid ""
"The RESTEasy extension doesn't support the method `getProperties()` of the class `jakarta.ws.rs.core.Application`. Moreover, it only relies on the methods `getClasses()` and `getSingletons()` to filter out the annotated resource, provider and feature classes.\n"
"It doesn't filter out the built-in resource, provider and feature classes and also the resource, provider and feature classes registered by the other extensions.\n"
"Finally, the objects returned by the method `getSingletons()` are ignored, only the classes are taken into account to filter out the resource, provider and feature classes, in other words the method `getSingletons()` is actually managed the same way as `getClasses()`."
msgstr ""

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Lifecycle of Resources"
msgstr "Ciclo de vida dos recursos"

#: _guides/resteasy.adoc
msgid ""
"In Quarkus all Jakarta REST resources are treated as CDI beans.\n"
"It's possible to inject other beans via `@Inject`, bind interceptors using bindings such as `@Transactional`, define `@PostConstruct` callbacks, etc."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"If there is no scope annotation declared on the resource class then the scope is defaulted.\n"
"The default scope can be controlled through the `quarkus.resteasy.singleton-resources` property.\n"
"If set to `true` (default) then a *single instance* of a resource class is created to service all requests (as defined by `@jakarta.inject.Singleton`).\n"
"If set to `false` then a *new instance* of the resource class is created per each request.\n"
"An explicit CDI scope annotation (`@RequestScoped`, `@ApplicationScoped`, etc.) always overrides the default behavior and specifies the lifecycle of resource instances."
msgstr ""

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Include/Exclude Jakarta REST classes with build time conditions"
msgstr "Incluir/Excluir classes Jakarta REST com condições de tempo de compilação"

#: _guides/resteasy.adoc
msgid ""
"Quarkus enables the inclusion or exclusion of Jakarta REST Resources, Providers and Features directly thanks to build time conditions in the same that it does for CDI beans.\n"
"Thus, the various Jakarta REST classes can be annotated with profile conditions (`@io.quarkus.arc.profile.IfBuildProfile` or `@io.quarkus.arc.profile.UnlessBuildProfile`) and/or with property conditions (`io.quarkus.arc.properties.IfBuildProperty` or `io.quarkus.arc.properties.UnlessBuildProperty`) to indicate to Quarkus at build time under which conditions these Jakarta REST classes should be included."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "In the following example, Quarkus includes the endpoint `sayHello` if and only if the build profile `app1` has been enabled."
msgstr "No exemplo seguinte, o Quarkus inclui o ponto final `sayHello` se e apenas se o perfil de construção `app1` tiver sido ativado."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Please note that if a Jakarta REST Application has been detected and the method `getClasses()` and/or `getSingletons()` has/have been overridden, Quarkus will ignore the build time conditions and consider only what has been defined in the Jakarta REST Application."
msgstr "Tenha em atenção que se uma aplicação Jakarta REST tiver sido detectada e o método `getClasses()` e/ou `getSingletons()` tiver sido substituído, o Quarkus ignorará as condições de tempo de construção e considerará apenas o que foi definido na aplicação Jakarta REST."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Creating JSON REST services with Quarkus is easy as it relies on proven and well known technologies."
msgstr "Criar serviços JSON REST com o Quarkus é fácil, uma vez que se baseia em tecnologias comprovadas e bem conhecidas."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "As usual, Quarkus further simplifies things under the hood when running your application as a native executable."
msgstr "Como de costume, o Quarkus simplifica ainda mais as coisas quando executa a sua aplicação como um executável nativo."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "There is only one thing to remember: if you use `Response` and Quarkus can't determine the beans that are serialized, you need to annotate them with `@RegisterForReflection`."
msgstr "Há apenas um aspeto a ter em conta: se utilizar `Response` e o Quarkus não conseguir determinar os beans que são serializados, é necessário anotá-los com `@RegisterForReflection`."
