# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/reactive-sql-clients.adoc:6
#, fuzzy, no-wrap
msgid "Reactive SQL Clients"
msgstr "Clientes SQL reactivos"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:14
#, fuzzy
msgid "The Reactive SQL Clients have a straightforward API focusing on scalability and low-overhead.  Currently, the following database servers are supported:"
msgstr "Os clientes SQL reactivos têm uma API simples, centrada na escalabilidade e no baixo custo indireto. Atualmente, são suportados os seguintes servidores de bases de dados:"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:16
#: upstream/_guides/reactive-sql-clients.adoc:476
#: upstream/_guides/reactive-sql-clients.adoc:754
#: upstream/_guides/reactive-sql-clients.adoc:855
#, fuzzy, no-wrap
msgid "IBM Db2"
msgstr "IBM Db2"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:17
#: upstream/_guides/reactive-sql-clients.adoc:496
#: upstream/_guides/reactive-sql-clients.adoc:660
#: upstream/_guides/reactive-sql-clients.adoc:766
#: upstream/_guides/reactive-sql-clients.adoc:871
#, fuzzy, no-wrap
msgid "PostgreSQL"
msgstr "PostgreSQL"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:18
#: upstream/_guides/reactive-sql-clients.adoc:481
#: upstream/_guides/reactive-sql-clients.adoc:678
#: upstream/_guides/reactive-sql-clients.adoc:757
#: upstream/_guides/reactive-sql-clients.adoc:859
#, fuzzy, no-wrap
msgid "MariaDB/MySQL"
msgstr "MariaDB/MySQL"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:19
#: upstream/_guides/reactive-sql-clients.adoc:486
#: upstream/_guides/reactive-sql-clients.adoc:760
#: upstream/_guides/reactive-sql-clients.adoc:863
#, fuzzy, no-wrap
msgid "Microsoft SQL Server"
msgstr "Microsoft SQL Server"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:20
#: upstream/_guides/reactive-sql-clients.adoc:491
#: upstream/_guides/reactive-sql-clients.adoc:763
#: upstream/_guides/reactive-sql-clients.adoc:867
#, fuzzy, no-wrap
msgid "Oracle"
msgstr "Oráculo"

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:24
#, fuzzy
msgid "The Reactive SQL Client for Oracle is considered _tech preview_."
msgstr "O Cliente SQL Reativo para Oracle é considerado uma _pré-visualização técnica_."

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:28
#, fuzzy
msgid "In _tech preview_ mode, early feedback is requested to mature the idea.  There is no guarantee of stability in the platform until the solution matures.  Feedback is welcome on our https://groups.google.com/d/forum/quarkus-dev[mailing list] or as issues in our https://github.com/quarkusio/quarkus/issues[GitHub issue tracker]."
msgstr "No modo de _pré-visualização técnica_, são solicitados comentários iniciais para amadurecer a ideia. Não há garantia de estabilidade na plataforma até que a solução amadureça. Os comentários são bem-vindos na nossa  link:https://groups.google.com/d/forum/quarkus-dev[lista de correio eletrónico] ou como problemas no nosso  link:https://github.com/quarkusio/quarkus/issues[rastreador de problemas do GitHub]."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:31
#, fuzzy
msgid "In this guide, you will learn how to implement a simple CRUD application exposing data stored in *PostgreSQL* over a RESTful API."
msgstr "Neste guia, você aprenderá como implementar um aplicativo CRUD simples que expõe dados armazenados no *PostgreSQL* por meio de uma API RESTful."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:33
#, fuzzy
msgid "Extension and connection pool class names for each client can be found at the bottom of this document."
msgstr "Os nomes das classes de extensão e de pool de ligações para cada cliente podem ser encontrados no final deste documento."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:35
#, fuzzy
msgid "If you are not familiar with the Quarkus Vert.x extension, consider reading the xref:vertx.adoc[Using Eclipse Vert.x] guide first."
msgstr "Se não estiver familiarizado com a extensão Quarkus Vert.x, considere ler primeiro o guia  link:vertx.html[Utilizar o Eclipse Vert.x]."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:37
#, fuzzy
msgid "The application shall manage fruit entities:"
msgstr "A aplicação gere as entidades frutícolas:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:41
#, no-wrap
msgid "public class Fruit {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:43
#, no-wrap
msgid "    public Long id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:45
#, no-wrap
msgid "    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:48
#, no-wrap
msgid ""
"    public Fruit() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:52
#, no-wrap
msgid ""
"    public Fruit(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:58
#, no-wrap
msgid ""
"    public Fruit(Long id, String name) {\n"
"        this.id = id;\n"
"        this.name = name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:63
#, fuzzy
msgid "Do you need a ready-to-use PostgreSQL server to try out the examples?"
msgstr "Precisa de um servidor PostgreSQL pronto a usar para experimentar os exemplos?"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:67
#, no-wrap
msgid "docker run -it --rm=true --name quarkus_test -e POSTGRES_USER=quarkus_test -e POSTGRES_PASSWORD=quarkus_test -e POSTGRES_DB=quarkus_test -p 5432:5432 postgres:14.1\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:70
#, fuzzy, no-wrap
msgid "Installing"
msgstr "Instalação"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:72
#, fuzzy, no-wrap
msgid "Reactive PostgreSQL Client extension"
msgstr "Extensão do cliente PostgreSQL reativo"

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:76
#, fuzzy
msgid "First, make sure your project has the `quarkus-reactive-pg-client` extension enabled.  If you are creating a new project, use the following command:"
msgstr "Primeiro, certifique-se de que o seu projeto tem a extensão `quarkus-reactive-pg-client` activada. Se estiver a criar um novo projeto, utilize o seguinte comando:"

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:82
#, fuzzy
msgid "If you have an already created project, the `reactive-pg-client` extension can be added to an existing Quarkus project with the `add-extension` command:"
msgstr "Se tiver um projeto já criado, a extensão `reactive-pg-client` pode ser adicionada a um projeto Quarkus existente com o comando `add-extension`:"

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:87
#, fuzzy
msgid "Otherwise, you can manually add the dependency to your build file:"
msgstr "Caso contrário, pode adicionar manualmente a dependência ao seu ficheiro de compilação:"

#. type: Block title
#: upstream/_guides/reactive-sql-clients.adoc:89
#: upstream/_guides/reactive-sql-clients.adoc:124
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:95
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-reactive-pg-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/reactive-sql-clients.adoc:98
#: upstream/_guides/reactive-sql-clients.adoc:133
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:101
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-reactive-pg-client\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:103
#, fuzzy, no-wrap
msgid "Mutiny"
msgstr "Motim"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:106
#, fuzzy
msgid "RESTEasy Reactive includes supports for Mutiny types (e.g. `Uni` and `Multi`) out of the box."
msgstr "O RESTEasy Reactive inclui suporte para os tipos de Mutiny (por exemplo, `Uni` e `Multi`) de imediato."

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:111
#, fuzzy
msgid "In this guide, we will use the Mutiny API of the Reactive PostgreSQL Client.  If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Neste guia, usaremos a API Mutiny do Cliente Reativo PostgreSQL. Se não estiver familiarizado com o Mutiny, consulte  link:mutiny-primer.html[Mutiny - uma biblioteca de programação reactiva intuitiva]."

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:113
#, fuzzy, no-wrap
msgid "JSON Binding"
msgstr "Ligação JSON"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:117
#, fuzzy
msgid "We will expose `Fruit` instances over HTTP in the JSON format.  Consequently, you also need to add the `quarkus-resteasy-reactive-jackson` extension:"
msgstr "Iremos expor as instâncias de `Fruit` através de HTTP no formato JSON. Por conseguinte, também é necessário adicionar a extensão `quarkus-resteasy-reactive-jackson`:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:122
#, fuzzy
msgid "If you prefer not to use the command line, manually add the dependency to your build file:"
msgstr "Se preferir não utilizar a linha de comandos, adicione manualmente a dependência ao seu ficheiro de compilação:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:130
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:136
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-reactive-jackson\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:139
#, fuzzy
msgid "Of course, this is only a requirement for this guide, not any application using the Reactive PostgreSQL Client."
msgstr "Claro, este é apenas um requisito para este guia, não para qualquer aplicação que utilize o Cliente Reativo PostgreSQL."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:140
#, fuzzy, no-wrap
msgid "Configuring"
msgstr "Configuração"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:143
#, fuzzy
msgid "The Reactive PostgreSQL Client can be configured with standard Quarkus datasource properties and a reactive URL:"
msgstr "O Cliente PostgreSQL Reativo pode ser configurado com as propriedades padrão da fonte de dados Quarkus e um URL reativo:"

#. type: Block title
#: upstream/_guides/reactive-sql-clients.adoc:145
#, fuzzy, no-wrap
msgid "src/main/resources/application.properties"
msgstr "src/main/resources/application.properties"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:151
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus_test\n"
"quarkus.datasource.password=quarkus_test\n"
"quarkus.datasource.reactive.url=postgresql://localhost:5432/quarkus_test\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:154
#, fuzzy
msgid "With that you may create your `FruitResource` skeleton and `@Inject` a `io.vertx.mutiny.pgclient.PgPool` instance:"
msgstr "Com isso, pode criar o seu esqueleto `FruitResource` e `@Inject` uma instância `io.vertx.mutiny.pgclient.PgPool`:"

#. type: Block title
#: upstream/_guides/reactive-sql-clients.adoc:156
#: upstream/_guides/reactive-sql-clients.adoc:175
#: upstream/_guides/reactive-sql-clients.adoc:264
#: upstream/_guides/reactive-sql-clients.adoc:314
#: upstream/_guides/reactive-sql-clients.adoc:341
#: upstream/_guides/reactive-sql-clients.adoc:373
#, fuzzy, no-wrap
msgid "src/main/java/org/acme/vertx/FruitResource.java"
msgstr "src/main/java/org/acme/vertx/FruitResource.java"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:160
#, no-wrap
msgid ""
"@Path(\"fruits\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:164
#, no-wrap
msgid ""
"    @Inject\n"
"    io.vertx.mutiny.pgclient.PgPool client;\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:166
#, fuzzy, no-wrap
msgid "Database schema and seed data"
msgstr "Esquema da base de dados e dados iniciais"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:170
#, fuzzy
msgid "Before we implement the REST endpoint and data management code, we need to set up the database schema.  It would also be convenient to have some data inserted up-front."
msgstr "Antes de implementarmos o ponto de extremidade REST e o código de gestão de dados, precisamos de definir o esquema da base de dados. Também seria conveniente ter alguns dados inseridos antecipadamente."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:173
#, fuzzy
msgid "For production, we would recommend to use something like the xref:flyway.adoc[Flyway database migration tool].  But for development we can simply drop and create the tables on startup, and then insert a few fruits."
msgstr "Para produção, recomendamos a utilização de algo como a  link:flyway.html[ferramenta de migração de bases de dados Flyway]. Mas, para o desenvolvimento, podemos simplesmente eliminar e criar as tabelas no arranque e, em seguida, inserir alguns frutos."

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:180
#, no-wrap
msgid ""
"@Inject\n"
"@ConfigProperty(name = \"myapp.schema.create\", defaultValue = \"true\") // <1>\n"
"boolean schemaCreate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:186
#, no-wrap
msgid ""
"void config(@Observes StartupEvent ev) {\n"
"    if (schemaCreate) {\n"
"        initdb();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:190
#, no-wrap
msgid ""
"private void initdb() {\n"
"    // TODO\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:193
#, fuzzy
msgid "You may override the default value of the `myapp.schema.create` property in the `application.properties` file."
msgstr "Pode substituir o valor predefinido da propriedade `myapp.schema.create` no ficheiro `application.properties`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:197
#, fuzzy
msgid "Almost ready! To initialize the DB in development mode, we will use the client simple `query` method.  It returns a `Uni` and thus can be composed to execute queries sequentially:"
msgstr "Quase pronto! Para inicializar o banco de dados no modo de desenvolvimento, usaremos o método simples do cliente `query`. Ele retorna um `Uni` e, portanto, pode ser composto para executar consultas sequencialmente:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:206
#, no-wrap
msgid ""
"client.query(\"DROP TABLE IF EXISTS fruits\").execute()\n"
"    .flatMap(r -> client.query(\"CREATE TABLE fruits (id SERIAL PRIMARY KEY, name TEXT NOT NULL)\").execute())\n"
"    .flatMap(r -> client.query(\"INSERT INTO fruits (name) VALUES ('Orange')\").execute())\n"
"    .flatMap(r -> client.query(\"INSERT INTO fruits (name) VALUES ('Pear')\").execute())\n"
"    .flatMap(r -> client.query(\"INSERT INTO fruits (name) VALUES ('Apple')\").execute())\n"
"    .await().indefinitely();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:211
#, fuzzy
msgid "Wondering why we need block until the latest query is completed? This code is part of a `@PostConstruct` method and Quarkus invokes it synchronously.  As a consequence, returning prematurely could lead to serving requests while the database is not ready yet."
msgstr "Porque é que precisamos de bloquear até que a última consulta esteja concluída? Este código faz parte de um método `@PostConstruct` e o Quarkus invoca-o de forma síncrona. Como consequência, o regresso prematuro pode levar a que sejam servidos pedidos enquanto a base de dados ainda não está pronta."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:215
#, fuzzy
msgid "That's it! So far we have seen how to configure a pooled client and execute simple queries.  We are now ready to develop the data management code and implement our RESTful endpoint."
msgstr "É isso aí! Até agora, vimos como configurar um cliente em pool e executar consultas simples. Agora estamos prontos para desenvolver o código de gerenciamento de dados e implementar nosso ponto de extremidade RESTful."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:216
#, fuzzy, no-wrap
msgid "Using"
msgstr "Utilizar"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:218
#, fuzzy, no-wrap
msgid "Query results traversal"
msgstr "Percurso dos resultados da consulta"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:222
#, fuzzy
msgid "In development mode, the database is set up with a few rows in the `fruits` table.  To retrieve all the data, we will use the `query` method again:"
msgstr "No modo de desenvolvimento, a base de dados está configurada com algumas linhas na tabela `fruits`. Para obter todos os dados, utilizaremos novamente o método `query`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:226
#, no-wrap
msgid "Uni<RowSet<Row>> rowSet = client.query(\"SELECT id, name FROM fruits ORDER BY name ASC\").execute();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:230
#, fuzzy
msgid "When the operation completes, we will get a `RowSet` that has all the rows buffered in memory.  A `RowSet` is an `java.lang.Iterable<Row>` and thus can be converted to a `Multi`:"
msgstr "Quando a operação estiver concluída, obteremos um `RowSet` que tem todas as linhas armazenadas em memória. Um `RowSet` é um `java.lang.Iterable&amp;lt;Row&amp;gt;` e, portanto, pode ser convertido num `Multi`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:236
#, no-wrap
msgid ""
"Multi<Fruit> fruits = rowSet\n"
"  .onItem().transformToMulti(set -> Multi.createFrom().iterable(set))\n"
"  .onItem().transform(Fruit::from);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:240
#, fuzzy
msgid "The `Fruit#from` method converts a `Row` instance to a `Fruit` instance.  It is extracted as a convenience for the implementation of the other data management methods:"
msgstr "O método `Fruit#from` converte uma instância `Row` numa instância `Fruit`. É extraído como uma conveniência para a implementação dos outros métodos de gestão de dados:"

#. type: Block title
#: upstream/_guides/reactive-sql-clients.adoc:242
#: upstream/_guides/reactive-sql-clients.adoc:252
#: upstream/_guides/reactive-sql-clients.adoc:299
#: upstream/_guides/reactive-sql-clients.adoc:330
#: upstream/_guides/reactive-sql-clients.adoc:361
#, fuzzy, no-wrap
msgid "src/main/java/org/acme/vertx/Fruit.java"
msgstr "src/main/java/org/acme/vertx/Fruit.java"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:247
#, no-wrap
msgid ""
"private static Fruit from(Row row) {\n"
"    return new Fruit(row.getLong(\"id\"), row.getString(\"name\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:250
#, fuzzy
msgid "Putting it all together, the `Fruit.findAll` method looks like:"
msgstr "Juntando tudo, o método `Fruit.findAll` tem o seguinte aspeto:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:259
#, no-wrap
msgid ""
"public static Multi<Fruit> findAll(PgPool client) {\n"
"    return client.query(\"SELECT id, name FROM fruits ORDER BY name ASC\").execute()\n"
"            .onItem().transformToMulti(set -> Multi.createFrom().iterable(set))\n"
"            .onItem().transform(Fruit::from);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:262
#, fuzzy
msgid "And the endpoint to get all fruits from the backend:"
msgstr "E o ponto final para obter todos os frutos do backend:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:270
#, no-wrap
msgid ""
"@GET\n"
"public Multi<Fruit> get() {\n"
"    return Fruit.findAll(client);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:273
#, fuzzy
msgid "Now start Quarkus in dev mode with:"
msgstr "Agora inicie o Quarkus no modo de desenvolvimento com:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:277
#, fuzzy
msgid "Lastly, open your browser and navigate to http://localhost:8080/fruits, you should see:"
msgstr "Por fim, abra o seu browser e navegue até  http://localhost:8080/fruits . Deverá ver:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:281
#, no-wrap
msgid "[{\"id\":3,\"name\":\"Apple\"},{\"id\":1,\"name\":\"Orange\"},{\"id\":2,\"name\":\"Pear\"}]\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:283
#, fuzzy, no-wrap
msgid "Prepared queries"
msgstr "Consultas preparadas"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:286
#, fuzzy
msgid "The Reactive PostgreSQL Client can also prepare queries and take parameters that are replaced in the SQL statement at execution time:"
msgstr "O Cliente Reativo PostgreSQL também pode preparar consultas e receber parâmetros que são substituídos na instrução SQL no momento da execução:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:290
#, no-wrap
msgid "client.preparedQuery(\"SELECT id, name FROM fruits WHERE id = $1\").execute(Tuple.of(id))\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:294
#, fuzzy
msgid "For PostgreSQL, the SQL string can refer to parameters by position, using `$1`, `$2`, ...etc.  Please refer to the xref:reactive-sql-clients-details[Database Clients details] section for other databases."
msgstr "Para PostgreSQL, a cadeia SQL pode referir-se a parâmetros por posição, utilizando `$1`, `$2`, ...etc. Para outras bases de dados, consulte a secção  link:#reactive-sql-clients-details[Detalhes dos clientes de bases de] dados."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:297
#, fuzzy
msgid "Similar to the simple `query` method, `preparedQuery` returns an instance of `PreparedQuery<RowSet<Row>>`.  Equipped with this tooling, we are able to safely use an `id` provided by the user to get the details of a particular fruit:"
msgstr "À semelhança do método simples `query`, `preparedQuery` devolve uma instância de `PreparedQuery&amp;lt;RowSet&amp;lt;Row&amp;gt;&amp;gt;`. Equipados com estas ferramentas, podemos utilizar com segurança um `id` fornecido pelo utilizador para obter os detalhes de um determinado fruto:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:306
#, no-wrap
msgid ""
"public static Uni<Fruit> findById(PgPool client, Long id) {\n"
"    return client.preparedQuery(\"SELECT id, name FROM fruits WHERE id = $1\").execute(Tuple.of(id)) // <1>\n"
"            .onItem().transform(RowSet::iterator) // <2>\n"
"            .onItem().transform(iterator -> iterator.hasNext() ? from(iterator.next()) : null); // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:308
#, fuzzy
msgid "Create a `Tuple` to hold the prepared query parameters."
msgstr "Criar um `Tuple` para guardar os parâmetros da consulta preparada."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:309
#, fuzzy
msgid "Get an `Iterator` for the `RowSet` result."
msgstr "Obter um `Iterator` para o resultado `RowSet`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:310
#, fuzzy
msgid "Create a `Fruit` instance from the `Row` if an entity was found."
msgstr "Criar uma instância `Fruit` a partir de `Row` se for encontrada uma entidade."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:312
#, fuzzy
msgid "And in the Jakarta REST resource:"
msgstr "E no recurso Jakarta REST:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:323
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"{id}\")\n"
"public Uni<Response> getSingle(Long id) {\n"
"    return Fruit.findById(client, id)\n"
"            .onItem().transform(fruit -> fruit != null ? Response.ok(fruit) : Response.status(Status.NOT_FOUND)) // <1>\n"
"            .onItem().transform(ResponseBuilder::build); // <2>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:325
#, fuzzy
msgid "Prepare a Jakarta REST response with either the `Fruit` instance if found or the `404` status code."
msgstr "Preparar uma resposta Jakarta REST com a instância `Fruit`, se encontrada, ou com o código de estado `404`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:326
#, fuzzy
msgid "Build and send the response."
msgstr "Construir e enviar a resposta."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:328
#, fuzzy
msgid "The same logic applies when saving a `Fruit`:"
msgstr "A mesma lógica aplica-se ao guardar um `Fruit`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:336
#, no-wrap
msgid ""
"public Uni<Long> save(PgPool client) {\n"
"    return client.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING id\").execute(Tuple.of(name))\n"
"            .onItem().transform(pgRowSet -> pgRowSet.iterator().next().getLong(\"id\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:339
#, fuzzy
msgid "And in the web resource we handle the `POST` request:"
msgstr "E no recurso Web tratamos do pedido `POST`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:349
#, no-wrap
msgid ""
"@POST\n"
"public Uni<Response> create(Fruit fruit) {\n"
"    return fruit.save(client)\n"
"            .onItem().transform(id -> URI.create(\"/fruits/\" + id))\n"
"            .onItem().transform(uri -> Response.created(uri).build());\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:351
#, fuzzy, no-wrap
msgid "Result metadata"
msgstr "Metadados do resultado"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:354
#, fuzzy
msgid "A `RowSet` does not only hold your data in memory, it also gives you some information about the data itself, such as:"
msgstr "Um `RowSet` não só guarda os seus dados na memória, como também lhe dá algumas informações sobre os próprios dados, como por exemplo"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:356
#, fuzzy
msgid "the number of rows affected by the query (inserted/deleted/updated/retrieved depending on the query type),"
msgstr "o número de linhas afectadas pela consulta (inseridas/eliminadas/actualizadas/recuperadas, consoante o tipo de consulta),"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:357
#, fuzzy
msgid "the column names."
msgstr "os nomes das colunas."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:359
#, fuzzy
msgid "Let's use this to support removal of fruits in the database:"
msgstr "Vamos utilizar isto para apoiar a remoção de frutos na base de dados:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:367
#, no-wrap
msgid ""
"public static Uni<Boolean> delete(PgPool client, Long id) {\n"
"    return client.preparedQuery(\"DELETE FROM fruits WHERE id = $1\").execute(Tuple.of(id))\n"
"            .onItem().transform(pgRowSet -> pgRowSet.rowCount() == 1); // <1>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:369
#, fuzzy
msgid "Inspect metadata to determine if a fruit has been actually deleted."
msgstr "Inspecciona os metadados para determinar se um fruto foi realmente eliminado."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:371
#, fuzzy
msgid "And to handle the HTTP `DELETE` method in the web resource:"
msgstr "E para tratar o método HTTP `DELETE` no recurso Web:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:382
#, no-wrap
msgid ""
"@DELETE\n"
"@Path(\"{id}\")\n"
"public Uni<Response> delete(Long id) {\n"
"    return Fruit.delete(client, id)\n"
"            .onItem().transform(deleted -> deleted ? Status.NO_CONTENT : Status.NOT_FOUND)\n"
"            .onItem().transform(status -> Response.status(status).build());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:386
#, fuzzy
msgid "With `GET`, `POST` and `DELETE` methods implemented, we may now create a minimal web page to try the RESTful application out.  We will use https://jquery.com/[jQuery] to simplify interactions with the backend:"
msgstr "Com os métodos `GET`, `POST` e `DELETE` implementados, podemos agora criar uma página Web mínima para experimentar a aplicação RESTful. Utilizaremos  link:https://jquery.com/[jQuery] para simplificar as interacções com o backend:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:399
#, no-wrap
msgid ""
"<!doctype html>\n"
"<html>\n"
"<head>\n"
"    <meta charset=\"utf-8\"/>\n"
"    <title>Reactive PostgreSQL Client - Quarkus</title>\n"
"    <script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n"
"            integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\" crossorigin=\"anonymous\"></script>\n"
"    <script type=\"application/javascript\" src=\"fruits.js\"></script>\n"
"</head>\n"
"<body>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:401
#, no-wrap
msgid "<h1>Fruits API Testing</h1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:404
#, no-wrap
msgid ""
"<h2>All fruits</h2>\n"
"<div id=\"all-fruits\"></div>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:409
#, no-wrap
msgid ""
"<h2>Create Fruit</h2>\n"
"<input id=\"fruit-name\" type=\"text\">\n"
"<button id=\"create-fruit-button\" type=\"button\">Create</button>\n"
"<div id=\"create-fruit\"></div>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:412
#, no-wrap
msgid ""
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:415
#, fuzzy
msgid "In the Javascript code, we need a function to refresh the list of fruits when:"
msgstr "No código Javascript, precisamos de uma função para atualizar a lista de frutos quando:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:417
#, fuzzy
msgid "the page is loaded, or"
msgstr "a página é carregada, ou"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:418
#, fuzzy
msgid "a fruit is added, or"
msgstr "é adicionado um fruto, ou"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:419
#, fuzzy
msgid "a fruit is deleted."
msgstr "um fruto é eliminado."

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:444
#, no-wrap
msgid ""
"function refresh() {\n"
"    $.get('/fruits', function (fruits) {\n"
"        var list = '';\n"
"        (fruits || []).forEach(function (fruit) { // <1>\n"
"            list = list\n"
"                + '<tr>'\n"
"                + '<td>' + fruit.id + '</td>'\n"
"                + '<td>' + fruit.name + '</td>'\n"
"                + '<td><a href=\"#\" onclick=\"deleteFruit(' + fruit.id + ')\">Delete</a></td>'\n"
"                + '</tr>'\n"
"        });\n"
"        if (list.length > 0) {\n"
"            list = ''\n"
"                + '<table><thead><th>Id</th><th>Name</th><th></th></thead>'\n"
"                + list\n"
"                + '</table>';\n"
"        } else {\n"
"            list = \"No fruits in database\"\n"
"        }\n"
"        $('#all-fruits').html(list);\n"
"    });\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:448
#, no-wrap
msgid ""
"function deleteFruit(id) {\n"
"    $.ajax('/fruits/' + id, {method: 'DELETE'}).then(refresh);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:450
#, no-wrap
msgid "$(document).ready(function () {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:459
#, no-wrap
msgid ""
"    $('#create-fruit-button').click(function () {\n"
"        var fruitName = $('#fruit-name').val();\n"
"        $.post({\n"
"            url: '/fruits',\n"
"            contentType: 'application/json',\n"
"            data: JSON.stringify({name: fruitName})\n"
"        }).then(refresh);\n"
"    });\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:462
#, no-wrap
msgid ""
"    refresh();\n"
"});\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:464
#, fuzzy
msgid "The `fruits` parameter is not defined when the database is empty."
msgstr "O parâmetro `fruits` não é definido quando a base de dados está vazia."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:467
#, fuzzy
msgid "All done! Navigate to http://localhost:8080/fruits.html and read/create/delete some fruits."
msgstr "Já está! Navegue até  http://localhost:8080/fruits.html  e leia/crie/elimine alguns frutos."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:469
#, fuzzy, no-wrap
msgid "Database Clients details"
msgstr "Detalhes dos clientes da base de dados"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:473
#: upstream/_guides/reactive-sql-clients.adoc:751
#, fuzzy, no-wrap
msgid "Database"
msgstr "Base de dados"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:473
#, fuzzy, no-wrap
msgid "Extension name"
msgstr "Nome da extensão"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:473
#, fuzzy, no-wrap
msgid "Pool class name"
msgstr "Nome da classe da piscina"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:475
#, fuzzy, no-wrap
msgid "Placeholders"
msgstr "Marcadores de lugar"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:477
#, fuzzy, no-wrap
msgid "`quarkus-reactive-db2-client`"
msgstr "`quarkus-reactive-db2-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:478
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.db2client.DB2Pool`"
msgstr "`io.vertx.mutiny.db2client.DB2Pool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:480
#: upstream/_guides/reactive-sql-clients.adoc:485
#: upstream/_guides/reactive-sql-clients.adoc:495
#, fuzzy, no-wrap
msgid "`?`"
msgstr "`?`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:482
#, fuzzy, no-wrap
msgid "`quarkus-reactive-mysql-client`"
msgstr "`quarkus-reactive-mysql-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:483
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.mysqlclient.MySQLPool`"
msgstr "`io.vertx.mutiny.mysqlclient.MySQLPool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:487
#, fuzzy, no-wrap
msgid "`quarkus-reactive-mssql-client`"
msgstr "`quarkus-reactive-mssql-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:488
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.mssqlclient.MSSQLPool`"
msgstr "`io.vertx.mutiny.mssqlclient.MSSQLPool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:490
#, fuzzy, no-wrap
msgid "`@p1`, `@p2`, etc."
msgstr "`@p1`, `@p2`, etc."

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:492
#, fuzzy, no-wrap
msgid "`quarkus-reactive-oracle-client`"
msgstr "`quarkus-reactive-oracle-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:493
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.oracleclient.OraclePool`"
msgstr "`io.vertx.mutiny.oracleclient.OraclePool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:497
#, fuzzy, no-wrap
msgid "`quarkus-reactive-pg-client`"
msgstr "`quarkus-reactive-pg-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:498
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.pgclient.PgPool`"
msgstr "`io.vertx.mutiny.pgclient.PgPool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:499
#, fuzzy, no-wrap
msgid "`$1`, `$2`, etc."
msgstr "`$1`, `$2`, etc."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:501
#, fuzzy, no-wrap
msgid "Transactions"
msgstr "Transacções"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:506
#, fuzzy
msgid "The reactive SQL clients support transactions.  A transaction is started with `io.vertx.mutiny.sqlclient.SqlConnection#begin` and terminated with either `io.vertx.mutiny.sqlclient.Transaction#commit` or `io.vertx.mutiny.sqlclient.Transaction#rollback`.  All these operations are asynchronous:"
msgstr "Os clientes SQL reactivos suportam transacções. Uma transação é iniciada com `io.vertx.mutiny.sqlclient.SqlConnection#begin` e terminada com `io.vertx.mutiny.sqlclient.Transaction#commit` ou `io.vertx.mutiny.sqlclient.Transaction#rollback`. Todas estas operações são assíncronas:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:508
#, fuzzy
msgid "`connection.begin()` returns a `Uni<Transaction>`"
msgstr "`connection.begin()` devolve um `Uni&amp;lt;Transaction&amp;gt;`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:509
#, fuzzy
msgid "`transaction.commit()` and `transaction.rollback()` return `Uni<Void>`"
msgstr "`transaction.commit()` e `transaction.rollback()` regressam `Uni&amp;lt;Void&amp;gt;`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:512
#, fuzzy
msgid "Managing transactions in the reactive programming world can be cumbersome.  Instead of writing repetitive and complex (thus error-prone!) code, you can use the `io.vertx.mutiny.sqlclient.Pool#withTransaction` helper method."
msgstr "Gerir transacções no mundo da programação reactiva pode ser complicado. Em vez de escrever código repetitivo e complexo (portanto, propenso a erros!), pode utilizar o método auxiliar `io.vertx.mutiny.sqlclient.Pool#withTransaction`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:514
#, fuzzy
msgid "The following snippet shows how to run 2 insertions in the same transaction:"
msgstr "O seguinte excerto mostra como executar 2 inserções na mesma transação:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:523
#, no-wrap
msgid ""
"public static Uni<Void> insertTwoFruits(PgPool client, Fruit fruit1, Fruit fruit2) {\n"
"    return client.withTransaction(conn -> {\n"
"        Uni<RowSet<Row>> insertOne = conn.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING id\")\n"
"                .execute(Tuple.of(fruit1.name));\n"
"        Uni<RowSet<Row>> insertTwo = conn.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING id\")\n"
"                .execute(Tuple.of(fruit2.name));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:529
#, no-wrap
msgid ""
"        return Uni.combine().all().unis(insertOne, insertTwo)\n"
"                // Ignore the results (the two ids)\n"
"                .discardItems();\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:532
#, fuzzy
msgid "In this example, the transaction is automatically committed on success or rolled back on failure."
msgstr "Neste exemplo, a transação é automaticamente confirmada em caso de sucesso ou revertida em caso de falha."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:534
#, fuzzy
msgid "You can also create dependent actions as follows:"
msgstr "Também é possível criar acções dependentes da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:538
#, no-wrap
msgid "return client.withTransaction(conn -> conn\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:541
#, no-wrap
msgid ""
"        .preparedQuery(\"INSERT INTO person (firstname,lastname) VALUES ($1,$2) RETURNING id\")\n"
"        .execute(Tuple.of(person.getFirstName(), person.getLastName()))\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:544
#, no-wrap
msgid ""
"        .onItem().transformToUni(id -> conn.preparedQuery(\"INSERT INTO addr (person_id,addrline1) VALUES ($1,$2)\")\n"
"                .execute(Tuple.of(id.iterator().next().getLong(\"id\"), person.getLastName())))\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:546
#, no-wrap
msgid "        .onItem().ignore().andContinueWithNull());\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:548
#, fuzzy, no-wrap
msgid "Working with batch query results"
msgstr "Trabalhar com resultados de consultas em lote"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:552
#, fuzzy
msgid "When executing batch queries, reactive SQL clients return a `RowSet` that corresponds to the results of the first element in the batch.  To get the results of the following batch elements, you must invoke the `RowSet#next` method until it returns `null`."
msgstr "Ao executar consultas de lote, os clientes SQL reactivos devolvem um `RowSet` que corresponde aos resultados do primeiro elemento do lote. Para obter os resultados dos seguintes elementos do lote, é necessário invocar o método `RowSet#next` até que este devolva `null`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:555
#, fuzzy
msgid "Let's say you want to update some rows and compute the total number of affected rows.  You must inspect each `RowSet`:"
msgstr "Digamos que pretende atualizar algumas linhas e calcular o número total de linhas afectadas. É necessário inspecionar cada `RowSet`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:559
#, no-wrap
msgid "PreparedQuery<RowSet<Row>> preparedQuery = client.preparedQuery(\"UPDATE fruits SET name = $1 WHERE id = $2\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:564
#, no-wrap
msgid ""
"Uni<RowSet<Row>> rowSet = preparedQuery.executeBatch(Arrays.asList(\n"
"        Tuple.of(\"Orange\", 1),\n"
"        Tuple.of(\"Pear\", 2),\n"
"        Tuple.of(\"Apple\", 3)));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:572
#, no-wrap
msgid ""
"Uni<Integer> totalAffected = rowSet.onItem().transform(res -> {\n"
"    int total = 0;\n"
"    do {\n"
"        total += res.rowCount(); // <1>\n"
"    } while ((res = res.next()) != null); // <2>\n"
"    return total;\n"
"});\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:574
#, fuzzy
msgid "Compute the sum of `RowSet#rowCount`."
msgstr "Calcular a soma de `RowSet#rowCount`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:575
#, fuzzy
msgid "Invoke `RowSet#next` until it returns `null`."
msgstr "Invocar `RowSet#next` até que este devolva `null`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:577
#, fuzzy
msgid "As another example, if you want to load all the rows you just inserted, you must concatenate the contents of each `RowSet`:"
msgstr "Como outro exemplo, se quiser carregar todas as linhas que acabou de inserir, deve concatenar o conteúdo de cada `RowSet`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:581
#, no-wrap
msgid "PreparedQuery<RowSet<Row>> preparedQuery = client.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING *\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:586
#, no-wrap
msgid ""
"Uni<RowSet<Row>> rowSet = preparedQuery.executeBatch(Arrays.asList(\n"
"        Tuple.of(\"Orange\"),\n"
"        Tuple.of(\"Pear\"),\n"
"        Tuple.of(\"Apple\")));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:601
#, no-wrap
msgid ""
"// Generate a Multi of RowSet items\n"
"Multi<RowSet<Row>> rowSets = rowSet.onItem().transformToMulti(res -> {\n"
"    return Multi.createFrom().generator(() -> res, (rs, emitter) -> {\n"
"        RowSet<Row> next = null;\n"
"        if (rs != null) {\n"
"            emitter.emit(rs);\n"
"            next = rs.next();\n"
"        }\n"
"        if (next == null) {\n"
"            emitter.complete();\n"
"        }\n"
"        return next;\n"
"    });\n"
"});\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:604
#, no-wrap
msgid ""
"// Transform each RowSet into Multi of Row items and Concatenate\n"
"Multi<Row> rows = rowSets.onItem().transformToMultiAndConcatenate(Multi.createFrom()::iterable);\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:606
#, fuzzy, no-wrap
msgid "Multiple Datasources"
msgstr "Várias fontes de dados"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:609
#, fuzzy
msgid "The reactive SQL clients support defining several datasources."
msgstr "Os clientes SQL reactivos suportam a definição de várias fontes de dados."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:611
#, fuzzy
msgid "A typical configuration with several datasources would look like:"
msgstr "Uma configuração típica com várias fontes de dados seria semelhante:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:618
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql <1>\n"
"quarkus.datasource.username=user-default\n"
"quarkus.datasource.password=password-default\n"
"quarkus.datasource.reactive.url=postgresql://localhost:5432/default\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:623
#, no-wrap
msgid ""
"quarkus.datasource.\"additional1\".db-kind=postgresql <2>\n"
"quarkus.datasource.\"additional1\".username=user-additional1\n"
"quarkus.datasource.\"additional1\".password=password-additional1\n"
"quarkus.datasource.\"additional1\".reactive.url=postgresql://localhost:5432/additional1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:628
#, no-wrap
msgid ""
"quarkus.datasource.\"additional2\".db-kind=mysql <3>\n"
"quarkus.datasource.\"additional2\".username=user-additional2\n"
"quarkus.datasource.\"additional2\".password=password-additional2\n"
"quarkus.datasource.\"additional2\".reactive.url=mysql://localhost:3306/additional2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:630
#, fuzzy
msgid "The default datasource - using PostgreSQL."
msgstr "A fonte de dados predefinida - utilizando PostgreSQL."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:631
#, fuzzy
msgid "A named datasource called `additional1` - using PostgreSQL."
msgstr "Uma fonte de dados nomeada chamada `additional1` - utilizando PostgreSQL."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:632
#, fuzzy
msgid "A named datasource called `additional2` - using MySQL."
msgstr "Uma fonte de dados denominada `additional2` - utilizando MySQL."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:634
#, fuzzy
msgid "You can then inject the clients as follows:"
msgstr "Pode então injetar os clientes da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:639
#, no-wrap
msgid ""
"@Inject <1>\n"
"PgPool defaultClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:643
#, no-wrap
msgid ""
"@Inject\n"
"@ReactiveDataSource(\"additional1\") <2>\n"
"PgPool additional1Client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:647
#, no-wrap
msgid ""
"@Inject\n"
"@ReactiveDataSource(\"additional2\")\n"
"MySQLPool additional2Client;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:649
#, fuzzy
msgid "Injecting the client for the default datasource does not require anything special."
msgstr "Injetar o cliente para a fonte de dados predefinida não requer nada de especial."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:650
#, fuzzy
msgid "For a named datasource, you use the `@ReactiveDataSource` CDI qualifier with the datasource name as its value."
msgstr "Para uma fonte de dados nomeada, utilizar o qualificador `@ReactiveDataSource` CDI com o nome da fonte de dados como valor."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:651
#, fuzzy, no-wrap
msgid "UNIX Domain Socket connections"
msgstr "Ligações UNIX Domain Socket"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:654
#, fuzzy
msgid "The PostgreSQL and MariaDB/MySQL clients can be configured to connect to the server through a UNIX domain socket."
msgstr "Os clientes PostgreSQL e MariaDB/MySQL podem ser configurados para se ligarem ao servidor através de um socket de domínio UNIX."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:656
#, fuzzy
msgid "First make sure that xref:vertx-reference.adoc#native-transport[native transport support] is enabled."
msgstr "Primeiro, certifique-se de que  link:vertx-reference.html#native-transport[o suporte de transporte nativo] está ativado."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:659
#, fuzzy
msgid "Then configure the database connection url.  This step depends on the database type."
msgstr "Em seguida, configure o url de ligação à base de dados. Este passo depende do tipo de base de dados."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:663
#, fuzzy
msgid "PostgreSQL domain socket paths have the following form: `<directory>/.s.PGSQL.<port>`"
msgstr "Os caminhos de socket de domínio do PostgreSQL têm a seguinte forma: `&amp;lt;directory&amp;gt;/.s.PGSQL.&amp;lt;port&amp;gt;`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:665
#, fuzzy
msgid "The database connection url must be configured so that:"
msgstr "O url de ligação à base de dados deve ser configurado de modo a que:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:667
#, fuzzy
msgid "the `host` is the `directory` in the socket path"
msgstr "o `host` é o `directory` no caminho do soquete"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:668
#, fuzzy
msgid "the `port` is the `port` in the socket path"
msgstr "o `port` é o `port` no caminho do soquete"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:670
#, fuzzy
msgid "Consider the following socket path: `/var/run/postgresql/.s.PGSQL.5432`."
msgstr "Considere o seguinte caminho de socket: `/var/run/postgresql/.s.PGSQL.5432`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:672
#: upstream/_guides/reactive-sql-clients.adoc:685
#, fuzzy
msgid "In `application.properties` add:"
msgstr "Em `application.properties` acrescentar:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:676
#, no-wrap
msgid "quarkus.datasource.reactive.url=postgresql://:5432/quarkus_test?host=/var/run/postgresql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:681
#, fuzzy
msgid "The database connection url must be configured so that the `host` is the socket path."
msgstr "O url de ligação à base de dados deve ser configurado de modo a que `host` seja o caminho do socket."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:683
#, fuzzy
msgid "Consider the following socket path: `/var/run/mysqld/mysqld.sock`."
msgstr "Considere o seguinte caminho de socket: `/var/run/mysqld/mysqld.sock`."

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:689
#, no-wrap
msgid "quarkus.datasource.reactive.url=mysql:///quarkus_test?host=/var/run/mysqld/mysqld.sock\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:691
#, fuzzy, no-wrap
msgid "Load-balancing connections"
msgstr "Ligações de equilíbrio de carga"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:694
#, fuzzy
msgid "The reactive PostgreSQL and MariaDB/MySQL clients support defining several connections."
msgstr "Os clientes reactivos PostgreSQL e MariaDB/MySQL suportam a definição de várias ligações."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:696
#, fuzzy
msgid "A typical configuration with several connections would look like:"
msgstr "Uma configuração típica com várias ligações seria a seguinte:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:700
#, no-wrap
msgid "quarkus.datasource.reactive.url=postgresql://host1:5432/default,postgresql://host2:5432/default,postgresql://host3:5432/default\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:703
#, fuzzy
msgid "This can also be written with indexed property syntax:"
msgstr "Isto também pode ser escrito com a sintaxe de propriedade indexada:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:709
#, no-wrap
msgid ""
"quarkus.datasource.reactive.url[0]=postgresql://host1:5432/default\n"
"quarkus.datasource.reactive.url[1]=postgresql://host2:5432/default\n"
"quarkus.datasource.reactive.url[2]=postgresql://host3:5432/default\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:711
#, fuzzy, no-wrap
msgid "Pooled connection `idle-timeout`"
msgstr "Ligação agrupada `idle-timeout`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:715
#, fuzzy
msgid "Reactive datasources can be configured with an `idle-timeout`.  It is the maximum time a connection remains unused in the pool before it is closed."
msgstr "Os recursos de dados reactivos podem ser configurados com um `idle-timeout`. É o tempo máximo que uma ligação permanece inutilizada no pool antes de ser fechada."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:717
#, fuzzy
msgid "The `idle-timeout` is disabled by default."
msgstr "O `idle-timeout` está desativado por predefinição."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:719
#, fuzzy
msgid "For example, you could expire idle connections after 60 minutes:"
msgstr "Por exemplo, pode expirar as ligações inactivas após 60 minutos:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:723
#, no-wrap
msgid "quarkus.datasource.reactive.idle-timeout=PT60M\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:725
#, fuzzy, no-wrap
msgid "Pooled Connection `max-lifetime`"
msgstr "Ligação agrupada `max-lifetime`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:730
#, fuzzy
msgid "In addition to `idle-timeout`, reactive datasources can also be configured with a `max-lifetime`.  It is the maximum time a connection remains in the pool before it is closed and replaced as needed.  The `max-lifetime` allows ensuring the pool has fresh connections with up-to-date configuration."
msgstr "Para além do `idle-timeout`, os recursos de dados reactivos também podem ser configurados com um `max-lifetime`. É o tempo máximo que uma ligação permanece no pool antes de ser fechada e substituída conforme necessário. O `max-lifetime` permite assegurar que o pool tem ligações novas com uma configuração actualizada."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:733
#, fuzzy
msgid "The `max-lifetime` is disabled by default but is an important configuration when using a credentials provider that provides time limited credentials, like the link:credentials-provider.adoc[Vault credentials provider]."
msgstr "O `max-lifetime` está desativado por predefinição, mas é uma configuração importante quando se utiliza um fornecedor de credenciais que fornece credenciais com tempo limitado, como o  link:credentials-provider.adoc[fornecedor de credenciais do Vault]."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:735
#, fuzzy
msgid "For example, you could ensure connections are recycled after 60 minutes:"
msgstr "Por exemplo, pode garantir que as ligações são recicladas após 60 minutos:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:739
#, no-wrap
msgid "quarkus.datasource.reactive.max-lifetime=PT60M\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:741
#, fuzzy, no-wrap
msgid "Customizing pool creation"
msgstr "Personalização da criação de pools"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:744
#, fuzzy
msgid "Sometimes, the database connection pool cannot be configured only by declaration."
msgstr "Por vezes, o conjunto de ligações à base de dados não pode ser configurado apenas por declaração."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:746
#, fuzzy
msgid "You may need to read a specific file only present in production, or retrieve configuration data from a proprietary configuration server."
msgstr "Poderá ser necessário ler um ficheiro específico apenas presente na produção ou obter dados de configuração de um servidor de configuração proprietário."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:748
#, fuzzy
msgid "In this case, you can customize pool creation by creating a class implementing an interface which depends on the target database:"
msgstr "Neste caso, é possível personalizar a criação do pool criando uma classe que implemente uma interface que dependa da base de dados de destino:"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:753
#, fuzzy, no-wrap
msgid "Pool creator class name"
msgstr "Nome da classe do criador da piscina"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:756
#, fuzzy, no-wrap
msgid "`io.quarkus.reactive.db2.client.DB2PoolCreator`"
msgstr "`io.quarkus.reactive.db2.client.DB2PoolCreator`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:759
#, fuzzy, no-wrap
msgid "`io.quarkus.reactive.mysql.client.MySQLPoolCreator`"
msgstr "`io.quarkus.reactive.mysql.client.MySQLPoolCreator`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:762
#, fuzzy, no-wrap
msgid "`io.quarkus.reactive.mssql.client.MSSQLPoolCreator`"
msgstr "`io.quarkus.reactive.mssql.client.MSSQLPoolCreator`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:765
#, fuzzy, no-wrap
msgid "`io.quarkus.reactive.oracle.client.OraclePoolCreator`"
msgstr "`io.quarkus.reactive.oracle.client.OraclePoolCreator`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:767
#, fuzzy, no-wrap
msgid "`io.quarkus.reactive.pg.client.PgPoolCreator`"
msgstr "`io.quarkus.reactive.pg.client.PgPoolCreator`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:770
#: upstream/_guides/reactive-sql-clients.adoc:801
#, fuzzy
msgid "Here's an example for PostgreSQL:"
msgstr "Eis um exemplo para o PostgreSQL:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:774
#, no-wrap
msgid "import jakarta.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:779
#, no-wrap
msgid ""
"import io.quarkus.reactive.pg.client.PgPoolCreator;\n"
"import io.vertx.pgclient.PgConnectOptions;\n"
"import io.vertx.pgclient.PgPool;\n"
"import io.vertx.sqlclient.PoolOptions;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:782
#, no-wrap
msgid ""
"@Singleton\n"
"public class CustomPgPoolCreator implements PgPoolCreator {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:791
#, no-wrap
msgid ""
"    @Override\n"
"    public PgPool create(Input input) {\n"
"        PgConnectOptions connectOptions = input.pgConnectOptions();\n"
"        PoolOptions poolOptions = input.poolOptions();\n"
"        // Customize connectOptions, poolOptions or both, as required\n"
"        return PgPool.pool(input.vertx(), connectOptions, poolOptions);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:793
#, fuzzy, no-wrap
msgid "Pipelining"
msgstr "Pipelining"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:797
#, fuzzy
msgid "The PostgreSQL and MariaDB/MySQL clients support pipelining of queries at the connection level.  The feature consists in sending multiple queries on the same database connection without waiting for the corresponding responses."
msgstr "Os clientes PostgreSQL e MariaDB/MySQL suportam o pipelining de consultas ao nível da ligação. A funcionalidade consiste em enviar várias consultas na mesma ligação à base de dados sem esperar pelas respostas correspondentes."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:799
#, fuzzy
msgid "In some use cases, query pipelining can improve database access performance."
msgstr "Em alguns casos de utilização, o pipelining de consultas pode melhorar o desempenho do acesso à base de dados."

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:805
#, no-wrap
msgid "import jakarta.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:808
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import io.vertx.mutiny.pgclient.PgPool;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:810
#, no-wrap
msgid "public class PipeliningExample {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:813
#, no-wrap
msgid ""
"    @Inject\n"
"    PgPool client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:826
#, no-wrap
msgid ""
"    public Uni<String> favoriteFruitAndVegetable() {\n"
"        // Explicitely acquire a connection\n"
"        return client.withConnection(conn -> {\n"
"            Uni<String> favoriteFruit = conn.query(\"SELECT name FROM fruits WHERE preferred IS TRUE\").execute()\n"
"                    .onItem().transform(rows -> rows.iterator().next().getString(\"name\"));\n"
"            Uni<String> favoriteVegetable = conn.query(\"SELECT name FROM vegetables WHERE preferred IS TRUE\").execute()\n"
"                    .onItem().transform(rows -> rows.iterator().next().getString(\"name\"));\n"
"            // favoriteFruit and favoriteVegetable unis will be subscribed at the same time\n"
"            return Uni.combine().all().unis(favoriteFruit, favoriteVegetable)\n"
"                    .combinedWith(PipeliningExample::formatMessage);\n"
"        });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:831
#, no-wrap
msgid ""
"    private static String formatMessage(String fruit, String vegetable) {\n"
"        return String.format(\"The favorite fruit is %s and the favorite vegetable is %s\", fruit, vegetable);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:834
#, fuzzy
msgid "The maximum number of pipelined queries is configured with the `pipelining-limit` property:"
msgstr "O número máximo de consultas em pipeline é configurado com a propriedade `pipelining-limit`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:841
#, no-wrap
msgid ""
"# For PostgreSQL\n"
"quarkus.datasource.reactive.postgresql.pipelining-limit=256\n"
"# For MariaDB/MySQL\n"
"quarkus.datasource.reactive.mysql.pipelining-limit=256\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:844
#, fuzzy
msgid "By default, `pipelining-limit` is set to 256."
msgstr "Por predefinição, `pipelining-limit` está definido para 256."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:845
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referência de configuração"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:847
#, fuzzy, no-wrap
msgid "Common Datasource"
msgstr "Fonte de dados comum"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:851
#, fuzzy, no-wrap
msgid "Reactive Datasource"
msgstr "Fonte de dados reactiva"
