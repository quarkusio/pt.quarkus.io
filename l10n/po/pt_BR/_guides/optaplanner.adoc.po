# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/optaplanner.adoc:6
#, fuzzy, no-wrap
msgid "OptaPlanner - Using AI to optimize a schedule with OptaPlanner"
msgstr "OptaPlanner - Usando IA para otimizar uma programação com o OptaPlanner"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:14
#, fuzzy
msgid "This guide walks you through the process of creating a Quarkus application with https://www.optaplanner.org/[OptaPlanner]'s constraint solving Artificial Intelligence (AI)."
msgstr "Este guia orienta o senhor no processo de criação de um aplicativo Quarkus com a Inteligência Artificial (IA) de solução de restrições do link:https://www.optaplanner.org/[OptaPlanner] ."

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:15
#, no-wrap
msgid "What you will build"
msgstr "O que você vai construir"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:18
#, fuzzy
msgid "You will build a REST application that optimizes a school timetable for students and teachers:"
msgstr "O senhor criará um aplicativo REST que otimiza um horário escolar para alunos e professores:"

#. type: Target for macro image
#: upstream/_guides/optaplanner.adoc:19
#, no-wrap
msgid "optaplanner-time-table-app-screenshot.png"
msgstr "optaplanner-time-table-app-screenshot.png"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:23
#, fuzzy
msgid "Your service will assign `Lesson` instances to `Timeslot` and `Room` instances automatically by using AI to adhere to hard and soft scheduling _constraints_, such as the following examples:"
msgstr "Seu serviço atribuirá instâncias de `Lesson` a instâncias de `Timeslot` e `Room` automaticamente, usando IA para aderir a _restrições_ de agendamento rígidas e flexíveis, como os exemplos a seguir:"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:25
#, fuzzy
msgid "A room can have at most one lesson at the same time."
msgstr "Uma sala pode ter no máximo uma aula ao mesmo tempo."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:26
#, fuzzy
msgid "A teacher can teach at most one lesson at the same time."
msgstr "Um professor pode dar no máximo uma aula ao mesmo tempo."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:27
#, fuzzy
msgid "A student can attend at most one lesson at the same time."
msgstr "Um aluno pode assistir a no máximo uma aula ao mesmo tempo."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:28
#, fuzzy
msgid "A teacher prefers to teach all lessons in the same room."
msgstr "Um professor prefere dar todas as aulas na mesma sala."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:29
#, fuzzy
msgid "A teacher prefers to teach sequential lessons and dislikes gaps between lessons."
msgstr "Um professor prefere dar aulas sequenciais e não gosta de intervalos entre as aulas."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:30
#, fuzzy
msgid "A student dislikes sequential lessons on the same subject."
msgstr "Um aluno não gosta de aulas sequenciais sobre o mesmo assunto."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:37
#, fuzzy
msgid "Mathematically speaking, school timetabling is an _NP-hard_ problem.  This means it is difficult to scale.  Simply brute force iterating through all possible combinations takes millions of years for a non-trivial dataset, even on a supercomputer.  Luckily, AI constraint solvers such as OptaPlanner have advanced algorithms that deliver a near-optimal solution in a reasonable amount of time."
msgstr "Em termos matemáticos, a definição do horário escolar é um problema _NP difícil_ . Isso significa que é difícil de dimensionar. A simples iteração por força bruta de todas as combinações possíveis leva milhões de anos para um conjunto de dados não trivial, mesmo em um supercomputador. Felizmente, os solucionadores de restrições de IA, como o OptaPlanner, têm algoritmos avançados que fornecem uma solução quase ideal em um período de tempo razoável."

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:39
#, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:43
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas seções seguintes e crie a aplicação passo a passo. No entanto, você pode ir diretamente para o exemplo completo."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:45
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone o repositório Git: `git clone {quickstarts-clone-url}`, ou baixe um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:47
#, fuzzy
msgid "The solution is located in link:{quickstarts-tree-url}/optaplanner-quickstart[the `optaplanner-quickstart` directory]."
msgstr "A solução está localizada no link:{quickstarts-tree-url}/optaplanner-quickstart[diretório optaplanner-quickstart] ."

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:48
#, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:54
#, fuzzy, no-wrap
msgid "The build file and the dependencies"
msgstr "O arquivo de compilação e as dependências"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:58
#, fuzzy
msgid "Use https://code.quarkus.io/[code.quarkus.io] to generate an application with the following extensions, for Maven or Gradle:"
msgstr "Use link:https://code.quarkus.io/[code.quarkus.io] para gerar um aplicativo com as seguintes extensões, para Maven ou Gradle:"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:60
#, fuzzy
msgid "RESTEasy Reactive (`quarkus-resteasy-reactive`)"
msgstr "RESTEasy Reactive ( `quarkus-resteasy-reactive` )"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:61
#, fuzzy
msgid "RESTEasy Reactive Jackson (`quarkus-resteasy-reactive-jackson`)"
msgstr "RESTEasy Reactive Jackson ( `quarkus-resteasy-reactive-jackson` )"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:62
#, fuzzy
msgid "OptaPlanner (`optaplanner-quarkus`)"
msgstr "OptaPlanner ( `optaplanner-quarkus` )"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:63
#, fuzzy
msgid "OptaPlanner Jackson (`optaplanner-quarkus-jackson`)"
msgstr "OptaPlanner Jackson ( `optaplanner-quarkus-jackson` )"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:65
#, fuzzy
msgid "Alternatively, generate it from the command line:"
msgstr "Como alternativa, gere-o a partir da linha de comando:"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:71
#, fuzzy
msgid "This will include the following dependencies in your build file:"
msgstr "Isso incluirá as seguintes dependências em seu arquivo de compilação:"

#. type: Block title
#: upstream/_guides/optaplanner.adoc:73 upstream/_guides/optaplanner.adoc:727
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:110
#, no-wrap
msgid ""
"<dependencyManagement>\n"
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>{quarkus-platform-groupid}</groupId>\n"
"            <artifactId>quarkus-bom</artifactId>\n"
"            <version>{quarkus-version}</version>\n"
"            <type>pom</type>\n"
"            <scope>import</scope>\n"
"        </dependency>\n"
"        <dependency>\n"
"            <groupId>{quarkus-platform-groupid}</groupId>\n"
"            <artifactId>quarkus-optaplanner-bom</artifactId>\n"
"            <version>{quarkus-version}</version>\n"
"            <type>pom</type>\n"
"            <scope>import</scope>\n"
"        </dependency>\n"
"    </dependencies>\n"
"</dependencyManagement>\n"
"<dependencies>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-resteasy-reactive</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"        <groupId>org.optaplanner</groupId>\n"
"        <artifactId>optaplanner-quarkus</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"        <groupId>org.optaplanner</groupId>\n"
"        <artifactId>optaplanner-quarkus-jackson</artifactId>\n"
"    </dependency>\n"
msgstr ""
"<dependencyManagement>\n"
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>{quarkus-platform-groupid}</groupId>\n"
"            <artifactId>quarkus-bom</artifactId>\n"
"            <version>{quarkus-version}</version>\n"
"            <type>pom</type>\n"
"            <scope>import</scope>\n"
"        </dependency>\n"
"        <dependency>\n"
"            <groupId>{quarkus-platform-groupid}</groupId>\n"
"            <artifactId>quarkus-optaplanner-bom</artifactId>\n"
"            <version>{quarkus-version}</version>\n"
"            <type>pom</type>\n"
"            <scope>import</scope>\n"
"        </dependency>\n"
"    </dependencies>\n"
"</dependencyManagement>\n"
"<dependencies>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-resteasy-reactive</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"        <groupId>org.optaplanner</groupId>\n"
"        <artifactId>optaplanner-quarkus</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"        <groupId>org.optaplanner</groupId>\n"
"        <artifactId>optaplanner-quarkus-jackson</artifactId>\n"
"    </dependency>\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:117
#, no-wrap
msgid ""
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-junit5</artifactId>\n"
"        <scope>test</scope>\n"
"    </dependency>\n"
"</dependencies>\n"
msgstr ""
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-junit5</artifactId>\n"
"        <scope>test</scope>\n"
"    </dependency>\n"
"</dependencies>\n"

#. type: Block title
#: upstream/_guides/optaplanner.adoc:120 upstream/_guides/optaplanner.adoc:737
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:129
#, no-wrap
msgid ""
"dependencies {\n"
"    implementation enforcedPlatform(\"{quarkus-platform-groupid}:quarkus-bom:{quarkus-version}\")\n"
"    implementation enforcedPlatform(\"{quarkus-platform-groupid}:quarkus-optaplanner-bom:{quarkus-version}\")\n"
"    implementation 'io.quarkus:quarkus-resteasy-reactive'\n"
"    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'\n"
"    implementation 'org.optaplanner:optaplanner-quarkus'\n"
"    implementation 'org.optaplanner:optaplanner-quarkus-jackson'\n"
msgstr ""
"dependencies {\n"
"    implementation enforcedPlatform(\"{quarkus-platform-groupid}:quarkus-bom:{quarkus-version}\")\n"
"    implementation enforcedPlatform(\"{quarkus-platform-groupid}:quarkus-optaplanner-bom:{quarkus-version}\")\n"
"    implementation 'io.quarkus:quarkus-resteasy-reactive'\n"
"    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'\n"
"    implementation 'org.optaplanner:optaplanner-quarkus'\n"
"    implementation 'org.optaplanner:optaplanner-quarkus-jackson'\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:132
#, no-wrap
msgid ""
"    testImplementation 'io.quarkus:quarkus-junit5'\n"
"}\n"
msgstr ""
"    testImplementation 'io.quarkus:quarkus-junit5'\n"
"}\n"

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:134
#, fuzzy, no-wrap
msgid "Model the domain objects"
msgstr "Modelar os objetos de domínio"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:138
#, fuzzy
msgid "Your goal is to assign each lesson to a time slot and a room.  You will create these classes:"
msgstr "Seu objetivo é atribuir cada aula a um intervalo de tempo e a uma sala. O senhor criará essas classes:"

#. type: Target for macro image
#: upstream/_guides/optaplanner.adoc:139
#, no-wrap
msgid "optaplanner-time-table-class-diagram-pure.png"
msgstr "optaplanner-time-table-class-diagram-pure.png"

#. type: Title ===
#: upstream/_guides/optaplanner.adoc:141
#, fuzzy, no-wrap
msgid "Timeslot"
msgstr "Faixa de horário"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:147
#, fuzzy
msgid "The `Timeslot` class represents a time interval when lessons are taught, for example, `Monday 10:30 - 11:30` or `Tuesday 13:30 - 14:30`.  For simplicity's sake, all time slots have the same duration and there are no time slots during lunch or other breaks."
msgstr "A classe `Timeslot` representa um intervalo de tempo em que as aulas são ministradas, por exemplo, `Monday 10:30 - 11:30` ou `Tuesday 13:30 - 14:30` . Para simplificar, todos os intervalos de tempo têm a mesma duração e não há intervalos de tempo durante o almoço ou outros intervalos."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:150
#, fuzzy
msgid "A time slot has no date, because a high school schedule just repeats every week.  So there is no need for https://docs.optaplanner.org/latestFinal/optaplanner-docs/html_single/index.html#continuousPlanning[continuous planning]."
msgstr "Um intervalo de tempo não tem data, porque a programação do ensino médio se repete toda semana. Portanto, não há necessidade de link:https://docs.optaplanner.org/latestFinal/optaplanner-docs/html_single/index.html#continuousPlanning[planejamento contínuo] ."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:152
#, fuzzy
msgid "Create the `src/main/java/org/acme/optaplanner/domain/Timeslot.java` class:"
msgstr "Crie a classe `src/main/java/org/acme/optaplanner/domain/Timeslot.java` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:156 upstream/_guides/optaplanner.adoc:213
#: upstream/_guides/optaplanner.adoc:268 upstream/_guides/optaplanner.adoc:505
#, no-wrap
msgid "package org.acme.optaplanner.domain;\n"
msgstr "package org.acme.optaplanner.domain;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:159 upstream/_guides/optaplanner.adoc:750
#, no-wrap
msgid ""
"import java.time.DayOfWeek;\n"
"import java.time.LocalTime;\n"
msgstr ""
"import java.time.DayOfWeek;\n"
"import java.time.LocalTime;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:161
#, no-wrap
msgid "public class Timeslot {\n"
msgstr "public class Timeslot {\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:165
#, no-wrap
msgid ""
"    private DayOfWeek dayOfWeek;\n"
"    private LocalTime startTime;\n"
"    private LocalTime endTime;\n"
msgstr ""
"    private DayOfWeek dayOfWeek;\n"
"    private LocalTime startTime;\n"
"    private LocalTime endTime;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:168
#, no-wrap
msgid ""
"    public Timeslot() {\n"
"    }\n"
msgstr ""
"    public Timeslot() {\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:174
#, no-wrap
msgid ""
"    public Timeslot(DayOfWeek dayOfWeek, LocalTime startTime, LocalTime endTime) {\n"
"        this.dayOfWeek = dayOfWeek;\n"
"        this.startTime = startTime;\n"
"        this.endTime = endTime;\n"
"    }\n"
msgstr ""
"    public Timeslot(DayOfWeek dayOfWeek, LocalTime startTime, LocalTime endTime) {\n"
"        this.dayOfWeek = dayOfWeek;\n"
"        this.startTime = startTime;\n"
"        this.endTime = endTime;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:178
#, no-wrap
msgid ""
"    public DayOfWeek getDayOfWeek() {\n"
"        return dayOfWeek;\n"
"    }\n"
msgstr ""
"    public DayOfWeek getDayOfWeek() {\n"
"        return dayOfWeek;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:182
#, no-wrap
msgid ""
"    public LocalTime getStartTime() {\n"
"        return startTime;\n"
"    }\n"
msgstr ""
"    public LocalTime getStartTime() {\n"
"        return startTime;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:186
#, no-wrap
msgid ""
"    public LocalTime getEndTime() {\n"
"        return endTime;\n"
"    }\n"
msgstr ""
"    public LocalTime getEndTime() {\n"
"        return endTime;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:191
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString() {\n"
"        return dayOfWeek + \" \" + startTime;\n"
"    }\n"
msgstr ""
"    @Override\n"
"    public String toString() {\n"
"        return dayOfWeek + \" \" + startTime;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:193 upstream/_guides/optaplanner.adoc:235
#: upstream/_guides/optaplanner.adoc:336 upstream/_guides/optaplanner.adoc:407
#: upstream/_guides/optaplanner.adoc:483 upstream/_guides/optaplanner.adoc:556
#: upstream/_guides/optaplanner.adoc:649 upstream/_guides/optaplanner.adoc:792
#: upstream/_guides/optaplanner.adoc:882 upstream/_guides/optaplanner.adoc:1036
#: upstream/_guides/optaplanner.adoc:1096
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:197
#, fuzzy
msgid "Because no `Timeslot` instances change during solving, a `Timeslot` is called a _problem fact_.  Such classes do not require any OptaPlanner specific annotations."
msgstr "Como nenhuma instância de `Timeslot` muda durante a solução, um `Timeslot` é chamado de _fato do problema_ . Essas classes não requerem nenhuma anotação específica do OptaPlanner."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:200
#, fuzzy
msgid "Notice the `toString()` method keeps the output short, so it is easier to read OptaPlanner's `DEBUG` or `TRACE` log, as shown later."
msgstr "Observe que o método `toString()` mantém a saída curta, de modo que é mais fácil ler o registro `DEBUG` ou `TRACE` do OptaPlanner, conforme mostrado posteriormente."

#. type: Title ===
#: upstream/_guides/optaplanner.adoc:201
#, fuzzy, no-wrap
msgid "Room"
msgstr "Sala"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:207
#, fuzzy
msgid "The `Room` class represents a location where lessons are taught, for example, `Room A` or `Room B`.  For simplicity's sake, all rooms are without capacity limits and they can accommodate all lessons."
msgstr "A classe `Room` representa um local onde as aulas são ministradas, por exemplo, `Room A` ou `Room B` . Para simplificar, todas as salas não têm limites de capacidade e podem acomodar todas as aulas."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:209
#, fuzzy
msgid "Create the `src/main/java/org/acme/optaplanner/domain/Room.java` class:"
msgstr "Crie a classe `src/main/java/org/acme/optaplanner/domain/Room.java` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:215
#, no-wrap
msgid "public class Room {\n"
msgstr "public class Room {\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:217
#, no-wrap
msgid "    private String name;\n"
msgstr "    private String name;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:220
#, no-wrap
msgid ""
"    public Room() {\n"
"    }\n"
msgstr ""
"    public Room() {\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:224
#, no-wrap
msgid ""
"    public Room(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""
"    public Room(String name) {\n"
"        this.name = name;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:228
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:233
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString() {\n"
"        return name;\n"
"    }\n"
msgstr ""
"    @Override\n"
"    public String toString() {\n"
"        return name;\n"
"    }\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:238
#, fuzzy
msgid "`Room` instances do not change during solving, so `Room` is also a _problem fact_."
msgstr "`Room` as instâncias não mudam durante a solução, portanto, `Room` também é um _fato problemático_ ."

#. type: Title ===
#: upstream/_guides/optaplanner.adoc:239
#, fuzzy, no-wrap
msgid "Lesson"
msgstr "Lição"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:247
#, fuzzy
msgid "During a lesson, represented by the `Lesson` class, a teacher teaches a subject to a group of students, for example, `Math by A.Turing for 9th grade` or `Chemistry by M.Curie for 10th grade`.  If a subject is taught multiple times per week by the same teacher to the same student group, there are multiple `Lesson` instances that are only distinguishable by `id`.  For example, the 9th grade has six math lessons a week."
msgstr "Durante uma aula, representada pela classe `Lesson` , um professor ensina uma matéria para um grupo de alunos, por exemplo, `Math by A.Turing for 9th grade` ou `Chemistry by M.Curie for 10th grade` . Se uma matéria for ensinada várias vezes por semana pelo mesmo professor para o mesmo grupo de alunos, há várias instâncias `Lesson` que só podem ser distinguidas por `id` . Por exemplo, a 9ª série tem seis aulas de matemática por semana."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:251
#, fuzzy
msgid "During solving, OptaPlanner changes the `timeslot` and `room` fields of the `Lesson` class, to assign each lesson to a time slot and a room.  Because OptaPlanner changes these fields, `Lesson` is a _planning entity_:"
msgstr "Durante a resolução, o OptaPlanner altera os campos `timeslot` e `room` da classe `Lesson` , para atribuir cada aula a um intervalo de tempo e a uma sala. Como o OptaPlanner altera esses campos, `Lesson` é uma _entidade de planejamento_ :"

#. type: Target for macro image
#: upstream/_guides/optaplanner.adoc:252
#, no-wrap
msgid "optaplanner-time-table-class-diagram-annotated.png"
msgstr "optaplanner-time-table-class-diagram-annotated.png"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:262
#, fuzzy
msgid "Most of the fields in the previous diagram contain input data, except for the orange fields: A lesson's `timeslot` and `room` fields are unassigned (`null`) in the input data and assigned (not `null`) in the output data.  OptaPlanner changes these fields during solving.  Such fields are called planning variables.  In order for OptaPlanner to recognize them, both the `timeslot` and `room` fields require an `@PlanningVariable` annotation.  Their containing class, `Lesson`, requires an `@PlanningEntity` annotation."
msgstr "A maioria dos campos no diagrama anterior contém dados de entrada, exceto os campos em laranja: Os campos `timeslot` e `room` de uma aula não são atribuídos ( `null` ) nos dados de entrada e são atribuídos (não `null` ) nos dados de saída. O OptaPlanner altera esses campos durante a resolução. Esses campos são chamados de variáveis de planejamento. Para que o OptaPlanner os reconheça, os campos `timeslot` e `room` requerem uma anotação `@PlanningVariable` . A classe que os contém, `Lesson` , requer uma anotação `@PlanningEntity` ."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:264
#, fuzzy
msgid "Create the `src/main/java/org/acme/optaplanner/domain/Lesson.java` class:"
msgstr "Crie a classe `src/main/java/org/acme/optaplanner/domain/Lesson.java` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:272
#, no-wrap
msgid ""
"import org.optaplanner.core.api.domain.entity.PlanningEntity;\n"
"import org.optaplanner.core.api.domain.lookup.PlanningId;\n"
"import org.optaplanner.core.api.domain.variable.PlanningVariable;\n"
msgstr ""
"import org.optaplanner.core.api.domain.entity.PlanningEntity;\n"
"import org.optaplanner.core.api.domain.lookup.PlanningId;\n"
"import org.optaplanner.core.api.domain.variable.PlanningVariable;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:275
#, no-wrap
msgid ""
"@PlanningEntity\n"
"public class Lesson {\n"
msgstr ""
"@PlanningEntity\n"
"public class Lesson {\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:278
#, no-wrap
msgid ""
"    @PlanningId\n"
"    private Long id;\n"
msgstr ""
"    @PlanningId\n"
"    private Long id;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:282
#, no-wrap
msgid ""
"    private String subject;\n"
"    private String teacher;\n"
"    private String studentGroup;\n"
msgstr ""
"    private String subject;\n"
"    private String teacher;\n"
"    private String studentGroup;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:287
#, no-wrap
msgid ""
"    @PlanningVariable\n"
"    private Timeslot timeslot;\n"
"    @PlanningVariable\n"
"    private Room room;\n"
msgstr ""
"    @PlanningVariable\n"
"    private Timeslot timeslot;\n"
"    @PlanningVariable\n"
"    private Room room;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:290
#, no-wrap
msgid ""
"    public Lesson() {\n"
"    }\n"
msgstr ""
"    public Lesson() {\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:297
#, no-wrap
msgid ""
"    public Lesson(Long id, String subject, String teacher, String studentGroup) {\n"
"        this.id = id;\n"
"        this.subject = subject;\n"
"        this.teacher = teacher;\n"
"        this.studentGroup = studentGroup;\n"
"    }\n"
msgstr ""
"    public Lesson(Long id, String subject, String teacher, String studentGroup) {\n"
"        this.id = id;\n"
"        this.subject = subject;\n"
"        this.teacher = teacher;\n"
"        this.studentGroup = studentGroup;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:301
#, no-wrap
msgid ""
"    public Long getId() {\n"
"        return id;\n"
"    }\n"
msgstr ""
"    public Long getId() {\n"
"        return id;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:305
#, no-wrap
msgid ""
"    public String getSubject() {\n"
"        return subject;\n"
"    }\n"
msgstr ""
"    public String getSubject() {\n"
"        return subject;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:309
#, no-wrap
msgid ""
"    public String getTeacher() {\n"
"        return teacher;\n"
"    }\n"
msgstr ""
"    public String getTeacher() {\n"
"        return teacher;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:313
#, no-wrap
msgid ""
"    public String getStudentGroup() {\n"
"        return studentGroup;\n"
"    }\n"
msgstr ""
"    public String getStudentGroup() {\n"
"        return studentGroup;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:317
#, no-wrap
msgid ""
"    public Timeslot getTimeslot() {\n"
"        return timeslot;\n"
"    }\n"
msgstr ""
"    public Timeslot getTimeslot() {\n"
"        return timeslot;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:321
#, no-wrap
msgid ""
"    public void setTimeslot(Timeslot timeslot) {\n"
"        this.timeslot = timeslot;\n"
"    }\n"
msgstr ""
"    public void setTimeslot(Timeslot timeslot) {\n"
"        this.timeslot = timeslot;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:325
#, no-wrap
msgid ""
"    public Room getRoom() {\n"
"        return room;\n"
"    }\n"
msgstr ""
"    public Room getRoom() {\n"
"        return room;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:329
#, no-wrap
msgid ""
"    public void setRoom(Room room) {\n"
"        this.room = room;\n"
"    }\n"
msgstr ""
"    public void setRoom(Room room) {\n"
"        this.room = room;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:334
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString() {\n"
"        return subject + \"(\" + id + \")\";\n"
"    }\n"
msgstr ""
"    @Override\n"
"    public String toString() {\n"
"        return subject + \"(\" + id + \")\";\n"
"    }\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:341
#, fuzzy
msgid "The `Lesson` class has an `@PlanningEntity` annotation, so OptaPlanner knows that this class changes during solving because it contains one or more planning variables."
msgstr "A classe `Lesson` tem uma anotação `@PlanningEntity` , de modo que o OptaPlanner sabe que essa classe muda durante a solução porque contém uma ou mais variáveis de planejamento."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:344
#, fuzzy
msgid "The `timeslot` field has an `@PlanningVariable` annotation, so OptaPlanner knows that it can change its value.  In order to find potential Timeslot instances to assign to this field, OptaPlanner uses the variable type to connect to a value range provider that provides a List<Timeslot> to pick from."
msgstr "O campo `timeslot` tem uma anotação `@PlanningVariable` , portanto o OptaPlanner sabe que pode alterar seu valor. Para encontrar possíveis instâncias de Timeslot a serem atribuídas a esse campo, o OptaPlanner usa o tipo de variável para se conectar a um provedor de intervalo de valores que fornece uma List<Timeslot> para escolha."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:346
#, fuzzy
msgid "The `room` field also has an `@PlanningVariable` annotation, for the same reasons."
msgstr "O campo `room` também tem uma anotação `@PlanningVariable` , pelos mesmos motivos."

#. type: delimited block =
#: upstream/_guides/optaplanner.adoc:353
#, fuzzy
msgid "Determining the `@PlanningVariable` fields for an arbitrary constraint solving use case is often challenging the first time.  Read https://docs.optaplanner.org/latestFinal/optaplanner-docs/html_single/index.html#domainModelingGuide[the domain modeling guidelines] to avoid common pitfalls."
msgstr "Determinar os campos `@PlanningVariable` para um caso de uso de solução de restrições arbitrárias costuma ser um desafio na primeira vez. Leia link:https://docs.optaplanner.org/latestFinal/optaplanner-docs/html_single/index.html#domainModelingGuide[as diretrizes de modelagem de domínio] para evitar armadilhas comuns."

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:355
#, fuzzy, no-wrap
msgid "Define the constraints and calculate the score"
msgstr "Definir as restrições e calcular a pontuação"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:361
#, fuzzy
msgid "A _score_ represents the quality of a specific solution.  The higher, the better.  OptaPlanner looks for the best solution, which is the solution with the highest score found in the available time.  It might be the _optimal_ solution."
msgstr "Uma _pontuação_ representa a qualidade de uma solução específica. Quanto mais alta, melhor. O OptaPlanner procura a melhor solução, que é a solução com a maior pontuação encontrada no tempo disponível. Ela pode ser a solução _ideal_ ."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:364
#, fuzzy
msgid "Because this use case has hard and soft constraints, use the `HardSoftScore` class to represent the score:"
msgstr "Como esse caso de uso tem restrições rígidas e flexíveis, use a classe `HardSoftScore` para representar a pontuação:"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:366
#, fuzzy
msgid "Hard constraints must not be broken. For example: _A room can have at most one lesson at the same time._"
msgstr "As restrições rígidas não podem ser violadas. Por exemplo: _Uma sala pode ter no máximo uma aula ao mesmo tempo._"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:367
#, fuzzy
msgid "Soft constraints should not be broken. For example: _A teacher prefers to teach in a single room._"
msgstr "As restrições flexíveis não devem ser quebradas. Por exemplo: _Um professor prefere dar aulas em uma única sala._"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:371
#, fuzzy
msgid "Hard constraints are weighted against other hard constraints.  Soft constraints are weighted too, against other soft constraints.  *Hard constraints always outweigh soft constraints*, regardless of their respective weights."
msgstr "As restrições rígidas são ponderadas em relação a outras restrições rígidas. As restrições flexíveis também são ponderadas em relação a outras restrições flexíveis. As restrições rígidas *sempre superam as restrições flex* íveis, independentemente de seus respectivos pesos."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:373
#, fuzzy
msgid "To calculate the score, you could implement an `EasyScoreCalculator` class:"
msgstr "Para calcular a pontuação, o senhor poderia implementar uma classe `EasyScoreCalculator` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:377
#, no-wrap
msgid "public class TimeTableEasyScoreCalculator implements EasyScoreCalculator<TimeTable, HardSoftScore> {\n"
msgstr "public class TimeTableEasyScoreCalculator implements EasyScoreCalculator<TimeTable, HardSoftScore> {\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:405
#, no-wrap
msgid ""
"    @Override\n"
"    public HardSoftScore calculateScore(TimeTable timeTable) {\n"
"        List<Lesson> lessonList = timeTable.getLessonList();\n"
"        int hardScore = 0;\n"
"        for (Lesson a : lessonList) {\n"
"            for (Lesson b : lessonList) {\n"
"                if (a.getTimeslot() != null && a.getTimeslot().equals(b.getTimeslot())\n"
"                        && a.getId() < b.getId()) {\n"
"                    // A room can accommodate at most one lesson at the same time.\n"
"                    if (a.getRoom() != null && a.getRoom().equals(b.getRoom())) {\n"
"                        hardScore--;\n"
"                    }\n"
"                    // A teacher can teach at most one lesson at the same time.\n"
"                    if (a.getTeacher().equals(b.getTeacher())) {\n"
"                        hardScore--;\n"
"                    }\n"
"                    // A student can attend at most one lesson at the same time.\n"
"                    if (a.getStudentGroup().equals(b.getStudentGroup())) {\n"
"                        hardScore--;\n"
"                    }\n"
"                }\n"
"            }\n"
"        }\n"
"        int softScore = 0;\n"
"        // Soft constraints are only implemented in the optaplanner-quickstarts code\n"
"        return HardSoftScore.of(hardScore, softScore);\n"
"    }\n"
msgstr ""
"    @Override\n"
"    public HardSoftScore calculateScore(TimeTable timeTable) {\n"
"        List<Lesson> lessonList = timeTable.getLessonList();\n"
"        int hardScore = 0;\n"
"        for (Lesson a : lessonList) {\n"
"            for (Lesson b : lessonList) {\n"
"                if (a.getTimeslot() != null && a.getTimeslot().equals(b.getTimeslot())\n"
"                        && a.getId() < b.getId()) {\n"
"                    // A room can accommodate at most one lesson at the same time.\n"
"                    if (a.getRoom() != null && a.getRoom().equals(b.getRoom())) {\n"
"                        hardScore--;\n"
"                    }\n"
"                    // A teacher can teach at most one lesson at the same time.\n"
"                    if (a.getTeacher().equals(b.getTeacher())) {\n"
"                        hardScore--;\n"
"                    }\n"
"                    // A student can attend at most one lesson at the same time.\n"
"                    if (a.getStudentGroup().equals(b.getStudentGroup())) {\n"
"                        hardScore--;\n"
"                    }\n"
"                }\n"
"            }\n"
"        }\n"
"        int softScore = 0;\n"
"        // Soft constraints are only implemented in the optaplanner-quickstarts code\n"
"        return HardSoftScore.of(hardScore, softScore);\n"
"    }\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:412
#, fuzzy
msgid "Unfortunately **that does not scale well**, because it is non-incremental: every time a lesson is assigned to a different time slot or room, all lessons are re-evaluated to calculate the new score."
msgstr "Infelizmente, *isso não é bem dimensionado* , porque não é incremental: toda vez que uma aula é atribuída a um horário ou sala diferente, todas as aulas são reavaliadas para calcular a nova pontuação."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:416
#, fuzzy
msgid "Instead, create a `src/main/java/org/acme/optaplanner/solver/TimeTableConstraintProvider.java` class to perform incremental score calculation.  It uses OptaPlanner's ConstraintStream API which is inspired by Java Streams and SQL:"
msgstr "Em vez disso, crie uma classe `src/main/java/org/acme/optaplanner/solver/TimeTableConstraintProvider.java` para executar o cálculo da pontuação incremental. Ela usa a API ConstraintStream do OptaPlanner, que é inspirada em Java Streams e SQL:"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:420 upstream/_guides/optaplanner.adoc:747
#, no-wrap
msgid "package org.acme.optaplanner.solver;\n"
msgstr "package org.acme.optaplanner.solver;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:427
#, no-wrap
msgid ""
"import org.acme.optaplanner.domain.Lesson;\n"
"import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScore;\n"
"import org.optaplanner.core.api.score.stream.Constraint;\n"
"import org.optaplanner.core.api.score.stream.ConstraintFactory;\n"
"import org.optaplanner.core.api.score.stream.ConstraintProvider;\n"
"import org.optaplanner.core.api.score.stream.Joiners;\n"
msgstr ""
"import org.acme.optaplanner.domain.Lesson;\n"
"import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScore;\n"
"import org.optaplanner.core.api.score.stream.Constraint;\n"
"import org.optaplanner.core.api.score.stream.ConstraintFactory;\n"
"import org.optaplanner.core.api.score.stream.ConstraintProvider;\n"
"import org.optaplanner.core.api.score.stream.Joiners;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:429
#, no-wrap
msgid "public class TimeTableConstraintProvider implements ConstraintProvider {\n"
msgstr "public class TimeTableConstraintProvider implements ConstraintProvider {\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:440
#, no-wrap
msgid ""
"    @Override\n"
"    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n"
"        return new Constraint[] {\n"
"                // Hard constraints\n"
"                roomConflict(constraintFactory),\n"
"                teacherConflict(constraintFactory),\n"
"                studentGroupConflict(constraintFactory),\n"
"                // Soft constraints are only implemented in the optaplanner-quickstarts code\n"
"        };\n"
"    }\n"
msgstr ""
"    @Override\n"
"    public Constraint[] defineConstraints(ConstraintFactory constraintFactory) {\n"
"        return new Constraint[] {\n"
"                // Hard constraints\n"
"                roomConflict(constraintFactory),\n"
"                teacherConflict(constraintFactory),\n"
"                studentGroupConflict(constraintFactory),\n"
"                // Soft constraints are only implemented in the optaplanner-quickstarts code\n"
"        };\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:443
#, no-wrap
msgid ""
"    Constraint roomConflict(ConstraintFactory constraintFactory) {\n"
"        // A room can accommodate at most one lesson at the same time.\n"
msgstr ""
"    Constraint roomConflict(ConstraintFactory constraintFactory) {\n"
"        // A room can accommodate at most one lesson at the same time.\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:459
#, no-wrap
msgid ""
"        // Select a lesson ...\n"
"        return constraintFactory\n"
"                .forEach(Lesson.class)\n"
"                // ... and pair it with another lesson ...\n"
"                .join(Lesson.class,\n"
"                        // ... in the same timeslot ...\n"
"                        Joiners.equal(Lesson::getTimeslot),\n"
"                        // ... in the same room ...\n"
"                        Joiners.equal(Lesson::getRoom),\n"
"                        // ... and the pair is unique (different id, no reverse pairs) ...\n"
"                        Joiners.lessThan(Lesson::getId))\n"
"                // ... then penalize each pair with a hard weight.\n"
"                .penalize(HardSoftScore.ONE_HARD)\n"
"                .asConstraint(\"Room conflict\");\n"
"    }\n"
msgstr ""
"        // Select a lesson ...\n"
"        return constraintFactory\n"
"                .forEach(Lesson.class)\n"
"                // ... and pair it with another lesson ...\n"
"                .join(Lesson.class,\n"
"                        // ... in the same timeslot ...\n"
"                        Joiners.equal(Lesson::getTimeslot),\n"
"                        // ... in the same room ...\n"
"                        Joiners.equal(Lesson::getRoom),\n"
"                        // ... and the pair is unique (different id, no reverse pairs) ...\n"
"                        Joiners.lessThan(Lesson::getId))\n"
"                // ... then penalize each pair with a hard weight.\n"
"                .penalize(HardSoftScore.ONE_HARD)\n"
"                .asConstraint(\"Room conflict\");\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:470
#, no-wrap
msgid ""
"    Constraint teacherConflict(ConstraintFactory constraintFactory) {\n"
"        // A teacher can teach at most one lesson at the same time.\n"
"        return constraintFactory.forEach(Lesson.class)\n"
"                .join(Lesson.class,\n"
"                        Joiners.equal(Lesson::getTimeslot),\n"
"                        Joiners.equal(Lesson::getTeacher),\n"
"                        Joiners.lessThan(Lesson::getId))\n"
"                .penalize(HardSoftScore.ONE_HARD)\n"
"                .asConstraint(\"Teacher conflict\");\n"
"    }\n"
msgstr ""
"    Constraint teacherConflict(ConstraintFactory constraintFactory) {\n"
"        // A teacher can teach at most one lesson at the same time.\n"
"        return constraintFactory.forEach(Lesson.class)\n"
"                .join(Lesson.class,\n"
"                        Joiners.equal(Lesson::getTimeslot),\n"
"                        Joiners.equal(Lesson::getTeacher),\n"
"                        Joiners.lessThan(Lesson::getId))\n"
"                .penalize(HardSoftScore.ONE_HARD)\n"
"                .asConstraint(\"Teacher conflict\");\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:481
#, no-wrap
msgid ""
"    Constraint studentGroupConflict(ConstraintFactory constraintFactory) {\n"
"        // A student can attend at most one lesson at the same time.\n"
"        return constraintFactory.forEach(Lesson.class)\n"
"                .join(Lesson.class,\n"
"                        Joiners.equal(Lesson::getTimeslot),\n"
"                        Joiners.equal(Lesson::getStudentGroup),\n"
"                        Joiners.lessThan(Lesson::getId))\n"
"                .penalize(HardSoftScore.ONE_HARD)\n"
"                .asConstraint(\"Student group conflict\");\n"
"    }\n"
msgstr ""
"    Constraint studentGroupConflict(ConstraintFactory constraintFactory) {\n"
"        // A student can attend at most one lesson at the same time.\n"
"        return constraintFactory.forEach(Lesson.class)\n"
"                .join(Lesson.class,\n"
"                        Joiners.equal(Lesson::getTimeslot),\n"
"                        Joiners.equal(Lesson::getStudentGroup),\n"
"                        Joiners.lessThan(Lesson::getId))\n"
"                .penalize(HardSoftScore.ONE_HARD)\n"
"                .asConstraint(\"Student group conflict\");\n"
"    }\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:486
#, fuzzy
msgid "The `ConstraintProvider` scales an order of magnitude better than the `EasyScoreCalculator`: __O__(n) instead of __O__(n²)."
msgstr "O `ConstraintProvider` é escalonado em uma ordem de magnitude melhor do que o `EasyScoreCalculator` : _O_ (n) em vez de _O_ (n²)."

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:487
#, fuzzy, no-wrap
msgid "Gather the domain objects in a planning solution"
msgstr "Reunir os objetos de domínio em uma solução de planejamento"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:492
#, fuzzy
msgid "A `TimeTable` wraps all `Timeslot`, `Room`, and `Lesson` instances of a single dataset.  Furthermore, because it contains all lessons, each with a specific planning variable state, it is a _planning solution_ and it has a score:"
msgstr "Um `TimeTable` envolve todas as instâncias `Timeslot` , `Room` e `Lesson` de um único conjunto de dados. Além disso, por conter todas as lições, cada uma com um estado específico de variável de planejamento, é uma _solução de planejamento_ e tem uma pontuação:"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:495
#, fuzzy
msgid "If lessons are still unassigned, then it is an _uninitialized_ solution, for example, a solution with the score `-4init/0hard/0soft`."
msgstr "Se as aulas ainda não foram atribuídas, trata-se de uma solução _não inicializada_ , por exemplo, uma solução com a pontuação `-4init/0hard/0soft` ."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:497
#, fuzzy
msgid "If it breaks hard constraints, then it is an _infeasible_ solution, for example, a solution with the score `-2hard/-3soft`."
msgstr "Se ela quebrar restrições rígidas, será uma solução _inviável_ , por exemplo, uma solução com a pontuação `-2hard/-3soft` ."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:499
#, fuzzy
msgid "If it adheres to all hard constraints, then it is a _feasible_ solution, for example, a solution with the score `0hard/-7soft`."
msgstr "Se a solução obedecer a todas as restrições rígidas, será uma solução _viável_ , por exemplo, uma solução com a pontuação `0hard/-7soft` ."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:501
#, fuzzy
msgid "Create the `src/main/java/org/acme/optaplanner/domain/TimeTable.java` class:"
msgstr "Crie a classe `src/main/java/org/acme/optaplanner/domain/TimeTable.java` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:507
#, no-wrap
msgid "import java.util.List;\n"
msgstr "import java.util.List;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:514
#, no-wrap
msgid ""
"import org.optaplanner.core.api.domain.solution.PlanningEntityCollectionProperty;\n"
"import org.optaplanner.core.api.domain.solution.PlanningScore;\n"
"import org.optaplanner.core.api.domain.solution.PlanningSolution;\n"
"import org.optaplanner.core.api.domain.solution.ProblemFactCollectionProperty;\n"
"import org.optaplanner.core.api.domain.valuerange.ValueRangeProvider;\n"
"import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScore;\n"
msgstr ""
"import org.optaplanner.core.api.domain.solution.PlanningEntityCollectionProperty;\n"
"import org.optaplanner.core.api.domain.solution.PlanningScore;\n"
"import org.optaplanner.core.api.domain.solution.PlanningSolution;\n"
"import org.optaplanner.core.api.domain.solution.ProblemFactCollectionProperty;\n"
"import org.optaplanner.core.api.domain.valuerange.ValueRangeProvider;\n"
"import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScore;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:517
#, no-wrap
msgid ""
"@PlanningSolution\n"
"public class TimeTable {\n"
msgstr ""
"@PlanningSolution\n"
"public class TimeTable {\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:526
#, no-wrap
msgid ""
"    @ValueRangeProvider\n"
"    @ProblemFactCollectionProperty\n"
"    private List<Timeslot> timeslotList;\n"
"    @ValueRangeProvider\n"
"    @ProblemFactCollectionProperty\n"
"    private List<Room> roomList;\n"
"    @PlanningEntityCollectionProperty\n"
"    private List<Lesson> lessonList;\n"
msgstr ""
"    @ValueRangeProvider\n"
"    @ProblemFactCollectionProperty\n"
"    private List<Timeslot> timeslotList;\n"
"    @ValueRangeProvider\n"
"    @ProblemFactCollectionProperty\n"
"    private List<Room> roomList;\n"
"    @PlanningEntityCollectionProperty\n"
"    private List<Lesson> lessonList;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:529
#, no-wrap
msgid ""
"    @PlanningScore\n"
"    private HardSoftScore score;\n"
msgstr ""
"    @PlanningScore\n"
"    private HardSoftScore score;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:532
#, no-wrap
msgid ""
"    public TimeTable() {\n"
"    }\n"
msgstr ""
"    public TimeTable() {\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:538
#, no-wrap
msgid ""
"    public TimeTable(List<Timeslot> timeslotList, List<Room> roomList, List<Lesson> lessonList) {\n"
"        this.timeslotList = timeslotList;\n"
"        this.roomList = roomList;\n"
"        this.lessonList = lessonList;\n"
"    }\n"
msgstr ""
"    public TimeTable(List<Timeslot> timeslotList, List<Room> roomList, List<Lesson> lessonList) {\n"
"        this.timeslotList = timeslotList;\n"
"        this.roomList = roomList;\n"
"        this.lessonList = lessonList;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:542
#, no-wrap
msgid ""
"    public List<Timeslot> getTimeslotList() {\n"
"        return timeslotList;\n"
"    }\n"
msgstr ""
"    public List<Timeslot> getTimeslotList() {\n"
"        return timeslotList;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:546
#, no-wrap
msgid ""
"    public List<Room> getRoomList() {\n"
"        return roomList;\n"
"    }\n"
msgstr ""
"    public List<Room> getRoomList() {\n"
"        return roomList;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:550
#, no-wrap
msgid ""
"    public List<Lesson> getLessonList() {\n"
"        return lessonList;\n"
"    }\n"
msgstr ""
"    public List<Lesson> getLessonList() {\n"
"        return lessonList;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:554
#, no-wrap
msgid ""
"    public HardSoftScore getScore() {\n"
"        return score;\n"
"    }\n"
msgstr ""
"    public HardSoftScore getScore() {\n"
"        return score;\n"
"    }\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:560
#, fuzzy
msgid "The `TimeTable` class has an `@PlanningSolution` annotation, so OptaPlanner knows that this class contains all the input and output data."
msgstr "A classe `TimeTable` tem uma anotação `@PlanningSolution` , de modo que o OptaPlanner sabe que essa classe contém todos os dados de entrada e saída."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:562
#, fuzzy
msgid "Specifically, this class is the input of the problem:"
msgstr "Especificamente, essa classe é a entrada do problema:"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:564
#, fuzzy
msgid "A `timeslotList` field with all time slots"
msgstr "Um campo `timeslotList` com todos os intervalos de tempo"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:565 upstream/_guides/optaplanner.adoc:567
#, fuzzy
msgid "This is a list of problem facts, because they do not change during solving."
msgstr "Essa é uma lista de fatos do problema, pois eles não mudam durante a solução."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:566
#, fuzzy
msgid "A `roomList` field with all rooms"
msgstr "Um campo `roomList` com todos os quartos"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:568
#, fuzzy
msgid "A `lessonList` field with all lessons"
msgstr "Um campo `lessonList` com todas as lições"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:569
#, fuzzy
msgid "This is a list of planning entities, because they change during solving."
msgstr "Esta é uma lista de entidades de planejamento, pois elas mudam durante a solução."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:570
#, fuzzy
msgid "Of each `Lesson`:"
msgstr "De cada `Lesson` :"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:572
#, fuzzy
msgid "The values of the `timeslot` and `room` fields are typically still `null`, so unassigned.  They are planning variables."
msgstr "Os valores dos campos `timeslot` e `room` normalmente ainda são `null` , portanto, não atribuídos. Eles são variáveis de planejamento."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:574
#, fuzzy
msgid "The other fields, such as `subject`, `teacher` and `studentGroup`, are filled in.  These fields are problem properties."
msgstr "Os outros campos, como `subject` , `teacher` e `studentGroup` , são preenchidos. Esses campos são propriedades do problema."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:576
#, fuzzy
msgid "However, this class is also the output of the solution:"
msgstr "No entanto, essa classe também é o resultado da solução:"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:578
#, fuzzy
msgid "A `lessonList` field for which each `Lesson` instance has non-null `timeslot` and `room` fields after solving"
msgstr "Um campo `lessonList` para o qual cada instância `Lesson` tem campos `timeslot` e `room` não nulos depois de resolver"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:579
#, fuzzy
msgid "A `score` field that represents the quality of the output solution, for example, `0hard/-5soft`"
msgstr "Um campo `score` que representa a qualidade da solução de saída, por exemplo, `0hard/-5soft`"

#. type: Title ===
#: upstream/_guides/optaplanner.adoc:580
#, fuzzy, no-wrap
msgid "The value range providers"
msgstr "Os provedores de faixa de valores"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:586
#, fuzzy
msgid "The `timeslotList` field is a value range provider.  It holds the `Timeslot` instances which OptaPlanner can pick from to assign to the `timeslot` field of `Lesson` instances.  The `timeslotList` field has an `@ValueRangeProvider` annotation to connect the `@PlanningVariable` with the `@ValueRangeProvider`, by matching the type of the planning variable with the type returned by the value range provider."
msgstr "O campo `timeslotList` é um provedor de intervalo de valores. Ele contém as instâncias `Timeslot` que o OptaPlanner pode escolher para atribuir ao campo `timeslot` das instâncias `Lesson` . O campo `timeslotList` tem uma anotação `@ValueRangeProvider` para conectar o `@PlanningVariable` com o `@ValueRangeProvider` , fazendo a correspondência do tipo da variável de planejamento com o tipo retornado pelo provedor de intervalo de valores."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:588
#, fuzzy
msgid "Following the same logic, the `roomList` field also has an `@ValueRangeProvider` annotation."
msgstr "Seguindo a mesma lógica, o campo `roomList` também tem uma anotação `@ValueRangeProvider` ."

#. type: Title ===
#: upstream/_guides/optaplanner.adoc:589
#, fuzzy, no-wrap
msgid "The problem fact and planning entity properties"
msgstr "O fato do problema e as propriedades da entidade de planejamento"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:594
#, fuzzy
msgid "Furthermore, OptaPlanner needs to know which `Lesson` instances it can change as well as how to retrieve the `Timeslot` and `Room` instances used for score calculation by your `TimeTableConstraintProvider`."
msgstr "Além disso, o OptaPlanner precisa saber quais instâncias do `Lesson` podem ser alteradas e como recuperar as instâncias do `Timeslot` e do `Room` usadas para o cálculo da pontuação pelo seu `TimeTableConstraintProvider` ."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:597
#, fuzzy
msgid "The `timeslotList` and `roomList` fields have an `@ProblemFactCollectionProperty` annotation, so your `TimeTableConstraintProvider` can select _from_ those instances."
msgstr "Os campos `timeslotList` e `roomList` têm uma anotação `@ProblemFactCollectionProperty` , portanto, o `TimeTableConstraintProvider` pode selecionar _essas_ instâncias."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:601
#, fuzzy
msgid "The `lessonList` has an `@PlanningEntityCollectionProperty` annotation, so OptaPlanner can change them during solving and your `TimeTableConstraintProvider` can select _from_ those too."
msgstr "O site `lessonList` tem uma anotação `@PlanningEntityCollectionProperty` , de modo que o OptaPlanner pode alterá-las durante a solução e o site `TimeTableConstraintProvider` também pode _selecioná-las_ ."

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:602
#, fuzzy, no-wrap
msgid "Create the solver service"
msgstr "Criar o serviço do solucionador"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:609
#, fuzzy
msgid "Now you are ready to put everything together and create a REST service.  But solving planning problems on REST threads causes HTTP timeout issues.  Therefore, the Quarkus extension injects a `SolverManager` instance, which runs solvers in a separate thread pool and can solve multiple datasets in parallel."
msgstr "Agora o senhor está pronto para juntar tudo e criar um serviço REST. Mas a solução de problemas de planejamento em threads REST causa problemas de tempo limite de HTTP. Portanto, a extensão Quarkus injeta uma instância `SolverManager` , que executa solucionadores em um pool de threads separado e pode resolver vários conjuntos de dados em paralelo."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:611
#, fuzzy
msgid "Create the `src/main/java/org/acme/optaplanner/rest/TimeTableResource.java` class:"
msgstr "Crie a classe `src/main/java/org/acme/optaplanner/rest/TimeTableResource.java` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:615 upstream/_guides/optaplanner.adoc:813
#: upstream/_guides/optaplanner.adoc:955 upstream/_guides/optaplanner.adoc:1056
#, no-wrap
msgid "package org.acme.optaplanner.rest;\n"
msgstr "package org.acme.optaplanner.rest;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:621
#, no-wrap
msgid ""
"import java.util.UUID;\n"
"import java.util.concurrent.ExecutionException;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""
"import java.util.UUID;\n"
"import java.util.concurrent.ExecutionException;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:625
#, no-wrap
msgid ""
"import org.acme.optaplanner.domain.TimeTable;\n"
"import org.optaplanner.core.api.solver.SolverJob;\n"
"import org.optaplanner.core.api.solver.SolverManager;\n"
msgstr ""
"import org.acme.optaplanner.domain.TimeTable;\n"
"import org.optaplanner.core.api.solver.SolverJob;\n"
"import org.optaplanner.core.api.solver.SolverManager;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:628 upstream/_guides/optaplanner.adoc:974
#, no-wrap
msgid ""
"@Path(\"/timeTable\")\n"
"public class TimeTableResource {\n"
msgstr ""
"@Path(\"/timeTable\")\n"
"public class TimeTableResource {\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:631
#, no-wrap
msgid ""
"    @Inject\n"
"    SolverManager<TimeTable, UUID> solverManager;\n"
msgstr ""
"    @Inject\n"
"    SolverManager<TimeTable, UUID> solverManager;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:647
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/solve\")\n"
"    public TimeTable solve(TimeTable problem) {\n"
"        UUID problemId = UUID.randomUUID();\n"
"        // Submit the problem to start solving\n"
"        SolverJob<TimeTable, UUID> solverJob = solverManager.solve(problemId, problem);\n"
"        TimeTable solution;\n"
"        try {\n"
"            // Wait until the solving ends\n"
"            solution = solverJob.getFinalBestSolution();\n"
"        } catch (InterruptedException | ExecutionException e) {\n"
"            throw new IllegalStateException(\"Solving failed.\", e);\n"
"        }\n"
"        return solution;\n"
"    }\n"
msgstr ""
"    @POST\n"
"    @Path(\"/solve\")\n"
"    public TimeTable solve(TimeTable problem) {\n"
"        UUID problemId = UUID.randomUUID();\n"
"        // Submit the problem to start solving\n"
"        SolverJob<TimeTable, UUID> solverJob = solverManager.solve(problemId, problem);\n"
"        TimeTable solution;\n"
"        try {\n"
"            // Wait until the solving ends\n"
"            solution = solverJob.getFinalBestSolution();\n"
"        } catch (InterruptedException | ExecutionException e) {\n"
"            throw new IllegalStateException(\"Solving failed.\", e);\n"
"        }\n"
"        return solution;\n"
"    }\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:654
#, fuzzy
msgid "For simplicity's sake, this initial implementation waits for the solver to finish, which can still cause an HTTP timeout.  The _complete_ implementation avoids HTTP timeouts much more elegantly."
msgstr "Para simplificar, essa implementação inicial aguarda a conclusão do solucionador, o que ainda pode causar um tempo limite de HTTP. A implementação _completa_ evita os tempos limite do HTTP de forma muito mais elegante."

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:655
#, fuzzy, no-wrap
msgid "Set the termination time"
msgstr "Definir o tempo de término"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:660
#, fuzzy
msgid "Without a termination setting or a termination event, the solver runs forever.  To avoid that, limit the solving time to five seconds.  That is short enough to avoid the HTTP timeout."
msgstr "Sem uma configuração de encerramento ou um evento de encerramento, o solver é executado para sempre. Para evitar isso, limite o tempo de solução a cinco segundos. Isso é curto o suficiente para evitar o tempo limite do HTTP."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:662
#, fuzzy
msgid "Create the `src/main/resources/application.properties` file:"
msgstr "Crie o arquivo `src/main/resources/application.properties` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:668
#, no-wrap
msgid ""
"# The solver runs only for 5 seconds to avoid an HTTP timeout in this simple implementation.\n"
"# It's recommended to run for at least 5 minutes (\"5m\") otherwise.\n"
"quarkus.optaplanner.solver.termination.spent-limit=5s\n"
msgstr ""
"# The solver runs only for 5 seconds to avoid an HTTP timeout in this simple implementation.\n"
"# It's recommended to run for at least 5 minutes (\"5m\") otherwise.\n"
"quarkus.optaplanner.solver.termination.spent-limit=5s\n"

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:671
#, fuzzy, no-wrap
msgid "Run the application"
msgstr "Executar o aplicativo"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:674
#, fuzzy
msgid "First start the application:"
msgstr "Primeiro, inicie o aplicativo:"

#. type: Title ===
#: upstream/_guides/optaplanner.adoc:677
#, fuzzy, no-wrap
msgid "Try the application"
msgstr "Experimente o aplicativo"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:682
#, fuzzy
msgid "Now that the application is running, you can test the REST service.  You can use any REST client you wish.  The following example uses the Linux command `curl` to send a POST request:"
msgstr "Agora que o aplicativo está em execução, o senhor pode testar o serviço REST. O senhor pode usar qualquer cliente REST que desejar. O exemplo a seguir usa o comando do Linux `curl` para enviar uma solicitação POST:"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:686
#, no-wrap
msgid "$ curl -i -X POST http://localhost:8080/timeTable/solve -H \"Content-Type:application/json\" -d '{\"timeslotList\":[{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"08:30:00\",\"endTime\":\"09:30:00\"},{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"09:30:00\",\"endTime\":\"10:30:00\"}],\"roomList\":[{\"name\":\"Room A\"},{\"name\":\"Room B\"}],\"lessonList\":[{\"id\":1,\"subject\":\"Math\",\"teacher\":\"A. Turing\",\"studentGroup\":\"9th grade\"},{\"id\":2,\"subject\":\"Chemistry\",\"teacher\":\"M. Curie\",\"studentGroup\":\"9th grade\"},{\"id\":3,\"subject\":\"French\",\"teacher\":\"M. Curie\",\"studentGroup\":\"10th grade\"},{\"id\":4,\"subject\":\"History\",\"teacher\":\"I. Jones\",\"studentGroup\":\"10th grade\"}]}'\n"
msgstr "$ curl -i -X POST http://localhost:8080/timeTable/solve -H \"Content-Type:application/json\" -d '{\"timeslotList\":[{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"08:30:00\",\"endTime\":\"09:30:00\"},{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"09:30:00\",\"endTime\":\"10:30:00\"}],\"roomList\":[{\"name\":\"Room A\"},{\"name\":\"Room B\"}],\"lessonList\":[{\"id\":1,\"subject\":\"Math\",\"teacher\":\"A. Turing\",\"studentGroup\":\"9th grade\"},{\"id\":2,\"subject\":\"Chemistry\",\"teacher\":\"M. Curie\",\"studentGroup\":\"9th grade\"},{\"id\":3,\"subject\":\"French\",\"teacher\":\"M. Curie\",\"studentGroup\":\"10th grade\"},{\"id\":4,\"subject\":\"History\",\"teacher\":\"I. Jones\",\"studentGroup\":\"10th grade\"}]}'\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:690
#, fuzzy
msgid "After about five seconds, according to the termination spent time defined in your `application.properties`, the service returns an output similar to the following example:"
msgstr "Após cerca de cinco segundos, de acordo com o tempo de término definido em seu site `application.properties` , o serviço retorna uma saída semelhante ao exemplo a seguir:"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:696
#, no-wrap
msgid ""
"HTTP/1.1 200\n"
"Content-Type: application/json\n"
"...\n"
msgstr ""
"HTTP/1.1 200\n"
"Content-Type: application/json\n"
"...\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:698
#, no-wrap
msgid "{\"timeslotList\":...,\"roomList\":...,\"lessonList\":[{\"id\":1,\"subject\":\"Math\",\"teacher\":\"A. Turing\",\"studentGroup\":\"9th grade\",\"timeslot\":{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"08:30:00\",\"endTime\":\"09:30:00\"},\"room\":{\"name\":\"Room A\"}},{\"id\":2,\"subject\":\"Chemistry\",\"teacher\":\"M. Curie\",\"studentGroup\":\"9th grade\",\"timeslot\":{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"09:30:00\",\"endTime\":\"10:30:00\"},\"room\":{\"name\":\"Room A\"}},{\"id\":3,\"subject\":\"French\",\"teacher\":\"M. Curie\",\"studentGroup\":\"10th grade\",\"timeslot\":{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"08:30:00\",\"endTime\":\"09:30:00\"},\"room\":{\"name\":\"Room B\"}},{\"id\":4,\"subject\":\"History\",\"teacher\":\"I. Jones\",\"studentGroup\":\"10th grade\",\"timeslot\":{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"09:30:00\",\"endTime\":\"10:30:00\"},\"room\":{\"name\":\"Room B\"}}],\"score\":\"0hard/0soft\"}\n"
msgstr "{\"timeslotList\":...,\"roomList\":...,\"lessonList\":[{\"id\":1,\"subject\":\"Math\",\"teacher\":\"A. Turing\",\"studentGroup\":\"9th grade\",\"timeslot\":{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"08:30:00\",\"endTime\":\"09:30:00\"},\"room\":{\"name\":\"Room A\"}},{\"id\":2,\"subject\":\"Chemistry\",\"teacher\":\"M. Curie\",\"studentGroup\":\"9th grade\",\"timeslot\":{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"09:30:00\",\"endTime\":\"10:30:00\"},\"room\":{\"name\":\"Room A\"}},{\"id\":3,\"subject\":\"French\",\"teacher\":\"M. Curie\",\"studentGroup\":\"10th grade\",\"timeslot\":{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"08:30:00\",\"endTime\":\"09:30:00\"},\"room\":{\"name\":\"Room B\"}},{\"id\":4,\"subject\":\"History\",\"teacher\":\"I. Jones\",\"studentGroup\":\"10th grade\",\"timeslot\":{\"dayOfWeek\":\"MONDAY\",\"startTime\":\"09:30:00\",\"endTime\":\"10:30:00\"},\"room\":{\"name\":\"Room B\"}}],\"score\":\"0hard/0soft\"}\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:703
#, fuzzy
msgid "Notice that your application assigned all four lessons to one of the two time slots and one of the two rooms.  Also notice that it conforms to all hard constraints.  For example, M. Curie's two lessons are in different time slots."
msgstr "Observe que seu aplicativo atribuiu todas as quatro aulas a um dos dois intervalos de tempo e a uma das duas salas. Observe também que ele está em conformidade com todas as restrições rígidas. Por exemplo, as duas aulas de M. Curie estão em intervalos de tempo diferentes."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:705
#, fuzzy
msgid "On the server side, the `info` log show what OptaPlanner did in those five seconds:"
msgstr "No lado do servidor, o registro `info` mostra o que o OptaPlanner fez nesses cinco segundos:"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:712
#, no-wrap
msgid ""
"... Solving started: time spent (33), best score (-8init/0hard/0soft), environment mode (REPRODUCIBLE), random (JDK with seed 0).\n"
"... Construction Heuristic phase (0) ended: time spent (73), best score (0hard/0soft), score calculation speed (459/sec), step total (4).\n"
"... Local Search phase (1) ended: time spent (5000), best score (0hard/0soft), score calculation speed (28949/sec), step total (28398).\n"
"... Solving ended: time spent (5000), best score (0hard/0soft), score calculation speed (28524/sec), phase total (2), environment mode (REPRODUCIBLE).\n"
msgstr ""
"... Solving started: time spent (33), best score (-8init/0hard/0soft), environment mode (REPRODUCIBLE), random (JDK with seed 0).\n"
"... Construction Heuristic phase (0) ended: time spent (73), best score (0hard/0soft), score calculation speed (459/sec), step total (4).\n"
"... Local Search phase (1) ended: time spent (5000), best score (0hard/0soft), score calculation speed (28949/sec), step total (28398).\n"
"... Solving ended: time spent (5000), best score (0hard/0soft), score calculation speed (28524/sec), phase total (2), environment mode (REPRODUCIBLE).\n"

#. type: Title ===
#: upstream/_guides/optaplanner.adoc:714
#, fuzzy, no-wrap
msgid "Test the application"
msgstr "Teste o aplicativo"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:717
#, fuzzy
msgid "A good application includes test coverage."
msgstr "Um bom aplicativo inclui cobertura de teste."

#. type: Title ====
#: upstream/_guides/optaplanner.adoc:718
#, fuzzy, no-wrap
msgid "Test the constraints"
msgstr "Testar as restrições"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:723
#, fuzzy
msgid "To test each constraint in isolation, use a `ConstraintVerifier` in unit tests.  It tests each constraint's corner cases in isolation from the other tests, which lowers maintenance when adding a new constraint with proper test coverage."
msgstr "Para testar cada restrição isoladamente, use um `ConstraintVerifier` nos testes unitários. Ele testa os casos de canto de cada restrição de forma isolada dos outros testes, o que reduz a manutenção ao adicionar uma nova restrição com cobertura de teste adequada."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:725
#, fuzzy
msgid "Add a `optaplanner-test` dependency in your build file:"
msgstr "Adicione uma dependência de `optaplanner-test` em seu arquivo de compilação:"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:734
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.optaplanner</groupId>\n"
"    <artifactId>optaplanner-test</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""
"<dependency>\n"
"    <groupId>org.optaplanner</groupId>\n"
"    <artifactId>optaplanner-test</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:740
#, no-wrap
msgid "testImplementation(\"org.optaplanner:optaplanner-test\")\n"
msgstr "testImplementation(\"org.optaplanner:optaplanner-test\")\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:743
#, fuzzy
msgid "Create the `src/test/java/org/acme/optaplanner/solver/TimeTableConstraintProviderTest.java` class:"
msgstr "Crie a classe `src/test/java/org/acme/optaplanner/solver/TimeTableConstraintProviderTest.java` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:752 upstream/_guides/optaplanner.adoc:820
#: upstream/_guides/optaplanner.adoc:1058
#, no-wrap
msgid "import jakarta.inject.Inject;\n"
msgstr "import jakarta.inject.Inject;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:760
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.acme.optaplanner.domain.Lesson;\n"
"import org.acme.optaplanner.domain.Room;\n"
"import org.acme.optaplanner.domain.TimeTable;\n"
"import org.acme.optaplanner.domain.Timeslot;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.optaplanner.test.api.score.stream.ConstraintVerifier;\n"
msgstr ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.acme.optaplanner.domain.Lesson;\n"
"import org.acme.optaplanner.domain.Room;\n"
"import org.acme.optaplanner.domain.TimeTable;\n"
"import org.acme.optaplanner.domain.Timeslot;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.optaplanner.test.api.score.stream.ConstraintVerifier;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:763
#, no-wrap
msgid ""
"@QuarkusTest\n"
"class TimeTableConstraintProviderTest {\n"
msgstr ""
"@QuarkusTest\n"
"class TimeTableConstraintProviderTest {\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:767
#, no-wrap
msgid ""
"    private static final Room ROOM = new Room(\"Room1\");\n"
"    private static final Timeslot TIMESLOT1 = new Timeslot(DayOfWeek.MONDAY, LocalTime.of(9,0), LocalTime.NOON);\n"
"    private static final Timeslot TIMESLOT2 = new Timeslot(DayOfWeek.TUESDAY, LocalTime.of(9,0), LocalTime.NOON);\n"
msgstr ""
"    private static final Room ROOM = new Room(\"Room1\");\n"
"    private static final Timeslot TIMESLOT1 = new Timeslot(DayOfWeek.MONDAY, LocalTime.of(9,0), LocalTime.NOON);\n"
"    private static final Timeslot TIMESLOT2 = new Timeslot(DayOfWeek.TUESDAY, LocalTime.of(9,0), LocalTime.NOON);\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:770
#, no-wrap
msgid ""
"    @Inject\n"
"    ConstraintVerifier<TimeTableConstraintProvider, TimeTable> constraintVerifier;\n"
msgstr ""
"    @Inject\n"
"    ConstraintVerifier<TimeTableConstraintProvider, TimeTable> constraintVerifier;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:776
#, no-wrap
msgid ""
"    @Test\n"
"    void roomConflict() {\n"
"        Lesson firstLesson = new Lesson(1, \"Subject1\", \"Teacher1\", \"Group1\");\n"
"        Lesson conflictingLesson = new Lesson(2, \"Subject2\", \"Teacher2\", \"Group2\");\n"
"        Lesson nonConflictingLesson = new Lesson(3, \"Subject3\", \"Teacher3\", \"Group3\");\n"
msgstr ""
"    @Test\n"
"    void roomConflict() {\n"
"        Lesson firstLesson = new Lesson(1, \"Subject1\", \"Teacher1\", \"Group1\");\n"
"        Lesson conflictingLesson = new Lesson(2, \"Subject2\", \"Teacher2\", \"Group2\");\n"
"        Lesson nonConflictingLesson = new Lesson(3, \"Subject3\", \"Teacher3\", \"Group3\");\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:779
#, no-wrap
msgid ""
"        firstLesson.setRoom(ROOM);\n"
"        firstLesson.setTimeslot(TIMESLOT1);\n"
msgstr ""
"        firstLesson.setRoom(ROOM);\n"
"        firstLesson.setTimeslot(TIMESLOT1);\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:782
#, no-wrap
msgid ""
"        conflictingLesson.setRoom(ROOM);\n"
"        conflictingLesson.setTimeslot(TIMESLOT1);\n"
msgstr ""
"        conflictingLesson.setRoom(ROOM);\n"
"        conflictingLesson.setTimeslot(TIMESLOT1);\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:785
#, no-wrap
msgid ""
"        nonConflictingLesson.setRoom(ROOM);\n"
"        nonConflictingLesson.setTimeslot(TIMESLOT2);\n"
msgstr ""
"        nonConflictingLesson.setRoom(ROOM);\n"
"        nonConflictingLesson.setTimeslot(TIMESLOT2);\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:790
#, no-wrap
msgid ""
"        constraintVerifier.verifyThat(TimeTableConstraintProvider::roomConflict)\n"
"                .given(firstLesson, conflictingLesson, nonConflictingLesson)\n"
"                .penalizesBy(1);\n"
"    }\n"
msgstr ""
"        constraintVerifier.verifyThat(TimeTableConstraintProvider::roomConflict)\n"
"                .given(firstLesson, conflictingLesson, nonConflictingLesson)\n"
"                .penalizesBy(1);\n"
"    }\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:798
#, fuzzy
msgid "This test verifies that the constraint `TimeTableConstraintProvider::roomConflict`, when given three lessons in the same room, where two lessons have the same timeslot, it penalizes with a match weight of `1`.  So with a constraint weight of `10hard` it would reduce the score by `-10hard`."
msgstr "Esse teste verifica que a restrição `TimeTableConstraintProvider::roomConflict` , quando recebe três aulas na mesma sala, em que duas aulas têm o mesmo intervalo de tempo, penaliza com um peso de correspondência de `1` . Portanto, com um peso de restrição de `10hard` , a pontuação seria reduzida em `-10hard` ."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:803
#, fuzzy
msgid "Notice how `ConstraintVerifier` ignores the constraint weight during testing - even if those constraint weights are hard coded in the `ConstraintProvider` - because constraints weights change regularly before going into production.  This way, constraint weight tweaking does not break the unit tests."
msgstr "Observe como o site `ConstraintVerifier` ignora o peso da restrição durante o teste - mesmo que esses pesos da restrição estejam codificados no site `ConstraintProvider` - porque os pesos das restrições mudam regularmente antes de entrar em produção. Dessa forma, o ajuste do peso da restrição não interrompe os testes de unidade."

#. type: Title ====
#: upstream/_guides/optaplanner.adoc:804
#, fuzzy, no-wrap
msgid "Test the solver"
msgstr "Testar o solucionador"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:807
#, fuzzy
msgid "In a JUnit test, generate a test dataset and send it to the `TimeTableResource` to solve."
msgstr "Em um teste JUnit, gere um conjunto de dados de teste e envie-o para o site `TimeTableResource` para ser resolvido."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:809
#, fuzzy
msgid "Create the `src/test/java/org/acme/optaplanner/rest/TimeTableResourceTest.java` class:"
msgstr "Crie a classe `src/test/java/org/acme/optaplanner/rest/TimeTableResourceTest.java` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:818
#, no-wrap
msgid ""
"import java.time.DayOfWeek;\n"
"import java.time.LocalTime;\n"
"import java.util.ArrayList;\n"
"import java.util.List;\n"
msgstr ""
"import java.time.DayOfWeek;\n"
"import java.time.LocalTime;\n"
"import java.util.ArrayList;\n"
"import java.util.List;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:829
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.acme.optaplanner.domain.Room;\n"
"import org.acme.optaplanner.domain.Timeslot;\n"
"import org.acme.optaplanner.domain.Lesson;\n"
"import org.acme.optaplanner.domain.TimeTable;\n"
"import org.acme.optaplanner.rest.TimeTableResource;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.junit.jupiter.api.Timeout;\n"
msgstr ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.acme.optaplanner.domain.Room;\n"
"import org.acme.optaplanner.domain.Timeslot;\n"
"import org.acme.optaplanner.domain.Lesson;\n"
"import org.acme.optaplanner.domain.TimeTable;\n"
"import org.acme.optaplanner.rest.TimeTableResource;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.junit.jupiter.api.Timeout;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:833 upstream/_guides/optaplanner.adoc:1069
#, no-wrap
msgid ""
"import static org.junit.jupiter.api.Assertions.assertFalse;\n"
"import static org.junit.jupiter.api.Assertions.assertNotNull;\n"
"import static org.junit.jupiter.api.Assertions.assertTrue;\n"
msgstr ""
"import static org.junit.jupiter.api.Assertions.assertFalse;\n"
"import static org.junit.jupiter.api.Assertions.assertNotNull;\n"
"import static org.junit.jupiter.api.Assertions.assertTrue;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:836 upstream/_guides/optaplanner.adoc:1072
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class TimeTableResourceTest {\n"
msgstr ""
"@QuarkusTest\n"
"public class TimeTableResourceTest {\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:839 upstream/_guides/optaplanner.adoc:1075
#, no-wrap
msgid ""
"    @Inject\n"
"    TimeTableResource timeTableResource;\n"
msgstr ""
"    @Inject\n"
"    TimeTableResource timeTableResource;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:852
#, no-wrap
msgid ""
"    @Test\n"
"    @Timeout(600_000)\n"
"    public void solve() {\n"
"        TimeTable problem = generateProblem();\n"
"        TimeTable solution = timeTableResource.solve(problem);\n"
"        assertFalse(solution.getLessonList().isEmpty());\n"
"        for (Lesson lesson : solution.getLessonList()) {\n"
"            assertNotNull(lesson.getTimeslot());\n"
"            assertNotNull(lesson.getRoom());\n"
"        }\n"
"        assertTrue(solution.getScore().isFeasible());\n"
"    }\n"
msgstr ""
"    @Test\n"
"    @Timeout(600_000)\n"
"    public void solve() {\n"
"        TimeTable problem = generateProblem();\n"
"        TimeTable solution = timeTableResource.solve(problem);\n"
"        assertFalse(solution.getLessonList().isEmpty());\n"
"        for (Lesson lesson : solution.getLessonList()) {\n"
"            assertNotNull(lesson.getTimeslot());\n"
"            assertNotNull(lesson.getRoom());\n"
"        }\n"
"        assertTrue(solution.getScore().isFeasible());\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:860
#, no-wrap
msgid ""
"    private TimeTable generateProblem() {\n"
"        List<Timeslot> timeslotList = new ArrayList<>();\n"
"        timeslotList.add(new Timeslot(DayOfWeek.MONDAY, LocalTime.of(8, 30), LocalTime.of(9, 30)));\n"
"        timeslotList.add(new Timeslot(DayOfWeek.MONDAY, LocalTime.of(9, 30), LocalTime.of(10, 30)));\n"
"        timeslotList.add(new Timeslot(DayOfWeek.MONDAY, LocalTime.of(10, 30), LocalTime.of(11, 30)));\n"
"        timeslotList.add(new Timeslot(DayOfWeek.MONDAY, LocalTime.of(13, 30), LocalTime.of(14, 30)));\n"
"        timeslotList.add(new Timeslot(DayOfWeek.MONDAY, LocalTime.of(14, 30), LocalTime.of(15, 30)));\n"
msgstr ""
"    private TimeTable generateProblem() {\n"
"        List<Timeslot> timeslotList = new ArrayList<>();\n"
"        timeslotList.add(new Timeslot(DayOfWeek.MONDAY, LocalTime.of(8, 30), LocalTime.of(9, 30)));\n"
"        timeslotList.add(new Timeslot(DayOfWeek.MONDAY, LocalTime.of(9, 30), LocalTime.of(10, 30)));\n"
"        timeslotList.add(new Timeslot(DayOfWeek.MONDAY, LocalTime.of(10, 30), LocalTime.of(11, 30)));\n"
"        timeslotList.add(new Timeslot(DayOfWeek.MONDAY, LocalTime.of(13, 30), LocalTime.of(14, 30)));\n"
"        timeslotList.add(new Timeslot(DayOfWeek.MONDAY, LocalTime.of(14, 30), LocalTime.of(15, 30)));\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:865
#, no-wrap
msgid ""
"        List<Room> roomList = new ArrayList<>();\n"
"        roomList.add(new Room(\"Room A\"));\n"
"        roomList.add(new Room(\"Room B\"));\n"
"        roomList.add(new Room(\"Room C\"));\n"
msgstr ""
"        List<Room> roomList = new ArrayList<>();\n"
"        roomList.add(new Room(\"Room A\"));\n"
"        roomList.add(new Room(\"Room B\"));\n"
"        roomList.add(new Room(\"Room C\"));\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:872
#, no-wrap
msgid ""
"        List<Lesson> lessonList = new ArrayList<>();\n"
"        lessonList.add(new Lesson(101L, \"Math\", \"B. May\", \"9th grade\"));\n"
"        lessonList.add(new Lesson(102L, \"Physics\", \"M. Curie\", \"9th grade\"));\n"
"        lessonList.add(new Lesson(103L, \"Geography\", \"M. Polo\", \"9th grade\"));\n"
"        lessonList.add(new Lesson(104L, \"English\", \"I. Jones\", \"9th grade\"));\n"
"        lessonList.add(new Lesson(105L, \"Spanish\", \"P. Cruz\", \"9th grade\"));\n"
msgstr ""
"        List<Lesson> lessonList = new ArrayList<>();\n"
"        lessonList.add(new Lesson(101L, \"Math\", \"B. May\", \"9th grade\"));\n"
"        lessonList.add(new Lesson(102L, \"Physics\", \"M. Curie\", \"9th grade\"));\n"
"        lessonList.add(new Lesson(103L, \"Geography\", \"M. Polo\", \"9th grade\"));\n"
"        lessonList.add(new Lesson(104L, \"English\", \"I. Jones\", \"9th grade\"));\n"
"        lessonList.add(new Lesson(105L, \"Spanish\", \"P. Cruz\", \"9th grade\"));\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:880
#, no-wrap
msgid ""
"        lessonList.add(new Lesson(201L, \"Math\", \"B. May\", \"10th grade\"));\n"
"        lessonList.add(new Lesson(202L, \"Chemistry\", \"M. Curie\", \"10th grade\"));\n"
"        lessonList.add(new Lesson(203L, \"History\", \"I. Jones\", \"10th grade\"));\n"
"        lessonList.add(new Lesson(204L, \"English\", \"P. Cruz\", \"10th grade\"));\n"
"        lessonList.add(new Lesson(205L, \"French\", \"M. Curie\", \"10th grade\"));\n"
"        return new TimeTable(timeslotList, roomList, lessonList);\n"
"    }\n"
msgstr ""
"        lessonList.add(new Lesson(201L, \"Math\", \"B. May\", \"10th grade\"));\n"
"        lessonList.add(new Lesson(202L, \"Chemistry\", \"M. Curie\", \"10th grade\"));\n"
"        lessonList.add(new Lesson(203L, \"History\", \"I. Jones\", \"10th grade\"));\n"
"        lessonList.add(new Lesson(204L, \"English\", \"P. Cruz\", \"10th grade\"));\n"
"        lessonList.add(new Lesson(205L, \"French\", \"M. Curie\", \"10th grade\"));\n"
"        return new TimeTable(timeslotList, roomList, lessonList);\n"
"    }\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:886
#, fuzzy
msgid "This test verifies that after solving, all lessons are assigned to a time slot and a room.  It also verifies that it found a feasible solution (no hard constraints broken)."
msgstr "Esse teste verifica se, após a solução, todas as aulas são atribuídas a um intervalo de tempo e a uma sala. Ele também verifica se foi encontrada uma solução viável (nenhuma restrição rígida foi quebrada)."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:888
#, fuzzy
msgid "Add test properties to the `src/main/resources/application.properties` file:"
msgstr "Adicione propriedades de teste ao arquivo `src/main/resources/application.properties` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:892
#, no-wrap
msgid "quarkus.optaplanner.solver.termination.spent-limit=5s\n"
msgstr "quarkus.optaplanner.solver.termination.spent-limit=5s\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:896
#, no-wrap
msgid ""
"# Effectively disable spent-time termination in favor of the best-score-limit\n"
"%test.quarkus.optaplanner.solver.termination.spent-limit=1h\n"
"%test.quarkus.optaplanner.solver.termination.best-score-limit=0hard/*soft\n"
msgstr ""
"# Effectively disable spent-time termination in favor of the best-score-limit\n"
"%test.quarkus.optaplanner.solver.termination.spent-limit=1h\n"
"%test.quarkus.optaplanner.solver.termination.best-score-limit=0hard/*soft\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:904
#, fuzzy
msgid "Normally, the solver finds a feasible solution in less than 200 milliseconds.  Notice how the `application.properties` overwrites the solver termination during tests to terminate as soon as a feasible solution (`0hard/*soft`) is found.  This avoids hard coding a solver time, because the unit test might run on arbitrary hardware.  This approach ensures that the test runs long enough to find a feasible solution, even on slow machines.  But it does not run a millisecond longer than it strictly must, even on fast machines."
msgstr "Normalmente, o solver encontra uma solução viável em menos de 200 milissegundos. Observe como o site `application.properties` sobrescreve o término do solver durante os testes para encerrar assim que uma solução viável ( `0hard/*soft` ) for encontrada. Isso evita a codificação rígida do tempo do solver, pois o teste de unidade pode ser executado em um hardware arbitrário. Essa abordagem garante que o teste seja executado por tempo suficiente para encontrar uma solução viável, mesmo em máquinas lentas. Mas ele não é executado um milissegundo a mais do que o estritamente necessário, mesmo em máquinas rápidas."

#. type: Title ===
#: upstream/_guides/optaplanner.adoc:905
#, fuzzy, no-wrap
msgid "Logging"
msgstr "Registo"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:910
#, fuzzy
msgid "When adding constraints in your `ConstraintProvider`, keep an eye on the _score calculation speed_ in the `info` log, after solving for the same amount of time, to assess the performance impact:"
msgstr "Ao adicionar restrições em seu `ConstraintProvider` , observe a _velocidade de cálculo da pontuação_ no registro `info` , depois de resolver pelo mesmo período de tempo, para avaliar o impacto no desempenho:"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:914
#, no-wrap
msgid "... Solving ended: ..., score calculation speed (29455/sec), ...\n"
msgstr "... Solving ended: ..., score calculation speed (29455/sec), ...\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:918
#, fuzzy
msgid "To understand how OptaPlanner is solving your problem internally, change the logging in the `application.properties` file or with a `-D` system property:"
msgstr "Para entender como o OptaPlanner está resolvendo seu problema internamente, altere o registro no arquivo `application.properties` ou com uma propriedade do sistema `-D` :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:922
#, no-wrap
msgid "quarkus.log.category.\"org.optaplanner\".level=debug\n"
msgstr "quarkus.log.category.\"org.optaplanner\".level=debug\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:925
#, fuzzy
msgid "Use `debug` logging to show every _step_:"
msgstr "Use o registro `debug` para mostrar cada _etapa_ :"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:932
#, no-wrap
msgid ""
"... Solving started: time spent (67), best score (-20init/0hard/0soft), environment mode (REPRODUCIBLE), random (JDK with seed 0).\n"
"...     CH step (0), time spent (128), score (-18init/0hard/0soft), selected move count (15), picked move ([Math(101) {null -> Room A}, Math(101) {null -> MONDAY 08:30}]).\n"
"...     CH step (1), time spent (145), score (-16init/0hard/0soft), selected move count (15), picked move ([Physics(102) {null -> Room A}, Physics(102) {null -> MONDAY 09:30}]).\n"
"...\n"
msgstr ""
"... Solving started: time spent (67), best score (-20init/0hard/0soft), environment mode (REPRODUCIBLE), random (JDK with seed 0).\n"
"...     CH step (0), time spent (128), score (-18init/0hard/0soft), selected move count (15), picked move ([Math(101) {null -> Room A}, Math(101) {null -> MONDAY 08:30}]).\n"
"...     CH step (1), time spent (145), score (-16init/0hard/0soft), selected move count (15), picked move ([Physics(102) {null -> Room A}, Physics(102) {null -> MONDAY 09:30}]).\n"
"...\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:935
#, fuzzy
msgid "Use `trace` logging to show every _step_ and every _move_ per step."
msgstr "Use o registro `trace` para mostrar cada _passo_ e cada _movimento_ por passo."

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:936
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumo"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:940
#, fuzzy
msgid "Congratulations! You have just developed a Quarkus application with https://www.optaplanner.org/[OptaPlanner]!"
msgstr "Parabéns! O senhor acabou de desenvolver um aplicativo Quarkus com o link:https://www.optaplanner.org/[OptaPlanner] !"

#. type: Title ==
#: upstream/_guides/optaplanner.adoc:941
#, fuzzy, no-wrap
msgid "Further improvements: Database and UI integration"
msgstr "Outros aprimoramentos: Integração do banco de dados e da interface do usuário"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:944
#, fuzzy
msgid "Now try adding database and UI integration:"
msgstr "Agora, tente adicionar a integração do banco de dados e da interface do usuário:"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:946
#, fuzzy
msgid "Store `Timeslot`, `Room`, and `Lesson` in the database with xref:hibernate-orm-panache.adoc[Hibernate and Panache]."
msgstr "Armazene `Timeslot` , `Room` e `Lesson` no banco de dados com o xref:hibernate-orm-panache.adoc[Hibernate e o Panache] ."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:948
#, fuzzy
msgid "xref:rest-json.adoc[Expose them through REST]."
msgstr "xref:rest-json.adoc[Exponha-os por meio de REST] ."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:951
#, fuzzy
msgid "Adjust the `TimeTableResource` to read and write a `TimeTable` instance in a single transaction and use those accordingly:"
msgstr "Ajuste o site `TimeTableResource` para ler e gravar uma instância de `TimeTable` em uma única transação e use-os adequadamente:"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:961
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import jakarta.transaction.Transactional;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""
"import jakarta.inject.Inject;\n"
"import jakarta.transaction.Transactional;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:971
#, no-wrap
msgid ""
"import io.quarkus.panache.common.Sort;\n"
"import org.acme.optaplanner.domain.Lesson;\n"
"import org.acme.optaplanner.domain.Room;\n"
"import org.acme.optaplanner.domain.TimeTable;\n"
"import org.acme.optaplanner.domain.Timeslot;\n"
"import org.optaplanner.core.api.score.ScoreManager;\n"
"import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScore;\n"
"import org.optaplanner.core.api.solver.SolverManager;\n"
"import org.optaplanner.core.api.solver.SolverStatus;\n"
msgstr ""
"import io.quarkus.panache.common.Sort;\n"
"import org.acme.optaplanner.domain.Lesson;\n"
"import org.acme.optaplanner.domain.Room;\n"
"import org.acme.optaplanner.domain.TimeTable;\n"
"import org.acme.optaplanner.domain.Timeslot;\n"
"import org.optaplanner.core.api.score.ScoreManager;\n"
"import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScore;\n"
"import org.optaplanner.core.api.solver.SolverManager;\n"
"import org.optaplanner.core.api.solver.SolverStatus;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:976
#, no-wrap
msgid "    public static final Long SINGLETON_TIME_TABLE_ID = 1L;\n"
msgstr "    public static final Long SINGLETON_TIME_TABLE_ID = 1L;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:981
#, no-wrap
msgid ""
"    @Inject\n"
"    SolverManager<TimeTable, Long> solverManager;\n"
"    @Inject\n"
"    ScoreManager<TimeTable, HardSoftScore> scoreManager;\n"
msgstr ""
"    @Inject\n"
"    SolverManager<TimeTable, Long> solverManager;\n"
"    @Inject\n"
"    ScoreManager<TimeTable, HardSoftScore> scoreManager;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:993
#, no-wrap
msgid ""
"    // To try, open http://localhost:8080/timeTable\n"
"    @GET\n"
"    public TimeTable getTimeTable() {\n"
"        // Get the solver status before loading the solution\n"
"        // to avoid the race condition that the solver terminates between them\n"
"        SolverStatus solverStatus = getSolverStatus();\n"
"        TimeTable solution = findById(SINGLETON_TIME_TABLE_ID);\n"
"        scoreManager.updateScore(solution); // Sets the score\n"
"        solution.setSolverStatus(solverStatus);\n"
"        return solution;\n"
"    }\n"
msgstr ""
"    // To try, open http://localhost:8080/timeTable\n"
"    @GET\n"
"    public TimeTable getTimeTable() {\n"
"        // Get the solver status before loading the solution\n"
"        // to avoid the race condition that the solver terminates between them\n"
"        SolverStatus solverStatus = getSolverStatus();\n"
"        TimeTable solution = findById(SINGLETON_TIME_TABLE_ID);\n"
"        scoreManager.updateScore(solution); // Sets the score\n"
"        solution.setSolverStatus(solverStatus);\n"
"        return solution;\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:1001
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/solve\")\n"
"    public void solve() {\n"
"        solverManager.solveAndListen(SINGLETON_TIME_TABLE_ID,\n"
"                this::findById,\n"
"                this::save);\n"
"    }\n"
msgstr ""
"    @POST\n"
"    @Path(\"/solve\")\n"
"    public void solve() {\n"
"        solverManager.solveAndListen(SINGLETON_TIME_TABLE_ID,\n"
"                this::findById,\n"
"                this::save);\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:1005
#, no-wrap
msgid ""
"    public SolverStatus getSolverStatus() {\n"
"        return solverManager.getSolverStatus(SINGLETON_TIME_TABLE_ID);\n"
"    }\n"
msgstr ""
"    public SolverStatus getSolverStatus() {\n"
"        return solverManager.getSolverStatus(SINGLETON_TIME_TABLE_ID);\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:1011
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/stopSolving\")\n"
"    public void stopSolving() {\n"
"        solverManager.terminateEarly(SINGLETON_TIME_TABLE_ID);\n"
"    }\n"
msgstr ""
"    @POST\n"
"    @Path(\"/stopSolving\")\n"
"    public void stopSolving() {\n"
"        solverManager.terminateEarly(SINGLETON_TIME_TABLE_ID);\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:1024
#, no-wrap
msgid ""
"    @Transactional\n"
"    protected TimeTable findById(Long id) {\n"
"        if (!SINGLETON_TIME_TABLE_ID.equals(id)) {\n"
"            throw new IllegalStateException(\"There is no timeTable with id (\" + id + \").\");\n"
"        }\n"
"        // Occurs in a single transaction, so each initialized lesson references the same timeslot/room instance\n"
"        // that is contained by the timeTable's timeslotList/roomList.\n"
"        return new TimeTable(\n"
"                Timeslot.listAll(Sort.by(\"dayOfWeek\").and(\"startTime\").and(\"endTime\").and(\"id\")),\n"
"                Room.listAll(Sort.by(\"name\").and(\"id\")),\n"
"                Lesson.listAll(Sort.by(\"subject\").and(\"teacher\").and(\"studentGroup\").and(\"id\")));\n"
"    }\n"
msgstr ""
"    @Transactional\n"
"    protected TimeTable findById(Long id) {\n"
"        if (!SINGLETON_TIME_TABLE_ID.equals(id)) {\n"
"            throw new IllegalStateException(\"There is no timeTable with id (\" + id + \").\");\n"
"        }\n"
"        // Occurs in a single transaction, so each initialized lesson references the same timeslot/room instance\n"
"        // that is contained by the timeTable's timeslotList/roomList.\n"
"        return new TimeTable(\n"
"                Timeslot.listAll(Sort.by(\"dayOfWeek\").and(\"startTime\").and(\"endTime\").and(\"id\")),\n"
"                Room.listAll(Sort.by(\"name\").and(\"id\")),\n"
"                Lesson.listAll(Sort.by(\"subject\").and(\"teacher\").and(\"studentGroup\").and(\"id\")));\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:1034
#, no-wrap
msgid ""
"    @Transactional\n"
"    protected void save(TimeTable timeTable) {\n"
"        for (Lesson lesson : timeTable.getLessonList()) {\n"
"            // TODO this is awfully naive: optimistic locking causes issues if called by the SolverManager\n"
"            Lesson attachedLesson = Lesson.findById(lesson.getId());\n"
"            attachedLesson.setTimeslot(lesson.getTimeslot());\n"
"            attachedLesson.setRoom(lesson.getRoom());\n"
"        }\n"
"    }\n"
msgstr ""
"    @Transactional\n"
"    protected void save(TimeTable timeTable) {\n"
"        for (Lesson lesson : timeTable.getLessonList()) {\n"
"            // TODO this is awfully naive: optimistic locking causes issues if called by the SolverManager\n"
"            Lesson attachedLesson = Lesson.findById(lesson.getId());\n"
"            attachedLesson.setTimeslot(lesson.getTimeslot());\n"
"            attachedLesson.setRoom(lesson.getRoom());\n"
"        }\n"
"    }\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:1040
#, fuzzy
msgid "For simplicity's sake, this code handles only one `TimeTable` instance, but it is straightforward to enable multi-tenancy and handle multiple `TimeTable` instances of different high schools in parallel."
msgstr "Para simplificar, esse código lida com apenas uma instância do site `TimeTable` , mas é fácil habilitar o multilocatário e lidar com várias instâncias do site `TimeTable` de diferentes escolas de ensino médio em paralelo."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:1044
#, fuzzy
msgid "The `getTimeTable()` method returns the latest timetable from the database.  It uses the `ScoreManager` (which is automatically injected)  to calculate the score of that timetable, so the UI can show the score."
msgstr "O método `getTimeTable()` retorna o horário mais recente do banco de dados. Ele usa o `ScoreManager` (que é injetado automaticamente) para calcular a pontuação desse horário, de modo que a interface do usuário possa mostrar a pontuação."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:1049
#, fuzzy
msgid "The `solve()` method starts a job to solve the current timetable and store the time slot and room assignments in the database.  It uses the `SolverManager.solveAndListen()` method to listen to intermediate best solutions and update the database accordingly.  This enables the UI to show progress while the backend is still solving."
msgstr "O método `solve()` inicia um trabalho para resolver o horário atual e armazenar o intervalo de tempo e as atribuições de sala no banco de dados. Ele usa o método `SolverManager.solveAndListen()` para ouvir as melhores soluções intermediárias e atualizar o banco de dados adequadamente. Isso permite que a interface do usuário mostre o progresso enquanto o backend ainda está resolvendo."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:1052
#, fuzzy
msgid "Adjust the `TimeTableResourceTest` instance accordingly, now that the `solve()` method returns immediately.  Poll for the latest solution until the solver finishes solving:"
msgstr "Ajuste a instância `TimeTableResourceTest` de acordo, agora que o método `solve()` retorna imediatamente. Procure a solução mais recente até que o solucionador termine de resolver:"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:1065
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.acme.optaplanner.domain.Lesson;\n"
"import org.acme.optaplanner.domain.TimeTable;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.junit.jupiter.api.Timeout;\n"
"import org.optaplanner.core.api.solver.SolverStatus;\n"
msgstr ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.acme.optaplanner.domain.Lesson;\n"
"import org.acme.optaplanner.domain.TimeTable;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.junit.jupiter.api.Timeout;\n"
"import org.optaplanner.core.api.solver.SolverStatus;\n"

#. type: delimited block -
#: upstream/_guides/optaplanner.adoc:1094
#, no-wrap
msgid ""
"    @Test\n"
"    @Timeout(600_000)\n"
"    public void solveDemoDataUntilFeasible() throws InterruptedException {\n"
"        timeTableResource.solve();\n"
"        TimeTable timeTable = timeTableResource.getTimeTable();\n"
"        while (timeTable.getSolverStatus() != SolverStatus.NOT_SOLVING) {\n"
"            // Quick polling (not a Test Thread Sleep anti-pattern)\n"
"            // Test is still fast on fast machines and doesn't randomly fail on slow machines.\n"
"            Thread.sleep(20L);\n"
"            timeTable = timeTableResource.getTimeTable();\n"
"        }\n"
"        assertFalse(timeTable.getLessonList().isEmpty());\n"
"        for (Lesson lesson : timeTable.getLessonList()) {\n"
"            assertNotNull(lesson.getTimeslot());\n"
"            assertNotNull(lesson.getRoom());\n"
"        }\n"
"        assertTrue(timeTable.getScore().isFeasible());\n"
"    }\n"
msgstr ""
"    @Test\n"
"    @Timeout(600_000)\n"
"    public void solveDemoDataUntilFeasible() throws InterruptedException {\n"
"        timeTableResource.solve();\n"
"        TimeTable timeTable = timeTableResource.getTimeTable();\n"
"        while (timeTable.getSolverStatus() != SolverStatus.NOT_SOLVING) {\n"
"            // Quick polling (not a Test Thread Sleep anti-pattern)\n"
"            // Test is still fast on fast machines and doesn't randomly fail on slow machines.\n"
"            Thread.sleep(20L);\n"
"            timeTable = timeTableResource.getTimeTable();\n"
"        }\n"
"        assertFalse(timeTable.getLessonList().isEmpty());\n"
"        for (Lesson lesson : timeTable.getLessonList()) {\n"
"            assertNotNull(lesson.getTimeslot());\n"
"            assertNotNull(lesson.getRoom());\n"
"        }\n"
"        assertTrue(timeTable.getScore().isFeasible());\n"
"    }\n"

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:1099
#, fuzzy
msgid "Build an attractive web UI on top of these REST methods to visualize the timetable."
msgstr "Crie uma UI da Web atraente com base nesses métodos REST para visualizar o horário."

#. type: Plain text
#: upstream/_guides/optaplanner.adoc:1100
#, fuzzy
msgid "Take a look at link:{quickstarts-tree-url}/optaplanner-quickstart[the quickstart source code] to see how this all turns out."
msgstr "Dê uma olhada no link:{quickstarts-tree-url}/optaplanner-quickstart[código-fonte de início rápido] para ver como tudo isso funciona."
