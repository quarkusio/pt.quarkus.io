# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/grpc-getting-started.adoc:6
#, fuzzy, no-wrap
msgid "Getting Started with gRPC"
msgstr "Introdução ao gRPC"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:15
#, fuzzy
msgid "This page explains how to start using gRPC in your Quarkus application.  While this page describes how to configure it with Maven, it is also possible to use Gradle."
msgstr "Esta página explica como começar a usar o gRPC na sua aplicação Quarkus. Embora esta página descreva como configurá-lo com o Maven, também é possível usar o Gradle."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:18
#, fuzzy
msgid "Let's imagine you have a regular Quarkus project, generated from the https://code.quarkus.io[Quarkus project generator].  The default configuration is enough, but you can also select some extensions if you want."
msgstr "Imaginemos que tem um projeto Quarkus normal, gerado a partir do  link:https://code.quarkus.io[gerador de projectos Quarkus]. A configuração predefinida é suficiente, mas também pode selecionar algumas extensões se quiser."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:19
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:23
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas secções seguintes e crie a aplicação passo a passo. No entanto, pode ir diretamente para o exemplo completo."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:25
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:27
#, fuzzy
msgid "The solution is located in the `grpc-plain-text-quickstart` link:{quickstarts-tree-url}/grpc-plain-text-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/grpc-plain-text-quickstart[diretório] `grpc-plain-text-quickstart`."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:28
#, fuzzy, no-wrap
msgid "Configuring your project"
msgstr "Configurar o seu projeto"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:31
#, fuzzy
msgid "Add the Quarkus gRPC extension to your build file:"
msgstr "Adicione a extensão gRPC do Quarkus ao seu ficheiro de compilação:"

#. type: Block title
#: upstream/_guides/grpc-getting-started.adoc:33
#: upstream/_guides/grpc-getting-started.adoc:52
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:39
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-grpc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/grpc-getting-started.adoc:42
#: upstream/_guides/grpc-getting-started.adoc:61
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:45
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-grpc\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:50
#, fuzzy
msgid "By default, the `quarkus-grpc` extension relies on the reactive programming model.  In this guide we will follow a reactive approach.  Under the `dependencies` section of your `pom.xml` file, make sure you have the RESTEasy Reactive dependency:"
msgstr "Por defeito, a extensão `quarkus-grpc` baseia-se no modelo de programação reactiva. Neste guia, seguiremos uma abordagem reativa. Na seção `dependencies` do seu arquivo `pom.xml`, verifique se você tem a dependência RESTEasy Reactive:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:58
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:64
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-reactive\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:69
#, fuzzy
msgid "If you are using Maven, make sure you have the `generate-code` goal of `quarkus-maven-plugin` enabled in your `pom.xml`.  If you wish to generate code from different `proto` files for tests, also add the `generate-code-tests` goal.  Please note that no additional task/goal is required for the Gradle plugin."
msgstr "Se estiver a utilizar o Maven, certifique-se de que tem o objetivo `generate-code` de `quarkus-maven-plugin` ativado no seu `pom.xml`. Se desejar gerar código de diferentes ficheiros `proto` para testes, adicione também o objetivo `generate-code-tests`. Observe que nenhuma tarefa/objetivo adicional é necessário para o plug-in Gradle."

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:91
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-maven-plugin</artifactId>\n"
"            <version>${quarkus-plugin.version}</version>\n"
"            <extensions>true</extensions>\n"
"            <executions>\n"
"                <execution>\n"
"                    <goals>\n"
"                        <goal>build</goal>\n"
"                        <goal>generate-code</goal>\n"
"                        <goal>generate-code-tests</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:95
#, fuzzy
msgid "With this configuration, you can put your service and message definitions in the `src/main/proto` directory.  `quarkus-maven-plugin` will generate Java files from your `proto` files."
msgstr "Com esta configuração, pode colocar as suas definições de serviços e mensagens no diretório `src/main/proto`. `quarkus-maven-plugin` irá gerar ficheiros Java a partir dos seus ficheiros `proto`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:101
#, fuzzy
msgid "`quarkus-maven-plugin` retrieves a version of `protoc` (the protobuf compiler) from Maven repositories. The retrieved version matches your operating system and CPU architecture.  If this retrieved version does not work in your context, you can either force to use a different OS classifier with `-Dquarkus.grpc.protoc-os-classifier=your-os-classifier` (e.g. `osx-x86_64`).  You can also download the suitable binary and specify the location via `-Dquarkus.grpc.protoc-path=/path/to/protoc`."
msgstr "`quarkus-maven-plugin` recupera uma versão de `protoc` (o compilador protobuf) dos repositórios Maven. A versão recuperada corresponde ao seu sistema operativo e à arquitetura da CPU. Se esta versão recuperada não funcionar no seu contexto, pode forçar a utilização de um classificador de SO diferente com `-Dquarkus.grpc.protoc-os-classifier=your-os-classifier` (por exemplo, `osx-x86_64`). Pode também descarregar o binário adequado e especificar a localização através de `-Dquarkus.grpc.protoc-path=/path/to/protoc`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:105
#, fuzzy
msgid "Alternatively to using the `generate-code` goal of the `quarkus-maven-plugin`, you can use `protobuf-maven-plugin` to generate these files.  See the xref:protobuf-maven-plugin[Generating Java files from proto with protobuf-maven-plugin] section for more information."
msgstr "Em alternativa à utilização do objetivo `generate-code` do `quarkus-maven-plugin`, pode utilizar `protobuf-maven-plugin` para gerar estes ficheiros. Consulte a secção  link:#protobuf-maven-plugin[Gerar ficheiros Java a partir do proto com o protobuf-maven-plugin] para obter mais informações."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:108
#, fuzzy
msgid "Let's start with a simple _Hello_ service.  Create the `src/main/proto/helloworld.proto` file with the following content:"
msgstr "Vamos começar com um simples serviço _Hello_. Crie o ficheiro `src/main/proto/helloworld.proto` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:112
#, no-wrap
msgid "syntax = \"proto3\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:116
#, no-wrap
msgid ""
"option java_multiple_files = true;\n"
"option java_package = \"io.quarkus.example\";\n"
"option java_outer_classname = \"HelloWorldProto\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:118
#, no-wrap
msgid "package helloworld;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:124
#, no-wrap
msgid ""
"// The greeting service definition.\n"
"service Greeter {\n"
"    // Sends a greeting\n"
"    rpc SayHello (HelloRequest) returns (HelloReply) {}\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:129
#, no-wrap
msgid ""
"// The request message containing the user's name.\n"
"message HelloRequest {\n"
"    string name = 1;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:134
#, no-wrap
msgid ""
"// The response message containing the greetings\n"
"message HelloReply {\n"
"    string message = 1;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:137
#, fuzzy
msgid "This `proto` file defines a simple service interface with a single method (`SayHello`), and the exchanged messages (`HelloRequest` containing the name and `HelloReply` containing the greeting message)."
msgstr "Este ficheiro `proto` define uma interface de serviço simples com um único método ( `SayHello`), e as mensagens trocadas ( `HelloRequest` contendo o nome e `HelloReply` contendo a mensagem de saudação)."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:139
#, fuzzy
msgid "Your `proto` file must not contain `option java_generic_services = true;`. https://developers.google.com/protocol-buffers/docs/reference/java-generated?hl=en#service[Generic services are deprecated] and are not compatible with Quarkus code generation plugins."
msgstr "O seu ficheiro `proto` não pode conter `option java_generic_services = true;`.  link:https://developers.google.com/protocol-buffers/docs/reference/java-generated?hl=en#service[Os serviços genéricos estão obsoletos] e não são compatíveis com os plugins de geração de código do Quarkus."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:142
#, fuzzy
msgid "Before coding, we need to generate the classes used to implement and consume gRPC services.  In a terminal, run:"
msgstr "Antes de codificar, precisamos de gerar as classes utilizadas para implementar e consumir os serviços gRPC. Em um terminal, execute:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:146
#, no-wrap
msgid "$ mvn compile\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:149
#, fuzzy
msgid "Once generated, you can look at the `target/generated-sources/grpc` directory:"
msgstr "Uma vez gerado, pode consultar o diretório `target/generated-sources/grpc`:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:166
#, no-wrap
msgid ""
"target/generated-sources/grpc\n"
"└── io\n"
"    └── quarkus\n"
"        └── example\n"
"            ├── Greeter.java\n"
"            ├── GreeterBean.java\n"
"            ├── GreeterClient.java\n"
"            ├── GreeterGrpc.java\n"
"            ├── HelloReply.java\n"
"            ├── HelloReplyOrBuilder.java\n"
"            ├── HelloRequest.java\n"
"            ├── HelloRequestOrBuilder.java\n"
"            ├── HelloWorldProto.java\n"
"            └── MutinyGreeterGrpc.java\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:169
#, fuzzy
msgid "These are the classes we are going to use."
msgstr "Estas são as classes que vamos utilizar."

#. type: Title ===
#: upstream/_guides/grpc-getting-started.adoc:171
#, fuzzy, no-wrap
msgid "`proto` files with imports"
msgstr "`proto` ficheiros com importações"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:175
#, fuzzy
msgid "Protocol Buffers specification provides a way to import `proto` files.  The Quarkus code generation mechanism lets you control the scope of dependencies to scan for possible imports by setting the `quarkus.generate-code.grpc.scan-for-imports` property to one of the following:"
msgstr "A especificação Protocol Buffers fornece uma forma de importar ficheiros `proto`. O mecanismo de geração de código Quarkus permite-lhe controlar o âmbito das dependências para procurar possíveis importações, definindo a propriedade `quarkus.generate-code.grpc.scan-for-imports` para uma das seguintes opções:"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:177
#, fuzzy
msgid "`all` - scan all the dependencies"
msgstr "`all` - verificar todas as dependências"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:178
#, fuzzy
msgid "`none` - don't scan the dependencies, use only what is defined in the `src/main/proto` or `src/test/proto`"
msgstr "`none` - não verifique as dependências, use apenas o que está definido no `src/main/proto` ou `src/test/proto`"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:179
#, fuzzy
msgid "`groupId1:artifactId1,groupId2:artifactId2` - scan only the dependencies with group id and artifact id in the list."
msgstr "`groupId1:artifactId1,groupId2:artifactId2` - verifica apenas as dependências com o ID do grupo e o ID do artefacto na lista."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:182
#, fuzzy
msgid "If not specified, the property is set to `com.google.protobuf:protobuf-java`.  To override it, set the `quarkus.generate-code.grpc.scan-for-imports` property in your application.properties to the desired value, e.g."
msgstr "Se não for especificada, a propriedade é definida como `com.google.protobuf:protobuf-java`. Para a substituir, defina a propriedade `quarkus.generate-code.grpc.scan-for-imports` em application.properties para o valor pretendido, por exemplo"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:186
#, no-wrap
msgid "quarkus.generate-code.grpc.scan-for-imports=all\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/grpc-getting-started.adoc:188
#, fuzzy, no-wrap
msgid "`proto` files from dependencies"
msgstr "`proto` ficheiros de dependências"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:190
#, fuzzy
msgid "In some cases, you may want to use `proto` files from a different project to generate the gRPC stubs. In this case:"
msgstr "Em alguns casos, pode querer utilizar ficheiros `proto` de um projeto diferente para gerar os stubs gRPC. Neste caso:"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:192
#, fuzzy
msgid "Add a dependency on the artifact that contains the proto file to your project"
msgstr "Adicione ao seu projeto uma dependência do artefacto que contém o ficheiro proto"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:193
#, fuzzy
msgid "In `application.properties`, specify the dependencies you want to scan for proto files."
msgstr "Em `application.properties`, especifique as dependências que pretende analisar em busca de ficheiros proto."

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:197
#, no-wrap
msgid "quarkus.generate-code.grpc.scan-for-proto=<groupId>:<artifactId>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:199
#, fuzzy
msgid "The value of the property may be `none`, which is the default value, or a comma separated list of `groupId:artifactId` coordinates."
msgstr "O valor da propriedade pode ser `none`, que é o valor predefinido, ou uma lista separada por vírgulas de coordenadas `groupId:artifactId`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:201
#, fuzzy
msgid "`option java_generic_services = true;` will automatically be removed from proto file containing it."
msgstr "`option java_generic_services = true;` será automaticamente removido do ficheiro proto que o contém."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:203
#, fuzzy
msgid "If the dependency contains a lot of proto files and you want to generate classes for only a subset of them, you can specify glob patterns per dependency. The path to match are relative to the path `src/main/resources` in the dependency."
msgstr "Se a dependência contiver muitos arquivos proto e você quiser gerar classes para apenas um subconjunto deles, você pode especificar padrões glob por dependência. O caminho a ser correspondido é relativo ao caminho `src/main/resources` na dependência."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:205
#, fuzzy
msgid "For instance, having the following properties in your `application.properties`:"
msgstr "Por exemplo, ter as seguintes propriedades no seu `application.properties`:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:210
#, no-wrap
msgid ""
"quarkus.generate-code.grpc.scan-for-proto-include.\"<groupId>\\:<artifactId>\"=foo/**,bar/**,banana/a-proto.proto\n"
"quarkus.generate-code.grpc.scan-for-proto-exclude.\"<groupId>\\:<artifactId>\"=foo/private/**,bar/another-proto.proto\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:213
#, fuzzy
msgid "will include:"
msgstr "incluirá:"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:215
#, fuzzy
msgid "all files in the `foo/` directory and its subdirectories except for files in `foo/private/` and its subdirectories,"
msgstr "todos os ficheiros no diretório `foo/` e respectivas subdirectorias, exceto os ficheiros em `foo/private/` e respectivas subdirectorias,"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:216
#, fuzzy
msgid "all files in the `bar/` directory and its subdirectories except for `another-proto.proto`."
msgstr "todos os ficheiros do diretório `bar/` e respectivos subdirectórios, exceto `another-proto.proto`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:217
#, fuzzy
msgid "`banana/a-proto.proto` file."
msgstr "`banana/a-proto.proto` ficheiro."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:219
#, fuzzy
msgid "`:` character in the property keys must be escaped."
msgstr "`:` nas chaves de propriedade devem ser escapados."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:220
#, fuzzy, no-wrap
msgid "Different gRPC implementations / types"
msgstr "Diferentes implementações / tipos de gRPC"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:223
#, fuzzy
msgid "Another thing to take note as well is that Quarkus' gRPC support currently includes 3 different types of gRPC usage:"
msgstr "Outro aspeto a ter em conta é que o suporte gRPC do Quarkus inclui atualmente 3 tipos diferentes de utilização gRPC:"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:225
#, fuzzy
msgid "old Vert.x gRPC implementation with a separate gRPC server (default)"
msgstr "implementação antiga do Vert.x gRPC com um servidor gRPC separado (predefinição)"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:226
#, fuzzy
msgid "new Vert.x gRPC implementation on top of the existing HTTP server"
msgstr "nova implementação Vert.x gRPC no topo do servidor HTTP existente"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:227
#, fuzzy
msgid "https://grpc.github.io/grpc/core/md_doc_grpc_xds_features.html[xDS gRPC] wrapper over https://github.com/grpc/grpc-java[grpc-java] with a separate Netty based gRPC server"
msgstr "link:https://grpc.github.io/grpc/core/md_doc_grpc_xds_features.html[xDS gRPC] wrapper sobre  link:https://github.com/grpc/grpc-java[grpc-java] com um servidor gRPC baseado em Netty separado"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:229
#, fuzzy
msgid "Further docs explain how to enable and use each of them."
msgstr "Outros documentos explicam como ativar e utilizar cada um deles."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:230
#, fuzzy, no-wrap
msgid "Implementing a gRPC service"
msgstr "Implementação de um serviço gRPC"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:233
#, fuzzy
msgid "Now that we have the generated classes let's implement our _hello_ service."
msgstr "Agora que temos as classes geradas, vamos implementar o nosso serviço _hello_."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:237
#, fuzzy
msgid "With Quarkus, implementing a service requires to implement the generated service interface based on Mutiny, a Reactive Programming API integrated in Quarkus, and expose it as a CDI bean.  Learn more about Mutiny on the xref:mutiny-primer.adoc[Mutiny guide].  The service class must be annotated with the `@io.quarkus.grpc.GrpcService` annotation."
msgstr "Com o Quarkus, a implementação de um serviço requer a implementação da interface de serviço gerada com base no Mutiny, uma API de programação reactiva integrada no Quarkus, e expô-la como um bean CDI. Saiba mais sobre o Mutiny no  link:mutiny-primer.html[guia Mutiny]. A classe de serviço deve ser anotada com a anotação `@io.quarkus.grpc.GrpcService`."

#. type: Title ===
#: upstream/_guides/grpc-getting-started.adoc:238
#, fuzzy, no-wrap
msgid "Implementing a service"
msgstr "Implementação de um serviço"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:241
#, fuzzy
msgid "Create the `src/main/java/org/acme/HelloService.java` file with the following content:"
msgstr "Criar o ficheiro `src/main/java/org/acme/HelloService.java` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:245
#: upstream/_guides/grpc-getting-started.adoc:272
#: upstream/_guides/grpc-getting-started.adoc:322
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:251
#, no-wrap
msgid ""
"import io.quarkus.example.Greeter;\n"
"import io.quarkus.example.HelloReply;\n"
"import io.quarkus.example.HelloRequest;\n"
"import io.quarkus.grpc.GrpcService;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:254
#, no-wrap
msgid ""
"@GrpcService <1>\n"
"public class HelloService implements Greeter {  <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:262
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<HelloReply> sayHello(HelloRequest request) { <3>\n"
"        return Uni.createFrom().item(() ->\n"
"                HelloReply.newBuilder().setMessage(\"Hello \" + request.getName()).build()\n"
"        );\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:264
#: upstream/_guides/grpc-getting-started.adoc:292
#, fuzzy
msgid "Expose your implementation as a bean."
msgstr "Exponha a sua implementação como um bean."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:265
#, fuzzy
msgid "Implement the generated service interface."
msgstr "Implementar a interface de serviço gerada."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:266
#: upstream/_guides/grpc-getting-started.adoc:294
#, fuzzy
msgid "Implement the methods defined in the service definition (here we have a single method)."
msgstr "Implementar os métodos definidos na definição do serviço (neste caso, temos um único método)."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:268
#, fuzzy
msgid "You can also use the default gRPC API instead of Mutiny:"
msgstr "Também pode utilizar a API gRPC predefinida em vez do Mutiny:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:278
#, no-wrap
msgid ""
"import io.grpc.stub.StreamObserver;\n"
"import io.quarkus.example.GreeterGrpc;\n"
"import io.quarkus.example.HelloReply;\n"
"import io.quarkus.example.HelloRequest;\n"
"import io.quarkus.grpc.GrpcService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:281
#, no-wrap
msgid ""
"@GrpcService <1>\n"
"public class HelloService extends GreeterGrpc.GreeterImplBase { <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:290
#, no-wrap
msgid ""
"    @Override\n"
"    public void sayHello(HelloRequest request, StreamObserver<HelloReply> responseObserver) { <3>\n"
"        String name = request.getName();\n"
"        String message = \"Hello \" + name;\n"
"        responseObserver.onNext(HelloReply.newBuilder().setMessage(message).build()); <4>\n"
"        responseObserver.onCompleted(); <5>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:293
#, fuzzy
msgid "Extends the `ImplBase` class. This is a generated class."
msgstr "Estende a classe `ImplBase`. Esta é uma classe gerada."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:295
#, fuzzy
msgid "Build and send the response."
msgstr "Construir e enviar a resposta."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:296
#, fuzzy
msgid "Close the response."
msgstr "Fechar a resposta."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:301
#, fuzzy
msgid "If your service implementation logic is blocking (use blocking I/O for example), annotate your method with `@Blocking`.  The `io.smallrye.common.annotation.Blocking` annotation instructs the framework to invoke the annotated method on a worker thread instead of the I/O thread (event-loop)."
msgstr "Se a lógica de implementação do serviço estiver bloqueando (use E/S de bloqueio, por exemplo), anote seu método com `@Blocking`. A anotação `io.smallrye.common.annotation.Blocking` instrui a estrutura a invocar o método anotado em um thread de trabalho em vez do thread de E/S (loop de eventos)."

#. type: Title ===
#: upstream/_guides/grpc-getting-started.adoc:302
#, fuzzy, no-wrap
msgid "The gRPC server"
msgstr "O servidor gRPC"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:306
#, fuzzy
msgid "The services are _served_ by a _server_.  Available services (_CDI beans_) are automatically registered and exposed."
msgstr "Os serviços são _servidos_ por um _servidor_. Os serviços disponíveis _(beans CDI_) são automaticamente registados e expostos."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:309
#, fuzzy
msgid "By default, the server is exposed on `localhost:9000`, and uses _plain-text_ (so no TLS) when running normally, and `localhost:9001` for tests."
msgstr "Por defeito, o servidor está exposto em `localhost:9000`, e utiliza _texto simples_ (sem TLS) quando está a funcionar normalmente, e `localhost:9001` para testes."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:311
#, fuzzy
msgid "Run the application using: `mvn quarkus:dev`."
msgstr "Executar a aplicação utilizando: `mvn quarkus:dev`."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:312
#, fuzzy, no-wrap
msgid "Consuming a gRPC service"
msgstr "Consumir um serviço gRPC"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:316
#, fuzzy
msgid "In this section, we are going to consume the service we expose.  To simplify, we are going to consume the service from the same application, which in the real world, does not make sense."
msgstr "Nesta secção, vamos consumir o serviço que expomos. Para simplificar, vamos consumir o serviço a partir da mesma aplicação, o que, no mundo real, não faz sentido."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:318
#, fuzzy
msgid "Open the existing `org.acme.ExampleResource` class, and edit the content to become:"
msgstr "Abra a classe `org.acme.ExampleResource` existente e edite o conteúdo para que se torne:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:327
#, no-wrap
msgid ""
"import io.quarkus.example.Greeter;\n"
"import io.quarkus.example.HelloRequest;\n"
"import io.quarkus.grpc.GrpcClient;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:332
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:335
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:338
#, no-wrap
msgid ""
"    @GrpcClient                               // <1>\n"
"    Greeter hello;                            // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:344
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:352
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{name}\")\n"
"    public Uni<String> hello(String name) {\n"
"        return hello.sayHello(HelloRequest.newBuilder().setName(name).build())\n"
"                .onItem().transform(helloReply -> helloReply.getMessage());  // <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:354
#, fuzzy
msgid "Inject the service and configure its name. The name is used in the application configuration. If not specified then the field name is used instead: `hello` in this particular case."
msgstr "Injecte o serviço e configure o seu nome. O nome é utilizado na configuração da aplicação. Se não for especificado, é utilizado o nome do campo: `hello` neste caso específico."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:355
#, fuzzy
msgid "Use the generated service interface based on Mutiny API."
msgstr "Utilizar a interface de serviço gerada com base na API Mutiny."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:356
#, fuzzy
msgid "Invoke the service."
msgstr "Invocar o serviço."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:359
#, fuzzy
msgid "We need to configure the application to indicate where the `hello` service is found.  In the `src/main/resources/application.properties` file, add the following property:"
msgstr "Precisamos de configurar a aplicação para indicar onde se encontra o serviço `hello`. No ficheiro `src/main/resources/application.properties`, adicione a seguinte propriedade:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:363
#, no-wrap
msgid "quarkus.grpc.clients.hello.host=localhost\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:366
#, fuzzy
msgid "`hello` is the name used in the `@GrpcClient` annotation."
msgstr "`hello` é o nome utilizado na anotação `@GrpcClient`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:367
#, fuzzy
msgid "`host` configures the service host (here it's localhost)."
msgstr "`host` configura o anfitrião do serviço (aqui é localhost)."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:369
#, fuzzy
msgid "Then, open http://localhost:8080/hello/quarkus in a browser, and you should get `Hello quarkus`!"
msgstr "Em seguida, abra  http://localhost:8080/hello/quarkus  num navegador e deverá obter `Hello quarkus`!"

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:370
#, fuzzy, no-wrap
msgid "Packaging the application"
msgstr "Empacotar a aplicação"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:374
#, fuzzy
msgid "Like any other Quarkus applications, you can package it with: `mvn package`.  You can also package the application into a native executable with: `mvn package -Dnative`."
msgstr "Como qualquer outra aplicação Quarkus, pode empacotá-la com: `mvn package`. Também pode empacotar a aplicação num executável nativo com: `mvn package -Dnative`."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:376
#, fuzzy, no-wrap
msgid "Generating Java files from proto with protobuf-maven-plugin"
msgstr "Gerar ficheiros Java a partir do proto com o protobuf-maven-plugin"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:380
#, fuzzy
msgid "Alternatively to using Quarkus code generation to generate stubs for `proto` files, you can also use `protobuf-maven-plugin`."
msgstr "Em alternativa à utilização da geração de código do Quarkus para gerar stubs para ficheiros `proto`, pode também utilizar `protobuf-maven-plugin`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:382
#, fuzzy
msgid "To do it, first define the 2 following properties in the `<properties>` section:"
msgstr "Para o fazer, defina primeiro as 2 propriedades seguintes na secção `&amp;lt;properties&amp;gt;`:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:387
#, no-wrap
msgid ""
"<grpc.version>{grpc-version}</grpc.version>\n"
"<protoc.version>{protoc-version}</protoc.version>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:390
#, fuzzy
msgid "They configure the gRPC version and the `protoc` version."
msgstr "Configuram a versão gRPC e a versão `protoc`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:392
#, fuzzy
msgid "Then, add to the `build` section the `os-maven-plugin` extension and the `protobuf-maven-plugin` configuration."
msgstr "Em seguida, adicione à secção `build` a extensão `os-maven-plugin` e a configuração `protobuf-maven-plugin`."

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:403
#, no-wrap
msgid ""
"<build>\n"
"    <extensions>\n"
"        <extension>\n"
"            <groupId>kr.motd.maven</groupId>\n"
"            <artifactId>os-maven-plugin</artifactId>\n"
"            <version>${os-maven-plugin-version}</version>\n"
"        </extension>\n"
"    </extensions>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:440
#, no-wrap
msgid ""
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>org.xolstice.maven.plugins</groupId>\n"
"            <artifactId>protobuf-maven-plugin</artifactId>      // <1>\n"
"            <version>${protobuf-maven-plugin-version}</version>\n"
"            <configuration>\n"
"                <protocArtifact>com.google.protobuf:protoc:${protoc.version}:exe:${os.detected.classifier}</protocArtifact> // <2>\n"
"                <pluginId>grpc-java</pluginId>\n"
"                <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>\n"
"                <protocPlugins>\n"
"                    <protocPlugin>\n"
"                        <id>quarkus-grpc-protoc-plugin</id>\n"
"                        <groupId>io.quarkus</groupId>\n"
"                        <artifactId>quarkus-grpc-protoc-plugin</artifactId>\n"
"                        <version>{quarkus-version}</version>\n"
"                        <mainClass>io.quarkus.grpc.protoc.plugin.MutinyGrpcGenerator</mainClass>\n"
"                    </protocPlugin>\n"
"                </protocPlugins>\n"
"            </configuration>\n"
"            <executions>\n"
"                <execution>\n"
"                    <id>compile</id>\n"
"                    <goals>\n"
"                        <goal>compile</goal>\n"
"                        <goal>compile-custom</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"                <execution>\n"
"                    <id>test-compile</id>\n"
"                    <goals>\n"
"                        <goal>test-compile</goal>\n"
"                        <goal>test-compile-custom</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:444
#, no-wrap
msgid ""
"        <!-- ... -->\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:446
#, fuzzy
msgid "The `protobuf-maven-plugin` that generates stub classes from your gRPC service definition (`proto` files)."
msgstr "O `protobuf-maven-plugin` que gera classes stub a partir da sua definição de serviço gRPC (ficheiros `proto` )."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:448
#, fuzzy
msgid "The class generation uses a tool named `protoc`, which is OS-specific.  That's why we use the `os-maven-plugin` to target the executable compatible with the operating system."
msgstr "A geração de classes utiliza uma ferramenta chamada `protoc`, que é específica do sistema operativo. É por isso que utilizamos o `os-maven-plugin` para visar o executável compatível com o sistema operativo."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:450
#, fuzzy
msgid "This configuration instructs the `protobuf-maven-plugin` to generate the default gRPC classes and classes using Mutiny to fit with the Quarkus development experience."
msgstr "Esta configuração dá instruções ao `protobuf-maven-plugin` para gerar as classes gRPC predefinidas e as classes que utilizam o Mutiny para se adaptarem à experiência de desenvolvimento do Quarkus."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:452
#, fuzzy
msgid "When using `protobuf-maven-plugin`, instead of the `quarkus-maven-plugin`, every time you update the `proto` files, you need to re-generate the classes (using `mvn compile`)."
msgstr "Quando se utiliza `protobuf-maven-plugin`, em vez de `quarkus-maven-plugin`, sempre que se actualizam os ficheiros `proto`, é necessário gerar novamente as classes (utilizando `mvn compile`)."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:454
#, fuzzy, no-wrap
msgid "gRPC classes from dependencies"
msgstr "Classes gRPC a partir de dependências"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:458
#, fuzzy
msgid "When gRPC classes - the classes generated from `proto` files - are in a dependency of the application, then the dependency needs a Jandex index.  The `jandex-maven-plugin` can be used to create a Jandex index. More information on this topic can be found in the xref:cdi-reference.adoc#bean_discovery[Bean Discovery] section of the CDI guide."
msgstr "Quando as classes gRPC - as classes geradas a partir dos ficheiros `proto` - estão numa dependência da aplicação, a dependência necessita de um índice Jandex. O `jandex-maven-plugin` pode ser utilizado para criar um índice Jandex. Mais informações sobre este tópico podem ser encontradas na secção  link:cdi-reference.html#bean_discovery[Bean Discovery] do guia CDI."

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:478
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>io.smallrye</groupId>\n"
"            <artifactId>jandex-maven-plugin</artifactId>\n"
"            <version>{jandex-version}</version>\n"
"            <executions>\n"
"                <execution>\n"
"                <id>make-index</id>\n"
"                <goals>\n"
"                    <goal>jandex</goal>\n"
"                </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""
