# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/kotlin.adoc:6
#, fuzzy, no-wrap
msgid "Using Kotlin"
msgstr "Utilizar Kotlin"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:12
#, fuzzy
msgid "https://kotlinlang.org/[Kotlin] is a very popular programming language that targets the JVM (amongst other environments). Kotlin has experienced a surge in popularity the last few years making it the most popular JVM language, except for Java of course."
msgstr "link:https://kotlinlang.org/[Kotlin] é uma linguagem de programação muito popular que tem como alvo a JVM (entre outros ambientes). Kotlin tem experimentado um aumento de popularidade nos últimos anos, tornando-se a linguagem JVM mais popular, com exceção de Java, é claro."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:14
#, fuzzy
msgid "Quarkus provides first class support for using Kotlin as will be explained in this guide."
msgstr "O Quarkus oferece suporte de primeira classe para o uso de Kotlin, como será explicado neste guia."

#. type: Title ==
#: upstream/_guides/kotlin.adoc:15
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:20
#, fuzzy
msgid "NB: For Gradle project setup please see below, and for further reference consult the guide in the xref:gradle-tooling.adoc[Gradle setup page]."
msgstr "NB: Para a configuração do projeto Gradle, veja abaixo e, para mais referências, consulte o guia na  link:gradle-tooling.html[página de configuração do Gradle]."

#. type: Title ==
#: upstream/_guides/kotlin.adoc:21
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:24
#, fuzzy
msgid "First, we need a new Kotlin project. This can be done using the following command:"
msgstr "Primeiro, precisamos de um novo projeto Kotlin. Isso pode ser feito usando o seguinte comando:"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:33
#, fuzzy
msgid "When adding `kotlin` to the extensions list, the Maven plugin will generate a project that is properly configured to work with Kotlin. Furthermore, the `org.acme.ReactiveGreetingResource` class is implemented as Kotlin source code (as is the case with the generated tests).  The addition of `resteasy-reactive-jackson` in the extension list results in importing the RESTEasy Reactive and Jackson extensions."
msgstr "Ao adicionar `kotlin` à lista de extensões, o plug-in Maven irá gerar um projeto que está devidamente configurado para trabalhar com Kotlin. Além disso, a classe `org.acme.ReactiveGreetingResource` é implementada como código-fonte Kotlin (como é o caso dos testes gerados). A adição de `resteasy-reactive-jackson` na lista de extensões resulta na importação das extensões RESTEasy Reactive e Jackson."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:35
#, fuzzy
msgid "`ReactiveGreetingResource` looks like this:"
msgstr "`ReactiveGreetingResource` tem este aspeto:"

#. type: Block title
#: upstream/_guides/kotlin.adoc:37
#, fuzzy, no-wrap
msgid "ReactiveGreetingResource.kt"
msgstr "ReactiveGreetingResource.kt"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:40
#, no-wrap
msgid "package org.acme\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:45 upstream/_guides/kotlin.adoc:524
#: upstream/_guides/kotlin.adoc:564
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET\n"
"import jakarta.ws.rs.Path\n"
"import jakarta.ws.rs.Produces\n"
"import jakarta.ws.rs.core.MediaType\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:48 upstream/_guides/kotlin.adoc:77
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"class ReactiveGreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:53
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    fun hello() = \"Hello from RESTEasy Reactive\"\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/kotlin.adoc:55
#, fuzzy, no-wrap
msgid "Update code"
msgstr "Atualizar código"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:58
#, fuzzy
msgid "In order to show a more practical example of Kotlin usage we will add a simple link:https://kotlinlang.org/docs/reference/data-classes.html[data class] called `Greeting` like so:"
msgstr "Para mostrar um exemplo mais prático de utilização de Kotlin, vamos adicionar uma  link:https://kotlinlang.org/docs/reference/data-classes.html[classe de dados] simples chamada `Greeting` da seguinte forma:"

#. type: Block title
#: upstream/_guides/kotlin.adoc:60
#, fuzzy, no-wrap
msgid "Greeting.kt"
msgstr "Saudação.kt"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:63
#, no-wrap
msgid "package org.acme.rest\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:65
#, no-wrap
msgid "data class Greeting(val message: String = \"\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kotlin.adoc:68
#, fuzzy
msgid "We also update the `ReactiveGreetingResource` class like so:"
msgstr "Também actualizamos a classe `ReactiveGreetingResource` da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:74
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET\n"
"import jakarta.ws.rs.Path\n"
"import jakarta.ws.rs.core.MediaType\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:81
#, no-wrap
msgid ""
"    @GET\n"
"    fun hello() = Greeting(\"hello\")\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kotlin.adoc:84
#, fuzzy
msgid "With these changes in place the `/hello` endpoint will reply with a JSON object instead of a simple String."
msgstr "Com estas alterações em vigor, o ponto de extremidade `/hello` responderá com um objeto JSON em vez de uma simples cadeia de caracteres."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:86
#, fuzzy
msgid "To make the test pass, we also need to update `ReactiveGreetingResourceTest` like so:"
msgstr "Para que o teste passe, também precisamos de atualizar `ReactiveGreetingResourceTest` da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:90
#, no-wrap
msgid "import org.hamcrest.Matchers.equalTo\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:93
#, no-wrap
msgid ""
"@QuarkusTest\n"
"class ReactiveGreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:102
#, no-wrap
msgid ""
"    @Test\n"
"    fun testHelloEndpoint() {\n"
"        given()\n"
"          .`when`().get(\"/hello\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(\"message\", equalTo(\"hello\"))\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:104 upstream/_guides/kotlin.adoc:535
#: upstream/_guides/kotlin.adoc:551 upstream/_guides/kotlin.adoc:585
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kotlin.adoc:106
#, fuzzy, no-wrap
msgid "Kotlin version"
msgstr "Versão Kotlin"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:109
#, fuzzy
msgid "The Quarkus Kotlin extension already declares a dependency on some base Kotlin libraries like `kotlin-stdlib-jdk8` and `kotlin-reflect`. The Kotlin version of these dependencies is declared in the Quarkus BOM and is currently at {kotlin-version}. It is therefore recommended to use the same Kotlin version for other Kotlin libraries. When adding a dependency to another base Kotlin library (e.g. `kotlin-test-junit5`) you don't need to specify the version, since the Quarkus BOM includes the link:https://search.maven.org/artifact/org.jetbrains.kotlin/kotlin-bom[Kotlin BOM]."
msgstr "A extensão Kotlin do Quarkus já declara uma dependência de algumas bibliotecas Kotlin de base, como `kotlin-stdlib-jdk8` e `kotlin-reflect`. A versão Kotlin destas dependências é declarada na lista técnica do Quarkus e está atualmente em {kotlin-version}. Por conseguinte, recomenda-se a utilização da mesma versão Kotlin para outras bibliotecas Kotlin. Ao adicionar uma dependência a outra biblioteca Kotlin de base (por exemplo, `kotlin-test-junit5`), não é necessário especificar a versão, uma vez que a lista técnica do Quarkus inclui a  link:https://search.maven.org/artifact/org.jetbrains.kotlin/kotlin-bom[lista técnica do Kotlin]."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:111
#, fuzzy
msgid "This being said, you still need to specify the version of the Kotlin compiler to use. Again, it is recommended to use the same version which Quarkus uses for the Kotlin libraries."
msgstr "Dito isso, ainda é necessário especificar a versão do compilador Kotlin a ser usada. Novamente, recomenda-se usar a mesma versão que o Quarkus usa para as bibliotecas Kotlin."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:113
#, fuzzy
msgid "Using a different Kotlin version in a Quarkus application is typically not recommended. But in order to do so, you must import the Kotlin BOM *before* the Quarkus BOM."
msgstr "Utilizar uma versão diferente de Kotlin numa aplicação Quarkus não é normalmente recomendado. Mas, para o fazer, é necessário importar a lista técnica Kotlin *antes da* lista técnica Quarkus."

#. type: Title ==
#: upstream/_guides/kotlin.adoc:114
#, fuzzy, no-wrap
msgid "Important Maven configuration points"
msgstr "Pontos de configuração importantes do Maven"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:117
#, fuzzy
msgid "The generated `pom.xml` contains the following modifications compared to its counterpart when Kotlin is not selected:"
msgstr "O `pom.xml` gerado contém as seguintes modificações em comparação com o seu homólogo quando Kotlin não está selecionado:"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:119 upstream/_guides/kotlin.adoc:184
#, fuzzy
msgid "The `quarkus-kotlin` artifact is added to the dependencies. This artifact provides support for Kotlin in the live reload mode (more about this later on)"
msgstr "O artefacto `quarkus-kotlin` é adicionado às dependências. Este artefacto fornece suporte para Kotlin no modo de recarga em tempo real (mais sobre isto mais tarde)"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:120 upstream/_guides/kotlin.adoc:185
#, fuzzy
msgid "The `kotlin-stdlib-jdk8` is also added as a dependency."
msgstr "O `kotlin-stdlib-jdk8` também é adicionado como uma dependência."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:121
#, fuzzy
msgid "Maven's `sourceDirectory` and `testSourceDirectory` build properties are configured to point to Kotlin sources (`src/main/kotlin` and `src/test/kotlin` respectively)"
msgstr "As propriedades de compilação `sourceDirectory` e `testSourceDirectory` do Maven estão configuradas para apontar para fontes Kotlin ( `src/main/kotlin` e `src/test/kotlin` respetivamente)"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:122
#, fuzzy
msgid "The `kotlin-maven-plugin` is configured as follows:"
msgstr "O `kotlin-maven-plugin` é configurado da seguinte forma:"

#. type: Block title
#: upstream/_guides/kotlin.adoc:124
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:148
#, no-wrap
msgid ""
"<plugin>\n"
"    <artifactId>kotlin-maven-plugin</artifactId>\n"
"    <groupId>org.jetbrains.kotlin</groupId>\n"
"    <version>${kotlin.version}</version>\n"
"    <executions>\n"
"        <execution>\n"
"            <id>compile</id>\n"
"            <goals>\n"
"                <goal>compile</goal>\n"
"            </goals>\n"
"        </execution>\n"
"        <execution>\n"
"            <id>test-compile</id>\n"
"            <goals>\n"
"                <goal>test-compile</goal>\n"
"            </goals>\n"
"        </execution>\n"
"    </executions>\n"
"    <configuration>\n"
"        <compilerPlugins>\n"
"            <plugin>all-open</plugin> <1>\n"
"        </compilerPlugins>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:154
#, no-wrap
msgid ""
"        <pluginOptions>\n"
"            <!-- Each annotation is placed on its own line -->\n"
"            <option>all-open:annotation=jakarta.ws.rs.Path</option>\n"
"        </pluginOptions>\n"
"    </configuration>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:163
#, no-wrap
msgid ""
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>org.jetbrains.kotlin</groupId>\n"
"            <artifactId>kotlin-maven-allopen</artifactId>\n"
"            <version>${kotlin.version}</version>\n"
"        </dependency>\n"
"    </dependencies>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kotlin.adoc:165
#, fuzzy
msgid "Enables the `all-open` annotation plugin (see discussion below)"
msgstr "Ativa o plug-in de anotação `all-open` (ver discussão abaixo)"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:168
#, fuzzy
msgid "The important thing to note is the use of the https://kotlinlang.org/docs/reference/compiler-plugins.html#all-open-compiler-plugin[all-open] Kotlin compiler plugin.  In order to understand why this plugin is needed, first we need to note that by default all the classes generated from the Kotlin compiler are marked as `final`."
msgstr "O que é importante notar é o uso do plugin do compilador Kotlin  link:https://kotlinlang.org/docs/reference/compiler-plugins.html#all-open-compiler-plugin[totalmente aberto]. Para entender por que esse plug-in é necessário, primeiro precisamos observar que, por padrão, todas as classes geradas pelo compilador Kotlin são marcadas como `final`."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:170
#, fuzzy
msgid "Having `final` classes however does not work well with various frameworks that need to create https://docs.oracle.com/javase/8/docs/technotes/guides/reflection/proxy.html[Dynamic Proxies]."
msgstr "No entanto, ter classes `final` não funciona bem com várias estruturas que precisam de criar  link:https://docs.oracle.com/javase/8/docs/technotes/guides/reflection/proxy.html[Proxies Dinâmicos]."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:173
#, fuzzy
msgid "Thus, the `all-open` Kotlin compiler plugin allows us to configure the compiler to *not* mark as `final` classes that have certain annotations. In the snippet above, we have specified that classes annotated with `jakarta.ws.rs.Path` should not be `final`."
msgstr "Assim, o plugin `all-open` do compilador Kotlin permite-nos configurar o compilador para *não* marcar como `final` as classes que têm determinadas anotações. No trecho acima, especificamos que as classes anotadas com `jakarta.ws.rs.Path` não devem ser `final`."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:176
#, fuzzy
msgid "If your application contains Kotlin classes annotated with `jakarta.enterprise.context.ApplicationScoped` for example, then `<option>all-open:annotation=jakarta.enterprise.context.ApplicationScoped</option>` needs to be added as well. Same goes for any class that needs to have a dynamic proxy created at runtime."
msgstr "Se a sua aplicação contém classes Kotlin anotadas com `jakarta.enterprise.context.ApplicationScoped`, por exemplo, então `&amp;lt;option&amp;gt;all-open:annotation=jakarta.enterprise.context.ApplicationScoped&amp;lt;/option&amp;gt;` também precisa de ser adicionado. O mesmo se aplica a qualquer classe que precise de ter um proxy dinâmico criado em tempo de execução."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:178
#, fuzzy
msgid "Future versions of Quarkus will configure the Kotlin compiler plugin in a way that will make it unnecessary to alter this configuration."
msgstr "Futuras versões do Quarkus configurarão o plugin do compilador Kotlin de uma forma que tornará desnecessário alterar esta configuração."

#. type: Title ==
#: upstream/_guides/kotlin.adoc:179
#, fuzzy, no-wrap
msgid "Important Gradle configuration points"
msgstr "Pontos de configuração importantes do Gradle"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:182
#, fuzzy
msgid "Similar to the Maven configuration, when using Gradle, the following modifications are required when Kotlin is selected:"
msgstr "Semelhante à configuração do Maven, ao usar o Gradle, as seguintes modificações são necessárias quando o Kotlin é selecionado:"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:186
#, fuzzy
msgid "The Kotlin plugin is activated, which implicitly adds `sourceDirectory` and `testSourceDirectory` build properties to point to Kotlin sources (`src/main/kotlin` and `src/test/kotlin` respectively)"
msgstr "O plugin Kotlin é ativado, o que adiciona implicitamente as propriedades de construção `sourceDirectory` e `testSourceDirectory` para apontar para fontes Kotlin ( `src/main/kotlin` e `src/test/kotlin` respetivamente)"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:187
#, fuzzy
msgid "The all-open Kotlin plugin tells the compiler not to mark as final, those classes with the annotations highlighted (customize as required)"
msgstr "O plugin Kotlin totalmente aberto diz ao compilador para não marcar como final, as classes com as anotações destacadas (personalizar conforme necessário)"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:188
#, fuzzy
msgid "When using native-image, the use of http (or https) protocol(s) must be declared"
msgstr "Ao utilizar a imagem nativa, a utilização do(s) protocolo(s) http (ou https) deve ser declarada"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:189
#, fuzzy
msgid "An example configuration follows:"
msgstr "Segue-se um exemplo de configuração:"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:195
#, no-wrap
msgid ""
"plugins {\n"
"    id 'java'\n"
"    id 'io.quarkus'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:199
#, no-wrap
msgid ""
"    id \"org.jetbrains.kotlin.jvm\" version \"{kotlin-version}\" // <1>\n"
"    id \"org.jetbrains.kotlin.plugin.allopen\" version \"{kotlin-version}\" // <1>\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:204 upstream/_guides/kotlin.adoc:259
#: upstream/_guides/kotlin.adoc:272
#, no-wrap
msgid ""
"repositories {\n"
"    mavenLocal()\n"
"    mavenCentral()\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:207
#, no-wrap
msgid ""
"dependencies {\n"
"    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:{kotlin-version}'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:209
#, no-wrap
msgid "   implementation enforcedPlatform(\"${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:213
#, no-wrap
msgid ""
"    implementation 'io.quarkus:quarkus-resteasy-reactive'\n"
"    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'\n"
"    implementation 'io.quarkus:quarkus-kotlin'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:217
#, no-wrap
msgid ""
"    testImplementation 'io.quarkus:quarkus-junit5'\n"
"    testImplementation 'io.rest-assured:rest-assured'\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:220
#, no-wrap
msgid ""
"group = '...' // set your group\n"
"version = '1.0.0-SNAPSHOT'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:225 upstream/_guides/kotlin.adoc:293
#, no-wrap
msgid ""
"java {\n"
"    sourceCompatibility = JavaVersion.VERSION_11\n"
"    targetCompatibility = JavaVersion.VERSION_11\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:231 upstream/_guides/kotlin.adoc:299
#, no-wrap
msgid ""
"allOpen { // <2>\n"
"    annotation(\"jakarta.ws.rs.Path\")\n"
"    annotation(\"jakarta.enterprise.context.ApplicationScoped\")\n"
"    annotation(\"io.quarkus.test.junit.QuarkusTest\")\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:236
#, no-wrap
msgid ""
"compileKotlin {\n"
"    kotlinOptions.jvmTarget = JavaVersion.VERSION_11\n"
"    kotlinOptions.javaParameters = true\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:240
#, no-wrap
msgid ""
"compileTestKotlin {\n"
"    kotlinOptions.jvmTarget = JavaVersion.VERSION_11\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kotlin.adoc:243 upstream/_guides/kotlin.adoc:308
#, fuzzy
msgid "The Kotlin plugin version needs to be specified."
msgstr "A versão do plug-in Kotlin precisa de ser especificada."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:244 upstream/_guides/kotlin.adoc:309
#, fuzzy
msgid "The all-open configuration required, as per Maven guide above"
msgstr "A configuração totalmente aberta necessária, de acordo com o guia Maven acima"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:246
#, fuzzy
msgid "or, if you use the Gradle Kotlin DSL:"
msgstr "ou, se usar o Gradle Kotlin DSL:"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:254
#, no-wrap
msgid ""
"plugins {\n"
"    kotlin(\"jvm\") version \"{kotlin-version}\" // <1>\n"
"    kotlin(\"plugin.allopen\") version \"{kotlin-version}\"\n"
"    id(\"io.quarkus\")\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:263
#, no-wrap
msgid ""
"val quarkusPlatformGroupId: String by project\n"
"val quarkusPlatformArtifactId: String by project\n"
"val quarkusPlatformVersion: String by project\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:266
#, no-wrap
msgid ""
"group = \"...\"\n"
"version = \"1.0.0-SNAPSHOT\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:275
#, no-wrap
msgid ""
"dependencies {\n"
"    implementation(kotlin(\"stdlib-jdk8\"))\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:277
#, no-wrap
msgid "    implementation(enforcedPlatform(\"${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}\"))\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:281
#, no-wrap
msgid ""
"    implementation(\"io.quarkus:quarkus-kotlin\")\n"
"    implementation(\"io.quarkus:quarkus-resteasy-reactive\")\n"
"    implementation(\"io.quarkus:quarkus-resteasy-reactive-jackson\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:285
#, no-wrap
msgid ""
"    testImplementation(\"io.quarkus:quarkus-junit5\")\n"
"    testImplementation(\"io.rest-assured:rest-assured\")\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:288
#, no-wrap
msgid ""
"group = '...' // set your group\n"
"version = \"1.0.0-SNAPSHOT\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:304
#, no-wrap
msgid ""
"tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {\n"
"    kotlinOptions.jvmTarget = JavaVersion.VERSION_11.toString()\n"
"    kotlinOptions.javaParameters = true\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/kotlin.adoc:310
#, fuzzy, no-wrap
msgid "Overriding the Quarkus BOM Kotlin version (Gradle)"
msgstr "Substituir a versão Kotlin da lista técnica do Quarkus (Gradle)"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:313
#, fuzzy
msgid "If you want to use a different version than the one specified by Quarkus' BOM in your application (for example, to try pre-release features or for compatibility reasons), you can do so by using the `strictly {}` version modifier in your Gradle dependencies. For instance:"
msgstr "Se pretender utilizar uma versão diferente da especificada pela lista técnica do Quarkus na sua aplicação (por exemplo, para experimentar funcionalidades de pré-lançamento ou por motivos de compatibilidade), pode fazê-lo utilizando o modificador de versão `strictly {}` nas suas dependências Gradle. Por exemplo:"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:321
#, no-wrap
msgid ""
"plugins {\n"
"    id(\"io.quarkus\")\n"
"    kotlin(\"jvm\") version \"1.7.0-Beta\"\n"
"    kotlin(\"plugin.allopen\") version \"1.7.0-Beta\"\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:328
#, no-wrap
msgid ""
"configurations.all {\n"
"    resolutionStrategy {\n"
"        force \"org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.0-Beta\"\n"
"        force \"org.jetbrains.kotlin:kotlin-reflect:1.7.0-Beta\"\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kotlin.adoc:330
#, fuzzy, no-wrap
msgid "Live reload"
msgstr "Recarregamento em direto"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:334
#, fuzzy
msgid "Quarkus provides support for live reloading changes made to source code. This support is also available to Kotlin, meaning that developers can update their Kotlin source code and immediately see their changes reflected."
msgstr "O Quarkus oferece suporte para recarregar em tempo real as alterações feitas no código-fonte. Este suporte também está disponível para Kotlin, o que significa que os programadores podem atualizar o seu código-fonte Kotlin e ver imediatamente as suas alterações reflectidas."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:336
#, fuzzy
msgid "To see this feature in action, first execute:"
msgstr "Para ver esta funcionalidade em ação, comece por executar:"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:340
#, fuzzy
msgid "When executing an HTTP GET request against `http://localhost:8080/hello`, you see a JSON message with the value `hello` as its `message` field."
msgstr "Ao executar um pedido HTTP GET contra `&lt;a href=\"http://localhost:8080/hello\" class=\"bare\"&gt;http://localhost:8080/hello&lt;/a&gt;`é apresentada uma mensagem JSON com o valor `hello` como campo `message`."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:342
#, fuzzy
msgid "Now using your favorite editor or IDE, update `ReactiveGreetingResource.kt` and change the `hello` method to the following:"
msgstr "Agora, usando seu editor ou IDE favorito, atualize `ReactiveGreetingResource.kt` e altere o método `hello` para o seguinte:"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:346
#, no-wrap
msgid "fun hello() = Greeting(\"hi\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kotlin.adoc:349
#, fuzzy
msgid "When you now execute an HTTP GET request against `http://localhost:8080/hello`, you should see a JSON message with the value `hi` as its `message` field."
msgstr "Quando agora executa um pedido HTTP GET contra `&lt;a href=\"http://localhost:8080/hello\" class=\"bare\"&gt;http://localhost:8080/hello&lt;/a&gt;`deverá ver uma mensagem JSON com o valor `hi` como campo `message`."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:351
#, fuzzy
msgid "One thing to note is that the live reload feature is not available when making changes to both Java and Kotlin source that have dependencies on each other. We hope to alleviate this limitation in the future."
msgstr "Um aspeto a ser observado é que o recurso de recarga em tempo real não está disponível ao fazer alterações na fonte Java e Kotlin que têm dependências entre si. Esperamos aliviar essa limitação no futuro."

#. type: Title ===
#: upstream/_guides/kotlin.adoc:353
#, fuzzy, no-wrap
msgid "Configuring live reload compiler"
msgstr "Configuração do compilador de recarga em tempo real"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:356
#, fuzzy
msgid "If you need to customize the compiler flags used by `kotlinc` in development mode, you can configure them in the quarkus plugin:"
msgstr "Se precisar de personalizar os sinalizadores do compilador utilizados por `kotlinc` no modo de desenvolvimento, pode configurá-los no plug-in quarkus:"

#. type: Block title
#: upstream/_guides/kotlin.adoc:358
#, fuzzy, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:364
#, no-wrap
msgid ""
"<plugin>\n"
"  <groupId>${quarkus.platform.group-id}</groupId>\n"
"  <artifactId>quarkus-maven-plugin</artifactId>\n"
"  <version>${quarkus.platform.version}</version>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:377
#, no-wrap
msgid ""
"  <configuration>\n"
"    <source>${maven.compiler.source}</source>\n"
"    <target>${maven.compiler.target}</target>\n"
"    <compilerOptions>\n"
"      <compiler>\n"
"        <name>kotlin</name>\n"
"        <args>\n"
"          <arg>-Werror</arg>\n"
"        </args>\n"
"      </compiler>\n"
"    </compilerOptions>\n"
"  </configuration>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:380
#, no-wrap
msgid ""
"  ...\n"
"</plugin>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/kotlin.adoc:382
#, fuzzy, no-wrap
msgid "Gradle (Groovy DSL)"
msgstr "Gradle (Groovy DSL)"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:389
#, no-wrap
msgid ""
"quarkusDev {\n"
"    compilerOptions {\n"
"        compiler(\"kotlin\").args(['-Werror'])\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/kotlin.adoc:392
#, fuzzy, no-wrap
msgid "Gradle (Kotlin DSL)"
msgstr "Gradle (Kotlin DSL)"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:399
#, no-wrap
msgid ""
"tasks.quarkusDev {\n"
"     compilerOptions {\n"
"        compiler(\"kotlin\").args([\"-Werror\"])\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kotlin.adoc:401
#, fuzzy, no-wrap
msgid "Packaging the application"
msgstr "Empacotar a aplicação"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:404
#, fuzzy
msgid "As usual, the application can be packaged using:"
msgstr "Como de costume, a aplicação pode ser empacotada utilizando:"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:408
#, fuzzy
msgid "and executed with `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "e executado com `java -jar target/quarkus-app/quarkus-run.jar`."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:410
#, fuzzy
msgid "You can also build the native executable using:"
msgstr "Também pode construir o executável nativo utilizando:"

#. type: Title ==
#: upstream/_guides/kotlin.adoc:414
#, fuzzy, no-wrap
msgid "Kotlin and Jackson"
msgstr "Kotlin e Jackson"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:418
#, fuzzy
msgid "If the `com.fasterxml.jackson.module:jackson-module-kotlin` dependency and the `quarkus-jackson` extension (or one of the `quarkus-resteasy-jackson` or `quarkus-resteasy-reactive-jackson` extensions) have been added to the project, then Quarkus automatically registers the `KotlinModule` to the `ObjectMapper` bean (see xref:rest-json.adoc#jackson[this] guide for more details)."
msgstr "Se a dependência `com.fasterxml.jackson.module:jackson-module-kotlin` e a extensão `quarkus-jackson` (ou uma das extensões `quarkus-resteasy-jackson` ou `quarkus-resteasy-reactive-jackson` ) tiverem sido adicionadas ao projeto, o Quarkus regista automaticamente o bean `KotlinModule` para o bean `ObjectMapper` (consulte  link:rest-json.html#jackson[este] guia para obter mais informações)."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:420
#, fuzzy
msgid "When using Kotlin data classes with `native-image` you may experience serialization errors that do not occur with the `JVM` version, despite the Kotlin Jackson Module being registered. This is especially so if you have a more complex JSON hierarchy, where an issue on a lower node causes a serialization failure. The error message displayed is a catch-all and typically displays an issue with the root object, which may not necessarily be the case."
msgstr "Ao usar classes de dados Kotlin com `native-image`, pode ocorrer erros de serialização que não ocorrem com a versão `JVM`, apesar de o módulo Kotlin Jackson estar registado. Isto é especialmente verdade se tiver uma hierarquia JSON mais complexa, onde um problema num nó inferior causa uma falha de serialização. A mensagem de erro apresentada é um apanhado geral e, normalmente, apresenta um problema com o objeto raiz, o que pode não ser necessariamente o caso."

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:424
#, no-wrap
msgid "com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `Address` (no Creators, like default construct, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kotlin.adoc:427
#, fuzzy
msgid "To ensure full-compatibility with `native-image`, it is recommended to apply the Jackson `@field:JsonProperty(\"fieldName\")` annotation, and set a nullable default, as illustrated below. You can automate the generation of Kotlin data classes for your sample JSON using IntelliJ IDEA plugins (such as JSON to Kotlin Class), and easily enable the Jackson annotation and select nullable parameters as part of the auto-code generation."
msgstr "Para garantir a compatibilidade total com `native-image`, recomenda-se aplicar a anotação Jackson `@field:JsonProperty(\"fieldName\")` e definir um padrão anulável, conforme ilustrado abaixo. Pode automatizar a geração de classes de dados Kotlin para o seu JSON de amostra utilizando plug-ins do IntelliJ IDEA (como JSON to Kotlin Class) e ativar facilmente a anotação Jackson e selecionar parâmetros anuláveis como parte da geração de código automático."

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:431
#, no-wrap
msgid "import com.fasterxml.jackson.annotation.JsonProperty\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:436
#, no-wrap
msgid ""
"data class Response(\n"
"\t@field:JsonProperty(\"chart\")\n"
"\tval chart: ChartData? = null\n"
")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:440
#, no-wrap
msgid ""
"data class ChartData(\n"
"\t@field:JsonProperty(\"result\")\n"
"\tval result: List<ResultItem?>? = null,\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:444
#, no-wrap
msgid ""
"\t@field:JsonProperty(\"error\")\n"
"\tval error: Any? = null\n"
")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:448
#, no-wrap
msgid ""
"data class ResultItem(\n"
"\t@field:JsonProperty(\"meta\")\n"
"\tval meta: Meta? = null,\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:451
#, no-wrap
msgid ""
"\t@field:JsonProperty(\"indicators\")\n"
"\tval indicators: IndicatorItems? = null,\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:455
#, no-wrap
msgid ""
"\t@field:JsonProperty(\"timestamp\")\n"
"\tval timestamp: List<Int?>? = null\n"
")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:457 upstream/_guides/kotlin.adoc:469
#, no-wrap
msgid "...\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kotlin.adoc:459
#, fuzzy, no-wrap
msgid "Kotlin and the Kubernetes Client"
msgstr "Kotlin e o cliente Kubernetes"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:462
#, fuzzy
msgid "When working with the `quarkus-kubernetes` extension and have Kotlin classes bound to CustomResource definitions (like you do for building operators), you need to be aware that the underlying Fabric8 Kubernetes Client uses its own static Jackson `ObjectMapper` s, which can be configured as follows with the `KotlinModule`:"
msgstr "Quando trabalhar com a extensão `quarkus-kubernetes` e tiver classes Kotlin ligadas a definições CustomResource (como faz para construir operadores), tem de estar ciente de que o Cliente Kubernetes Fabric8 subjacente utiliza o seu próprio Jackson estático `ObjectMapper` s, que pode ser configurado da seguinte forma com o `KotlinModule`:"

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:467
#, no-wrap
msgid ""
"import io.fabric8.kubernetes.client.utils.Serialization\n"
"import com.fasterxml.jackson.module.kotlin.KotlinModule\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:472
#, no-wrap
msgid ""
"Serialization.jsonMapper().registerModule(KotlinModule())\n"
"Serialization.yamlMapper().registerModule(KotlinModule())\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kotlin.adoc:475
#, fuzzy
msgid "_Please test this carefully on compilation to native images and fallback to Java-compatible Jackson bindings if you experience problems._"
msgstr "_Teste isto cuidadosamente na compilação para imagens nativas e recorra a ligações Jackson compatíveis com Java se tiver problemas._"

#. type: Title ==
#: upstream/_guides/kotlin.adoc:476
#, fuzzy, no-wrap
msgid "Coroutines support"
msgstr "Suporte a rotinas"

#. type: Title ===
#: upstream/_guides/kotlin.adoc:478
#, fuzzy, no-wrap
msgid "Extensions"
msgstr "Extensões"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:481
#, fuzzy
msgid "The following extensions provide support for Kotlin Coroutines by allowing the use of Kotlin's `suspend` keyword on method signatures."
msgstr "As seguintes extensões fornecem suporte para Kotlin Coroutines, permitindo o uso da palavra-chave `suspend` de Kotlin em assinaturas de métodos."

#. type: Table
#: upstream/_guides/kotlin.adoc:483
#, fuzzy, no-wrap
msgid "Extension"
msgstr "Extensão"

#. type: Table
#: upstream/_guides/kotlin.adoc:485
#, fuzzy, no-wrap
msgid "Comments"
msgstr "Comentários"

#. type: Table
#: upstream/_guides/kotlin.adoc:486
#, fuzzy, no-wrap
msgid "`quarkus-resteasy-reactive`"
msgstr "`quarkus-resteasy-reactive`"

#. type: Table
#: upstream/_guides/kotlin.adoc:488
#, fuzzy, no-wrap
msgid "Support is provided for Jakarta REST Resource Methods"
msgstr "É fornecido suporte para os métodos de recursos REST de Jacarta"

#. type: Table
#: upstream/_guides/kotlin.adoc:489
#, fuzzy, no-wrap
msgid "`quarkus-rest-client-reactive`"
msgstr "`quarkus-rest-client-reactive`"

#. type: Table
#: upstream/_guides/kotlin.adoc:491
#, fuzzy, no-wrap
msgid "Support is provided for REST Client interface methods"
msgstr "É fornecido suporte para métodos da interface de cliente REST"

#. type: Table
#: upstream/_guides/kotlin.adoc:492
#, fuzzy, no-wrap
msgid "`quarkus-smallrye-reactive-messaging`"
msgstr "`quarkus-smallrye-reactive-messaging`"

#. type: Table
#: upstream/_guides/kotlin.adoc:494
#, fuzzy, no-wrap
msgid "Support is provided for Reactive messaging methods"
msgstr "Suporte para métodos de mensagens reactivas"

#. type: Table
#: upstream/_guides/kotlin.adoc:495
#, fuzzy, no-wrap
msgid "`quarkus-scheduler`"
msgstr "`quarkus-scheduler`"

#. type: Table
#: upstream/_guides/kotlin.adoc:497
#, fuzzy, no-wrap
msgid "Support is provided for scheduler methods"
msgstr "O suporte é fornecido para métodos de agendamento"

#. type: Table
#: upstream/_guides/kotlin.adoc:498
#, fuzzy, no-wrap
msgid "`quarkus-smallrye-fault-tolerance`"
msgstr "`quarkus-smallrye-fault-tolerance`"

#. type: Table
#: upstream/_guides/kotlin.adoc:500
#, fuzzy, no-wrap
msgid "Support is provided for the declarative annotation-based API"
msgstr "É fornecido suporte para a API declarativa baseada em anotações"

#. type: Title ===
#: upstream/_guides/kotlin.adoc:502
#, fuzzy, no-wrap
msgid "Kotlin coroutines and Mutiny"
msgstr "Coroas Kotlin e Mutiny"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:506
#, fuzzy
msgid "Kotlin coroutines provide an imperative programming model that actually gets executed in an asynchronous, reactive manner.  To simplify the interoperability between Mutiny and Kotlin there is the module `io.smallrye.reactive:mutiny-kotlin`, described link:https://smallrye.io/smallrye-mutiny/latest/guides/kotlin/[here]."
msgstr "As corrotinas Kotlin fornecem um modelo de programação imperativo que é executado de forma assíncrona e reactiva. Para simplificar a interoperabilidade entre Mutiny e Kotlin, existe o módulo `io.smallrye.reactive:mutiny-kotlin`, descrito  link:https://smallrye.io/smallrye-mutiny/latest/guides/kotlin/[aqui]."

#. type: Title ==
#: upstream/_guides/kotlin.adoc:507
#, fuzzy, no-wrap
msgid "CDI @Inject with Kotlin"
msgstr "CDI @Inject com Kotlin"

#. type: Plain text
#: upstream/_guides/kotlin.adoc:511
#, fuzzy
msgid "Kotlin reflection annotation processing differs from Java.  You may experience an error when using CDI @Inject such as: \"kotlin.UninitializedPropertyAccessException: lateinit property xxx has not been initialized\""
msgstr "O processamento de anotações de reflexão do Kotlin é diferente do Java. Pode ocorrer um erro ao usar CDI @Inject, como: \"kotlin.UninitializedPropertyAccessException: a propriedade lateinit xxx não foi inicializada\""

#. type: Plain text
#: upstream/_guides/kotlin.adoc:513
#, fuzzy
msgid "In the example below, this can be easily solved by adapting the annotation, adding @field: Default, to handle the lack of a @Target on the Kotlin reflection annotation definition."
msgstr "No exemplo abaixo, isso pode ser facilmente resolvido adaptando a anotação, adicionando @field: Default, para lidar com a falta de um @Target na definição da anotação de reflexão do Kotlin."

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:519
#, no-wrap
msgid ""
"import jakarta.inject.Inject\n"
"import jakarta.enterprise.inject.Default\n"
"import jakarta.enterprise.context.ApplicationScoped\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:529
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class GreetingService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:533
#, no-wrap
msgid ""
"    fun greeting(name: String): String {\n"
"        return \"hello $name\"\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:538
#, no-wrap
msgid ""
"@Path(\"/\")\n"
"class ReactiveGreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:542
#, no-wrap
msgid ""
"    @Inject\n"
"    @field: Default // <1>\n"
"    lateinit var service: GreetingService\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:549 upstream/_guides/kotlin.adoc:583
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    @Path(\"/hello/{name}\")\n"
"    fun greeting(name: String): String {\n"
"        return service.greeting(name)\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kotlin.adoc:553
#, fuzzy
msgid "Kotlin requires a @field: xxx qualifier as it has no @Target on the annotation definition. Add @field: xxx in this example. @Default is used as the qualifier, explicitly specifying the use of the default bean."
msgstr "Kotlin requer um qualificador @field: xxx porque não tem @Target na definição da anotação. Adicione @field: xxx neste exemplo. @Default é usado como qualificador, especificando explicitamente o uso do bean padrão."

#. type: Plain text
#: upstream/_guides/kotlin.adoc:555
#, fuzzy
msgid "Alternatively, prefer the use of constructor injection which works without modification of the Java examples, increases testability and complies best to a Kotlin programming style."
msgstr "Em alternativa, prefira a utilização da injeção de construtores, que funciona sem modificação dos exemplos Java, aumenta a testabilidade e adapta-se melhor a um estilo de programação Kotlin."

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:559
#, no-wrap
msgid "import jakarta.enterprise.context.ApplicationScoped\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:571
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class GreetingService {\n"
"    fun greeting(name: String): String {\n"
"        return \"hello $name\"\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kotlin.adoc:576
#, no-wrap
msgid ""
"@Path(\"/\")\n"
"class ReactiveGreetingResource(\n"
"    private val service: GreetingService\n"
") {\n"
msgstr ""
