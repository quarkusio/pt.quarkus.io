# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: 2024-01-25 09:20-0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.4.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Using the REST Client"
msgstr "Usando o Cliente REST"

#: _guides/rest-client-reactive.adoc
msgid ""
"This guide explains how to use the REST Client Reactive in order to interact with REST APIs.\n"
"REST Client Reactive is the REST Client implementation compatible with RESTEasy Reactive."
msgstr "Este guia explica como usar o Cliente REST Reativo para interagir com as APIs REST. O Cliente REST Reativo é a implementação do Cliente REST compatível com o RESTEasy Reativo."

#: _guides/rest-client-reactive.adoc
msgid ""
"If your application uses a client and exposes REST endpoints, please use xref:resteasy-reactive.adoc[RESTEasy Reactive]\n"
"for the server part."
msgstr "Se o seu aplicativo usa um cliente e expõe endpoints REST, use o xref:resteasy-reactive.adoc[RESTEasy Reativo] para a parte do servidor."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Solution"
msgstr "Solução"

#: _guides/rest-client-reactive.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas seções seguintes e crie a aplicação passo a passo. No entanto, você pode ir diretamente para o exemplo completo."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone o repositório Git: `git clone {quickstarts-clone-url}`, ou baixe um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The solution is located in the `rest-client-reactive-quickstart` link:{quickstarts-tree-url}/rest-client-reactive-quickstart[directory]."
msgstr "A solução está localizada no link:{quickstarts-tree-url}/rest-client-reactive-quickstart[diretório] `rest-client-reactive-quickstart`."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Primeiro, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "This command generates the Maven project with a REST endpoint and imports:"
msgstr "Este comando gera o projeto Maven com um endpoint REST e com importações:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "the `resteasy-reactive-jackson` extension for the REST server support. Use `resteasy-reactive` instead if you do not wish to use Jackson;"
msgstr "a extensão `resteasy-reactive-jackson` para o suporte do servidor REST. Use `resteasy-reactive` em vez disso se não pretender utilizar Jackson;"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "the `rest-client-reactive-jackson` extension for the REST client support. Use `rest-client-reactive` instead if you do not wish to use Jackson"
msgstr "a extensão `rest-client-reactive-jackson` para o suporte do cliente REST. Use `rest-client-reactive` em vez disso se não pretender utilizar Jackson"

#: _guides/rest-client-reactive.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `rest-client-reactive-jackson` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "Se já tiver o projeto Quarkus configurado, você pode adicionar a extensão `rest-client-reactive-jackson` ao projeto executando o seguinte comando no diretório base do projeto:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "This will add the following to your build file:"
msgstr "Isto irá adicionar o seguinte trecho no seu arquivo de build:"

#. type: Block title
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Setting up the model"
msgstr "Configurando o modelo"

#: _guides/rest-client-reactive.adoc
msgid ""
"In this guide we will be demonstrating how to consume part of the REST API supplied by the link:https://stage.code.quarkus.io[stage.code.quarkus.io] service.\n"
"Our first order of business is to set up the model we will be using, in the form of a `Extension` POJO."
msgstr "Neste guia, demonstraremos como consumir parte da API REST fornecida pelo serviço link:https://stage.code.quarkus.io[stage.code.quarkus.io] . Nosso primeiro passo é configurar o modelo que usaremos, na forma de um POJO `Extension` ."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Create a `src/main/java/org/acme/rest/client/Extension.java` file and set the following content:"
msgstr "Crie um arquivo `src/main/java/org/acme/rest/client/Extension.java` e defina o seguinte conteúdo:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The model above is only a subset of the fields provided by the service, but it suffices for the purposes of this guide."
msgstr "O modelo acima é apenas um subconjunto dos campos fornecidos pelo serviço, mas é suficiente para os objetivos deste guia."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Create the interface"
msgstr "Crie a interface"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Using the REST Client Reactive is as simple as creating an interface using the proper Jakarta REST and MicroProfile annotations. In our case the interface should be created at `src/main/java/org/acme/rest/client/ExtensionsService.java` and have the following content:"
msgstr "Usar o Cliente REST Reativo é tão simples quanto criar uma interface usando as anotações Jakarta REST e MicroProfile adequadas. No nosso caso, a interface deve ser criada em `src/main/java/org/acme/rest/client/ExtensionsService.java` e ter o seguinte conteúdo:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The `getById` method gives our code the ability to get an extension by id from the Code Quarkus API. The client will handle all the networking and marshalling leaving our code clean of such technical details."
msgstr "O método `getById` dá ao nosso código a capacidade de obter uma extensão por id a partir da API do Code Quarkus. O cliente tratará de toda a ligação em rede e da organização, deixando o nosso código livre desses pormenores técnicos."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The purpose of the annotations in the code above is the following:"
msgstr "O objetivo das anotações no código acima é o seguinte:"

#: _guides/rest-client-reactive.adoc
msgid ""
"`@RegisterRestClient` allows Quarkus to know that this interface is meant to be available for\n"
"CDI injection as a REST Client"
msgstr "`@RegisterRestClient` permite que o Quarkus saiba que essa interface deve estar disponível para injeção de CDI como um Cliente REST"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "`@Path`, `@GET` and `@QueryParam` are the standard Jakarta REST annotations used to define how to access the service"
msgstr "`@Path`, `@GET` e `@QueryParam` são as anotações Jakarta REST padrão utilizadas para definir o modo de acesso ao serviço"

#: _guides/rest-client-reactive.adoc
msgid ""
"When the `quarkus-rest-client-reactive-jackson` extension is installed, Quarkus will use the `application/json` media type\n"
"by default for most return values, unless the media type is explicitly set via `@Produces` or `@Consumes` annotations."
msgstr "Quando a extensão `quarkus-rest-client-reactive-jackson` estiver instalada, o Quarkus usará o tipo de mídia `application/json` por padrão para a maioria dos valores de retorno, a menos que o tipo de mídia seja explicitamente definido por meio das anotações `@Produces` ou `@Consumes` ."

#: _guides/rest-client-reactive.adoc
msgid ""
"If you don't rely on the JSON default, it is heavily recommended to annotate your endpoints with the `@Produces` and `@Consumes` annotations to define precisely the expected content-types.\n"
"It will allow to narrow down the number of Jakarta REST providers (which can be seen as converters) included in the native executable."
msgstr "Se você não conta com JSON padrão, é altamente recomendável anotar seus endpoints com as anotações `@Produces` e `@Consumes` para definir com precisão os tipos de conteúdo esperados. Isso permitirá reduzir o número de provedores Jakarta REST (que podem ser vistos como conversores) incluídos no executável nativo."

#: _guides/rest-client-reactive.adoc
msgid ""
"The `getById` method above is a blocking call. It should not be invoked on the event loop.\n"
"The xref:async-support[Async Support] section describes how to make non-blocking calls."
msgstr "O método `getById` acima é uma chamada blocante. Ele não deve ser invocado no loop de eventos. A seção xref:async-support[Suporte Assíncrono] descreve como fazer chamadas não blocantes."

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Query Parameters"
msgstr "Parâmetros de Consulta"

#: _guides/rest-client-reactive.adoc
msgid ""
"The easiest way to specify a query parameter is to annotate a client method parameter with the `@QueryParam` or the `@RestQuery`.\n"
"The `@RestQuery` is equivalent of the `@QueryParam`, but with optional name. Additionally, it can be also used to pass query parameters\n"
"as a `Map`, which is convenient if parameters are not known in advance."
msgstr "A maneira mais fácil de especificar um parâmetro de consulta é anotar um parâmetro de método do cliente com `@QueryParam` ou `@RestQuery` . O `@RestQuery` é equivalente ao `@QueryParam` , mas com nome opcional. Além disso, ele também pode ser usado para passar parâmetros de consulta como `Map` , o que é conveniente se os parâmetros não forem conhecidos antecipadamente."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Request query will include parameter with key `name`"
msgstr "A consulta da requisição incluirá um parâmetro com a chave `name`"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Each `Map` entry represents exactly one query parameter"
msgstr "Cada entrada `Map` representa exatamente um parâmetro de consulta"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "`MultivaluedMap` allows you to send array values"
msgstr "`MultivaluedMap` permite enviar valores de vetor"

#. type: Title ====
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Using @ClientQueryParam"
msgstr "Usando @ClientQueryParam"

#: _guides/rest-client-reactive.adoc
msgid ""
"Another way to add query parameters to a request is to use `@io.quarkus.rest.client.reactive.ClientQueryParam` on either the REST client interface or a specific method of the interface.\n"
"The annotation can specify the query parameter name while the value can either be a constant, a configuration property or it can be determined by invoking a method."
msgstr "Outra forma de adicionar parâmetros de consulta a uma requisição é usar `@io.quarkus.rest.client.reactive.ClientQueryParam` na interface do cliente REST ou em um método específico da interface. A anotação pode especificar o nome do parâmetro de consulta, enquanto o valor pode ser uma constante, uma propriedade de configuração ou pode ser determinado pela chamada de um método."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The following example shows the various possible usages:"
msgstr "O exemplo a seguir mostra as várias utilizações possíveis:"

#: _guides/rest-client-reactive.adoc
msgid ""
"By placing `@ClientQueryParam` on the interface, we ensure that `my-param` will be added to all requests of the client.\n"
"Because we used the `${...}` syntax, the actual value of the parameter will be obtained using the `my.property-value` configuration property."
msgstr "Ao colocar `@ClientQueryParam` na interface, garantimos que `my-param` será adicionado a todas as requisições do cliente. Como usamos a sintaxe `${...}`, o valor real do parâmetro será obtido usando a propriedade de configuração `my.property-value` ."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "When `getWithOtherParam` is called, in addition to the `my-param` query parameter, `some-other-param` with the value of `other` will also be added."
msgstr "Quando `getWithOtherParam` é chamado, além do parâmetro de consulta `my-param`, `some-other-param` com o valor de `other` também será adicionado."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "when `getFromMethod` is called, in addition to the `my-param` query parameter, `param-from-method` with the value of `test` (because that's what the `withParam` method returns when invoked with `param-from-method`) will also be added."
msgstr "quando `getFromMethod` é chamado, além do parâmetro de consulta `my-param`, `param-from-method` com o valor de `test` (porque é isso que o método `withParam` devolve quando invocado com `param-from-method`) também será adicionado."

#: _guides/rest-client-reactive.adoc
msgid ""
"Note that if an interface method contains an argument annotated with `@QueryParam`, that argument will take\n"
"priority over anything specified in any `@ClientQueryParam` annotation."
msgstr "Observe que, se um método de interface contiver um argumento anotado com `@QueryParam` , esse argumento terá prioridade sobre qualquer coisa especificada em qualquer anotação `@ClientQueryParam` ."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "More information about this annotation can be found on the javadoc of link:https://javadoc.io/doc/io.quarkus/quarkus-rest-client-reactive/latest/io/quarkus/rest/client/reactive/ClientQueryParam.html[`@ClientQueryParam`]."
msgstr "Mais informações sobre esta anotação podem ser encontradas no javadoc do link:https://javadoc.io/doc/io.quarkus/quarkus-rest-client-reactive/latest/io/quarkus/rest/client/reactive/ClientQueryParam.html[`@ClientQueryParam`]."

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Form Parameters"
msgstr "Parâmetros do Formulário"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Form parameters can be specified using `@RestForm` (or `@FormParam`) annotations:"
msgstr "Os parâmetros do formulário podem ser especificados utilizando as anotações `@RestForm` (ou `@FormParam`):"

#. type: Title ====
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Using @ClientFormParam"
msgstr "Usando @ClientFormParam"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Form parameters can also be specified using `@ClientFormParam`, similar to `@ClientQueryParam`:"
msgstr "Os parâmetros do formulário também podem ser especificados utilizando `@ClientFormParam`, semelhante a `@ClientQueryParam`:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "More information about this annotation can be found on the javadoc of link:https://javadoc.io/doc/io.quarkus/quarkus-rest-client-reactive/latest/io/quarkus/rest/client/reactive/ClientFormParam.html[`@ClientFormParam`]."
msgstr "Mais informações sobre esta anotação podem ser encontradas no javadoc do link:https://javadoc.io/doc/io.quarkus/quarkus-rest-client-reactive/latest/io/quarkus/rest/client/reactive/ClientFormParam.html[`@ClientFormParam`]."

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Path Parameters"
msgstr "Parâmetros do Caminho"

#: _guides/rest-client-reactive.adoc
msgid ""
"If the GET request requires path parameters you can leverage the `@PathParam(\"parameter-name\")` annotation instead of\n"
"(or in addition to) the `@QueryParam`. Path and query parameters can be combined, as required, as illustrated in the example below."
msgstr "Se a requisição GET exigir parâmetros de caminho, você poderá utilizar a anotação `@PathParam(\"parameter-name\")` em vez de (ou além de) `@QueryParam` . Os parâmetros de caminho e de consulta podem ser combinados, conforme necessário, como ilustrado no exemplo abaixo."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Using ClientMultipartForm"
msgstr "Usando o ClientMultipartForm"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "MultipartForm can be built using the Class `ClientMultipartForm` which supports building the form as needed:"
msgstr "O MultipartForm pode ser criado usando a classe `ClientMultipartForm` , que oferece suporte à criação do formulário conforme necessário:"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "`ClientMultipartForm` can be programmatically created with custom inputs and/or from `MultipartFormDataInput` and/or from custom Resteasy Reactive Input annotated with `@RestForm` if received."
msgstr "`ClientMultipartForm` pode ser criado programaticamente com entradas personalizadas e/ou a partir de `MultipartFormDataInput` e/ou a partir de entrada reativa personalizada do Resteasy anotada com `@RestForm` , se recebida."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "input to the method is a custom Generic `ClientMultipartForm` which matches external application api contract."
msgstr "A entrada para o método é um Generic `ClientMultipartForm` personalizado que corresponde ao contrato da API do aplicativo externo."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "More information about this Class and supported methods can be found on the javadoc of link:https://javadoc.io/doc/io.quarkus.resteasy.reactive/resteasy-reactive-client/latest/org/jboss/resteasy/reactive/client/api/ClientMultipartForm.html[`ClientMultipartForm`]."
msgstr "Mais informações sobre essa classe e os métodos suportados podem ser encontradas no javadoc do link:https://javadoc.io/doc/io.quarkus.resteasy.reactive/resteasy-reactive-client/latest/org/jboss/resteasy/reactive/client/api/ClientMultipartForm.html[ClientMultipartForm] ."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Build `ClientMultipartForm` from `MultipartFormDataInput` programmatically"
msgstr "Criar `ClientMultipartForm` a partir de `MultipartFormDataInput` programaticamente"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "`MultipartFormDataInput` inputForm supported by RestEasy Reactive (Server)."
msgstr "`MultipartFormDataInput` inputForm suportado pelo RestEasy Reactive (Server)."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Creating a `ClientMultipartForm` object to populate with various dataparts."
msgstr "Criar um objeto `ClientMultipartForm` para preencher com vários dataparts."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Adding InMemory `FileItem` to `ClientMultipartForm`"
msgstr "Adição do InMemory `FileItem` ao `ClientMultipartForm`"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Adding physical `FileItem` to `ClientMultipartForm`"
msgstr "Adicionar o site físico `FileItem` ao `ClientMultipartForm`"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Adding any attribute directly to `ClientMultipartForm` if not `FileItem`."
msgstr "Adicionar qualquer atributo diretamente a `ClientMultipartForm` se não for `FileItem` ."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Build `ClientMultipartForm` from custom Attributes annotated with `@RestForm`"
msgstr "Crie o site `ClientMultipartForm` a partir de atributos personalizados anotados com `@RestForm`"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "`MultiPartPayloadFormData` custom Object created to match the API contract for calling service which needs to be converted to `ClientMultipartForm`"
msgstr "`MultiPartPayloadFormData` Objeto personalizado criado para corresponder ao contrato de API para chamar o serviço que precisa ser convertido em `ClientMultipartForm`"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Adding attribute `jsonPayload` directly to `ClientMultipartForm`"
msgstr "Adicionar o atributo `jsonPayload` diretamente ao `ClientMultipartForm`"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Adding `FileUpload` objects to `ClientMultipartForm` as binaryFileUpload with contentType."
msgstr "Adição de objetos `FileUpload` a `ClientMultipartForm` como binaryFileUpload com contentType."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Create the configuration"
msgstr "Crie a configuração"

#: _guides/rest-client-reactive.adoc
msgid ""
"In order to determine the base URL to which REST calls will be made, the REST Client uses configuration from `application.properties`.\n"
"The name of the property needs to follow a certain convention which is best displayed in the following code:"
msgstr "Para determinar o URL de base para o qual as chamadas REST serão feitas, o Cliente REST usa a configuração de `application.properties`. O nome da propriedade precisa seguir uma determinada convenção que é melhor exibida no código a seguir:"

#: _guides/rest-client-reactive.adoc
msgid ""
"Having this configuration means that all requests performed using `org.acme.rest.client.ExtensionsService` will use `https://stage.code.quarkus.io/api` as the base URL.\n"
"Using the configuration above, calling the `getById` method of `ExtensionsService` with a value of `io.quarkus:quarkus-rest-client-reactive` would result in an HTTP GET request being made to `https://stage.code.quarkus.io/api/extensions?id=io.quarkus:quarkus-rest-client-reactive`."
msgstr "Essa configuração significa que todas as requisições realizadas usando `org.acme.rest.client.ExtensionsService` usarão o `https://stage.code.quarkus.io/api` como URL base. Usando a configuração acima, chamar o método `getById` de `ExtensionsService` com um valor de `io.quarkus:quarkus-rest-client-reactive` resultaria em uma requisição HTTP GET feita para `https://stage.code.quarkus.io/api/extensions?id=io.quarkus:quarkus-rest-client-reactive`."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Note that `org.acme.rest.client.ExtensionsService` _must_ match the fully qualified name of the `ExtensionsService` interface we created in the previous section."
msgstr "Note que `org.acme.rest.client.ExtensionsService` _deve_ corresponder ao nome totalmente qualificado da interface `ExtensionsService` que criamos na seção anterior."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "To facilitate the configuration, you can use the `@RegisterRestClient` `configKey` property that allows to use different configuration root than the fully qualified name of your interface."
msgstr "Para facilitar a configuração, você pode utilizar a propriedade `configKey` de `@RegisterRestClient` que permite utilizar uma raiz de configuração diferente do nome totalmente qualificado da sua interface."

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Disabling Hostname Verification"
msgstr "Desabilitando a Verificação do Nome do Host"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "To disable the SSL hostname verification for a specific REST client, add the following property to your configuration:"
msgstr "Para desabilitar a verificação do nome do host SSL para um cliente REST específico, adicione a seguinte propriedade à sua configuração:"

#. type: delimited block =
#: _guides/rest-client-reactive.adoc
msgid "This setting should not be used in production as it will disable the SSL hostname verification."
msgstr "Esta definição não deve ser utilizada em produção, uma vez que irá desativar a verificação do nome do host SSL."

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "HTTP/2 Support"
msgstr "Suporte HTTP/2"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "HTTP/2 is disabled by default in REST Client. If you want to enable it, you can set:"
msgstr "O HTTP/2 está desabilitado por padrão no Cliente REST. Se pretende habilitar, pode definir:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Alternatively, you can enable the Application-Layer Protocol Negotiation (alpn) TLS extension and the client will negotiate which HTTP version to use over the ones compatible by the server. By default, it will try to use HTTP/2 first and if it's not enabled, it will use HTTP/1.1. If you want to enable it, you can set:"
msgstr "Alternativamente, você pode habilitar a extensão TLS de Negociação de Protocolo de Camada de Aplicação (alpn) e o cliente irá determinar qual versão HTTP utilizar, dentre as que são compatíveis com o servidor. Por padrão, ele tentará usar o HTTP/2 primeiro e, se não estiver habilitado, usará o HTTP/1.1. Se você quiser habilitá-lo, você pode definir:"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Create the Jakarta REST resource"
msgstr "Crie o recurso Jakarta REST"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Create the `src/main/java/org/acme/rest/client/ExtensionsResource.java` file with the following content:"
msgstr "Crie o arquivo `src/main/java/org/acme/rest/client/ExtensionsResource.java` com o seguinte conteúdo:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "There are two interesting parts in this listing:"
msgstr "Há duas partes interessantes nesta listagem:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "the client stub is injected with the `@RestClient` annotation instead of the usual CDI `@Inject`"
msgstr "o stub do cliente é injetado com a anotação `@RestClient` em vez da habitual anotação CDI `@Inject`"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Programmatic client creation with QuarkusRestClientBuilder"
msgstr "Criação programática de clientes com o QuarkusRestClientBuilder"

#: _guides/rest-client-reactive.adoc
msgid ""
"Instead of annotating the client with `@RegisterRestClient`, and injecting\n"
"a client with `@RestClient`, you can also create REST Client programmatically.\n"
"You do that with the `QuarkusRestClientBuilder`."
msgstr "Em vez de anotar o cliente com `@RegisterRestClient` e injetar um cliente com `@RestClient`, você também pode criar um cliente REST de forma programática. Você faz isso com o `QuarkusRestClientBuilder` ."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "With this approach the client interface could look as follows:"
msgstr "Com esta abordagem, a interface do cliente poderia ter o seguinte aspecto:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "And the service as follows:"
msgstr "E o serviço é o seguinte:"

#. type: delimited block =
#: _guides/rest-client-reactive.adoc
msgid "The `QuarkusRestClientBuilder` interface is a Quarkus-specific API to programmatically create clients with additional configuration options. Otherwise, you can also use the `RestClientBuilder` interface from the Microprofile API:"
msgstr "A interface `QuarkusRestClientBuilder` é uma API específica do Quarkus para criar programaticamente clientes com opções de configuração adicionais. Caso contrário, você também pode utilizar a interface `RestClientBuilder` da API Microprofile:"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Use Custom HTTP Options"
msgstr "Usar Opções HTTP Personalizadas"

#. type: delimited block =
#: _guides/rest-client-reactive.adoc
msgid "The REST Client Reactive internally uses https://vertx.io/docs/apidocs/io/vertx/core/http/HttpClient.html[the Vert.x HTTP Client] to make the network connections. The REST Client Reactive extensions allows configuring some settings via properties, for example:"
msgstr "O Cliente REST Reativo utiliza internamente https://vertx.io/docs/apidocs/io/vertx/core/http/HttpClient.html[o Cliente HTTP Vert.x] para efetuar as conexões de rede. As extensões do Cliente REST Reativo permitem configurar algumas definições através de propriedades, por exemplo:"

#. type: delimited block =
#: _guides/rest-client-reactive.adoc
msgid "`quarkus.rest-client.client-prefix.connect-timeout` to configure the connect timeout in milliseconds."
msgstr "`quarkus.rest-client.client-prefix.connect-timeout` para configurar o tempo limite de conexão em milissegundos."

#. type: delimited block =
#: _guides/rest-client-reactive.adoc
msgid "`quarkus.rest-client.client-prefix.max-redirects` to limit the number of redirects."
msgstr "`quarkus.rest-client.client-prefix.max-redirects` para limitar o número de redirecionamentos."

#. type: delimited block =
#: _guides/rest-client-reactive.adoc
msgid "However, there are many more options within the Vert.x HTTP Client to configure the connections. See all the options in the Vert.x HTTP Client Options API in https://vertx.io/docs/apidocs/io/vertx/core/http/HttpClientOptions.html[this link]."
msgstr "No entanto, existem muitas outras opções no Cliente HTTP Vert.x para configurar as conexões. Veja todas as opções na API de Opções do Cliente HTTP Vert.x https://vertx.io/docs/apidocs/io/vertx/core/http/HttpClientOptions.html[neste link]."

#. type: delimited block =
#: _guides/rest-client-reactive.adoc
msgid "To fully customize the Vert.x HTTP Client instance that the REST Client Reactive is internally using, you can provide your custom HTTP Client Options instance via CDI or when programmatically creating your client."
msgstr "Para personalizar totalmente a instância do Cliente HTTP Vert.x que o Cliente REST Reativo está usando internamente, você pode fornecer a sua instância personalizada de Opções de Cliente HTTP através de CDI ou ao criar programaticamente o seu cliente."

#. type: delimited block =
#: _guides/rest-client-reactive.adoc
msgid "Let's see an example about how to provide the HTTP Client Options via CDI:"
msgstr "Vejamos um exemplo de como fornecer as Opções de Cliente HTTP através de CDI:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Now, all the REST Clients will be using your custom HTTP Client Options."
msgstr "Agora, todos os Clientes REST usarão suas Opções de Cliente HTTP personalizadas."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Another approach is to provide the custom HTTP Client options when creating the client programmatically:"
msgstr "Outra abordagem é fornecer as opções do Cliente HTTP personalizadas ao criar o cliente programaticamente:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "the client will use the registered HTTP Client options over the HTTP Client options provided via CDI if any."
msgstr "o cliente utilizará as opções de Cliente HTTP registradas em vez das opções de Cliente HTTP fornecidas via CDI, se existirem."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Redirection"
msgstr "Redirecionamento"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "A HTTP server can redirect a response to another location by sending a response with a status code that starts with \"3\" and a HTTP header \"Location\" holding the URL to be redirected to. When the REST Client receives a redirection response from a HTTP server, it won't automatically perform another request to the new location. We can enable the automatic redirection in REST Client by adding the \"follow-redirects\" property:"
msgstr "Um servidor HTTP pode redirecionar uma resposta para outra localização, enviando uma resposta com um código de estado que começa por \"3\" e um cabeçalho HTTP \"Location\" que contém o URL para onde deve ser redirecionado. Quando o Cliente REST recebe uma resposta de redirecionamento de um servidor HTTP, não efetua automaticamente outra requisição para a nova localização. Podemos ativar o redirecionamento automático no Cliente REST adicionando a propriedade \"follow-redirects\":"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "`quarkus.rest-client.follow-redirects` to enable redirection for all REST clients."
msgstr "`quarkus.rest-client.follow-redirects` para ativar o redirecionamento para todos os clientes REST."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "`quarkus.rest-client.<client-prefix>.follow-redirects` to enable redirection for a specific REST client."
msgstr "`quarkus.rest-client.<client-prefix>.follow-redirects` para ativar o redirecionamento para um cliente REST específico."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "If this property is true, then REST Client will perform a new request that it receives a redirection response from the HTTP server."
msgstr "Se esta propriedade for verdadeira, então o Cliente REST efetuará uma nova requisição quando receber uma resposta de redirecionamento do servidor HTTP."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Additionally, we can limit the number of redirections using the property \"max-redirects\"."
msgstr "Além disso, podemos limitar o número de redirecionamentos utilizando a propriedade \"max-redirects\"."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "One important note is that according to the https://www.rfc-editor.org/rfc/rfc2616#section-10.3.8[RFC2616] specs, by default the redirection will only happen for GET or HEAD methods. However, in REST Client, you can provide your custom redirect handler to enable redirection on POST or PUT methods, or to follow a more complex logic, via either using the `@ClientRedirectHandler` annotation, CDI or programmatically when creating your client."
msgstr "Uma nota importante é que, de acordo com as especificações https://www.rfc-editor.org/rfc/rfc2616#section-10.3.8[RFC2616], por padrão o redirecionamento só ocorrerá para os métodos GET ou HEAD. No entanto, no Cliente REST, você pode fornecer o seu manipulador de redirecionamento personalizado para permitir o redirecionamento nos métodos POST ou PUT, ou para seguir uma lógica mais complexa, utilizando a anotação `@ClientRedirectHandler`, CDI ou programaticamente ao criar o seu cliente."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Let's see an example about how to register your own custom redirect handler using the `@ClientRedirectHandler` annotation:"
msgstr "Vejamos um exemplo sobre como registrar o seu próprio manipulador de redirecionamento personalizado utilizando a anotação `@ClientRedirectHandler`:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The \"alwaysRedirect\" redirect handler will only be used by the specified REST Client which in this example is the \"ExtensionsService\" client."
msgstr "O manipulador de redirecionamento \"alwaysRedirect\" só será utilizado pelo Cliente REST especificado que, neste exemplo, é o cliente \"ExtensionsService\"."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Alternatively, you can also provide a custom redirect handler for all your REST Clients via CDI:"
msgstr "Alternativamente, você também pode fornecer um manipulador de redirecionamento personalizado para todos os seus Clientes REST através de CDI:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Now, all the REST Clients will be using your custom redirect handler."
msgstr "Agora, todos os Clientes REST usarão seu manipulador de redirecionamento personalizado."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Another approach is to provide it programmatically when creating the client:"
msgstr "Outra abordagem consiste em fornecê-lo programaticamente na criação do cliente:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "the client will use the registered redirect handler over the redirect handler provided via CDI if any."
msgstr "o cliente utilizará o manipulador de redirecionamento registrado em vez do manipulador de redirecionamento fornecido através do CDI, se existir."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Update the test"
msgstr "Atualize o teste"

#: _guides/rest-client-reactive.adoc
msgid ""
"Next, we need to update the functional test to reflect the changes made to the endpoint.\n"
"Edit the `src/test/java/org/acme/rest/client/ExtensionsResourceTest.java` file and change the content of the test to:"
msgstr "Em seguida, precisamos atualizar o teste funcional para refletir as alterações feitas no endpoint. Edite o arquivo `src/test/java/org/acme/rest/client/ExtensionsResourceTest.java` e altere o conteúdo do teste para:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The code above uses link:https://rest-assured.io/[REST Assured]'s link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] capabilities."
msgstr "O código acima utiliza as capacidades link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] do link:https://rest-assured.io/[REST Assured]."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Async Support"
msgstr "Suporte Assíncrono"

#: _guides/rest-client-reactive.adoc
msgid ""
"To get the full power of the reactive nature of the client, you can use the non-blocking flavor of REST Client Reactive extension,\n"
"which comes with support for `CompletionStage` and `Uni`.\n"
"Let's see it in action by adding a `getByIdAsync` method in our `ExtensionsService` REST interface. The code should look like:"
msgstr "Para obter todo o poder da natureza reativa do cliente, você pode usar a variante não blocante da extensão Cliente REST Reativo, que vem com suporte para `CompletionStage` e `Uni` . Vamos ver isso em ação adicionando um método `getByIdAsync` em nossa interface REST `ExtensionsService` . O código deve ter a seguinte aparência:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Open the `src/main/java/org/acme/rest/client/ExtensionsResource.java` file and update it with the following content:"
msgstr "Abra o arquivo `src/main/java/org/acme/rest/client/ExtensionsResource.java` e atualize-o com o seguinte conteúdo:"

#: _guides/rest-client-reactive.adoc
msgid ""
"Please note that since the invocation is now non-blocking, the `idAsync` method will be invoked on the event loop,\n"
"i.e. will not get offloaded to a worker pool thread and thus reducing hardware resource utilization.\n"
"See xref:resteasy-reactive.adoc#execution-model[Resteasy reactive execution model] for more details."
msgstr "Observe que, como a invocação agora é não blocante, o método `idAsync` será invocado no loop de eventos, ou seja, não será transferido para um thread de pool de trabalho, reduzindo assim a utilização de recursos de hardware. Para obter mais detalhes, consulte o xref:resteasy-reactive.adoc#execution-model[modelo de execução reativa Resteasy] ."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "To test asynchronous methods, add the test method below in `ExtensionsResourceTest`:"
msgstr "Para testar métodos assíncronos, adicione o método de teste abaixo em `ExtensionsResourceTest`:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The `Uni` version is very similar:"
msgstr "A versão `Uni` é muito semelhante:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The `ExtensionsResource` becomes:"
msgstr "O `ExtensionsResource` torna-se:"

#. type: Block title
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Mutiny"
msgstr "Mutiny"

#: _guides/rest-client-reactive.adoc
msgid ""
"The previous snippet uses Mutiny reactive types.\n"
"If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "O código anterior usa tipos reativos do Mutiny. Se você não estiver familiarizado com o Mutiny, consulte xref:mutiny-primer.adoc[Mutiny - uma biblioteca de programação reativa intuitiva] ."

#: _guides/rest-client-reactive.adoc
msgid ""
"When returning a `Uni`, every _subscription_ invokes the remote service.\n"
"It means you can re-send the request by re-subscribing on the `Uni`, or use a `retry` as follows:"
msgstr "Ao retornar um `Uni` , cada _assinatura_ invoca o serviço remoto. Isso significa que você pode reenviar a requisição assinando novamente o `Uni` , ou usar um `retry` da seguinte forma:"

#: _guides/rest-client-reactive.adoc
msgid ""
"If you use a `CompletionStage`, you would need to call the service's method to retry.\n"
"This difference comes from the laziness aspect of Mutiny and its subscription protocol.\n"
"More details about this can be found in https://smallrye.io/smallrye-mutiny/latest/reference/uni-and-multi/[the Mutiny documentation]."
msgstr "Se você usar um `CompletionStage` , precisará chamar o método do serviço para tentar novamente. Essa diferença vem do aspecto preguiçoso do Mutiny e de seu protocolo de assinatura. Mais detalhes sobre isso podem ser encontrados na https://smallrye.io/smallrye-mutiny/latest/reference/uni-and-multi/[documentação do Mutiny] ."

#: _guides/rest-client-reactive.adoc
msgid "Server-Sent Event (SSE) support"
msgstr "Suporte a Eventos Enviados pelo Servidor (SSE)"

#: _guides/rest-client-reactive.adoc
msgid "Consuming SSE events is possible simply by declaring the result type as a `io.smallrye.mutiny.Multi`."
msgstr "O consumo de eventos SSE é possível simplesmente declarando o tipo de resultado como um `io.smallrye.mutiny.Multi` ."

#: _guides/rest-client-reactive.adoc
msgid "The simplest example is:"
msgstr "O exemplo mais simples é:"

#: _guides/rest-client-reactive.adoc
msgid "All the IO involved in streaming the SSE results is done in a non-blocking manner."
msgstr "Toda a E/S envolvida no streaming dos resultados do SSE é feita de forma não blocante."

#: _guides/rest-client-reactive.adoc
msgid "Results are not limited to strings - for example when the server returns JSON payload for each event, Quarkus automatically deserializes it into the generic type used in the `Multi`."
msgstr "Os resultados não se limitam a strings - por exemplo, quando o servidor retorna um payload JSON para cada evento, o Quarkus a desserializa automaticamente para o tipo genérico usado no `Multi` ."

#: _guides/rest-client-reactive.adoc
msgid "Users can also access the entire SSE event by using the `org.jboss.resteasy.reactive.client.SseEvent` type."
msgstr "Os usuários também podem acessar todo o evento SSE usando o tipo `org.jboss.resteasy.reactive.client.SseEvent` ."

#: _guides/rest-client-reactive.adoc
msgid "A simple example where the event payloads are `Long` values is the following:"
msgstr "Um exemplo simples em que os payloads do evento são valores `Long` é o seguinte:"

#: _guides/rest-client-reactive.adoc
msgid "Filtering out events"
msgstr "Filtrando eventos"

#: _guides/rest-client-reactive.adoc
msgid ""
"On occasion, the stream of SSE events may contain some events that should not be returned by the client - an example of this is having the server send heartbeat events in order to keep the underlying TCP connection open.\n"
"The REST Client supports filtering out such events by providing the `@org.jboss.resteasy.reactive.client.SseEventFilter`."
msgstr "Ocasionalmente, o fluxo de eventos SSE pode conter alguns eventos que não devem ser retornados pelo cliente - um exemplo disso é fazer com que o servidor envie eventos de batimento cardíaco para manter aberta a conexão TCP subjacente. O Cliente REST oferece suporte à filtragem desses eventos, fornecendo o `@org.jboss.resteasy.reactive.client.SseEventFilter` ."

#: _guides/rest-client-reactive.adoc
msgid "Here is an example of filtering out heartbeat events:"
msgstr "Aqui está um exemplo de filtragem de eventos de batimento cardíaco:"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Custom headers support"
msgstr "Suporte para cabeçalhos personalizados"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "There are a few ways in which you can specify custom headers for your REST calls:"
msgstr "Existem algumas formas de especificar cabeçalhos personalizados para as suas chamadas REST:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "by registering a `ClientHeadersFactory` or a `ReactiveClientHeadersFactory` with the `@RegisterClientHeaders` annotation"
msgstr "registrando um `ClientHeadersFactory` ou um `ReactiveClientHeadersFactory` com a anotação `@RegisterClientHeaders`"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "by programmatically registering a `ClientHeadersFactory` or a `ReactiveClientHeadersFactory` with the `QuarkusRestClientBuilder.clientHeadersFactory(factory)` method"
msgstr "registrando programaticamente um `ClientHeadersFactory` ou um `ReactiveClientHeadersFactory` com o método `QuarkusRestClientBuilder.clientHeadersFactory(factory)`"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "by specifying the value of the header with `@ClientHeaderParam`"
msgstr "especificando o valor do cabeçalho com `@ClientHeaderParam`"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "by specifying the value of the header by `@HeaderParam`"
msgstr "especificando o valor do cabeçalho por `@HeaderParam`"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The code below demonstrates how to use each of these techniques:"
msgstr "O código abaixo demonstra como utilizar cada uma destas técnicas:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "There can be only one `ClientHeadersFactory` per class. With it, you can not only add custom headers, but you can also transform existing ones. See the `RequestUUIDHeaderFactory` class below for an example of the factory."
msgstr "Só pode haver um `ClientHeadersFactory` por classe. Com ela, é possível não só adicionar cabeçalhos personalizados, mas também transformar os existentes. Veja a classe `RequestUUIDHeaderFactory` abaixo para um exemplo da fábrica."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "`@ClientHeaderParam` can be used on the client interface and on methods. It can specify a constant header value..."
msgstr "`@ClientHeaderParam` pode ser utilizado na interface do cliente e nos métodos. Pode especificar um valor de cabeçalho constante..."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "... and a name of a method that should compute the value of the header. It can either be a static method or a default method in this interface. The method can take either no parameters, a single String parameter or a single `io.quarkus.rest.client.reactive.ComputedParamContext` parameter (which is very useful for code that needs to compute headers based on method parameters and naturally complements `@io.quarkus.rest.client.reactive.NotBody`)."
msgstr "... e um nome de um método que deve calcular o valor do cabeçalho. Pode ser um método estático ou um método padrão nesta interface. O método pode não receber nenhum parâmetro, um único parâmetro String ou um único parâmetro `io.quarkus.rest.client.reactive.ComputedParamContext` (que é muito útil para código que precisa calcular cabeçalhos com base em parâmetros de métodos e complementa naturalmente `@io.quarkus.rest.client.reactive.NotBody`)."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "... as well as a value from your application's configuration"
msgstr "... bem como um valor da configuração da sua aplicação"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "... or even any mixture of verbatim text, method parameters (referenced by name), a configuration value (as mentioned previously) and method invocations (as mentioned before)"
msgstr "... ou mesmo qualquer mistura de texto literal, parâmetros de métodos (referenciados pelo nome), um valor de configuração (como mencionado anteriormente) e invocações de métodos (como mencionado anteriormente)"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "... or as a normal Jakarta REST `@HeaderParam` annotated argument"
msgstr "... ou como um argumento anotado do Jakarta REST `@HeaderParam` normal"

#: _guides/rest-client-reactive.adoc
msgid ""
"When using Kotlin, if default methods are going to be leveraged, then the Kotlin compiler needs to be configured to use Java's default interface capabilities.\n"
"See link:https://kotlinlang.org/docs/java-to-kotlin-interop.html#default-methods-in-interfaces[this] for more details."
msgstr "Ao usar o Kotlin, se os métodos padrão forem aproveitados, o compilador do Kotlin precisará ser configurado para usar os recursos de interface padrão do Java. Veja link:https://kotlinlang.org/docs/java-to-kotlin-interop.html#default-methods-in-interfaces[isso] para obter mais detalhes."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "A `ClientHeadersFactory` can look as follows:"
msgstr "Um `ClientHeadersFactory` pode ter o seguinte aspecto:"

#: _guides/rest-client-reactive.adoc
msgid ""
"As you see in the example above, you can make your `ClientHeadersFactory` implementation a CDI bean by\n"
"annotating it with a scope-defining annotation, such as `@Singleton`, `@ApplicationScoped`, etc."
msgstr "Como você vê no exemplo acima, é possível tornar a implementação do `ClientHeadersFactory` um bean CDI anotando-o com uma anotação de definição de escopo, como `@Singleton` , `@ApplicationScoped` , etc."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "To specify a value for `${header.value}`, simply put the following in your `application.properties`:"
msgstr "Para especificar um valor para `${header.value}`, basta colocar o seguinte no seu `application.properties`:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Also, there is a reactive flavor of `ClientHeadersFactory` that allows doing blocking operations. For example:"
msgstr "Além disso, existe uma variante reativa de `ClientHeadersFactory` que permite realizar operações blocantes. Por exemplo:"

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Default header factory"
msgstr "Fábrica de cabeçalhos padrão"

#: _guides/rest-client-reactive.adoc
msgid ""
"The `@RegisterClientHeaders` annotation can also be used without any custom factory specified. In that case the `DefaultClientHeadersFactoryImpl` factory will be used.\n"
"If you make a REST client call from a REST resource, this factory will propagate all the headers listed in `org.eclipse.microprofile.rest.client.propagateHeaders` configuration property from the resource request to the client request. Individual header names are comma-separated."
msgstr "A anotação `@RegisterClientHeaders` também pode ser usada sem nenhuma fábrica personalizada especificada. Nesse caso, será usada a fábrica `DefaultClientHeadersFactoryImpl` . Se você fizer uma chamada de cliente REST a partir de um recurso REST, essa fábrica propagará todos os cabeçalhos listados na propriedade de configuração `org.eclipse.microprofile.rest.client.propagateHeaders` da requisição do recurso para a requisição do cliente. Os nomes dos cabeçalhos individuais são separados por vírgulas."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Customizing the request"
msgstr "Personalização da requisição"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The REST Client Reactive supports further customization of the final request to be sent to the server via filters. The filters must implement either the interface `ClientRequestFilter` or `ResteasyReactiveClientRequestFilter`."
msgstr "O Cliente REST Reativo suporta uma maior personalização da requisição final que será enviada para o servidor através de filtros. Os filtros devem implementar a interface `ClientRequestFilter` ou `ResteasyReactiveClientRequestFilter`."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "A simple example of customizing the request would be to add a custom header:"
msgstr "Um exemplo simples de personalização da requisição seria adicionar um cabeçalho personalizado:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Next, you can register your filter using the `@RegisterProvider` annotation:"
msgstr "Em seguida, pode registrar o seu filtro utilizando a anotação `@RegisterProvider`:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Or programmatically using the `.register()` method:"
msgstr "Ou programaticamente, utilizando o método `.register()`:"

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Injecting the `jakarta.ws.rs.ext.Providers` instance in filters"
msgstr "Injetando a instância `jakarta.ws.rs.ext.Providers` em filtros"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The `jakarta.ws.rs.ext.Providers` is useful when we need to lookup the provider instances of the current client."
msgstr "O `jakarta.ws.rs.ext.Providers` é útil quando precisamos procurar as instâncias do fornecedor do cliente atual."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "We can get the `Providers` instance in our filters from the request context as follows:"
msgstr "Podemos obter a instância `Providers` nos nossos filtros a partir do contexto do requisição da seguinte forma:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Alternatively, you can implement the `ResteasyReactiveClientRequestFilter` interface instead of the `ClientRequestFilter` interface that will directly provide the `ResteasyReactiveClientRequestContext` context:"
msgstr "Alternativamente, pode implementar a interface `ResteasyReactiveClientRequestFilter` em vez da interface `ClientRequestFilter`, que fornecerá diretamente o contexto `ResteasyReactiveClientRequestContext`:"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Customizing the ObjectMapper in REST Client Reactive Jackson"
msgstr "Personalizando o ObjectMapper no Cliente REST Reativo Jackson"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The REST Client Reactive supports adding a custom ObjectMapper to be used only the Client using the annotation `@ClientObjectMapper`."
msgstr "O Cliente REST Reativo suporta a adição de um ObjectMapper personalizado para ser utilizado apenas pelo Cliente utilizando a anotação `@ClientObjectMapper`."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "A simple example is to provide a custom ObjectMapper to the REST Client Reactive Jackson extension by doing:"
msgstr "Um exemplo simples é fornecer um ObjectMapper personalizado para a extensão Cliente REST Reativo Jackson:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The method must be annotated with `@ClientObjectMapper`."
msgstr "O método deve ser anotado com `@ClientObjectMapper`."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "It's must be a static method. Also, the parameter `defaultObjectMapper` will be resolved via CDI. If not found, it will throw an exception at runtime."
msgstr "Tem que ser um método estático. Além disso, o parâmetro `defaultObjectMapper` será resolvido através do CDI. Se não for encontrado, será lançada uma exceção em tempo de execução."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "In this example, we're creating a copy of the default object mapper. You should *NEVER* modify the default object mapper, but create a copy instead."
msgstr "Neste exemplo, estamos criando uma cópia do mapeador de objetos padrão. Você *NUNCA* deve modificar o mapeador de objetos padrão, mas sim criar uma cópia."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Exception handling"
msgstr "Tratamento de exceções"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The MicroProfile REST Client specification introduces the `org.eclipse.microprofile.rest.client.ext.ResponseExceptionMapper` whose purpose is to convert an HTTP response to an exception."
msgstr "A especificação do Cliente REST MicroProfile introduz o `org.eclipse.microprofile.rest.client.ext.ResponseExceptionMapper`, cujo objetivo é converter uma resposta HTTP numa exceção."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "A simple example of implementing such a `ResponseExceptionMapper` for the `ExtensionsService` discussed above, could be:"
msgstr "Um exemplo simples de implementação de tal `ResponseExceptionMapper` para o `ExtensionsService` discutido acima, poderia ser:"

#: _guides/rest-client-reactive.adoc
msgid ""
"`ResponseExceptionMapper` also defines the `getPriority` method which is used in order to determine the priority with which `ResponseExceptionMapper` implementations will be called (implementations with a lower value for `getPriority` will be invoked first).\n"
"If `toThrowable` returns an exception, then that exception will be thrown. If `null` is returned, the next implementation of `ResponseExceptionMapper` in the chain will be called (if there is any)."
msgstr "`ResponseExceptionMapper` também define o método `getPriority` , que é usado para determinar a prioridade com que as implementações de `ResponseExceptionMapper` serão chamadas (as implementações com um valor menor para `getPriority` serão chamadas primeiro). Se `toThrowable` retornar uma exceção, essa exceção será lançada. Se `null` for retornado, a próxima implementação de `ResponseExceptionMapper` na cadeia será chamada (se houver alguma)."

#: _guides/rest-client-reactive.adoc
msgid ""
"The class as written above, would not be automatically be used by any REST Client. To make it available to every REST Client of the application, the class needs to be annotated with `@Provider` (as long as `quarkus.rest-client-reactive.provider-autodiscovery` is not set to `false`).\n"
"Alternatively, if the exception handling class should only apply to specific REST Client interfaces, you can either annotate the interfaces with `@RegisterProvider(MyResponseExceptionMapper.class)`, or register it using configuration using the `providers` property of the proper `quarkus.rest-client` configuration group."
msgstr "A classe, conforme escrito acima, não seria usada automaticamente por nenhum Cliente REST. Para torná-la disponível para todos os Clientes REST da aplicação, a classe precisa ser anotada com `@Provider` (desde que `quarkus.rest-client-reactive.provider-autodiscovery` não esteja definido como `false` ). Como alternativa, se a classe de tratamento de exceções se aplicar apenas a interfaces específicas do Cliente REST, você poderá anotar as interfaces com `@RegisterProvider(MyResponseExceptionMapper.class)` ou registrá-la usando a configuração com a propriedade `providers` do grupo de configuração `quarkus.rest-client` adequado."

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Using @ClientExceptionMapper"
msgstr "Usando @ClientExceptionMapper"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "A simpler way to convert HTTP response codes of 400 or above is to use the `@ClientExceptionMapper` annotation."
msgstr "Uma forma mais simples de converter códigos de resposta HTTP de 400 pra cima é utilizar a anotação `@ClientExceptionMapper`."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "For the `ExtensionsService` REST Client interface defined above, an example use of `@ClientExceptionMapper` would be:"
msgstr "Para a interface de Cliente REST `ExtensionsService` definida acima, um exemplo de utilização de `@ClientExceptionMapper` seria:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Naturally this handling is per REST Client. `@ClientExceptionMapper` uses the default priority if the `priority` attribute is not set and the normal rules of invoking all handlers in turn apply."
msgstr "Naturalmente, este tratamento é efetuado por Cliente REST. `@ClientExceptionMapper` utiliza a prioridade predefinida se o atributo `priority` não estiver definido e aplicam-se as regras normais de invocação de todos os manipuladores sucessivamente."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Methods annotated with `@ClientExceptionMapper` can also take a `java.lang.reflect.Method` parameter which is useful if the exception mapping code needs to know the REST Client method that was invoked and caused the exception mapping code to engage."
msgstr "Os métodos anotados com `@ClientExceptionMapper` também podem receber um parâmetro `java.lang.reflect.Method`, o que é útil se o código de mapeamento de exceções precisar conhecer o método do Cliente REST que foi invocado e causou a ativação do código de mapeamento de exceções."

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Using @Blocking annotation in exception mappers"
msgstr "Usando a anotação @Blocking em mapeadores de exceções"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "In cases that warrant using `InputStream` as the return type of REST Client method (such as when large amounts of data need to be read):"
msgstr "Em casos que justifiquem a utilização de `InputStream` como tipo de retorno do método do Cliente REST (por exemplo, quando é necessário ler grandes quantidades de dados):"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "This will work as expected, but if you try to read this InputStream object in a custom exception mapper, you will receive a `BlockingNotAllowedException` exception. This is because `ResponseExceptionMapper` classes are run on the Event Loop thread executor by default - which does not allow to perform IO operations."
msgstr "Isso funcionará como esperado, mas se você tentar ler esse objeto InputStream em um mapeador de exceções personalizado, receberá uma exceção `BlockingNotAllowedException`. Isso ocorre porque as classes `ResponseExceptionMapper` são executadas no executor de thread do Loop de Eventos por padrão - o que não permite realizar operações de E/S."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "To make your exception mapper blocking, you can annotate the exception mapper with the `@Blocking` annotation:"
msgstr "Para tornar o seu mapeador de exceções blocante, pode anotar o mapeador de exceções com a anotação `@Blocking`:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "With the `@Blocking` annotation, the MyResponseExceptionMapper exception mapper will be executed in the worker thread pool."
msgstr "Com a anotação `@Blocking`, o mapeador de exceções MyResponseExceptionMapper será executado no pool de threads de trabalho."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Reading the entity is now allowed because we're executing the mapper on the worker thread pool."
msgstr "A leitura da entidade é agora permitida porque estamos executando o mapeador no pool de threads de trabalho."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Note that you can also use the `@Blocking` annotation when using @ClientExceptionMapper:"
msgstr "Note que também pode utilizar a anotação `@Blocking` quando utilizar @ClientExceptionMapper:"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Multipart Form support"
msgstr "Suporte a Formulários Multi-partes"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "REST Client Reactive support multipart messages."
msgstr "O Cliente REST Reativo suporta mensagens com multi-parte."

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Sending Multipart messages"
msgstr "Enviando Mensagens Multi-partes"

#: _guides/rest-client-reactive.adoc
msgid ""
"REST Client Reactive allows sending data as multipart forms. This way you can for example\n"
"send files efficiently."
msgstr "O Cliente REST Reativo permite o envio de dados como formulários multi-partes. Dessa forma, você pode, por exemplo, enviar arquivos de forma eficiente."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "To send data as a multipart form, you can just use the regular `@RestForm` (or `@FormParam`) annotations:"
msgstr "Para enviar dados como um formulário multi-partes, você pode simplesmente utilizar as anotações normais `@RestForm` (ou `@FormParam`):"

#: _guides/rest-client-reactive.adoc
msgid ""
"Parameters specified as `File`, `Path`, `byte[]` or `Buffer` are sent as files and default to the\n"
"`application/octet-stream` MIME type. Other `@RestForm` parameter types default to the `text/plain`\n"
"MIME type. You can override these defaults with the `@PartType` annotation."
msgstr "Os parâmetros especificados como `File` , `Path` , `byte[]` ou `Buffer` são enviados como arquivos e têm como padrão o tipo MIME `application/octet-stream` . Outros tipos de parâmetros `@RestForm` têm como padrão o tipo MIME `text/plain` . Você pode substituir esses padrões com a anotação `@PartType` ."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Naturally, you can also group these parameters into a containing class:"
msgstr "Naturalmente, também é possível agrupar estes parâmetros numa classe que os contenha:"

#: _guides/rest-client-reactive.adoc
msgid ""
"Any `@RestForm` parameter of the type `File`, `Path`, `byte[]` or `Buffer`, as well as any\n"
"annotated with `@PartType` automatically imply a `@Consumes(MediaType.MULTIPART_FORM_DATA)`\n"
"on the method if there is no `@Consumes` present."
msgstr "Qualquer parâmetro `@RestForm` do tipo `File` , `Path` , `byte[]` ou `Buffer` , bem como qualquer parâmetro anotado com `@PartType` implica automaticamente em um `@Consumes(MediaType.MULTIPART_FORM_DATA)` no método se não houver um `@Consumes` presente."

#: _guides/rest-client-reactive.adoc
msgid ""
"If there are `@RestForm` parameters that are not multipart-implying, then\n"
"`@Consumes(MediaType.APPLICATION_FORM_URLENCODED)` is implied."
msgstr "Se houver parâmetros @RestForm que não implicam em multi-parte, então @Consumes(MediaType.APPLICATION_FORM_URLENCODED) estará implícito."

#: _guides/rest-client-reactive.adoc
msgid ""
"There are a few modes in which the form data can be encoded. By default,\n"
"Rest Client Reactive uses RFC1738.\n"
"You can override it by specifying the mode either on the client level,\n"
"by setting `io.quarkus.rest.client.multipart-post-encoder-mode` RestBuilder property\n"
"to the selected value of `HttpPostRequestEncoder.EncoderMode` or\n"
"by specifying `quarkus.rest-client.multipart-post-encoder-mode` in your\n"
"`application.properties`. Please note that the latter works only for\n"
"clients created with the `@RegisterRestClient` annotation.\n"
"All the available modes are described in the link:https://netty.io/4.1/api/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.EncoderMode.html[Netty documentation]"
msgstr "Há alguns modos pelos quais os dados do formulário podem ser codificados. Por padrão, o Cliente REST Reativo usa RFC1738. Você pode substituí-la especificando o modo no nível do cliente, definindo a propriedade `io.quarkus.rest.client.multipart-post-encoder-mode` RESTBuilder como o valor selecionado de `HttpPostRequestEncoder.EncoderMode` ou especificando `quarkus.rest-client.multipart-post-encoder-mode` em seu `application.properties` . Observe que a última opção funciona somente para clientes criados com a anotação `@RegisterRESTClient` . Todos os modos disponíveis estão descritos na link:https://netty.io/4.1/api/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.EncoderMode.html[documentação do Netty]"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "You can also send JSON multiparts by specifying the `@PartType` annotation:"
msgstr "Você também pode enviar multi-partes JSON especificando a anotação `@PartType`:"

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Receiving Multipart Messages"
msgstr "Recebendo Mensagens Multi-partes"

#: _guides/rest-client-reactive.adoc
msgid ""
"REST Client Reactive also supports receiving multipart messages.\n"
"As with sending, to parse a multipart response, you need to create a class that describes the response data, e.g."
msgstr "O Cliente REST Reativo também oferece suporte ao recebimento de mensagens multi-partes. Assim como no envio, para analisar uma resposta multi-parte, você precisa criar uma classe que descreva os dados da resposta, por exemplo"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "uses the shorthand `@RestForm` annotation to make a field as a part of a multipart form"
msgstr "utiliza a anotação abreviada `@RestForm` para criar um campo como parte de um formulário multi-partes"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "the standard `@FormParam` can also be used. It allows to override the name of the multipart part."
msgstr "a norma `@FormParam` também pode ser utilizada. Permite substituir o nome da parte multi-partes."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Then, create an interface method that corresponds to the call and make it return the `FormDto`:"
msgstr "Em seguida, crie um método de interface que corresponda à chamada e faça-o devolver o `FormDto`:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "At the moment, multipart response support is subject to the following limitations:"
msgstr "Atualmente, o suporte de respostas multi-partes está sujeito às seguintes limitações:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "files sent in multipart responses can only be parsed to `File`, `Path` and `FileDownload`"
msgstr "os arquivos enviados em respostas multi-partes só podem ser analisados em `File`, `Path` e `FileDownload`"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "each field of the response type has to be annotated with `@PartType` - fields without this annotation are ignored"
msgstr "cada campo do tipo de resposta tem de ser anotado com `@PartType` - os campos sem esta anotação são ignorados"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "REST Client Reactive needs to know the classes used as multipart return types upfront. If you have an interface method that produces `multipart/form-data`, the return type will be discovered automatically. However, if you intend to use the `ClientBuilder` API to parse a response as multipart, you need to annotate your DTO class with `@MultipartForm`."
msgstr "O Cliente REST Reativo precisa de conhecer antecipadamente as classes utilizadas como tipos de retorno multi-partes. Se tiver um método de interface que produz `multipart/form-data`, o tipo de retorno será descoberto automaticamente. No entanto, se pretender utilizar a API `ClientBuilder` para analisar uma resposta como multi-parte, tem de anotar a sua classe DTO com `@MultipartForm`."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The files you download are not automatically removed and can take up a lot of disk space. Consider removing the files when you are done working with them."
msgstr "Os arquivos que você baixa não são removidos automaticamente e podem ocupar muito espaço no disco. Considere a remoção dos arquivos quando terminar de trabalhar com eles."

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Multipart mixed / OData usage"
msgstr "Utilização de multi-partes mistas / OData"

#: _guides/rest-client-reactive.adoc
msgid ""
"It is not uncommon that an application has to interact with enterprise systems (like CRM systems) using a special protocol called https://www.odata.org/documentation/odata-version-3-0/batch-processing/[OData].\n"
"This protocol essentially uses a custom HTTP `Content-Type` which needs some glue code to work with the REST Client (creating the body is entirely up to the application - the REST Client can't do much to help)."
msgstr "Não é incomum que um aplicativo precise interagir com sistemas corporativos (como sistemas de CRM) usando um protocolo especial chamado https://www.odata.org/documentation/odata-version-3-0/batch-processing/[OData] . Esse protocolo usa essencialmente um `Content-Type` HTTP personalizado que precisa de algum código de cola para funcionar com o Cliente REST (a criação do corpo depende inteiramente da aplicação - o Cliente REST não pode fazer muito para ajudar)."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "An example looks like the following:"
msgstr "Um exemplo é o seguinte:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The code uses the following pieces:"
msgstr "O código utiliza os seguintes elementos:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "`@ClientHeaderParam(name = \"Content-Type\", value = \"{calculateContentType}\")` which ensures that the `Content-Type` header is created by calling the interface's `calculateContentType` default method."
msgstr "`@ClientHeaderParam(name = \"Content-Type\", value = \"{calculateContentType}\")` que garante que o cabeçalho `Content-Type` é criado chamando o método padrão `calculateContentType` da interface."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The aforementioned parameter needs to be annotated with `@NotBody` because it is only used to aid the construction of HTTP headers."
msgstr "O parâmetro acima mencionado precisa de ser anotado com `@NotBody` porque só é utilizado para ajudar na construção de cabeçalhos HTTP."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "`context.methodParameters().get(1).value()` which allows the `calculateContentType` method to obtain the proper method parameter passed to the REST Client method."
msgstr "`context.methodParameters().get(1).value()` que permite que o método `calculateContentType` obtenha o parâmetro de método correto passado para o método do Cliente REST."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "As previously mentioned, the body parameter needs to be properly crafted by the application code to conform to the service's requirements."
msgstr "Tal como referido anteriormente, o parâmetro do corpo tem de ser corretamente elaborado pelo código da aplicação para estar em conformidade com os requisitos do serviço."

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Receiving compressed messages"
msgstr "Recebendo mensagens comprimidas"

#: _guides/rest-client-reactive.adoc
msgid ""
"REST Client Reactive also supports receiving compressed messages using GZIP. You can enable the HTTP compression support by adding the property `quarkus.http.enable-compression=true`.\n"
"When this feature is enabled and a server returns a response that includes the header `Content-Encoding: gzip`, REST Client Reactive will automatically decode the content and proceed with the message handling."
msgstr "O Cliente REST Reativo também suporta o recebimento de mensagens compactadas usando GZIP. Você pode ativar o suporte à compactação HTTP adicionando a propriedade `quarkus.http.enable-compression=true` . Quando esse recurso está ativado e um servidor retorna uma resposta que inclui o cabeçalho `Content-Encoding: gzip` , o Cliente REST Reativo decodifica automaticamente o conteúdo e prossegue com o tratamento da mensagem."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Proxy support"
msgstr "Suporte de proxy"

#: _guides/rest-client-reactive.adoc
msgid ""
"REST Client Reactive supports sending requests through a proxy.\n"
"It honors the JVM settings for it but also allows to specify both:"
msgstr "O Cliente REST Reativo suporta o envio de requisições por meio de um proxy. Ele respeita as configurações da JVM para isso, mas também permite especificar ambos:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "global client proxy settings, with `quarkus.rest-client.proxy-address`, `quarkus.rest-client.proxy-user`, `quarkus.rest-client.proxy-password`, `quarkus.rest-client.non-proxy-hosts`"
msgstr "definições globais de proxy de cliente, com `quarkus.rest-client.proxy-address`, `quarkus.rest-client.proxy-user`, `quarkus.rest-client.proxy-password`, `quarkus.rest-client.non-proxy-hosts`"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "per-client proxy settings, with `quarkus.rest-client.<my-client>.proxy-address`, etc. These are applied only to clients injected with CDI, that is the ones created with `@RegisterRestClient`"
msgstr "definições de proxy por cliente, com `quarkus.rest-client.<my-client>.proxy-address`, etc. Estas são aplicadas apenas a clientes injetados com CDI, ou seja, os criados com `@RegisterRestClient`"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "If `proxy-address` is set on the client level, the client uses its specific proxy settings. No proxy settings are propagated from the global configuration or JVM properties."
msgstr "Se `proxy-address` estiver definido no nível do cliente, o cliente utiliza as suas definições de proxy específicas. Nenhuma definição de proxy é propagada a partir da configuração global ou das propriedades da JVM."

#: _guides/rest-client-reactive.adoc
msgid ""
"If `proxy-address` is not set for the client but is set on the global level, the client uses the global settings.\n"
"Otherwise, the client uses the JVM settings."
msgstr "Se `proxy-address` não estiver definido para o cliente, mas estiver definido no nível global, o cliente usará as configurações globais. Caso contrário, o cliente usará as configurações da JVM."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "An example configuration for setting proxy:"
msgstr "Um exemplo de configuração para definir o proxy:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "MicroProfile REST Client specification does not allow setting proxy credentials. In order to specify proxy user and proxy password programmatically, you need to cast your `RestClientBuilder` to `RestClientBuilderImpl`."
msgstr "A especificação do Cliente REST MicroProfile não permite a definição de credenciais de proxy. Para especificar o usuário e a senha do proxy de forma programática, é necessário enviar o seu `RestClientBuilder` para `RestClientBuilderImpl`."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Package and run the application"
msgstr "Empacote e execute a aplicação"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Run the application with:"
msgstr "Execute a aplicação com:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Open your browser to http://localhost:8080/extension/id/io.quarkus:quarkus-rest-client-reactive."
msgstr "Abra o seu browser em http://localhost:8080/extension/id/io.quarkus:quarkus-rest-client-reactive."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "You should see a JSON object containing some basic information about this extension."
msgstr "Você deve ver um objeto JSON que contém algumas informações básicas sobre esta extensão."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "As usual, the application can be packaged using:"
msgstr "Como de costume, a aplicação pode ser empacotada utilizando:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "And executed with `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "E executado com `java -jar target/quarkus-app/quarkus-run.jar`."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "You can also generate the native executable with:"
msgstr "Também é possível gerar o executável nativo com:"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Logging traffic"
msgstr "Registrando tráfego"

#: _guides/rest-client-reactive.adoc
msgid ""
"REST Client Reactive can log the requests it sends and the responses it receives.\n"
"To enable logging, add the `quarkus.rest-client.logging.scope` property to your `application.properties` and set it to:"
msgstr "O Cliente REST Reativo pode registrar as requisições que envia e as respostas que recebe. Para ativar o registro, adicione a propriedade `quarkus.rest-client.logging.scope` ao seu `application.properties` e defina-a como:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "`request-response` to log the request and response contents, or"
msgstr "`request-response` para registrar o conteúdo da requisição e da resposta, ou"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "`all` to also enable low level logging of the underlying libraries."
msgstr "`all` para permitir também o registro de baixo nível das bibliotecas subjacentes."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "As HTTP messages can have large bodies, we limit the amount of body characters logged. The default limit is `100`, you can change it by specifying `quarkus.rest-client.logging.body-limit`."
msgstr "Como as mensagens HTTP podem ter corpos grandes, limitamos a quantidade de caracteres do corpo registrado. O limite padrão é `100`, pode alterá-lo especificando `quarkus.rest-client.logging.body-limit`."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "REST Client Reactive is logging the traffic with level DEBUG and does not alter logger properties. You may need to adjust your logger configuration to use this feature."
msgstr "O Cliente REST Reativo está registrando o tráfego com o nível DEBUG e não altera as propriedades do registrador. Poderá ser necessário ajustar a configuração do registrador para utilizar esta funcionalidade."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "An example logging configuration:"
msgstr "Um exemplo de configuração de registro:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "REST Client Reactive uses a default `ClientLogger` implementation. You can change it by providing a custom `ClientLogger` instance through CDI or when programmatically creating your client."
msgstr "O Cliente REST Reativo utiliza uma implementação padrão de `ClientLogger`. Você pode alterá-la fornecendo uma instância `ClientLogger` personalizada através do CDI ou ao criar programaticamente o seu cliente."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Mocking the client for tests"
msgstr "Simulação do cliente para testes"

#: _guides/rest-client-reactive.adoc
msgid ""
"If you use a client injected with the `@RestClient` annotation, you can easily mock it for tests.\n"
"You can do it with Mockito's `@InjectMock` or with `QuarkusMock`."
msgstr "Se você usar um cliente injetado com a anotação `@RestClient`, poderá facilmente simulá-lo para testes. Você pode fazer isso com `@InjectMock` do Mockito ou com `QuarkusMock` ."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "This section shows how to replace your client with a mock. If you would like to get a more in-depth understanding of how mocking works in Quarkus, see the blog post on https://quarkus.io/blog/mocking/[Mocking CDI beans]."
msgstr "Esta seção mostra como substituir o seu cliente por uma simulação. Se pretender obter uma compreensão mais aprofundada de como funciona a simulação no Quarkus, consulte a publicação do blog sobre a https://quarkus.io/blog/mocking/[simulação de beans CDI]."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Mocking does not work when using `@QuarkusIntegrationTest`."
msgstr "A simulação não funciona quando se utiliza `@QuarkusIntegrationTest`."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Let's assume you have the following client:"
msgstr "Vamos supor que você tem o seguinte cliente:"

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Mocking with InjectMock"
msgstr "Simulando com InjectMock"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "The simplest approach to mock a client for tests is to use Mockito and `@InjectMock`."
msgstr "A abordagem mais simples para simular um cliente para testes é usar Mockito e `@InjectMock`."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "First, add the following dependency to your application:"
msgstr "Primeiro, adicione a seguinte dependência à sua aplicação:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "Then, in your test you can simply use `@InjectMock` to create and inject a mock:"
msgstr "Depois, no seu teste, pode simplesmente utilizar `@InjectMock` para criar e injetar uma simulação:"

#. type: Title ===
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Mocking with QuarkusMock"
msgstr "Simulando com o QuarkusMock"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "If Mockito doesn't meet your needs, you can create a mock programmatically using `QuarkusMock`, e.g.:"
msgstr "Se o Mockito não satisfizer as suas necessidades, você pode criar uma simulação programaticamente utilizando `QuarkusMock`, e.g.:"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "here we use a manually created implementation of the client interface to replace the actual Client"
msgstr "aqui utilizamos uma implementação criada manualmente da interface do cliente para substituir a interface do cliente atual"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "note that `RestClient.LITERAL` has to be passed as the last argument of the `installMockForType` method"
msgstr "note-se que `RestClient.LITERAL` tem de ser passado como último argumento do método `installMockForType`"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Using a Mock HTTP Server for tests"
msgstr "Usando um Servidor HTTP Simulado para testes"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid ""
"Setting up a mock HTTP server, against which tests are run, is a common testing pattern.\n"
"Examples of such servers are link:https://wiremock.org/[Wiremock] and link:https://docs.hoverfly.io/projects/hoverfly-java/en/latest/index.html[Hoverfly].\n"
"In this section we'll demonstrate how Wiremock can be leveraged for testing the `ExtensionsService` which was developed above."
msgstr "A configuração de um servidor HTTP simulado, no qual os testes são executados, é um padrão de teste comum. Exemplos de tais servidores são o link:https://wiremock.org/[Wiremock] e o link:https://docs.hoverfly.io/projects/hoverfly-java/en/latest/index.html[Hoverfly] . Nesta seção, demonstraremos como o Wiremock pode ser aproveitado para testar o `ExtensionsService` que foi desenvolvido acima."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "First, Wiremock needs to be added as a test dependency. For a Maven project that would happen like so:"
msgstr "Primeiro, o Wiremock precisa ser adicionado como uma dependência de teste. Para um projeto Maven, isso aconteceria da seguinte forma:"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Use a proper Wiremock version. All available versions can be found link:https://search.maven.org/artifact/org.wiremock/wiremock[here]."
msgstr "Use uma versão adequada do Wiremock. Todas as versões disponíveis podem ser encontradas link:https://search.maven.org/artifact/org.wiremock/wiremock[aqui] ."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid ""
"In Quarkus tests when some service needs to be started before the Quarkus tests are ran, we utilize the `@io.quarkus.test.common.QuarkusTestResource`\n"
"annotation to specify a `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which can start the service and supply configuration\n"
"values that Quarkus will use."
msgstr "Nos testes do Quarkus, quando algum serviço precisa ser iniciado antes de os testes do Quarkus serem executados, utilizamos a anotação `@io.quarkus.test.common.QuarkusTestResource` para especificar um `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` que pode iniciar o serviço e fornecer valores de configuração que o Quarkus usará."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "For more details about `@QuarkusTestResource` refer to  xref:getting-started-testing.adoc#quarkus-test-resource[this part of the documentation]."
msgstr "Para obter mais detalhes sobre `@QuarkusTestResource` , consulte xref:getting-started-testing.adoc#quarkus-test-resource[esta parte da documentação] ."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Let's create an implementation of `QuarkusTestResourceLifecycleManager` called `WiremockExtensions` like so:"
msgstr "Vamos criar uma implementação do `QuarkusTestResourceLifecycleManager` chamada `WiremockExtensions` da seguinte forma:"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Statically importing the methods in the Wiremock package makes it easier to read the test."
msgstr "A importação estática dos métodos no pacote Wiremock facilita a leitura do teste."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "The `start` method is invoked by Quarkus before any test is run and returns a `Map` of configuration properties that apply during the test execution."
msgstr "O método `start` é chamado pelo Quarkus antes de qualquer teste ser executado e retorna um `Map` de propriedades de configuração que se aplicam durante a execução do teste."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Launch Wiremock."
msgstr "Inicie o Wiremock."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "Configure Wiremock to stub the calls to `/extensions?id=io.quarkus:quarkus-rest-client-reactive` by returning a specific canned response."
msgstr "Configure o Wiremock para fazer stub nas chamadas para `/extensions?id=io.quarkus:quarkus-rest-client-reactive` , retornando uma resposta automática específica."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "All HTTP calls that have not been stubbed are handled by calling the real service. This is done for demonstration purposes, as it is not something that would usually happen in a real test."
msgstr "Todas as chamadas HTTP que não foram esboçadas são tratadas chamando o serviço real. Isso é feito para fins de demonstração, pois não é algo que normalmente aconteceria em um teste real."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid ""
"As the `start` method returns configuration that applies for tests, we set the rest-client property that controls the base URL which is used by the implementation\n"
"of `ExtensionsService` to the base URL where Wiremock is listening for incoming requests."
msgstr "Como o método `start` retorna a configuração que se aplica aos testes, definimos a propriedade rest-client que controla o URL de base usado pela implementação do `ExtensionsService` para o URL de base em que o Wiremock está escutando as solicitações de entrada."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "When all tests have finished, shutdown Wiremock."
msgstr "Quando todos os testes tiverem sido concluídos, desligue o Wiremock."

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "The `ExtensionsResourceTest` test class needs to be annotated like so:"
msgstr "A classe de teste `ExtensionsResourceTest` precisa ser anotada da seguinte forma:"

#: _guides/rest-client-reactive.adoc
#, fuzzy
msgid "`@QuarkusTestResource` applies to all tests, not just `ExtensionsResourceTest`."
msgstr "`@QuarkusTestResource` aplica-se a todos os testes, não apenas ao `ExtensionsResourceTest` ."

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Known limitations"
msgstr "Limitações conhecidas"

#: _guides/rest-client-reactive.adoc
msgid ""
"While the REST Client Reactive extension aims to be a drop-in replacement for the REST Client extension, there are some differences\n"
"and limitations:"
msgstr "Embora a extensão Cliente REST Reativo pretenda ser uma substituição imediata da extensão Cliente REST, existem algumas diferenças e limitações:"

#: _guides/rest-client-reactive.adoc
msgid ""
"the default scope of the client for the new extension is `@ApplicationScoped` while the `quarkus-rest-client` defaults to `@Dependent`\n"
"To change this behavior, set the `quarkus.rest-client-reactive.scope` property to the fully qualified scope name."
msgstr "o escopo padrão do cliente para a nova extensão é `@ApplicationScoped` , enquanto o `quarkus-rest-client` tem como padrão `@Dependent` . Para alterar esse comportamento, defina a propriedade `quarkus.rest-client-reactive.scope` como o nome do escopo totalmente qualificado."

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "it is not possible to set `HostnameVerifier` or `SSLContext`"
msgstr "não é possível definir `HostnameVerifier` ou `SSLContext`"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "a few things that don't make sense for a non-blocking implementations, such as setting the `ExecutorService`, don't work"
msgstr "algumas coisas que não fazem sentido para implementações não blocantes, como a definição do `ExecutorService`, não funcionam"

#. type: Title ==
#: _guides/rest-client-reactive.adoc
#, no-wrap
msgid "Further reading"
msgstr "Leitura adicional"

#. type: Plain text
#: _guides/rest-client-reactive.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-rest-client-2.0/microprofile-rest-client-spec-2.0.html[MicroProfile Rest Client specification]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-rest-client-2.0/microprofile-rest-client-spec-2.0.html[Especificação do Cliente Rest MicroProfile]"
