# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/telemetry-micrometer.adoc:7
#, fuzzy, no-wrap
msgid "Micrometer Metrics"
msgstr "Métrica do micrómetro"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:19
#, fuzzy
msgid "Micrometer provides an abstraction layer for metrics collection.  It defines an API for basic meter types, like counters, gauges, timers, and distribution summaries, along with a `MeterRegistry` API that generalizes metrics collection and propagation for different backend monitoring systems."
msgstr "O Micrometer fornece uma camada de abstração para a recolha de métricas. Define uma API para tipos básicos de medidores, como contadores, medidores, temporizadores e resumos de distribuição, juntamente com uma API `MeterRegistry` que generaliza a recolha e propagação de métricas para diferentes sistemas de monitorização de back-end."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:21
#, fuzzy
msgid "Micrometer is the recommended approach to metrics for Quarkus."
msgstr "O micrómetro é a abordagem recomendada para as métricas do Quarkus."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:24
#, fuzzy
msgid "By default, the metrics are exposed on the main HTTP server.  If you would like to surface metrics from a separate management port, see the xref:management-interface[Managed interface] section."
msgstr "Por predefinição, as métricas são expostas no servidor HTTP principal. Se pretender expor as métricas a partir de uma porta de gestão separada, consulte a secção  link:#management-interface[Interface gerida]."

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:25
#, fuzzy, no-wrap
msgid "Micrometer and monitoring system extensions"
msgstr "Extensões do micrómetro e do sistema de monitorização"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:30
#, fuzzy
msgid "Quarkus Micrometer extensions are structured in the same way as the Micrometer project.  The `quarkus-micrometer` extension provides core Micrometer support and runtime integration.  Other Quarkus and Quarkiverse extensions use the Quarkus Micrometer extension to provide support for other monitoring systems."
msgstr "As extensões Quarkus Micrometer estão estruturadas da mesma forma que o projeto Micrometer. A extensão `quarkus-micrometer` fornece o suporte principal do Micrometer e a integração do tempo de execução. Outras extensões Quarkus e Quarkiverse utilizam a extensão Quarkus Micrometer para fornecer suporte a outros sistemas de monitorização."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:32
#, fuzzy
msgid "Quarkus extensions:"
msgstr "Extensões Quarkus:"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:34
#, fuzzy
msgid "micrometer"
msgstr "micrómetro"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:35
#, fuzzy
msgid "micrometer-registry-prometheus"
msgstr "micrómetro-registo-prometeu"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:37
#, fuzzy
msgid "link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse extensions] (may be incomplete):"
msgstr "link:https://github.com/quarkiverse/quarkus-micrometer-registry[Extensões do Quarkiverse] (podem estar incompletas):"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:39
#, fuzzy
msgid "micrometer-registry-azure-monitor"
msgstr "micrómetro-registo-azure-monitor"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:40
#, fuzzy
msgid "micrometer-registry-datadog"
msgstr "micrómetro-registo-datadog"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:41
#, fuzzy
msgid "micrometer-registry-graphite"
msgstr "micrómetro-registo-grafite"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:42
#, fuzzy
msgid "micrometer-registry-influx"
msgstr "micrómetro-registo-influxo"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:43
#, fuzzy
msgid "micrometer-registry-jmx"
msgstr "micrometro-registo-jmx"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:44
#, fuzzy
msgid "micrometer-registry-newrelic-telemetry"
msgstr "micrometer-registry-newrelic-telemetry"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:45
#, fuzzy
msgid "micrometer-registry-otlp"
msgstr "micrómetro-registo-otlp"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:46
#, fuzzy
msgid "micrometer-registry-signalfx"
msgstr "micrómetro-registo-signalfx"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:47
#, fuzzy
msgid "micrometer-registry-stackdriver"
msgstr "micrómetro-registo-stackdriver"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:48
#, fuzzy
msgid "micrometer-registry-statsd"
msgstr "micrómetro-registo-estadosd"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:51
#, fuzzy
msgid "To add support for Prometheus metrics to your application, for example, use the `micrometer-registry-prometheus` extension.  It will bring in the Quarkus Micrometer extension and Micrometer core libraries as dependencies."
msgstr "Para adicionar suporte às métricas do Prometheus ao seu aplicativo, por exemplo, use a extensão `micrometer-registry-prometheus`. Ela trará a extensão Quarkus Micrometer e as bibliotecas centrais do Micrometer como dependências."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:53
#, fuzzy
msgid "Add the extension to your project using following command (from your project directory):"
msgstr "Adicione a extensão ao seu projeto utilizando o seguinte comando (a partir do diretório do seu projeto):"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:58
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Isto irá adicionar o seguinte ao seu ficheiro de compilação:"

#. type: Block title
#: upstream/_guides/telemetry-micrometer.adoc:60
#: upstream/_guides/telemetry-micrometer.adoc:84
#: upstream/_guides/telemetry-micrometer.adoc:104
#: upstream/_guides/telemetry-micrometer.adoc:643
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:66
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-micrometer-registry-prometheus</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/telemetry-micrometer.adoc:69
#: upstream/_guides/telemetry-micrometer.adoc:93
#: upstream/_guides/telemetry-micrometer.adoc:118
#: upstream/_guides/telemetry-micrometer.adoc:652
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:72
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-micrometer-registry-prometheus\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:75
#, fuzzy
msgid "And you're all set!"
msgstr "E está tudo pronto!"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:79
#, fuzzy
msgid "A similar process applies for other meter registry extensions.  To use the Micrometer StackDriver MeterRegistry, for example, you would use the `quarkus-micrometer-registry-stackdriver` extension from the Quarkiverse:"
msgstr "Um processo semelhante aplica-se a outras extensões de registo de contadores. Para utilizar o Micrometer StackDriver MeterRegistry, por exemplo, deverá utilizar a extensão `quarkus-micrometer-registry-stackdriver` do Quarkiverse:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:90
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkiverse.micrometer.registry</groupId>\n"
"    <artifactId>quarkus-micrometer-registry-stackdriver</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:96
#, no-wrap
msgid "implementation(\"io.quarkiverse.micrometer.registry:quarkus-micrometer-registry-stackdriver\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:98
#, fuzzy, no-wrap
msgid "Other registry implementations"
msgstr "Outras implementações de registo"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:102
#, fuzzy
msgid "If the Micrometer registry you would like to use does not yet have an associated extension, use the `quarkus-micrometer` extension and bring in the Micrometer meter registry dependency directly:"
msgstr "Se o registo Micrometer que pretende utilizar ainda não tiver uma extensão associada, utilize a extensão `quarkus-micrometer` e introduza diretamente a dependência do registo do medidor Micrometer:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:115
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-micrometer</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>com.acme</groupId>\n"
"    <artifactId>custom-micrometer-registry</artifactId>\n"
"    <version>...</version>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:122
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-micrometer\")\n"
"implementation(\"com.acme:custom-micrometer-registry\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:126
#, fuzzy
msgid "You will then need to specify your own provider to configure and initialize the MeterRegistry, as discussed in the next section."
msgstr "Terá então de especificar o seu próprio fornecedor para configurar e inicializar o MeterRegistry, tal como referido na secção seguinte."

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:127
#, fuzzy, no-wrap
msgid "Create a customized MeterRegistry"
msgstr "Criar um MeterRegistry personalizado"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:130
#, fuzzy
msgid "Use a custom `@Produces` method to create and configure a your own `MeterRegistry` if you need to."
msgstr "Utilize um método `@Produces` personalizado para criar e configurar o seu próprio `MeterRegistry`, se necessário."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:132
#, fuzzy
msgid "The following example customizes the line format used for StatsD:"
msgstr "O exemplo seguinte personaliza o formato de linha utilizado para StatsD:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:140
#, no-wrap
msgid ""
"@Produces\n"
"@Singleton // <1>\n"
"public StatsdMeterRegistry createStatsdMeterRegistry(StatsdConfig statsdConfig, Clock clock) { // <2>\n"
"    // define what to do with lines\n"
"    Consumer<String> lineLogger = line -> logger.info(line);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:147
#, no-wrap
msgid ""
"    // inject a configuration object, and then customize the line builder\n"
"    return StatsdMeterRegistry.builder(statsdConfig)\n"
"          .clock(clock)\n"
"          .lineSink(lineLogger)\n"
"          .build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:150
#, fuzzy
msgid "The method returns a `@Singleton`."
msgstr "O método devolve um `@Singleton`."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:151
#, fuzzy
msgid "The method returns the specific type of `MeterRegistry`"
msgstr "O método devolve o tipo específico de `MeterRegistry`"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:153
#, fuzzy
msgid "This example corresponds to the following instructions in the Micrometer documentation: link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD: Customizing the Metrics Sink]"
msgstr "Este exemplo corresponde às seguintes instruções na documentação do Micrometer:  link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD: Personalização do sumidouro de métricas]"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:157
#, fuzzy
msgid "Use MicroProfile Config to inject any configuration attributes you need to configure the registry.  Most Micrometer registry extensions, like `quarkus-micrometer-registry-statsd`, provide registry-specific configuration objects that are integrated with the Quarkus configuration model.  The link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub Repository] can be a useful implementation reference."
msgstr "Utilize o MicroProfile Config para injetar quaisquer atributos de configuração necessários para configurar o registo. A maioria das extensões de registo Micrometer, como `quarkus-micrometer-registry-statsd`, fornece objectos de configuração específicos do registo que estão integrados no modelo de configuração Quarkus. O  link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub Repository] pode ser uma referência de implementação útil."

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:158
#, fuzzy, no-wrap
msgid "Create your own metrics"
msgstr "Crie as suas próprias métricas"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:163
#, fuzzy
msgid "Metrics data is used in the aggregate to observe how data changes over time.  This data is used for trend analysis, anomaly detection, and alerting.  Data is stored by backend monitoring systems in time series databases, with new values appended to the end of the series."
msgstr "Os dados métricos são utilizados de forma agregada para observar como os dados se alteram ao longo do tempo. Estes dados são utilizados para análise de tendências, deteção de anomalias e alertas. Os dados são armazenados por sistemas de monitorização backend em bases de dados de séries temporais, com novos valores anexados ao final da série."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:165
#, fuzzy
msgid "Metrics are constructed lazily. You may not see any data for the metric you're looking for until you've performed an action that will create it, like visiting an endpoint."
msgstr "As métricas são construídas de forma preguiçosa. Poderá não ver quaisquer dados para a métrica que procura até ter executado uma ação que a crie, como visitar um ponto final."

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:166
#, fuzzy, no-wrap
msgid "Naming conventions"
msgstr "Convenções de nomenclatura"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:170
#, fuzzy
msgid "Meter names should use dots to separate segments, `a.name.like.this`.  Micrometer applies naming conventions to convert registered meter names to match the expectations of backend monitoring systems."
msgstr "Os nomes dos contadores devem utilizar pontos para separar segmentos, `a.name.like.this`. A Micrometer aplica convenções de nomenclatura para converter os nomes dos contadores registados de modo a corresponderem às expectativas dos sistemas de monitorização backend."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:172
#, fuzzy
msgid "Given the following declaration of a timer: `registry.timer(\"http.server.requests\")`, applied naming conventions will emit the following metrics for different monitoring systems:"
msgstr "Dada a seguinte declaração de um temporizador: `registry.timer(\"http.server.requests\")`, as convenções de nomenclatura aplicadas emitirão as seguintes métricas para diferentes sistemas de monitorização:"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:174
#, fuzzy
msgid "Prometheus: `http_server_requests_duration_seconds`"
msgstr "Prometheus: `http_server_requests_duration_seconds`"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:175
#, fuzzy
msgid "Atlas: `httpServerRequests`"
msgstr "Atlas: `httpServerRequests`"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:176
#, fuzzy
msgid "Graphite: `http.server.requests`"
msgstr "Grafite: `http.server.requests`"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:177
#, fuzzy
msgid "InfluxDB: `http_server_requests`"
msgstr "InfluxDB: `http_server_requests`"

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:179
#, fuzzy, no-wrap
msgid "Define dimensions for aggregation"
msgstr "Definir dimensões para agregação"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:183
#, fuzzy
msgid "Metrics, single numerical measurements, often have additional data captured with them. This ancillary data is used to group or aggregate metrics for analysis.  The Micrometer API refers to this dimensional data as tags, but you may it referred to as \"labels\" or \"attributes\" in other documentation sources."
msgstr "As métricas, medidas numéricas individuais, têm frequentemente dados adicionais capturados com elas. Estes dados auxiliares são utilizados para agrupar ou agregar métricas para análise. A API do Micrometer refere-se a estes dados dimensionais como etiquetas, mas podem ser referidos como \"etiquetas\" ou \"atributos\" noutras fontes de documentação."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:186
#, fuzzy
msgid "Micrometer is built primariliy for backend monitoring systems that support dimensional data (metric names that are enchriched with key/value pairs).  For heirarchical systems that only support a flat metric name, Micrometer will flatten the set of key/value pairs (sorted by key) and add them to the name."
msgstr "O Micrometer foi criado principalmente para sistemas de monitorização de back-end que suportam dados dimensionais (nomes de métricas que são enriquecidos com pares chave/valor). Para sistemas heirárquicos que apenas suportam um nome métrico plano, o Micrometer aplanará o conjunto de pares chave/valor (ordenados por chave) e adicioná-los-á ao nome."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:188
#, fuzzy
msgid "Tags can be specified when a meter is registered with a `MeterRegistry` or using a xref:meter-filter[Meter Filter]."
msgstr "As etiquetas podem ser especificadas quando um contador é registado em `MeterRegistry` ou utilizando um  link:#meter-filter[Filtro de Contador]."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:190
#, fuzzy
msgid "See the Micrometer documentation for additional advice on link:{concepts}#_tag_naming[tag naming]."
msgstr "Consulte a documentação do Micrometer para obter conselhos adicionais sobre a  link:{concepts}#_tag_naming[atribuição de nomes a etiquetas]."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:193
#, fuzzy
msgid "Each unique combination of metric name and dimension produces a unique time series.  Using an unbounded set of dimensional data can lead to a \"cardinality explosion\", an exponential increase in the creation of new time series."
msgstr "Cada combinação única de nome de métrica e dimensão produz uma série cronológica única. A utilização de um conjunto ilimitado de dados dimensionais pode levar a uma \"explosão de cardinalidade\", um aumento exponencial na criação de novas séries cronológicas."

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:194
#, fuzzy, no-wrap
msgid "Obtain a reference to a MeterRegistry"
msgstr "Obter uma referência a um MeterRegistry"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:197
#, fuzzy
msgid "To register meters, you need a reference to a `MeterRegistry`, which is configured and maintained by the Micrometer extension."
msgstr "Para registar medidores, é necessária uma referência a um `MeterRegistry`, que é configurado e mantido pela extensão Micrometer."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:199
#, fuzzy
msgid "Use one of the following methods to obtain a reference to a `MeterRegistry`:"
msgstr "Utilize um dos seguintes métodos para obter uma referência a um `MeterRegistry`:"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:201
#, fuzzy
msgid "Use CDI Constructor injection:"
msgstr "Utilizar a injeção de construtor CDI:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:205
#, no-wrap
msgid "package org.acme.micrometer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:207
#, no-wrap
msgid "import io.micrometer.core.instrument.MeterRegistry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:211
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:215
#, no-wrap
msgid ""
"@Path(\"/example\")\n"
"@Produces(\"text/plain\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:217
#, no-wrap
msgid "    private final MeterRegistry registry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:222
#, no-wrap
msgid ""
"    ExampleResource(MeterRegistry registry) {\n"
"        this.registry = registry;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:225
#, fuzzy
msgid "Use a `MeterRegistry` member variable and use `@Inject`:"
msgstr "Utilizar uma variável de membro `MeterRegistry` e utilizar `@Inject`:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:230
#, no-wrap
msgid ""
"    @Inject\n"
"    MeterRegistry registry;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:233
#, fuzzy
msgid "Use the global `MeterRegistry`:"
msgstr "Utilizar o sítio global `MeterRegistry`:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:237
#, no-wrap
msgid "    MeterRegistry registry = Metrics.globalRegistry;\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:239
#, fuzzy, no-wrap
msgid "Gauges"
msgstr "Medidores"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:243
#, fuzzy
msgid "Gauges measure a value that can increase or decrease over time, like the speedometer on a car.  Gauges can be useful when monitoring the statistics for a cache or collection."
msgstr "Os medidores medem um valor que pode aumentar ou diminuir com o tempo, como o velocímetro de um carro. Os medidores podem ser úteis para monitorizar as estatísticas de uma cache ou coleção."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:246
#, fuzzy
msgid "Gauge values are sampled rather than set; there is no record of how the value associated with a gauge may have changed between measurements."
msgstr "Os valores dos medidores são amostrados e não definidos; não há registo de como o valor associado a um medidor pode ter mudado entre as medições."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:248
#, fuzzy
msgid "Micrometer provides a few mechanisms for creating gauges:"
msgstr "O micrómetro fornece alguns mecanismos para criar medidores:"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:250
#, fuzzy
msgid "Wrap construction of a collection to monitor its size:"
msgstr "Envolver a construção de uma coleção para controlar o seu tamanho:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:256
#, no-wrap
msgid ""
"List<String> list = registry.gaugeCollectionSize(\"fantastic.list\", // <1>\n"
"        Tags.of(\"key\", \"value\") // optional <2>\n"
"        new ArrayList<>());  // <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:259
#, fuzzy
msgid "Create a new gauge, `list.size`, using the dot-separated convention."
msgstr "Crie um novo medidor, `list.size`, utilizando a convenção de separação de pontos."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:261
#, fuzzy
msgid "Associate xref:define-tags[tags] with the gauge.  Gauge tag values are constant, and must be assigned at construction time."
msgstr "Associar  link:#define-tags[etiquetas] ao calibre. Os valores das etiquetas do gabarito são constantes e devem ser atribuídos no momento da construção."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:262
#, fuzzy
msgid "Construct the array list whose size should be observed."
msgstr "Constrói a lista da matriz cujo tamanho deve ser observado."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:264
#, fuzzy
msgid "Use a builder to create a Gauge that will call a function:"
msgstr "Utilize um construtor para criar um Gauge que irá chamar uma função:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:272
#, no-wrap
msgid ""
"Gauge.builder(\"jvm.threads.peak\", threadBean, ThreadMXBean::getPeakThreadCount) // <1>\n"
"    .baseUnit(BaseUnits.THREADS) // optional <2>\n"
"    .description(\"The peak live thread count...\") // optional <3>\n"
"    .tags(\"key\", \"value\") // optional <4>\n"
"    .register(registry); // <5>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:275
#, fuzzy
msgid "Create a new gauge called `jvm.threads.peak` that will call `getPeakThreadCount` on `threadBean`, an instance of `ThreadMXBean`"
msgstr "Crie um novo medidor chamado `jvm.threads.peak` que chamará `getPeakThreadCount` em `threadBean`, uma instância de `ThreadMXBean`"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:276
#, fuzzy
msgid "Define the base unit, see link:{base-units}[BaseUnits.java] for predefined values."
msgstr "Definir a unidade de base, ver  link:{base-units}[BaseUnits.java] para valores predefinidos."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:277
#, fuzzy
msgid "Provide a description of the Gauge"
msgstr "Fornecer uma descrição do calibre"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:278
#, fuzzy
msgid "Associate xref:define-tags[tags] with the gauge"
msgstr "Associar  link:#define-tags[etiquetas] ao medidor"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:279
#, fuzzy
msgid "Register the Gauge with the MeterRegistry"
msgstr "Registar o medidor com o MeterRegistry"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:282
#, fuzzy
msgid "See link:{concepts}#_gauges[Gauges] in the Micrometer documentation for more information and examples.  Of note are two special cases: `TimeGauge` for measuring time, and a `MultiGauge` for reporting several criteria together."
msgstr "Para mais informações e exemplos, consulte  link:{concepts}#_gauges[Medidores] na documentação do Micrómetro. São de salientar dois casos especiais: `TimeGauge` para medir o tempo e `MultiGauge` para comunicar vários critérios em conjunto."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:286
#, fuzzy
msgid "Micrometer does not create strong references to the objects it observes by default.  Depending on the registry, Micrometer either omits gauges that observe objects that have been garbage-collected entirely or uses `NaN` (not a number) as the observed value."
msgstr "O Micrometer não cria referências fortes para os objectos que observa por defeito. Dependendo do registo, o Micrometer omite os medidores que observam objectos que foram completamente recolhidos pelo lixo ou utiliza `NaN` (não um número) como o valor observado."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:291
#, fuzzy
msgid "When should you use a gauge? Only use a gauge when you can't use something else.  Gauges can be less straight-forward to use than other meters.  If what you are measuring can be counted (because the value always increments), use a counter instead."
msgstr "Quando é que se deve utilizar um calibre? Utilize um manómetro apenas quando não puder utilizar outra coisa. Os manómetros podem ser menos simples de utilizar do que outros medidores. Se o que está a medir pode ser contado (porque o valor aumenta sempre), utilize um contador."

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:292
#, fuzzy, no-wrap
msgid "Counters"
msgstr "Contadores"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:296
#, fuzzy
msgid "Counters measure values that only increase.  Use one of the methods below to create a counter."
msgstr "Os contadores medem valores que só aumentam. Utilize um dos métodos abaixo para criar um contador."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:298
#: upstream/_guides/telemetry-micrometer.adoc:361
#: upstream/_guides/telemetry-micrometer.adoc:394
#, fuzzy
msgid "Use a convenience method on the `MeterRegistry`:"
msgstr "Utilizar um método de conveniência no sítio `MeterRegistry`:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:302
#, no-wrap
msgid "registry.counter(\"example.prime.number\", \"type\", \"prime\"); // <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:305
#, fuzzy
msgid "`example.prime.number` is the counter name."
msgstr "`example.prime.number` é o nome do contador."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:306
#, fuzzy
msgid "`type` is a dimensional tag with value `prime`."
msgstr "`type` é uma etiqueta dimensional com o valor `prime`."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:309
#, fuzzy
msgid "Use `Counter.builder` to provide a description and units:"
msgstr "Utilize `Counter.builder` para fornecer uma descrição e unidades:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:317
#, no-wrap
msgid ""
"Counter.builder(\"count.me\") // <1>\n"
"    .baseUnit(\"beans\")            // optional <2>\n"
"    .description(\"a description\") // optional <3>\n"
"    .tags(\"region\", \"test\")       // optional <4>\n"
"    .register(registry);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:320
#, fuzzy
msgid "Create a new counter called `count.me`"
msgstr "Criar um novo contador chamado `count.me`"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:321
#, fuzzy
msgid "Define a custom base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr "Define uma unidade base personalizada. Consulte  link:{base-units}[BaseUnits.java] para obter valores predefinidos."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:322
#, fuzzy
msgid "Provide a description for the counter"
msgstr "Fornecer uma descrição do contador"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:323
#, fuzzy
msgid "Associate xref:define-tags[tags] with the counter"
msgstr "Associar  link:#define-tags[etiquetas] ao contador"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:325
#: upstream/_guides/telemetry-micrometer.adoc:420
#, fuzzy
msgid "xref:annotations[Annotate] a method"
msgstr "link:#annotations[Anotar] um método"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:332
#, no-wrap
msgid ""
"@Counted(value = \"counted.method\", extraTags = { \"extra\", \"annotated\" }) // <1> <2>\n"
"void countThisMethod(){\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:335
#, fuzzy
msgid "A CDI interceptor will create and register a counter called `counted.method`"
msgstr "Um intercetor CDI criará e registará um contador chamado `counted.method`"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:336
#, fuzzy
msgid "The interceptor-created counter will have the \"extra\" dimension tag with value \"annotated\""
msgstr "O contador criado pelo intercetor terá a etiqueta de dimensão \"extra\" com o valor \"annotated\" (anotado)"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:338
#, fuzzy
msgid "See link:{concepts}#_counters[Counters] in the Micrometer documentation for more information and examples, including the less common `FunctionCounter` that can be used to measure the result returned by an always increasing function."
msgstr "Consulte  link:{concepts}#_counters[Contadores] na documentação do Micrómetro para obter mais informações e exemplos, incluindo o menos comum `FunctionCounter` que pode ser utilizado para medir o resultado devolvido por uma função sempre crescente."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:344
#, fuzzy
msgid "When should you use a counter? Use a counter if you are doing something that can not be either timed or summarized.  If you want to understand more about how a value is changing, a timer (when the base unit of measurement is time) or a distribution summary might be more appropriate."
msgstr "Quando é que se deve utilizar um contador? Utilize um contador se estiver a fazer algo que não possa ser cronometrado ou resumido. Se quiser saber mais sobre como um valor está a mudar, um temporizador (quando a unidade de medida base é o tempo) ou um resumo de distribuição pode ser mais apropriado."

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:345
#, fuzzy, no-wrap
msgid "Summaries and Timers"
msgstr "Resumos e temporizadores"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:348
#, fuzzy
msgid "Timers and distribution summaries in Micrometer are very similar. Both meters record data, and can capture additional histogram or percentile data. While distribution summaries can be use for arbitrary types of data, timers are optimized for measuring time and durations."
msgstr "Os temporizadores e os resumos de distribuição no Micrometer são muito semelhantes. Ambos os contadores registam dados e podem capturar dados adicionais de histogramas ou percentis. Enquanto os resumos de distribuição podem ser utilizados para tipos de dados arbitrários, os temporizadores são optimizados para medir o tempo e as durações."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:350
#, fuzzy
msgid "Timers and distribution summaries store at least three values internally:"
msgstr "Os temporizadores e os resumos de distribuição armazenam internamente pelo menos três valores:"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:352
#, fuzzy
msgid "the aggregation of all recorded values as a sum"
msgstr "a agregação de todos os valores registados como uma soma"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:353
#, fuzzy
msgid "the number of values that have been recorded (a counter)"
msgstr "o número de valores que foram registados (um contador)"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:354
#, fuzzy
msgid "the highest value seen within a decaying time window (a gauge)."
msgstr "o valor mais elevado observado numa janela de tempo decrescente (um indicador)."

#. type: Title ====
#: upstream/_guides/telemetry-micrometer.adoc:355
#, fuzzy, no-wrap
msgid "Create a distribution summary"
msgstr "Criar um resumo de distribuição"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:359
#, fuzzy
msgid "Use a distribution summary to record a value, not time.  Use one of the following methods to create a distribution summary."
msgstr "Utilize um resumo de distribuição para registar um valor e não o tempo. Utilize um dos seguintes métodos para criar um resumo de distribuição."

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:365
#, no-wrap
msgid "registry.summary(\"bytes.written\", \"protocol\", \"http\"); // <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:368
#, fuzzy
msgid "`bytes.written` is the summary name"
msgstr "`bytes.written` é o nome do resumo"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:369
#, fuzzy
msgid "`protocol` is a dimensional tag with value `http`."
msgstr "`protocol` é uma etiqueta dimensional com o valor `http`."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:372
#, fuzzy
msgid "Use `DistributionSummary.builder` to provide a description and units:"
msgstr "Utilize `DistributionSummary.builder` para fornecer uma descrição e unidades:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:380
#, fuzzy, no-wrap
msgid ""
"DistributionSummary.builder(\"response.size\") // <1>\n"
"    .baseUnit(\"bytes\")            // optional <2>\n"
"    .description(\"a description\") // optional <3>\n"
"    .tags(\"protocol\", \"http\")     // optional <4>\n"
"    .register(registry);\n"
msgstr ""
".baseUnit(\"bytes\")            // optional <2>\n"
".description(\"a description\") // optional <3>\n"
".tags(\"protocol\", \"http\")     // optional <4>\n"
".register(registry);\n"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:383
#, fuzzy
msgid "Create a new distribution summary called `response.size`"
msgstr "Criar um resumo de distribuição"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:384
#, fuzzy
msgid "Use `bytes` as a base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr "Define uma unidade base personalizada. Consulte  link:{base-units}[BaseUnits.java] para obter valores predefinidos."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:385
#: upstream/_guides/telemetry-micrometer.adoc:417
#, fuzzy
msgid "Provide a description for the distribution summary"
msgstr "Fornecer uma descrição do contador"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:386
#, fuzzy
msgid "Associate xref:define-tags[tags] with the distribution summary"
msgstr "Associar  link:#define-tags[etiquetas] ao contador"

#. type: Title ====
#: upstream/_guides/telemetry-micrometer.adoc:387
#, fuzzy, no-wrap
msgid "Create a timer"
msgstr "Criar um temporizador"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:390
msgid "Timers measure short-duration latencies and how often they occur. Negative values are not supported, and longer durations could cause an overflow of the total time (Long.MAX_VALUE nanoseconds (292.3 years))."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:392
msgid "Use one of the following methods to construct a timer."
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:398
#, fuzzy, no-wrap
msgid "registry.timer(\"fabric.selection\", \"primary\", \"blue\"); // <1> <2>\n"
msgstr "registry.timer(\"fabric.selection\", \"primary\", \"blue\"); // &lt;1&gt; &lt;2&gt;"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:401
#, fuzzy
msgid "`fabric.selection` is the summary name"
msgstr "`bytes.written` é o nome do resumo"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:402
#, fuzzy
msgid "`primary` is a dimensional tag with value `blue`."
msgstr "`type` é uma etiqueta dimensional com o valor `prime`."

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:405
#, fuzzy
msgid "Use `Timer.builder` to provide a description and units:"
msgstr "Utilize `Counter.builder` para fornecer uma descrição e unidades:"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:412
#, fuzzy, no-wrap
msgid ""
"Timer.builder(\"my.timer\")        // <1> <2>\n"
"    .description(\"description \") // optional <3>\n"
"    .tags(\"region\", \"test\")      // optional <4>\n"
"    .register(registry);\n"
msgstr "Timer.builder(\"my.timer\") // &lt;1&gt; &lt;2&gt; .description(\"description \") // opcional &lt;3&gt; .tags(\"region\", \"test\") // opcional &lt;4&gt; .register(registry);"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:415
#, fuzzy
msgid "Create a new timer called `my.timer`"
msgstr "Criar um novo contador chamado `count.me`"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:416
msgid "Timers measure time, and will convert it into the units required by the monitoring backend"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:418
#, fuzzy
msgid "Associate xref:define-tags[tags] with the timer"
msgstr "Associar  link:#define-tags[etiquetas] ao contador"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:424
#, fuzzy, no-wrap
msgid "@Timed(value = \"call\", extraTags = {\"region\", \"test\"}) // <1> <2>\n"
msgstr "@Timed(value = \"call\", extraTags = {\"region\", \"test\"}) // &lt;1&gt; &lt;2&gt;"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:427
#, fuzzy
msgid "A CDI interceptor will create and register a timer called `call`"
msgstr "Um intercetor CDI criará e registará um contador chamado `counted.method`"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:428
#, fuzzy
msgid "The interceptor-created timer will have the \"region\" dimension tag with value \"test\""
msgstr "O contador criado pelo intercetor terá a etiqueta de dimensão \"extra\" com o valor \"annotated\" (anotado)"

#. type: Title ====
#: upstream/_guides/telemetry-micrometer.adoc:429
#, fuzzy, no-wrap
msgid "Measure durations with Timers"
msgstr "Medir durações com temporizadores"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:432
msgid "Micrometer provides the following convenience mechanisms for recording durations."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:434
msgid "Wrap the invocation of a `Runnable`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:438
#, fuzzy, no-wrap
msgid "timer.record(() -> noReturnValue());\n"
msgstr "timer.record) → noReturnValue(;"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:441
msgid "Wrap the invocation of a `Callable`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:445
#, fuzzy, no-wrap
msgid "timer.recordCallable(() -> returnValue());\n"
msgstr "timer.recordCallable) → returnValue(;"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:448
msgid "Create a wrapped `Runnable` for repeated invocation:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:452
#, fuzzy, no-wrap
msgid "Runnable r = timer.wrap(() -> noReturnValue());\n"
msgstr "Runnable r = timer.wrap) → noReturnValue(;"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:455
msgid "Create a wrapped `Callable` for repeated invocation:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:459
#, fuzzy, no-wrap
msgid "Callable c = timer.wrap(() -> returnValue());\n"
msgstr "Callable c = timer.wrap) → returnValue(;"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:462
msgid "Use a `Sample` for more complex code paths:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:466
#, fuzzy, no-wrap
msgid "Sample sample = Timer.start(registry); // <1>\n"
msgstr "Sample sample = Timer.start(registry); // &lt;1&gt;"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:468
#, fuzzy, no-wrap
msgid "doStuff; // <2>\n"
msgstr "doStuff; // &lt;2&gt;"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:470
#, fuzzy, no-wrap
msgid "sample.stop(registry.timer(\"my.timer\", \"response\", response.status())); // <3>\n"
msgstr "sample.stop(registry.timer(\"my.timer\", \"response\", response.status())); // &lt;3&gt;"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:473
msgid "We create a sample, which records the start of the timer."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:474
msgid "The sample can be passed along as context"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:475
msgid "We can choose the timer when the sample is stopped. This example uses a response status as a tag identifying the timer, which won't be known until processing is complete."
msgstr ""

#. type: Title ====
#: upstream/_guides/telemetry-micrometer.adoc:476
#, fuzzy, no-wrap
msgid "Histograms and percentiles"
msgstr "Histogramas e percentis"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:480
msgid "Both timers and distribution summaries can be configured to emit additional statistics, like histogram data, precomputed percentiles, or service level objective (SLO) boundaries.  See link:{concepts}#_timers[Timers] and link:{concepts}#_distribution_summaries[Distribution Summaries] in the Micrometer documentation for more information and examples, including memory footprint estimation for both types."
msgstr ""

#. type: delimited block =
#: upstream/_guides/telemetry-micrometer.adoc:484
msgid "The count, sum, and histogram data associated with timers and distribution summaries can be re-aggregated across dimensions (or across a series of instances)."
msgstr ""

#. type: delimited block =
#: upstream/_guides/telemetry-micrometer.adoc:486
msgid "Precomputed percentile values can not. Percentiles are unique to each dataset (the 90th percentile of this collection of measurements)."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:488
#, fuzzy, no-wrap
msgid "Automatically generated metrics"
msgstr "Métricas geradas automaticamente"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:494
msgid "The Micrometer extension automatically times HTTP server requests. Following Prometheus naming conventions for timers, look for `http_server_requests_seconds_count`, `http_server_requests_seconds_sum`, and `http_server_requests_seconds_max`. Dimensional labels have been added for the requested uri, the HTTP method (GET, POST, etc.), the status code (200, 302, 404, etc.), and a more general outcome field."
msgstr ""

#. type: Block title
#: upstream/_guides/telemetry-micrometer.adoc:495
#, no-wrap
msgid "Ignoring endpoints"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:505
msgid "You can disable measurement of HTTP endpoints using the `quarkus.micrometer.binder.http-server.ignore-patterns` property.  This property accepts a comma-separated list of simple regex match patterns identifying URI paths that should be ignored.  For example, setting `quarkus.micrometer.binder.http-server.ignore-patterns=/example/prime/[0-9]+` will ignore a request to `http://localhost:8080/example/prime/7919`.  A request to `http://localhost:8080/example/gauge/7919` would still be measured."
msgstr ""

#. type: Block title
#: upstream/_guides/telemetry-micrometer.adoc:506
#, no-wrap
msgid "URI templates"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:511
msgid "The micrometer extension will make a best effort at representing URIs containing path parameters in templated form.  Using examples from above, a request to `http://localhost:8080/example/prime/7919` should appear as an attribute of `http_server_requests_seconds_*` metrics with a value of `uri=/example/prime/{number}`."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:518
msgid "Use the `quarkus.micrometer.binder.http-server.match-patterns` property if the correct URL can not be determined.  This property accepts a comma-separated list defining an association between a simple regex match pattern and a replacement string.  For example, setting `quarkus.micrometer.binder.http-server.match-patterns=/example/prime/[0-9]+=/example/{jellybeans}` would use the value `/example/{jellybeans}` for the uri attribute any time the requested uri matches `/example/prime/[0-9]+`."
msgstr ""

#. type: Block title
#: upstream/_guides/telemetry-micrometer.adoc:519
#, no-wrap
msgid "Exported metrics format"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:523
msgid "By default, the metrics are exported using the Prometheus format `application/openmetrics-text`, you can revert to the former format by specifying the `Accept` request header to `text/plain` (`curl -H \"Accept: text/plain\" localhost:8080/q/metrics/`)."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:524
#, fuzzy, no-wrap
msgid "Customizing Micrometer"
msgstr "Personalização do micrómetro"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:527
msgid "Quarkus provides a variety of way to customize Micrometer."
msgstr ""

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:529
#, fuzzy, no-wrap
msgid "Use `MeterFilter` to customize emitted tags and metrics"
msgstr "Utilize `MeterFilter` para personalizar as etiquetas e métricas emitidas"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:534
msgid "Micrometer uses `MeterFilter` instances to customize the metrics emitted by `MeterRegistry` instances.  The Micrometer extension will detect `MeterFilter` CDI beans and use them when initializing `MeterRegistry` instances."
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:539
#, fuzzy, no-wrap
msgid ""
"@Singleton\n"
"public class CustomConfiguration {\n"
msgstr "@Singleton public class CustomConfiguration {"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:542
#, fuzzy, no-wrap
msgid ""
"    @ConfigProperty(name = \"deployment.env\")\n"
"    String deploymentEnv;\n"
msgstr ""
"<pre>@ConfigProperty(name = \"deployment.env\")\n"
"String deploymentEnv;</pre>"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:551
#, fuzzy, no-wrap
msgid ""
"    /** Define common tags that apply only to a Prometheus Registry */\n"
"    @Produces\n"
"    @Singleton\n"
"    @MeterFilterConstraint(applyTo = PrometheusMeterRegistry.class)\n"
"    public MeterFilter configurePrometheusRegistries() {\n"
"        return MeterFilter.commonTags(Arrays.asList(\n"
"                Tag.of(\"registry\", \"prometheus\")));\n"
"    }\n"
msgstr ""
"<pre>/** Definir etiquetas comuns que se aplicam apenas a um registo Prometheus *//\n"
"@Produz\n"
"@Singleton\n"
"@MeterFilterConstraint(applyTo = PrometheusMeterRegistry.class)\n"
"public MeterFilter configurePrometheusRegistries() {\n"
"    return MeterFilter.commonTags(Arrays.asList(\n"
"            Tag.of(\"registo\", \"prometheus\")));\n"
"}</pre>"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:559
#, fuzzy, no-wrap
msgid ""
"    /** Define common tags that apply globally */\n"
"    @Produces\n"
"    @Singleton\n"
"    public MeterFilter configureAllRegistries() {\n"
"        return MeterFilter.commonTags(Arrays.asList(\n"
"                Tag.of(\"env\", deploymentEnv)));\n"
"    }\n"
msgstr ""
"<pre>/** Definir etiquetas comuns que se aplicam globalmente */\n"
"@Produz\n"
"@Singleton\n"
"public MeterFilter configureAllRegistries() {\n"
"    return MeterFilter.commonTags(Arrays.asList(\n"
"            Tag.of(\"env\", deploymentEnv)));\n"
"}</pre>"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:579
#, fuzzy, no-wrap
msgid ""
"    /** Enable histogram buckets for a specific timer */\n"
"    @Produces\n"
"    @Singleton\n"
"    public MeterFilter enableHistogram() {\n"
"        return new MeterFilter() {\n"
"            @Override\n"
"            public DistributionStatisticConfig configure(Meter.Id id, DistributionStatisticConfig config) {\n"
"                if(id.getName().startsWith(\"myservice\")) {\n"
"                    return DistributionStatisticConfig.builder()\n"
"                        .percentiles(0.5, 0.95)     // median and 95th percentile, not aggregable\n"
"                        .percentilesHistogram(true) // histogram buckets (e.g. prometheus histogram_quantile)\n"
"                        .build()\n"
"                        .merge(config);\n"
"                }\n"
"                return config;\n"
"            }\n"
"        };\n"
"    }\n"
"}\n"
msgstr ""
"<pre>    /** Ativar os intervalos do histograma para um temporizador específico */\n"
"    @Produz\n"
"    @Singleton\n"
"    public MeterFilter enableHistogram() {\n"
"        return new MeterFilter() {\n"
"            @Override\n"
"            public DistributionStatisticConfig configure(Meter.Id id, DistributionStatisticConfig config) {\n"
"                if(id.getName().startsWith(\"myservice\")) {\n"
"                    return DistributionStatisticConfig.builder()\n"
"                        .percentiles(0.5, 0.95) // mediana e percentil 95, não agregável\n"
"                        .percentilesHistogram(true) // baldes de histograma (por exemplo, prometheus histogram_quantile)\n"
"                        .build()\n"
"                        .merge(config);\n"
"                }\n"
"                return config;\n"
"            }\n"
"        };\n"
"    }\n"
"}</pre>"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:588
msgid "In this example, a singleton CDI bean will produce two different `MeterFilter` beans.  One will be applied only to Prometheus `MeterRegistry` instances (using the `@MeterFilterConstraint` qualifier), and another will be applied to all `MeterRegistry` instances.  An application configuration property is also injected and used as a tag value.  Additional examples of MeterFilters can be found in the link:https://micrometer.io/docs/concepts[official documentation]."
msgstr ""

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:589
#, fuzzy, no-wrap
msgid "Use `HttpServerMetricsTagsContributor` for server HTTP requests"
msgstr "Utilizar `HttpServerMetricsTagsContributor` para pedidos HTTP do servidor"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:592
msgid "By providing CDI beans that implement `io.quarkus.micrometer.runtime.HttpServerMetricsTagsContributor`, user code can contribute arbitrary tags based on the details of HTTP request"
msgstr ""

#. type: Title ===
#: upstream/_guides/telemetry-micrometer.adoc:593
#, fuzzy, no-wrap
msgid "Use `MeterRegistryCustomizer` for arbitrary customizations to meter registries"
msgstr "Utilizar `MeterRegistryCustomizer` para personalizações arbitrárias nos registos de contadores"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:597
msgid "By providing CDI beans that implement `io.quarkus.micrometer.runtime.MeterRegistryCustomizer` user code has the change to change the configuration of any `MeterRegistry` that has been activated.  Unless an implementation is annotated with `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint`, the customization applies to all `MeterRegistry` instances."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:599
#, fuzzy, no-wrap
msgid "Does Micrometer support annotations?"
msgstr "O Micrometer suporta anotações?"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:605
msgid "Micrometer does define two annotations, `@Counted` and `@Timed`, that can be added to methods.  The `@Timed` annotation will wrap the execution of a method and will emit the following tags in addition to any tags defined on the annotation itself: class, method, and exception (either \"none\" or the simple class name of a detected exception)."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:608
msgid "Using annotations is limited, as you can't dynamically assign meaningful tag values.  Also note that many methods, e.g. REST endpoint methods or Vert.x Routes, are counted and timed by the micrometer extension out of the box."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:609
#, fuzzy, no-wrap
msgid "Support for the MicroProfile Metrics API"
msgstr "Suporte para a API de métricas do MicroProfile"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:614
msgid "If you use the MicroProfile Metrics API in your application, the Micrometer extension will create an adaptive layer to map those metrics into the Micrometer registry.  Note that naming conventions between the two systems is different, so the metrics that are emitted when using MP Metrics with Micrometer will change."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:616
msgid "Use a `MeterFilter` to remap names or tags according to your conventions."
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:623
#, fuzzy, no-wrap
msgid ""
"@Produces\n"
"@Singleton\n"
"public MeterFilter renameApplicationMeters() {\n"
"    final String targetMetric = MPResourceClass.class.getName() + \".mpAnnotatedMethodName\";\n"
msgstr "@Produz @Singleton public MeterFilter renameApplicationMeters() { final String targetMetric = MPResourceClass.class.getName() + \".mpAnnotatedMethodName\";"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:638
#, fuzzy, no-wrap
msgid ""
"    return MeterFilter() {\n"
"        @Override\n"
"        public Meter.Id map(Meter.Id id) {\n"
"            if (id.getName().equals(targetMetric)) {\n"
"                // Drop the scope tag (MP Registry type: application, vendor, base)\n"
"                List<Tag> tags = id.getTags().stream().filter(x -> !\"scope\".equals(x.getKey()))\n"
"                        .collect(Collectors.toList());\n"
"                // rename the metric\n"
"                return id.withName(\"my.metric.name\").replaceTags(tags);\n"
"            }\n"
"            return id;\n"
"        }\n"
"    };\n"
"}\n"
msgstr ""
"<pre>    return MeterFilter() {\n"
"        @Override\n"
"        public Meter.Id map(Meter.Id id) {\n"
"            if (id.getName().equals(targetMetric)) {\n"
"                // Eliminar a etiqueta de âmbito (tipo de registo MP: aplicação, fornecedor, base)\n"
"                List&lt;Tag&gt; tags = id.getTags().stream().filter(x -&gt; !\"scope\".equals(x.getKey()))\n"
"                        .collect(Collectors.toList());\n"
"                // renomear a métrica\n"
"                return id.withName(\"my.metric.name\").replaceTags(tags);\n"
"            }\n"
"            return id;\n"
"        }\n"
"    };\n"
"}</pre>"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:641
msgid "Ensure the following dependency is present if you require the MicroProfile Metrics API:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:649
#, fuzzy, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.eclipse.microprofile.metrics</groupId>\n"
"    <artifactId>microprofile-metrics-api</artifactId>\n"
"</dependency>\n"
msgstr "&lt;dependência&gt; &lt;groupId&gt;org.eclipse.microprofile.metrics&lt;/groupId&gt; &lt;artifactId&gt;microprofile-metrics-api&lt;/artifactId&gt; &lt;/dependência&gt;"

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:655
#, fuzzy, no-wrap
msgid "implementation(\"org.eclipse.microprofile.metrics:microprofile-metrics-api\")\n"
msgstr "implementação(\"org.eclipse.microprofile.metrics:microprofile-metrics-api\")"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:658
msgid "The MP Metrics API compatibility layer may be moved to a different extension in the future."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:660
#, fuzzy, no-wrap
msgid "Management interface"
msgstr "Interface de gestão"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:663
msgid "By default, the metrics are exposed on the main HTTP server."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:667
msgid "You can expose them on a separate network interface and port by setting `quarkus.management.enabled=true` in your application configuration.  Note that this property is a build-time property.  The value cannot be overridden at runtime."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:669
msgid "If you enable the management interface without customizing the management network interface and port, the metrics are exposed under: `http://0.0.0.0:9000/q/metrics`."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:671
msgid "You can configure the path of each exposed format using:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/telemetry-micrometer.adoc:676
#, fuzzy, no-wrap
msgid ""
"quarkus.micrometer.export.json.enabled=true # Enable json metrics\n"
"quarkus.micrometer.export.json.path=metrics/json\n"
"quarkus.micrometer.export.prometheus.path=metrics/prometheus\n"
msgstr "quarkus.micrometer.export.json.enabled=true # Ativar métricas json quarkus.micrometer.export.json.path=metrics/json quarkus.micrometer.export.prometheus.path=metrics/prometheus"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:680
msgid "With such a configuration, the json metrics will be available from `http://0.0.0.0:9000/q/metrics/json`.  The prometheus metrics will be available from `http://0.0.0.0:9000/q/metrics/prometheus`."
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:682
msgid "Refer to the xref:./management-interface-reference.adoc[management interface reference] for more information."
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:684
#, no-wrap
msgid "Quarkus core extensions instrumented with Micrometer"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:687
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-agroal[`quarkus-agroal`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:688
msgid "https://quarkus.io/guides/cache[`quarkus-cache`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:689
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-caffeine[`quarkus-caffeine`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:690
msgid "https://quarkus.io/guides/smallrye-fault-tolerance[`quarkus-smallrye-fault-tolerance`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:691
msgid "https://quarkus.io/guides/grpc-getting-started[`quarkus-grpc`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:692
msgid "https://quarkus.io/guides/hibernate-orm[`quarkus-hibernate-orm`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:693
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-jaxrs-client-reactive[`quarkus-jaxrs-client-reactive`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:694
msgid "https://quarkus.io/guides/deploying-to-kubernetes[`quarkus-kubernetes`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:695
msgid "https://quarkus.io/guides/logging[`jboss-logging`] (logging API in Quarkus)"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:696
msgid "https://quarkus.io/guides/mongodb[`quarkus-mongodb-client`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:697
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-netty[`quarkus-netty`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:698
msgid "https://quarkus.io/guides/redis[`quarkus-redis-client`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:699
msgid "https://quarkus.io/guides/rest-client[`quarkus-rest-client`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:700
msgid "https://quarkus.io/guides/resteasy[`quarkus-resteasy-jackson`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:701
msgid "https://quarkus.io/guides/resteasy-reactive[`quarkus-resteasy-reactive`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:702
msgid "https://quarkus.io/guides/scheduler[`quarkus-scheduler`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:703
msgid "https://quarkus.io/guides/smallrye-graphql[`quarkus-smallrye-graphql`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:704
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-smallrye-reactive-messaging[`quarkus-smallrye-reactive-messaging`]"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:705
msgid "AMQP 1.0"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:706
msgid "RabbitMQ"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:707
msgid "Kafka"
msgstr "Kafka"

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:708
msgid "Pulsar"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:709
msgid "JMS"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:710
msgid "MQTT"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:711
msgid "Camel Messaging"
msgstr ""

#. type: Plain text
#: upstream/_guides/telemetry-micrometer.adoc:712
msgid "https://quarkus.io/guides/vertx[`quarkus-vertx`] (http requests)"
msgstr ""

#. type: Title ==
#: upstream/_guides/telemetry-micrometer.adoc:713
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referência de configuração"

#, fuzzy
#~ msgid "  DistributionSummary.builder(\"response.size\") // <1>"
#~ msgstr "<pre>DistributionSummary.builder(\"response.size\") // <b class=\"conum\">(1)</b></pre>"
