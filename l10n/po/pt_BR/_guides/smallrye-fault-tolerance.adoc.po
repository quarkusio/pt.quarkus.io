# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "SmallRye Fault Tolerance"
msgstr "Tolerância a falhas do SmallRye"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"One of the challenges brought by the distributed nature of microservices is that communication with external systems is\n"
"inherently unreliable. This increases demand on resiliency of applications. To simplify making more resilient\n"
"applications, Quarkus provides https://github.com/smallrye/smallrye-fault-tolerance/[SmallRye Fault Tolerance], an\n"
"implementation of the https://github.com/eclipse/microprofile-fault-tolerance/[MicroProfile Fault Tolerance]\n"
"specification."
msgstr "Um dos desafios trazidos pela natureza distribuída dos microsserviços é que a comunicação com sistemas externos é inerentemente não confiável. Isso aumenta a demanda por resiliência dos aplicativos. Para simplificar a criação de aplicativos mais resilientes, o Quarkus fornece o link:https://github.com/smallrye/smallrye-fault-tolerance/[SmallRye Fault Tolerance] , uma implementação da especificação link:https://github.com/eclipse/microprofile-fault-tolerance/[MicroProfile Fault Tolerance] ."

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"In this guide, we demonstrate usage of MicroProfile Fault Tolerance annotations such as `@Timeout`, `@Fallback`,\n"
"`@Retry`, `@CircuitBreaker`, and `@RateLimit`."
msgstr ""

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "The Scenario"
msgstr "O cenário"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"The application built in this guide simulates a simple backend for a gourmet coffee e-shop. It implements a REST\n"
"endpoint providing information about coffee samples we have on store."
msgstr "O aplicativo criado neste guia simula um backend simples para uma loja virtual de café gourmet. Ele implementa um endpoint REST que fornece informações sobre amostras de café que temos na loja."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Let's imagine, although it's not implemented as such, that some methods in our endpoint require communication\n"
"to external services like a database or an external microservice, which introduces a factor of unreliability."
msgstr "Vamos imaginar, embora não seja implementado como tal, que alguns métodos em nosso endpoint exigem comunicação com serviços externos, como um banco de dados ou um microsserviço externo, o que introduz um fator de falta de confiabilidade."

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, no-wrap
msgid "Solution"
msgstr "Solução"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas seções seguintes e crie a aplicação passo a passo. No entanto, você pode ir diretamente para o exemplo completo."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone o repositório Git: `git clone {quickstarts-clone-url}`, ou baixe um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "The solution is located in the `microprofile-fault-tolerance-quickstart` link:{quickstarts-tree-url}/microprofile-fault-tolerance-quickstart[directory]."
msgstr "A solução está localizada no link:{quickstarts-tree-url}/microprofile-fault-tolerance-quickstart[diretório] `microprofile-fault-tolerance-quickstart` ."

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, no-wrap
msgid "Creating the Maven Project"
msgstr "Criando o projeto Maven"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Primeiro, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "This command generates a project, importing the extensions for Quarkus REST (formerly RESTEasy Reactive)/Jakarta REST and SmallRye Fault Tolerance."
msgstr "Esse comando gera um projeto, importando as extensões do Quarkus REST (antigo RESTEasy Reactive)/Jakarta REST e SmallRye Fault Tolerance."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-fault-tolerance` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "Se já tiver o projeto Quarkus configurado, o senhor pode adicionar a extensão `smallrye-fault-tolerance` ao projeto executando o seguinte comando no diretório base do projeto:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
msgid "This will add the following to your build file:"
msgstr "Isto irá adicionar o seguinte trecho no seu arquivo de build:"

#. type: Block title
#: _guides/smallrye-fault-tolerance.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/smallrye-fault-tolerance.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Preparing an Application: REST Endpoint and CDI Bean"
msgstr "Preparando um aplicativo: Ponto de extremidade REST e CDI Bean"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"In this section we create a skeleton of our application, so that we have something that we can extend and to which\n"
"we can add fault tolerance features later on."
msgstr "Nesta seção, criamos um esqueleto do nosso aplicativo, para que tenhamos algo que possamos estender e ao qual possamos adicionar recursos de tolerância a falhas posteriormente."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "First, create a simple entity representing a coffee sample in our store:"
msgstr "Primeiro, crie uma entidade simples que represente uma amostra de café em nossa loja:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Let's continue with a simple CDI bean, that would work as a repository of our coffee samples."
msgstr "Vamos continuar com um grão CDI simples, que funcionaria como um repositório de nossas amostras de café."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Finally, create the `org.acme.microprofile.faulttolerance.CoffeeResource` class as follows:"
msgstr "Por fim, crie a classe `org.acme.microprofile.faulttolerance.CoffeeResource` da seguinte forma:"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"At this point, we expose a single REST method that will show a list of coffee samples in a JSON format. Note\n"
"that we introduced some fault making code in our `CoffeeResource#maybeFail()` method, which is going to cause failures\n"
"in the `CoffeeResource#coffees()` endpoint method in about 50 % of requests."
msgstr "Neste ponto, expomos um único método REST que mostrará uma lista de amostras de café em um formato JSON. Observe que introduzimos algum código de criação de falhas em nosso método `CoffeeResource#maybeFail()` , o que causará falhas no método de endpoint `CoffeeResource#coffees()` em cerca de 50% das solicitações."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Why not check that our application works? Run the Quarkus development server with:"
msgstr "Por que não verificar se o nosso aplicativo funciona? Execute o servidor de desenvolvimento do Quarkus com:"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"and open `http://localhost:8080/coffee` in your browser. Make a couple of requests (remember, some of them are expected\n"
"to fail). At least some requests should show us the list of our coffee samples in JSON, the rest will fail\n"
"with a `RuntimeException` thrown in `CoffeeResource#maybeFail()`."
msgstr "e abra `http://localhost:8080/coffee` em seu navegador. Faça algumas solicitações (lembre-se, espera-se que algumas delas falhem). Pelo menos algumas solicitações devem nos mostrar a lista de nossas amostras de café em JSON, as demais falharão com um `RuntimeException` lançado em `CoffeeResource#maybeFail()` ."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Congratulations, you've just made a working (although somewhat unreliable) Quarkus application!"
msgstr "Parabéns, o senhor acabou de criar um aplicativo Quarkus funcional (embora um pouco não confiável)!"

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Adding Resiliency: Retries"
msgstr "Adicionando resiliência: Novas tentativas"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Let the Quarkus development server running and in your IDE add the `@Retry` annotation to the `CoffeeResource#coffees()`\n"
"method as follows and save the file:"
msgstr "Deixe o servidor de desenvolvimento Quarkus em execução e, no seu IDE, adicione a anotação `@Retry` ao método `CoffeeResource#coffees()` da seguinte forma e salve o arquivo:"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Hit refresh in your browser. The Quarkus development server will automatically detect the changes\n"
"and recompile the app for you, so there's no need to restart it."
msgstr "Clique em atualizar no navegador. O servidor de desenvolvimento do Quarkus detectará automaticamente as alterações e recompilará o aplicativo para o senhor, portanto, não há necessidade de reiniciá-lo."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"You can hit refresh couple more times. Practically all requests should now be succeeding. The `CoffeeResource#coffees()`\n"
"method is still in fact failing in about 50 % of time, but every time it happens, the platform will automatically retry\n"
"the call!"
msgstr "O senhor pode clicar em atualizar mais algumas vezes. Praticamente todas as solicitações devem estar sendo bem-sucedidas. O método `CoffeeResource#coffees()` ainda está falhando em cerca de 50% das vezes, mas toda vez que isso acontecer, a plataforma tentará novamente a chamada automaticamente!"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"To see that the failures still happen, check the output of the development server. The log messages should be\n"
"similar to these:"
msgstr "Para ver se as falhas ainda ocorrem, verifique a saída do servidor de desenvolvimento. As mensagens de registro devem ser semelhantes a estas:"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"You can see that every time an invocation fails, it's immediately followed by another invocation, until one succeeds.\n"
"Since we allowed 4 retries, it would require 5 invocations to fail in a row, in order for the user to be actually exposed\n"
"to a failure. Which is fairly unlikely to happen."
msgstr "O senhor pode ver que toda vez que uma invocação falha, ela é imediatamente seguida por outra invocação, até que uma seja bem-sucedida. Como permitimos 4 novas tentativas, seria necessário que 5 invocações falhassem em sequência para que o usuário fosse realmente exposto a uma falha. O que é bastante improvável de acontecer."

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Adding Resiliency: Timeouts"
msgstr "Adicionando resiliência: Timeouts"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "So what else have we got in MicroProfile Fault Tolerance? Let's look into timeouts."
msgstr "Então, o que mais temos no MicroProfile Fault Tolerance? Vamos dar uma olhada nos tempos limite."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Add following two methods to our `CoffeeResource` endpoint. Again, no need to restart the server, just paste the code\n"
"and save the file."
msgstr "Adicione os dois métodos a seguir ao nosso endpoint `CoffeeResource` . Novamente, não é necessário reiniciar o servidor, basta colar o código e salvar o arquivo."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"We added some new functionality. We want to be able to recommend some related coffees based on a coffee that a user\n"
"is currently looking at. It's not a critical functionality, it's a nice-to-have. When the system is overloaded and the\n"
"logic behind obtaining recommendations takes too long to execute, we would rather time out and render the UI without\n"
"recommendations."
msgstr "Adicionamos algumas novas funcionalidades. Queremos poder recomendar alguns cafés relacionados com base em um café que o usuário esteja vendo no momento. Não se trata de uma funcionalidade essencial, mas sim de uma funcionalidade agradável de se ter. Quando o sistema está sobrecarregado e a lógica por trás da obtenção de recomendações leva muito tempo para ser executada, preferimos dar um tempo e renderizar a interface do usuário sem recomendações."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Note that the timeout was configured to 250 ms, and a random artificial delay between 0 and 500 ms was introduced\n"
"into the `CoffeeResource#recommendations()` method."
msgstr "Observe que o tempo limite foi configurado para 250 ms, e um atraso artificial aleatório entre 0 e 500 ms foi introduzido no método `CoffeeResource#recommendations()` ."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "In your browser, go to `http://localhost:8080/coffee/2/recommendations` and hit refresh a couple of times."
msgstr "Em seu navegador, vá para `http://localhost:8080/coffee/2/recommendations` e pressione atualizar algumas vezes."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"You should see some requests time out with `org.eclipse.microprofile.faulttolerance.exceptions.TimeoutException`.\n"
"Requests that do not time out should show two recommended coffee samples in JSON."
msgstr "O senhor deve ver algumas solicitações expirarem com `org.eclipse.microprofile.faulttolerance.exceptions.TimeoutException` . As solicitações que não atingem o tempo limite devem mostrar duas amostras de café recomendadas em JSON."

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Adding Resiliency: Fallbacks"
msgstr "Adicionando resiliência: Recursos alternativos"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Let's make our recommendations feature even better by providing a fallback (and presumably faster) way of getting related\n"
"coffees."
msgstr "Vamos tornar nosso recurso de recomendações ainda melhor, oferecendo uma maneira alternativa (e presumivelmente mais rápida) de obter cafés relacionados."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Add a fallback method to `CoffeeResource` and a `@Fallback` annotation to `CoffeeResource#recommendations()` method\n"
"as follows:"
msgstr "Adicione um método de fallback a `CoffeeResource` e uma anotação `@Fallback` ao método `CoffeeResource#recommendations()` da seguinte forma:"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Hit refresh several times on `http://localhost:8080/coffee/2/recommendations`.\n"
"The `TimeoutException` should not appear anymore. Instead, in case of a timeout, the page will\n"
"display a single recommendation that we hardcoded in our fallback method `fallbackRecommendations()`, rather than\n"
"two recommendations returned by the original method."
msgstr "Pressione atualizar várias vezes no `http://localhost:8080/coffee/2/recommendations` . O endereço `TimeoutException` não deve mais aparecer. Em vez disso, no caso de um tempo limite, a página exibirá uma única recomendação que codificamos em nosso método de fallback `fallbackRecommendations()` , em vez de duas recomendações retornadas pelo método original."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Check the server output to see that fallback is really happening:"
msgstr "Verifique a saída do servidor para ver se o fallback está realmente acontecendo:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "The fallback method is required to have the same parameters as the original method."
msgstr "O método de fallback deve ter os mesmos parâmetros que o método original."

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Adding Resiliency: Circuit Breaker"
msgstr "Adicionando resiliência: Disjuntor"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"A circuit breaker is useful for limiting number of failures happening in the system, when part of the system becomes\n"
"temporarily unstable. The circuit breaker records successful and failed invocations of a method, and when the ratio\n"
"of failed invocations reaches the specified threshold, the circuit breaker _opens_ and blocks all further invocations\n"
"of that method for a given time."
msgstr "Um disjuntor é útil para limitar o número de falhas que ocorrem no sistema, quando parte do sistema se torna temporariamente instável. O disjuntor registra as invocações bem-sucedidas e fracassadas de um método e, quando a proporção de invocações fracassadas atinge o limite especificado, o disjuntor _se abre_ e bloqueia todas as outras invocações desse método por um determinado período."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Add the following code into the `CoffeeRepositoryService` bean, so that we can demonstrate a circuit breaker in action:"
msgstr "Adicione o seguinte código ao bean `CoffeeRepositoryService` para que possamos demonstrar um disjuntor em ação:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "And inject the code below into the `CoffeeResource` endpoint:"
msgstr "E injetar o código abaixo no endpoint `CoffeeResource` :"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"We added another functionality - the application can return the amount of remaining packages of given coffee on our store\n"
"(just a random number)."
msgstr "Adicionamos outra funcionalidade: o aplicativo pode retornar a quantidade de pacotes restantes de determinado café em nossa loja (apenas um número aleatório)."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"This time an artificial failure was introduced in the CDI bean: the `CoffeeRepositoryService#getAvailability()` method is\n"
"going to alternate between two successful and two failed invocations."
msgstr "Desta vez, foi introduzida uma falha artificial no bean do CDI: o método `CoffeeRepositoryService#getAvailability()` alternará entre duas invocações bem-sucedidas e duas com falha."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"We also added a `@CircuitBreaker` annotation with `requestVolumeThreshold = 4`. `CircuitBreaker.failureRatio` is\n"
"by default 0.5, and `CircuitBreaker.delay` is by default 5 seconds. That means that a circuit breaker will open\n"
"when 2 of the last 4 invocations failed, and it will stay open for 5 seconds."
msgstr "Também adicionamos uma anotação `@CircuitBreaker` com `requestVolumeThreshold = 4` . `CircuitBreaker.failureRatio` é, por padrão, 0,5 e `CircuitBreaker.delay` é, por padrão, 5 segundos. Isso significa que um disjuntor será aberto quando 2 das últimas 4 invocações falharem, e permanecerá aberto por 5 segundos."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "To test this out, do the following:"
msgstr "Para testar isso, faça o seguinte:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Go to `http://localhost:8080/coffee/2/availability` in your browser. You should see a number being returned."
msgstr "Ir para `http://localhost:8080/coffee/2/availability` em seu navegador. O senhor deve ver um número sendo retornado."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Hit refresh, this second request should again be successful and return a number."
msgstr "Pressione refresh; essa segunda solicitação deverá ser bem-sucedida novamente e retornar um número."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Refresh two more times. Both times you should see text \"RuntimeException: Service failed.\", which is the exception\n"
"thrown by `CoffeeRepositoryService#getAvailability()`."
msgstr "Atualize mais duas vezes. Nas duas vezes, o senhor verá o texto \"RuntimeException: Service failed.\", que é a exceção lançada pelo site `CoffeeRepositoryService#getAvailability()` ."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Refresh a couple more times. Unless you waited too long, you should again see exception, but this time it's\n"
"\"CircuitBreakerOpenException: getAvailability\". This exception indicates that the circuit breaker opened\n"
"and the `CoffeeRepositoryService#getAvailability()` method is not being called anymore."
msgstr "Atualize mais algumas vezes. A menos que o senhor tenha esperado demais, deverá ver novamente a exceção, mas desta vez é \"CircuitBreakerOpenException: getAvailability\". Essa exceção indica que o disjuntor foi aberto e o método `CoffeeRepositoryService#getAvailability()` não está mais sendo chamado."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Give it 5 seconds during which circuit breaker should close, and you should be able to make two successful requests\n"
"again."
msgstr "Aguarde 5 segundos, durante os quais o disjuntor deve fechar, e o senhor poderá fazer duas solicitações bem-sucedidas novamente."

#: _guides/smallrye-fault-tolerance.adoc
msgid "Adding Resiliency: Rate Limits"
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "This is an additional feature of https://github.com/smallrye/smallrye-fault-tolerance/[SmallRye Fault Tolerance] and is not specified by MicroProfile Fault Tolerance."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "It is possible to prevent an operation from being executed too often using a _rate limit_. Rate limits enforce a maximum number of permitted invocations in a time window of some length. For example, with a rate limit, one can make sure that a method may only be called 50 times per minute. Invocations that would exceed the limit are rejected with an exception of type `RateLimitException`."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "Additionally, it is possible to define minimum spacing between invocations. For example, with a minimum spacing of 1 second, if a second invocation happens 500 millis after the first, it is rejected even if the limit would not be exceeded yet."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "Rate limit is superficially similar to a bulkhead (concurrency limit), but is in fact quite different. Bulkhead limits the number of executions happening concurrently at any point in time. Rate limit limits the number of executions in a time window of some length, without considering concurrency."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "Rate limits need to maintain some state between invocations: the number of recent invocations, the time stamp of last invocation, and so on. This state is a singleton, irrespective of the lifecycle of the bean that uses the `@RateLimit` annotation."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "More specifically, the rate limit state is uniquely identified by the combination of the bean class (`java.lang.Class`) and the method object (`java.lang.reflect.Method`) representing the guarded method."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "Let the Quarkus development mode run and in your IDE add the `@RateLimit` annotation to the `CoffeeResource#coffees()` method as follows and save the file:"
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "Hit refresh in your browser. The Quarkus development server will automatically detect the changes and recompile the app for you, so there’s no need to restart it."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "You can hit refresh a couple more times. After 2 requests within a 10 second interval you should start seeing errors in the logs, similar to these:"
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "If `@Fallback` is used with `@RateLimit`, the fallback method or handler may be invoked if a `RateLimitException` is thrown, depending on the fallback configuration."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "If `@Retry` is used with `@RateLimit`, each retry attempt is processed by the rate limit as an independent invocation. If `RateLimitException` is thrown, the execution may be retried, depending on how the retry is configured."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "If `@CircuitBreaker` is used with `@RateLimit`, the circuit breaker is checked before enforcing the rate limit. If rate limiting results in `RateLimitException`, this may be counted as a failure, depending on how the circuit breaker is configured."
msgstr ""

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Runtime configuration"
msgstr "Configuração do tempo de execução"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "You can override the annotations parameters at runtime inside your `application.properties` file."
msgstr "O senhor pode substituir os parâmetros de anotações em tempo de execução no arquivo `application.properties` ."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "If we take the retry example that we already saw:"
msgstr "Se pegarmos o exemplo de nova tentativa que já vimos:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "We can override the `maxRetries` parameter with 6 retries instead of 4 by the following configuration item:"
msgstr "Podemos substituir o parâmetro `maxRetries` por 6 tentativas em vez de 4 com o seguinte item de configuração:"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"The format is `fully-qualified-class-name/method-name/annotation-name/property-name=value`.\n"
"You can also configure a property for all the annotation via `annotation-name/property-name=value`."
msgstr "O formato é `fully-qualified-class-name/method-name/annotation-name/property-name=value` . O senhor também pode configurar uma propriedade para todas as anotações via `annotation-name/property-name=value` ."

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"SmallRye Fault Tolerance allows to improve resiliency of your application, without having an impact on the complexity\n"
"of our business logic."
msgstr "O SmallRye Fault Tolerance permite melhorar a resiliência de seu aplicativo, sem afetar a complexidade de sua lógica de negócios."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "All that is needed to enable the fault tolerance features in Quarkus is:"
msgstr "Tudo o que é necessário para ativar os recursos de tolerância a falhas no Quarkus é:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "adding the `smallrye-fault-tolerance` Quarkus extension to your project using the `quarkus-maven-plugin`:"
msgstr "Adicionando a extensão `smallrye-fault-tolerance` do Quarkus ao seu projeto usando o `quarkus-maven-plugin` :"

#: _guides/smallrye-fault-tolerance.adoc
msgid "CLI"
msgstr "CLI"

#: _guides/smallrye-fault-tolerance.adoc
msgid "Maven"
msgstr "Maven"

#: _guides/smallrye-fault-tolerance.adoc
msgid "Gradle"
msgstr "Gradle"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "or simply adding the following Maven dependency:"
msgstr "ou simplesmente adicionando a seguinte dependência do Maven:"

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Additional resources"
msgstr "Recursos adicionais"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"SmallRye Fault Tolerance has more features than shown here.\n"
"Please check the link:https://smallrye.io/docs/smallrye-fault-tolerance/6.3.0/index.html[SmallRye Fault Tolerance documentation] to learn about them."
msgstr "O SmallRye Fault Tolerance tem mais recursos do que os mostrados aqui. Consulte a link:https://smallrye.io/docs/smallrye-fault-tolerance/6.3.0/index.html[documentação do SmallRye Fault Tolerance] para saber mais sobre eles."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "In Quarkus, you can use the SmallRye Fault Tolerance optional features out of the box."
msgstr "No Quarkus, o senhor pode usar os recursos opcionais do SmallRye Fault Tolerance imediatamente."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Support for Mutiny is present, so your asynchronous methods can return `Uni` in addition to `CompletionStage`."
msgstr "O suporte ao Mutiny está presente, portanto, seus métodos assíncronos podem retornar `Uni` além de `CompletionStage` ."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "MicroProfile Context Propagation is integrated with Fault Tolerance, so existing contexts are automatically propagated to your asynchronous methods."
msgstr "A propagação de contexto do MicroProfile é integrada à tolerância a falhas, de modo que os contextos existentes são propagados automaticamente para os métodos assíncronos."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"This also applies to the CDI request context: if it is active on the original thread, it is propagated to the new thread, but if it's not, then the new thread won't have it either.\n"
"This is contrary to MicroProfile Fault Tolerance specification, which states that the request context must be active during the `@Asynchronous` method invocation."
msgstr "Isso também se aplica ao contexto de solicitação de CDI: se estiver ativo no thread original, ele será propagado para o novo thread, mas se não estiver, o novo thread também não o terá. Isso é contrário à especificação MicroProfile Fault Tolerance, que afirma que o contexto da solicitação deve estar ativo durante a invocação do método `@Asynchronous` ."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"We believe that in presence of MicroProfile Context Propagation, this requirement should not apply.\n"
"The entire point of context propagation is to make sure the new thread has the same contexts as the original thread."
msgstr "Acreditamos que, na presença da propagação de contexto de microperfil, esse requisito não deve se aplicar. O objetivo da propagação de contexto é garantir que o novo thread tenha os mesmos contextos que o thread original."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Non-compatible mode is enabled by default.\n"
"This means that methods that return `CompletionStage` (or `Uni`) have asynchronous fault tolerance applied without any `@Asynchronous`, `@AsynchronousNonBlocking`, `@Blocking` or `@NonBlocking` annotation.\n"
"It also means that circuit breaker, fallback and retry automatically inspect the exception cause chain if the exception itself is insufficient to decide what should happen."
msgstr "O modo não compatível é ativado por padrão. Isso significa que os métodos que retornam `CompletionStage` (ou `Uni` ) têm tolerância assíncrona a falhas aplicada sem qualquer anotação `@Asynchronous` , `@AsynchronousNonBlocking` , `@Blocking` ou `@NonBlocking` . Isso também significa que o circuit breaker, o fallback e o retry inspecionam automaticamente a cadeia de causas da exceção se a própria exceção for insuficiente para decidir o que deve acontecer."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"This mode is not compatible with the MicroProfile Fault Tolerance specification, albeit the incompatibility is very small.\n"
"To restore full compatibility, add this configuration property:"
msgstr "Esse modo não é compatível com a especificação MicroProfile Fault Tolerance, embora a incompatibilidade seja muito pequena. Para restaurar a compatibilidade total, adicione essa propriedade de configuração:"

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"The link:https://smallrye.io/docs/smallrye-fault-tolerance/6.3.0/reference/programmatic-api.html[programmatic API] is present, including Mutiny support, and integrated with the declarative, annotation-based API.\n"
"You can use the `FaultTolerance` and `MutinyFaultTolerance` APIs out of the box."
msgstr "A link:https://smallrye.io/docs/smallrye-fault-tolerance/6.3.0/reference/programmatic-api.html[API programática] está presente, incluindo o suporte ao Mutiny, e integrada à API declarativa e baseada em anotações. O senhor pode usar as APIs `FaultTolerance` e `MutinyFaultTolerance` imediatamente."

#. type: delimited block =
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Support for Kotlin is present (assuming you use the Quarkus extension for Kotlin), so you can guard your `suspend` functions with fault tolerance annotations."
msgstr "O suporte para Kotlin está presente (supondo que o senhor use a extensão Quarkus para Kotlin), portanto, é possível proteger suas funções `suspend` com anotações de tolerância a falhas."

#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid ""
"Metrics are automatically discovered and integrated.\n"
"If your application uses the Quarkus extension for Micrometer, SmallRye Fault Tolerance will emit metrics to Micrometer.\n"
"If your application uses the Quarkus extension for SmallRye Metrics, SmallRye Fault Tolerance will emit metrics to MicroProfile Metrics.\n"
"Otherwise, SmallRye Fault Tolerance metrics will be disabled."
msgstr "As métricas são descobertas e integradas automaticamente. Se o seu aplicativo usar a extensão Quarkus para Micrometer, o SmallRye Fault Tolerance emitirá métricas para o Micrometer. Se o seu aplicativo usar a extensão Quarkus para o SmallRye Metrics, o SmallRye Fault Tolerance emitirá métricas para o MicroProfile Metrics. Caso contrário, as métricas do SmallRye Fault Tolerance serão desativadas."
