# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "SmallRye Fault Tolerance"
msgstr "Tolerância a falhas SmallRye"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"One of the challenges brought by the distributed nature of microservices is that communication with external systems is\n"
"inherently unreliable. This increases demand on resiliency of applications. To simplify making more resilient\n"
"applications, Quarkus provides https://github.com/smallrye/smallrye-fault-tolerance/[SmallRye Fault Tolerance], an\n"
"implementation of the https://github.com/eclipse/microprofile-fault-tolerance/[MicroProfile Fault Tolerance]\n"
"specification."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"In this guide, we demonstrate usage of MicroProfile Fault Tolerance annotations such as `@Timeout`, `@Fallback`,\n"
"`@Retry` and `@CircuitBreaker`."
msgstr ""

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "The Scenario"
msgstr "O cenário"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"The application built in this guide simulates a simple backend for a gourmet coffee e-shop. It implements a REST\n"
"endpoint providing information about coffee samples we have on store."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Let's imagine, although it's not implemented as such, that some methods in our endpoint require communication\n"
"to external services like a database or an external microservice, which introduces a factor of unreliability."
msgstr ""

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "The solution is located in the `microprofile-fault-tolerance-quickstart` link:{quickstarts-tree-url}/microprofile-fault-tolerance-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/microprofile-fault-tolerance-quickstart[diretório] `microprofile-fault-tolerance-quickstart`."

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Primeiro, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "This command generates a project, importing the extensions for RESTEasy Reactive/Jakarta REST and SmallRye Fault Tolerance."
msgstr "Este comando gera um projeto, importando as extensões para RESTEasy Reactive/Jakarta REST e SmallRye Fault Tolerance."

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-fault-tolerance` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Isto irá adicionar o seguinte ao seu ficheiro de compilação:"

#. type: Block title
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Preparing an Application: REST Endpoint and CDI Bean"
msgstr "Preparar uma aplicação: Ponto de extremidade REST e Bean CDI"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"In this section we create a skeleton of our application, so that we have something that we can extend and to which\n"
"we can add fault tolerance features later on."
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "First, create a simple entity representing a coffee sample in our store:"
msgstr "Primeiro, crie uma entidade simples que represente uma amostra de café na nossa loja:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Let's continue with a simple CDI bean, that would work as a repository of our coffee samples."
msgstr "Vamos continuar com um simples grão CDI, que funcionaria como um repositório das nossas amostras de café."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Finally, create the `org.acme.microprofile.faulttolerance.CoffeeResource` class as follows:"
msgstr "Por fim, crie a classe `org.acme.microprofile.faulttolerance.CoffeeResource` da seguinte forma:"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"At this point, we expose a single REST method that will show a list of coffee samples in a JSON format. Note\n"
"that we introduced some fault making code in our `CoffeeResource#maybeFail()` method, which is going to cause failures\n"
"in the `CoffeeResource#coffees()` endpoint method in about 50 % of requests."
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Why not check that our application works? Run the Quarkus development server with:"
msgstr "Porque não verificar se a nossa aplicação funciona? Execute o servidor de desenvolvimento Quarkus com:"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"and open `http://localhost:8080/coffee` in your browser. Make a couple of requests (remember, some of them are expected\n"
"to fail). At least some requests should show us the list of our coffee samples in JSON, the rest will fail\n"
"with a `RuntimeException` thrown in `CoffeeResource#maybeFail()`."
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Congratulations, you've just made a working (although somewhat unreliable) Quarkus application!"
msgstr "Parabéns, acabaste de criar uma aplicação Quarkus funcional (embora pouco fiável)!"

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Adding Resiliency: Retries"
msgstr "Adicionando resiliência: Novas tentativas"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Let the Quarkus development server running and in your IDE add the `@Retry` annotation to the `CoffeeResource#coffees()`\n"
"method as follows and save the file:"
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Hit refresh in your browser. The Quarkus development server will automatically detect the changes\n"
"and recompile the app for you, so there's no need to restart it."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"You can hit refresh couple more times. Practically all requests should now be succeeding. The `CoffeeResource#coffees()`\n"
"method is still in fact failing in about 50 % of time, but every time it happens, the platform will automatically retry\n"
"the call!"
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"To see that the failures still happen, check the output of the development server. The log messages should be\n"
"similar to these:"
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"You can see that every time an invocation fails, it's immediately followed by another invocation, until one succeeds.\n"
"Since we allowed 4 retries, it would require 5 invocations to fail in a row, in order for the user to be actually exposed\n"
"to a failure. Which is fairly unlikely to happen."
msgstr ""

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Adding Resiliency: Timeouts"
msgstr "Adicionar resiliência: Intervalos de tempo"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "So what else have we got in MicroProfile Fault Tolerance? Let's look into timeouts."
msgstr "Então, o que mais temos no MicroProfile Fault Tolerance? Vejamos os tempos limite."

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Add following two methods to our `CoffeeResource` endpoint. Again, no need to restart the server, just paste the code\n"
"and save the file."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"We added some new functionality. We want to be able to recommend some related coffees based on a coffee that a user\n"
"is currently looking at. It's not a critical functionality, it's a nice-to-have. When the system is overloaded and the\n"
"logic behind obtaining recommendations takes too long to execute, we would rather time out and render the UI without\n"
"recommendations."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Note that the timeout was configured to 250 ms, and a random artificial delay between 0 and 500 ms was introduced\n"
"into the `CoffeeResource#recommendations()` method."
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "In your browser, go to `http://localhost:8080/coffee/2/recommendations` and hit refresh a couple of times."
msgstr "No seu browser, aceda a `&lt;a href=\"http://localhost:8080/coffee/2/recommendations\" class=\"bare\"&gt;http://localhost:8080/coffee/2/recommendations&lt;/a&gt;` e carregue em atualizar algumas vezes."

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"You should see some requests time out with `org.eclipse.microprofile.faulttolerance.exceptions.TimeoutException`.\n"
"Requests that do not time out should show two recommended coffee samples in JSON."
msgstr ""

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Adding Resiliency: Fallbacks"
msgstr "Adicionar resiliência: Alternativas"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Let's make our recommendations feature even better by providing a fallback (and presumably faster) way of getting related\n"
"coffees."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Add a fallback method to `CoffeeResource` and a `@Fallback` annotation to `CoffeeResource#recommendations()` method\n"
"as follows:"
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Hit refresh several times on `http://localhost:8080/coffee/2/recommendations`.\n"
"The `TimeoutException` should not appear anymore. Instead, in case of a timeout, the page will\n"
"display a single recommendation that we hardcoded in our fallback method `fallbackRecommendations()`, rather than\n"
"two recommendations returned by the original method."
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Check the server output to see that fallback is really happening:"
msgstr "Verifique a saída do servidor para ver se o fallback está realmente a acontecer:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "The fallback method is required to have the same parameters as the original method."
msgstr "O método de recurso tem de ter os mesmos parâmetros que o método original."

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Adding Resiliency: Circuit Breaker"
msgstr "Aumentar a resiliência: Disjuntor"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"A circuit breaker is useful for limiting number of failures happening in the system, when part of the system becomes\n"
"temporarily unstable. The circuit breaker records successful and failed invocations of a method, and when the ratio\n"
"of failed invocations reaches the specified threshold, the circuit breaker _opens_ and blocks all further invocations\n"
"of that method for a given time."
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Add the following code into the `CoffeeRepositoryService` bean, so that we can demonstrate a circuit breaker in action:"
msgstr "Adicione o seguinte código ao bean `CoffeeRepositoryService`, para que possamos demonstrar um disjuntor em ação:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "And inject the code below into the `CoffeeResource` endpoint:"
msgstr "E injetar o código abaixo no ponto final `CoffeeResource`:"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"We added another functionality - the application can return the amount of remaining packages of given coffee on our store\n"
"(just a random number)."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"This time an artificial failure was introduced in the CDI bean: the `CoffeeRepositoryService#getAvailability()` method is\n"
"going to alternate between two successful and two failed invocations."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"We also added a `@CircuitBreaker` annotation with `requestVolumeThreshold = 4`. `CircuitBreaker.failureRatio` is\n"
"by default 0.5, and `CircuitBreaker.delay` is by default 5 seconds. That means that a circuit breaker will open\n"
"when 2 of the last 4 invocations failed, and it will stay open for 5 seconds."
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "To test this out, do the following:"
msgstr "Para testar isto, faça o seguinte:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Go to `http://localhost:8080/coffee/2/availability` in your browser. You should see a number being returned."
msgstr "Ir para `&lt;a href=\"http://localhost:8080/coffee/2/availability\" class=\"bare\"&gt;http://localhost:8080/coffee/2/availability&lt;/a&gt;` no seu browser. Deverá ver um número a ser devolvido."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Hit refresh, this second request should again be successful and return a number."
msgstr "Carregue em atualizar, este segundo pedido deve ser bem sucedido e devolver um número."

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Refresh two more times. Both times you should see text \"RuntimeException: Service failed.\", which is the exception\n"
"thrown by `CoffeeRepositoryService#getAvailability()`."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Refresh a couple more times. Unless you waited too long, you should again see exception, but this time it's\n"
"\"CircuitBreakerOpenException: getAvailability\". This exception indicates that the circuit breaker opened\n"
"and the `CoffeeRepositoryService#getAvailability()` method is not being called anymore."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Give it 5 seconds during which circuit breaker should close, and you should be able to make two successful requests\n"
"again."
msgstr ""

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Runtime configuration"
msgstr "Configuração do tempo de execução"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "You can override the annotations parameters at runtime inside your `application.properties` file."
msgstr "Pode substituir os parâmetros das anotações em tempo de execução no seu ficheiro `application.properties`."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "If we take the retry example that we already saw:"
msgstr "Se pegarmos no exemplo da repetição que já vimos:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "We can override the `maxRetries` parameter with 6 retries instead of 4 by the following configuration item:"
msgstr "Podemos substituir o parâmetro `maxRetries` por 6 tentativas em vez de 4 através do seguinte item de configuração:"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"The format is `fully-qualified-class-name/method-name/annotation-name/property-name=value`.\n"
"You can also configure a property for all the annotation via `annotation-name/property-name=value`."
msgstr ""

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"SmallRye Fault Tolerance allows to improve resiliency of your application, without having an impact on the complexity\n"
"of our business logic."
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "All that is needed to enable the fault tolerance features in Quarkus is:"
msgstr "Tudo o que é necessário para ativar as funcionalidades de tolerância a falhas no Quarkus é:"

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "adding the `smallrye-fault-tolerance` Quarkus extension to your project using the `quarkus-maven-plugin`:"
msgstr "adicionar a extensão `smallrye-fault-tolerance` do Quarkus ao seu projeto utilizando o ficheiro `quarkus-maven-plugin`:"

#: _guides/smallrye-fault-tolerance.adoc
msgid "CLI"
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "Maven"
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid "Gradle"
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "or simply adding the following Maven dependency:"
msgstr "ou simplesmente adicionando a seguinte dependência Maven:"

#. type: Title ==
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy, no-wrap
msgid "Additional resources"
msgstr "Recursos adicionais"

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"SmallRye Fault Tolerance has more features than shown here.\n"
"Please check the link:https://smallrye.io/docs/smallrye-fault-tolerance/6.2.6/index.html[SmallRye Fault Tolerance documentation] to learn about them."
msgstr ""

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "In Quarkus, you can use the SmallRye Fault Tolerance optional features out of the box."
msgstr "No Quarkus, é possível usar os recursos opcionais de tolerância a falhas do SmallRye imediatamente."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Support for Mutiny is present, so your asynchronous methods can return `Uni` in addition to `CompletionStage`."
msgstr "O suporte para Mutiny está presente, pelo que os seus métodos assíncronos podem devolver `Uni` para além de `CompletionStage`."

#. type: Plain text
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "MicroProfile Context Propagation is integrated with Fault Tolerance, so existing contexts are automatically propagated to your asynchronous methods."
msgstr "A Propagação de Contexto MicroProfile está integrada na Tolerância a Falhas, pelo que os contextos existentes são automaticamente propagados para os seus métodos assíncronos."

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"This also applies to the CDI request context: if it is active on the original thread, it is propagated to the new thread, but if it's not, then the new thread won't have it either.\n"
"This is contrary to MicroProfile Fault Tolerance specification, which states that the request context must be active during the `@Asynchronous` method invocation."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"We believe that in presence of MicroProfile Context Propagation, this requirement should not apply.\n"
"The entire point of context propagation is to make sure the new thread has the same contexts as the original thread."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Non-compatible mode is enabled by default.\n"
"This means that methods that return `CompletionStage` (or `Uni`) have asynchronous fault tolerance applied without any `@Asynchronous`, `@AsynchronousNonBlocking`, `@Blocking` or `@NonBlocking` annotation.\n"
"It also means that circuit breaker, fallback and retry automatically inspect the exception cause chain if the exception itself is insufficient to decide what should happen."
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"This mode is not compatible with the MicroProfile Fault Tolerance specification, albeit the incompatibility is very small.\n"
"To restore full compatibility, add this configuration property:"
msgstr ""

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"The link:https://smallrye.io/docs/smallrye-fault-tolerance/6.2.6/reference/programmatic-api.html[programmatic API] is present, including Mutiny support, and integrated with the declarative, annotation-based API.\n"
"You can use the `FaultTolerance` and `MutinyFaultTolerance` APIs out of the box."
msgstr ""

#. type: delimited block =
#: _guides/smallrye-fault-tolerance.adoc
#, fuzzy
msgid "Support for Kotlin is present (assuming you use the Quarkus extension for Kotlin), so you can guard your `suspend` functions with fault tolerance annotations."
msgstr "O suporte para Kotlin está presente (assumindo que utiliza a extensão Quarkus para Kotlin), pelo que pode proteger as suas funções `suspend` com anotações de tolerância a falhas."

#: _guides/smallrye-fault-tolerance.adoc
msgid ""
"Metrics are automatically discovered and integrated.\n"
"If your application uses the Quarkus extension for Micrometer, SmallRye Fault Tolerance will emit metrics to Micrometer.\n"
"If your application uses the Quarkus extension for SmallRye Metrics, SmallRye Fault Tolerance will emit metrics to MicroProfile Metrics.\n"
"Otherwise, SmallRye Fault Tolerance metrics will be disabled."
msgstr ""
