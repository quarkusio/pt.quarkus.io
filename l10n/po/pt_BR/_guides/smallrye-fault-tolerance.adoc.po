# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/smallrye-fault-tolerance.adoc:6
#, fuzzy, no-wrap
msgid "SmallRye Fault Tolerance"
msgstr "Tolerância a falhas SmallRye"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:16
#, fuzzy
msgid "One of the challenges brought by the distributed nature of microservices is that communication with external systems is inherently unreliable. This increases demand on resiliency of applications. To simplify making more resilient applications, Quarkus provides https://github.com/smallrye/smallrye-fault-tolerance/[SmallRye Fault Tolerance], an implementation of the https://github.com/eclipse/microprofile-fault-tolerance/[MicroProfile Fault Tolerance] specification."
msgstr "Um dos desafios colocados pela natureza distribuída dos microsserviços é o facto de a comunicação com sistemas externos ser inerentemente pouco fiável. Isso aumenta a demanda por resiliência dos aplicativos. Para simplificar a criação de aplicações mais resilientes, o Quarkus fornece o  link:https://github.com/smallrye/smallrye-fault-tolerance/[SmallRye Fault Tolerance], uma implementação da especificação  link:https://github.com/eclipse/microprofile-fault-tolerance/[MicroProfile Fault Tolerance]."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:19
#, fuzzy
msgid "In this guide, we demonstrate usage of MicroProfile Fault Tolerance annotations such as `@Timeout`, `@Fallback`, `@Retry` and `@CircuitBreaker`."
msgstr "Neste guia, demonstramos a utilização de anotações de Tolerância a Falhas de Microperfis, tais como `@Timeout`, `@Fallback`, `@Retry` e `@CircuitBreaker`."

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:20
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:24
#, fuzzy, no-wrap
msgid "The Scenario"
msgstr "O cenário"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:28
#, fuzzy
msgid "The application built in this guide simulates a simple backend for a gourmet coffee e-shop. It implements a REST endpoint providing information about coffee samples we have on store."
msgstr "A aplicação criada neste guia simula um backend simples para uma loja eletrónica de café gourmet. Implementa um ponto de extremidade REST que fornece informações sobre amostras de café que temos na loja."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:31
#, fuzzy
msgid "Let's imagine, although it's not implemented as such, that some methods in our endpoint require communication to external services like a database or an external microservice, which introduces a factor of unreliability."
msgstr "Imaginemos, embora não esteja implementado como tal, que alguns métodos do nosso endpoint requerem comunicação com serviços externos, como uma base de dados ou um microsserviço externo, o que introduz um fator de falta de fiabilidade."

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:32
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:36
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas secções seguintes e crie a aplicação passo a passo. No entanto, pode ir diretamente para o exemplo completo."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:38
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:40
#, fuzzy
msgid "The solution is located in the `microprofile-fault-tolerance-quickstart` link:{quickstarts-tree-url}/microprofile-fault-tolerance-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/microprofile-fault-tolerance-quickstart[diretório] `microprofile-fault-tolerance-quickstart`."

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:41
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:44
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Primeiro, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:50
#, fuzzy
msgid "This command generates a project, importing the extensions for RESTEasy Reactive/Jakarta REST and SmallRye Fault Tolerance."
msgstr "Este comando gera um projeto, importando as extensões para RESTEasy Reactive/Jakarta REST e SmallRye Fault Tolerance."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:53
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `smallrye-fault-tolerance` extension to your project by running the following command in your project base directory:"
msgstr "Se já tiver o seu projeto Quarkus configurado, pode adicionar a extensão `smallrye-fault-tolerance` ao seu projeto executando o seguinte comando no diretório de base do seu projeto:"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:58
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Isto irá adicionar o seguinte ao seu ficheiro de compilação:"

#. type: Block title
#: upstream/_guides/smallrye-fault-tolerance.adoc:60
#: upstream/_guides/smallrye-fault-tolerance.adoc:486
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:66
#: upstream/_guides/smallrye-fault-tolerance.adoc:492
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-fault-tolerance</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/smallrye-fault-tolerance.adoc:69
#: upstream/_guides/smallrye-fault-tolerance.adoc:495
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:72
#: upstream/_guides/smallrye-fault-tolerance.adoc:498
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-smallrye-fault-tolerance\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:74
#, fuzzy, no-wrap
msgid "Preparing an Application: REST Endpoint and CDI Bean"
msgstr "Preparar uma aplicação: Ponto de extremidade REST e Bean CDI"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:78
#, fuzzy
msgid "In this section we create a skeleton of our application, so that we have something that we can extend and to which we can add fault tolerance features later on."
msgstr "Nesta secção, criamos um esqueleto da nossa aplicação, de modo a termos algo que possamos alargar e ao qual possamos acrescentar mais tarde funcionalidades de tolerância a falhas."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:80
#, fuzzy
msgid "First, create a simple entity representing a coffee sample in our store:"
msgstr "Primeiro, crie uma entidade simples que represente uma amostra de café na nossa loja:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:84
#: upstream/_guides/smallrye-fault-tolerance.adoc:109
#: upstream/_guides/smallrye-fault-tolerance.adoc:154
#, no-wrap
msgid "package org.acme.microprofile.faulttolerance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:86
#, no-wrap
msgid "public class Coffee {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:91
#, no-wrap
msgid ""
"    public Integer id;\n"
"    public String name;\n"
"    public String countryOfOrigin;\n"
"    public Integer price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:94
#, no-wrap
msgid ""
"    public Coffee() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:102
#, no-wrap
msgid ""
"    public Coffee(Integer id, String name, String countryOfOrigin, Integer price) {\n"
"        this.id = id;\n"
"        this.name = name;\n"
"        this.countryOfOrigin = countryOfOrigin;\n"
"        this.price = price;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:105
#, fuzzy
msgid "Let's continue with a simple CDI bean, that would work as a repository of our coffee samples."
msgstr "Vamos continuar com um simples grão CDI, que funcionaria como um repositório das nossas amostras de café."

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:117
#, no-wrap
msgid ""
"import java.util.ArrayList;\n"
"import java.util.Collections;\n"
"import java.util.HashMap;\n"
"import java.util.List;\n"
"import java.util.Map;\n"
"import java.util.stream.Collectors;\n"
"import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:120
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class CoffeeRepositoryService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:122
#, no-wrap
msgid "    private Map<Integer, Coffee> coffeeList = new HashMap<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:128
#, no-wrap
msgid ""
"    public CoffeeRepositoryService() {\n"
"        coffeeList.put(1, new Coffee(1, \"Fernandez Espresso\", \"Colombia\", 23));\n"
"        coffeeList.put(2, new Coffee(2, \"La Scala Whole Beans\", \"Bolivia\", 18));\n"
"        coffeeList.put(3, new Coffee(3, \"Dak Lak Filter\", \"Vietnam\", 25));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:132
#, no-wrap
msgid ""
"    public List<Coffee> getAllCoffees() {\n"
"        return new ArrayList<>(coffeeList.values());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:136
#, no-wrap
msgid ""
"    public Coffee getCoffeeById(Integer id) {\n"
"        return coffeeList.get(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:147
#, no-wrap
msgid ""
"    public List<Coffee> getRecommendations(Integer id) {\n"
"        if (id == null) {\n"
"            return Collections.emptyList();\n"
"        }\n"
"        return coffeeList.values().stream()\n"
"                .filter(coffee -> !id.equals(coffee.id))\n"
"                .limit(2)\n"
"                .collect(Collectors.toList());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:150
#, fuzzy
msgid "Finally, create the `org.acme.microprofile.faulttolerance.CoffeeResource` class as follows:"
msgstr "Por fim, crie a classe `org.acme.microprofile.faulttolerance.CoffeeResource` da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:161
#, no-wrap
msgid ""
"import java.util.List;\n"
"import java.util.Random;\n"
"import java.util.concurrent.atomic.AtomicLong;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:163
#, no-wrap
msgid "import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:166
#, no-wrap
msgid ""
"@Path(\"/coffee\")\n"
"public class CoffeeResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:168
#, no-wrap
msgid "    private static final Logger LOGGER = Logger.getLogger(CoffeeResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:171
#, no-wrap
msgid ""
"    @Inject\n"
"    CoffeeRepositoryService coffeeRepository;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:173
#: upstream/_guides/smallrye-fault-tolerance.adoc:366
#, no-wrap
msgid "    private AtomicLong counter = new AtomicLong(0);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:177
#, no-wrap
msgid ""
"    @GET\n"
"    public List<Coffee> coffees() {\n"
"        final Long invocationNumber = counter.getAndIncrement();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:179
#, no-wrap
msgid "        maybeFail(String.format(\"CoffeeResource#coffees() invocation #%d failed\", invocationNumber));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:183
#, no-wrap
msgid ""
"        LOGGER.infof(\"CoffeeResource#coffees() invocation #%d returning successfully\", invocationNumber);\n"
"        return coffeeRepository.getAllCoffees();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:191
#, no-wrap
msgid ""
"    private void maybeFail(String failureLogMessage) {\n"
"        if (new Random().nextBoolean()) {\n"
"            LOGGER.error(failureLogMessage);\n"
"            throw new RuntimeException(\"Resource failure.\");\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:196
#, fuzzy
msgid "At this point, we expose a single REST method that will show a list of coffee samples in a JSON format. Note that we introduced some fault making code in our `CoffeeResource#maybeFail()` method, which is going to cause failures in the `CoffeeResource#coffees()` endpoint method in about 50 % of requests."
msgstr "Nesta altura, expomos um único método REST que mostrará uma lista de amostras de café num formato JSON. Note-se que introduzimos algum código de criação de falhas no nosso método `CoffeeResource#maybeFail()`, que vai causar falhas no método do ponto de extremidade `CoffeeResource#coffees()` em cerca de 50% dos pedidos."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:198
#, fuzzy
msgid "Why not check that our application works? Run the Quarkus development server with:"
msgstr "Porque não verificar se a nossa aplicação funciona? Execute o servidor de desenvolvimento Quarkus com:"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:204
#, fuzzy
msgid "and open `http://localhost:8080/coffee` in your browser. Make a couple of requests (remember, some of them are expected to fail). At least some requests should show us the list of our coffee samples in JSON, the rest will fail with a `RuntimeException` thrown in `CoffeeResource#maybeFail()`."
msgstr "e abrir `&lt;a href=\"http://localhost:8080/coffee\" class=\"bare\"&gt;http://localhost:8080/coffee&lt;/a&gt;` no seu browser. Faça alguns pedidos (lembre-se de que alguns deles devem falhar). Pelo menos alguns pedidos devem mostrar-nos a lista das nossas amostras de café em JSON, os restantes falharão com um `RuntimeException` lançado em `CoffeeResource#maybeFail()`."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:206
#, fuzzy
msgid "Congratulations, you've just made a working (although somewhat unreliable) Quarkus application!"
msgstr "Parabéns, acabaste de criar uma aplicação Quarkus funcional (embora pouco fiável)!"

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:207
#, fuzzy, no-wrap
msgid "Adding Resiliency: Retries"
msgstr "Adicionando resiliência: Novas tentativas"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:211
#, fuzzy
msgid "Let the Quarkus development server running and in your IDE add the `@Retry` annotation to the `CoffeeResource#coffees()` method as follows and save the file:"
msgstr "Deixe o servidor de desenvolvimento Quarkus a funcionar e, no seu IDE, adicione a anotação `@Retry` ao método `CoffeeResource#coffees()` da seguinte forma e guarde o ficheiro:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:216
#: upstream/_guides/smallrye-fault-tolerance.adoc:451
#, no-wrap
msgid ""
"import org.eclipse.microprofile.faulttolerance.Retry;\n"
"...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:226
#: upstream/_guides/smallrye-fault-tolerance.adoc:461
#, no-wrap
msgid ""
"public class CoffeeResource {\n"
"    ...\n"
"    @GET\n"
"    @Retry(maxRetries = 4)\n"
"    public List<Coffee> coffees() {\n"
"        ...\n"
"    }\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:230
#, fuzzy
msgid "Hit refresh in your browser. The Quarkus development server will automatically detect the changes and recompile the app for you, so there's no need to restart it."
msgstr "Carregue em atualizar no seu browser. O servidor de desenvolvimento Quarkus detectará automaticamente as alterações e recompilará a aplicação por si, pelo que não é necessário reiniciá-la."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:234
#, fuzzy
msgid "You can hit refresh couple more times. Practically all requests should now be succeeding. The `CoffeeResource#coffees()` method is still in fact failing in about 50 % of time, but every time it happens, the platform will automatically retry the call!"
msgstr "Pode carregar em atualizar mais algumas vezes. Praticamente todos os pedidos devem agora estar a ser bem sucedidos. O método `CoffeeResource#coffees()` ainda está, de facto, a falhar em cerca de 50% das vezes, mas sempre que isso acontece, a plataforma repete automaticamente a chamada!"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:237
#, fuzzy
msgid "To see that the failures still happen, check the output of the development server. The log messages should be similar to these:"
msgstr "Para verificar se as falhas ainda ocorrem, verifique a saída do servidor de desenvolvimento. As mensagens de registo devem ser semelhantes a estas:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:245
#, no-wrap
msgid ""
"2019-03-06 12:17:41,725 INFO  [org.acm.fau.CoffeeResource] (XNIO-1 task-1) CoffeeResource#coffees() invocation #5 returning successfully\n"
"2019-03-06 12:17:44,187 INFO  [org.acm.fau.CoffeeResource] (XNIO-1 task-1) CoffeeResource#coffees() invocation #6 returning successfully\n"
"2019-03-06 12:17:45,166 ERROR [org.acm.fau.CoffeeResource] (XNIO-1 task-1) CoffeeResource#coffees() invocation #7 failed\n"
"2019-03-06 12:17:45,172 ERROR [org.acm.fau.CoffeeResource] (XNIO-1 task-1) CoffeeResource#coffees() invocation #8 failed\n"
"2019-03-06 12:17:45,176 INFO  [org.acm.fau.CoffeeResource] (XNIO-1 task-1) CoffeeResource#coffees() invocation #9 returning successfully\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:250
#, fuzzy
msgid "You can see that every time an invocation fails, it's immediately followed by another invocation, until one succeeds.  Since we allowed 4 retries, it would require 5 invocations to fail in a row, in order for the user to be actually exposed to a failure. Which is fairly unlikely to happen."
msgstr "Pode ver que sempre que uma invocação falha, é imediatamente seguida por outra invocação, até que uma seja bem sucedida. Uma vez que permitimos 4 novas tentativas, seria necessário que 5 invocações falhassem de seguida, para que o utilizador fosse realmente exposto a uma falha. O que é bastante improvável de acontecer."

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:251
#, fuzzy, no-wrap
msgid "Adding Resiliency: Timeouts"
msgstr "Adicionar resiliência: Intervalos de tempo"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:254
#, fuzzy
msgid "So what else have we got in MicroProfile Fault Tolerance? Let's look into timeouts."
msgstr "Então, o que mais temos no MicroProfile Fault Tolerance? Vejamos os tempos limite."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:257
#, fuzzy
msgid "Add following two methods to our `CoffeeResource` endpoint. Again, no need to restart the server, just paste the code and save the file."
msgstr "Adicione os dois métodos a seguir ao nosso ponto de extremidade `CoffeeResource`. Mais uma vez, não é necessário reiniciar o servidor, basta colar o código e guardar o ficheiro."

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:270
#, no-wrap
msgid ""
"import org.eclipse.microprofile.faulttolerance.Timeout;\n"
"...\n"
"public class CoffeeResource {\n"
"    ...\n"
"    @GET\n"
"    @Path(\"/{id}/recommendations\")\n"
"    @Timeout(250)\n"
"    public List<Coffee> recommendations(int id) {\n"
"        long started = System.currentTimeMillis();\n"
"        final long invocationNumber = counter.getAndIncrement();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:281
#, no-wrap
msgid ""
"        try {\n"
"            randomDelay();\n"
"            LOGGER.infof(\"CoffeeResource#recommendations() invocation #%d returning successfully\", invocationNumber);\n"
"            return coffeeRepository.getRecommendations(id);\n"
"        } catch (InterruptedException e) {\n"
"            LOGGER.errorf(\"CoffeeResource#recommendations() invocation #%d timed out after %d ms\",\n"
"                    invocationNumber, System.currentTimeMillis() - started);\n"
"            return null;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:286
#, no-wrap
msgid ""
"    private void randomDelay() throws InterruptedException {\n"
"        Thread.sleep(new Random().nextInt(500));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:292
#, fuzzy
msgid "We added some new functionality. We want to be able to recommend some related coffees based on a coffee that a user is currently looking at. It's not a critical functionality, it's a nice-to-have. When the system is overloaded and the logic behind obtaining recommendations takes too long to execute, we would rather time out and render the UI without recommendations."
msgstr "Adicionámos algumas funcionalidades novas. Queremos poder recomendar alguns cafés relacionados com base no café que o utilizador está a ver no momento. Não se trata de uma funcionalidade crítica, mas sim de uma funcionalidade agradável. Quando o sistema está sobrecarregado e a lógica por detrás da obtenção de recomendações demora demasiado tempo a ser executada, preferimos parar e apresentar a IU sem recomendações."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:295
#, fuzzy
msgid "Note that the timeout was configured to 250 ms, and a random artificial delay between 0 and 500 ms was introduced into the `CoffeeResource#recommendations()` method."
msgstr "Note-se que o tempo limite foi configurado para 250 ms e que foi introduzido um atraso artificial aleatório entre 0 e 500 ms no método `CoffeeResource#recommendations()`."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:297
#, fuzzy
msgid "In your browser, go to `http://localhost:8080/coffee/2/recommendations` and hit refresh a couple of times."
msgstr "No seu browser, aceda a `&lt;a href=\"http://localhost:8080/coffee/2/recommendations\" class=\"bare\"&gt;http://localhost:8080/coffee/2/recommendations&lt;/a&gt;` e carregue em atualizar algumas vezes."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:300
#, fuzzy
msgid "You should see some requests time out with `org.eclipse.microprofile.faulttolerance.exceptions.TimeoutException`.  Requests that do not time out should show two recommended coffee samples in JSON."
msgstr "Deverá ver alguns pedidos expirarem com `org.eclipse.microprofile.faulttolerance.exceptions.TimeoutException`. Os pedidos que não atingem o tempo limite devem mostrar duas amostras de café recomendadas em JSON."

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:301
#, fuzzy, no-wrap
msgid "Adding Resiliency: Fallbacks"
msgstr "Adicionar resiliência: Alternativas"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:305
#, fuzzy
msgid "Let's make our recommendations feature even better by providing a fallback (and presumably faster) way of getting related coffees."
msgstr "Vamos tornar a nossa funcionalidade de recomendações ainda melhor, fornecendo uma forma alternativa (e presumivelmente mais rápida) de obter cafés relacionados."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:308
#, fuzzy
msgid "Add a fallback method to `CoffeeResource` and a `@Fallback` annotation to `CoffeeResource#recommendations()` method as follows:"
msgstr "Adicionar um método de recurso a `CoffeeResource` e uma anotação `@Fallback` ao método `CoffeeResource#recommendations()` da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:313
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import org.eclipse.microprofile.faulttolerance.Fallback;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:321
#, no-wrap
msgid ""
"...\n"
"public class CoffeeResource {\n"
"    ...\n"
"    @Fallback(fallbackMethod = \"fallbackRecommendations\")\n"
"    public List<Coffee> recommendations(int id) {\n"
"        ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:329
#, no-wrap
msgid ""
"    public List<Coffee> fallbackRecommendations(int id) {\n"
"        LOGGER.info(\"Falling back to RecommendationResource#fallbackRecommendations()\");\n"
"        // safe bet, return something that everybody likes\n"
"        return Collections.singletonList(coffeeRepository.getCoffeeById(1));\n"
"    }\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:335
#, fuzzy
msgid "Hit refresh several times on `http://localhost:8080/coffee/2/recommendations`.  The `TimeoutException` should not appear anymore. Instead, in case of a timeout, the page will display a single recommendation that we hardcoded in our fallback method `fallbackRecommendations()`, rather than two recommendations returned by the original method."
msgstr "Carregue em atualizar várias vezes em `&lt;a href=\"http://localhost:8080/coffee/2/recommendations\" class=\"bare\"&gt;http://localhost:8080/coffee/2/recommendations&lt;/a&gt;`. O `TimeoutException` não deve mais aparecer. Em vez disso, no caso de um timeout, a página mostrará uma única recomendação que codificámos no nosso método de recurso `fallbackRecommendations()`, em vez de duas recomendações devolvidas pelo método original."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:337
#, fuzzy
msgid "Check the server output to see that fallback is really happening:"
msgstr "Verifique a saída do servidor para ver se o fallback está realmente a acontecer:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:343
#, no-wrap
msgid ""
"2020-01-09 13:21:34,250 INFO  [org.acm.fau.CoffeeResource] (executor-thread-1) CoffeeResource#recommendations() invocation #1 returning successfully\n"
"2020-01-09 13:21:36,354 ERROR [org.acm.fau.CoffeeResource] (executor-thread-1) CoffeeResource#recommendations() invocation #2 timed out after 250 ms\n"
"2020-01-09 13:21:36,355 INFO  [org.acm.fau.CoffeeResource] (executor-thread-1) Falling back to RecommendationResource#fallbackRecommendations()\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:346
#, fuzzy
msgid "The fallback method is required to have the same parameters as the original method."
msgstr "O método de recurso tem de ter os mesmos parâmetros que o método original."

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:347
#, fuzzy, no-wrap
msgid "Adding Resiliency: Circuit Breaker"
msgstr "Aumentar a resiliência: Disjuntor"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:353
#, fuzzy
msgid "A circuit breaker is useful for limiting number of failures happening in the system, when part of the system becomes temporarily unstable. The circuit breaker records successful and failed invocations of a method, and when the ratio of failed invocations reaches the specified threshold, the circuit breaker _opens_ and blocks all further invocations of that method for a given time."
msgstr "Um disjuntor é útil para limitar o número de falhas que ocorrem no sistema, quando parte do sistema se torna temporariamente instável. O disjuntor regista as invocações bem sucedidas e as invocações falhadas de um método e, quando o rácio de invocações falhadas atinge o limiar especificado, o disjuntor _abre-se_ e bloqueia todas as invocações desse método durante um determinado período de tempo."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:355
#, fuzzy
msgid "Add the following code into the `CoffeeRepositoryService` bean, so that we can demonstrate a circuit breaker in action:"
msgstr "Adicione o seguinte código ao bean `CoffeeRepositoryService`, para que possamos demonstrar um disjuntor em ação:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:361
#, no-wrap
msgid ""
"import java.util.concurrent.atomic.AtomicLong;\n"
"import org.eclipse.microprofile.faulttolerance.CircuitBreaker;\n"
"...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:364
#, no-wrap
msgid ""
"public class CoffeeRepositoryService {\n"
"    ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:372
#, no-wrap
msgid ""
"    @CircuitBreaker(requestVolumeThreshold = 4)\n"
"    public Integer getAvailability(Coffee coffee) {\n"
"        maybeFail();\n"
"        return new Random().nextInt(30);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:381
#, no-wrap
msgid ""
"    private void maybeFail() {\n"
"        // introduce some artificial failures\n"
"        final Long invocationNumber = counter.getAndIncrement();\n"
"        if (invocationNumber % 4 > 1) { // alternate 2 successful and 2 failing invocations\n"
"            throw new RuntimeException(\"Service failed.\");\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:384
#, fuzzy
msgid "And inject the code below into the `CoffeeResource` endpoint:"
msgstr "E injetar o código abaixo no ponto final `CoffeeResource`:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:393
#, no-wrap
msgid ""
"public class CoffeeResource {\n"
"    ...\n"
"    @Path(\"/{id}/availability\")\n"
"    @GET\n"
"    public Response availability(int id) {\n"
"        final Long invocationNumber = counter.getAndIncrement();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:399
#, no-wrap
msgid ""
"        Coffee coffee = coffeeRepository.getCoffeeById(id);\n"
"        // check that coffee with given id exists, return 404 if not\n"
"        if (coffee == null) {\n"
"            return Response.status(Response.Status.NOT_FOUND).build();\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:415
#, no-wrap
msgid ""
"        try {\n"
"            Integer availability = coffeeRepository.getAvailability(coffee);\n"
"            LOGGER.infof(\"CoffeeResource#availability() invocation #%d returning successfully\", invocationNumber);\n"
"            return Response.ok(availability).build();\n"
"        } catch (RuntimeException e) {\n"
"            String message = e.getClass().getSimpleName() + \": \" + e.getMessage();\n"
"            LOGGER.errorf(\"CoffeeResource#availability() invocation #%d failed: %s\", invocationNumber, message);\n"
"            return Response.status(Response.Status.INTERNAL_SERVER_ERROR)\n"
"                    .entity(message)\n"
"                    .type(MediaType.TEXT_PLAIN_TYPE)\n"
"                    .build();\n"
"        }\n"
"    }\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:419
#, fuzzy
msgid "We added another functionality - the application can return the amount of remaining packages of given coffee on our store (just a random number)."
msgstr "Adicionámos outra funcionalidade - a aplicação pode devolver a quantidade de embalagens restantes de um determinado café na nossa loja (apenas um número aleatório)."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:422
#, fuzzy
msgid "This time an artificial failure was introduced in the CDI bean: the `CoffeeRepositoryService#getAvailability()` method is going to alternate between two successful and two failed invocations."
msgstr "Desta vez, foi introduzida uma falha artificial no feijão CDI: o método `CoffeeRepositoryService#getAvailability()` vai alternar entre duas invocações bem sucedidas e duas falhadas."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:426
#, fuzzy
msgid "We also added a `@CircuitBreaker` annotation with `requestVolumeThreshold = 4`. `CircuitBreaker.failureRatio` is by default 0.5, and `CircuitBreaker.delay` is by default 5 seconds. That means that a circuit breaker will open when 2 of the last 4 invocations failed, and it will stay open for 5 seconds."
msgstr "Também adicionámos uma anotação `@CircuitBreaker` com `requestVolumeThreshold = 4`. `CircuitBreaker.failureRatio` é, por defeito, 0,5 e `CircuitBreaker.delay` é, por defeito, 5 segundos. Isso significa que um disjuntor será aberto quando 2 das últimas 4 invocações falharem, e permanecerá aberto por 5 segundos."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:428
#, fuzzy
msgid "To test this out, do the following:"
msgstr "Para testar isto, faça o seguinte:"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:430
#, fuzzy
msgid "Go to `http://localhost:8080/coffee/2/availability` in your browser. You should see a number being returned."
msgstr "Ir para `&lt;a href=\"http://localhost:8080/coffee/2/availability\" class=\"bare\"&gt;http://localhost:8080/coffee/2/availability&lt;/a&gt;` no seu browser. Deverá ver um número a ser devolvido."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:431
#, fuzzy
msgid "Hit refresh, this second request should again be successful and return a number."
msgstr "Carregue em atualizar, este segundo pedido deve ser bem sucedido e devolver um número."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:433
#, fuzzy
msgid "Refresh two more times. Both times you should see text \"RuntimeException: Service failed.\", which is the exception thrown by `CoffeeRepositoryService#getAvailability()`."
msgstr "Actualize mais duas vezes. Em ambas as vezes, deve ver o texto \"RuntimeException: Service failed.\", que é a exceção lançada por `CoffeeRepositoryService#getAvailability()`."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:436
#, fuzzy
msgid "Refresh a couple more times. Unless you waited too long, you should again see exception, but this time it's \"CircuitBreakerOpenException: getAvailability\". This exception indicates that the circuit breaker opened and the `CoffeeRepositoryService#getAvailability()` method is not being called anymore."
msgstr "Actualize mais algumas vezes. A menos que tenha esperado demasiado tempo, deverá ver novamente uma exceção, mas desta vez é \"CircuitBreakerOpenException: getAvailability\". Essa exceção indica que o disjuntor foi aberto e o método `CoffeeRepositoryService#getAvailability()` não está mais sendo chamado."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:438
#, fuzzy
msgid "Give it 5 seconds during which circuit breaker should close, and you should be able to make two successful requests again."
msgstr "Dê-lhe 5 segundos, durante os quais o disjuntor deve fechar, e deverá poder fazer novamente dois pedidos com êxito."

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:439
#, fuzzy, no-wrap
msgid "Runtime configuration"
msgstr "Configuração do tempo de execução"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:442
#, fuzzy
msgid "You can override the annotations parameters at runtime inside your `application.properties` file."
msgstr "Pode substituir os parâmetros das anotações em tempo de execução no seu ficheiro `application.properties`."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:444
#, fuzzy
msgid "If we take the retry example that we already saw:"
msgstr "Se pegarmos no exemplo da repetição que já vimos:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:448
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:464
#, fuzzy
msgid "We can override the `maxRetries` parameter with 6 retries instead of 4 by the following configuration item:"
msgstr "Podemos substituir o parâmetro `maxRetries` por 6 tentativas em vez de 4 através do seguinte item de configuração:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:467
#, no-wrap
msgid "org.acme.CoffeeResource/coffees/Retry/maxRetries=6\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:471
#, fuzzy
msgid "The format is `fully-qualified-class-name/method-name/annotation-name/property-name=value`.  You can also configure a property for all the annotation via `annotation-name/property-name=value`."
msgstr "O formato é `fully-qualified-class-name/method-name/annotation-name/property-name=value`. Também é possível configurar uma propriedade para todas as anotações através de `annotation-name/property-name=value`."

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:472
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:476
#, fuzzy
msgid "SmallRye Fault Tolerance allows to improve resiliency of your application, without having an impact on the complexity of our business logic."
msgstr "SmallRye Fault Tolerance permite melhorar a resiliência da sua aplicação, sem ter um impacto na complexidade da sua lógica de negócio."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:478
#, fuzzy
msgid "All that is needed to enable the fault tolerance features in Quarkus is:"
msgstr "Tudo o que é necessário para ativar as funcionalidades de tolerância a falhas no Quarkus é:"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:481
#, fuzzy
msgid "adding the `smallrye-fault-tolerance` Quarkus extension to your project using the `quarkus-maven-plugin`:"
msgstr "adicionar a extensão `smallrye-fault-tolerance` do Quarkus ao seu projeto utilizando o ficheiro `quarkus-maven-plugin`:"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:484
#, fuzzy
msgid "or simply adding the following Maven dependency:"
msgstr "ou simplesmente adicionando a seguinte dependência Maven:"

#. type: Title ==
#: upstream/_guides/smallrye-fault-tolerance.adoc:501
#, fuzzy, no-wrap
msgid "Additional resources"
msgstr "Recursos adicionais"

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:505
#, fuzzy
msgid "SmallRye Fault Tolerance has more features than shown here.  Please check the link:https://smallrye.io/docs/smallrye-fault-tolerance/6.2.6/index.html[SmallRye Fault Tolerance documentation] to learn about them."
msgstr "A Tolerância a Falhas SmallRye tem mais recursos do que os mostrados aqui. Por favor, verifique a  link:https://smallrye.io/docs/smallrye-fault-tolerance/6.2.6/index.html[documentação do SmallRye Fault Tolerance] para aprender sobre eles."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:507
#, fuzzy
msgid "In Quarkus, you can use the SmallRye Fault Tolerance optional features out of the box."
msgstr "No Quarkus, é possível usar os recursos opcionais de tolerância a falhas do SmallRye imediatamente."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:509
#, fuzzy
msgid "Support for Mutiny is present, so your asynchronous methods can return `Uni` in addition to `CompletionStage`."
msgstr "O suporte para Mutiny está presente, pelo que os seus métodos assíncronos podem devolver `Uni` para além de `CompletionStage`."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:511
#, fuzzy
msgid "MicroProfile Context Propagation is integrated with Fault Tolerance, so existing contexts are automatically propagated to your asynchronous methods."
msgstr "A Propagação de Contexto MicroProfile está integrada na Tolerância a Falhas, pelo que os contextos existentes são automaticamente propagados para os seus métodos assíncronos."

#. type: delimited block =
#: upstream/_guides/smallrye-fault-tolerance.adoc:516
#, fuzzy
msgid "This also applies to the CDI request context: if it is active on the original thread, it is propagated to the new thread, but if it's not, then the new thread won't have it either.  This is contrary to MicroProfile Fault Tolerance specification, which states that the request context must be active during the `@Asynchronous` method invocation."
msgstr "Isto também se aplica ao contexto de pedido CDI: se estiver ativo na thread original, é propagado para a nova thread, mas se não estiver, a nova thread também não o terá. Isso é contrário à especificação de tolerância a falhas do MicroProfile, que afirma que o contexto de solicitação deve estar ativo durante a invocação do método `@Asynchronous`."

#. type: delimited block =
#: upstream/_guides/smallrye-fault-tolerance.adoc:519
#, fuzzy
msgid "We believe that in presence of MicroProfile Context Propagation, this requirement should not apply.  The entire point of context propagation is to make sure the new thread has the same contexts as the original thread."
msgstr "Acreditamos que, na presença da propagação de contexto de microperfis, esse requisito não deve ser aplicado. O objetivo da propagação de contexto é garantir que a nova thread tem os mesmos contextos que a thread original."

#. type: Plain text
#: upstream/_guides/smallrye-fault-tolerance.adoc:524
#, fuzzy
msgid "Non-compatible mode is enabled by default.  This means that methods that return `CompletionStage` (or `Uni`) have asynchronous fault tolerance applied without any `@Asynchronous`, `@AsynchronousNonBlocking`, `@Blocking` or `@NonBlocking` annotation.  It also means that circuit breaker, fallback and retry automatically inspect the exception cause chain if the exception itself is insufficient to decide what should happen."
msgstr "O modo não compatível é ativado por predefinição. Isto significa que os métodos que devolvem `CompletionStage` (ou `Uni`) têm tolerância assíncrona a falhas aplicada sem qualquer anotação `@Asynchronous`, `@AsynchronousNonBlocking`, `@Blocking` ou `@NonBlocking`. Significa também que o disjuntor, o fallback e a repetição inspeccionam automaticamente a cadeia de causas da exceção se a própria exceção for insuficiente para decidir o que deve acontecer."

#. type: delimited block =
#: upstream/_guides/smallrye-fault-tolerance.adoc:529
#, fuzzy
msgid "This mode is not compatible with the MicroProfile Fault Tolerance specification, albeit the incompatibility is very small.  To restore full compatibility, add this configuration property:"
msgstr "Este modo não é compatível com a especificação MicroProfile Fault Tolerance, embora a incompatibilidade seja muito pequena. Para restaurar a compatibilidade total, adicione esta propriedade de configuração:"

#. type: delimited block -
#: upstream/_guides/smallrye-fault-tolerance.adoc:533
#, no-wrap
msgid "smallrye.faulttolerance.mp-compatibility=true\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/smallrye-fault-tolerance.adoc:538
#, fuzzy
msgid "The link:https://smallrye.io/docs/smallrye-fault-tolerance/6.2.6/reference/programmatic-api.html[programmatic API] is present, including Mutiny support, and integrated with the declarative, annotation-based API.  You can use the `FaultTolerance` and `MutinyFaultTolerance` APIs out of the box."
msgstr "A  link:https://smallrye.io/docs/smallrye-fault-tolerance/6.2.6/reference/programmatic-api.html[API programática] está presente, incluindo o suporte Mutiny, e integrada com a API declarativa, baseada em anotações. É possível usar as APIs `FaultTolerance` e `MutinyFaultTolerance` imediatamente."

#. type: delimited block =
#: upstream/_guides/smallrye-fault-tolerance.adoc:540
#, fuzzy
msgid "Support for Kotlin is present (assuming you use the Quarkus extension for Kotlin), so you can guard your `suspend` functions with fault tolerance annotations."
msgstr "O suporte para Kotlin está presente (assumindo que utiliza a extensão Quarkus para Kotlin), pelo que pode proteger as suas funções `suspend` com anotações de tolerância a falhas."

#. type: delimited block =
#: upstream/_guides/smallrye-fault-tolerance.adoc:544
#, fuzzy
msgid "Metrics are automatically discovered and integrated.  If your application uses the Quarkus extension for Micrometer, SmallRye Fault Tolerance will emit metrics to Micrometer.  If your application uses the Quarkus extension for SmallRye Metrics, SmallRye Fault Tolerance will emit metrics to MicroProfile Metrics.  Otherwise, SmallRye Fault Tolerance metrics will be disabled."
msgstr "As métricas são automaticamente descobertas e integradas. Se a sua aplicação usar a extensão Quarkus para Micrometer, o SmallRye Fault Tolerance emitirá métricas para o Micrometer. Se a sua aplicação usa a extensão Quarkus para o SmallRye Metrics, o SmallRye Fault Tolerance emitirá métricas para o MicroProfile Metrics. Caso contrário, as métricas do SmallRye Fault Tolerance serão desactivadas."
