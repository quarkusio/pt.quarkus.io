# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/stork.adoc:6
#, fuzzy, no-wrap
msgid "Getting Started with SmallRye Stork"
msgstr "Começar a utilizar o SmallRye Stork"

#. type: Plain text
#: upstream/_guides/stork.adoc:17
#, fuzzy
msgid "The essence of distributed systems resides in the interaction between services.  In modern architecture, you often have multiple instances of your service to share the load or improve the resilience by redundancy.  But how do you select the best instance of your service? That's where https://smallrye.io/smallrye-stork[SmallRye Stork] helps.  Stork is going to choose the most appropriate instance.  It offers:"
msgstr "A essência dos sistemas distribuídos reside na interação entre serviços. Na arquitetura moderna, é frequente ter várias instâncias do seu serviço para partilhar a carga ou melhorar a resiliência através da redundância. Mas como selecionar a melhor instância do seu serviço? É aí que o  link:https://smallrye.io/smallrye-stork[SmallRye Stork] ajuda. O Stork vai escolher a instância mais apropriada. Ele oferece:"

#. type: Plain text
#: upstream/_guides/stork.adoc:19
#, fuzzy
msgid "Extensible service discovery mechanisms"
msgstr "Mecanismos extensíveis de descoberta de serviços"

#. type: Plain text
#: upstream/_guides/stork.adoc:20
#, fuzzy
msgid "Built-in support for Consul and Kubernetes"
msgstr "Suporte integrado para Consul e Kubernetes"

#. type: Plain text
#: upstream/_guides/stork.adoc:21
#, fuzzy
msgid "Customizable client load-balancing strategies"
msgstr "Estratégias personalizáveis de balanceamento de carga do cliente"

#. type: Title ==
#: upstream/_guides/stork.adoc:24
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: upstream/_guides/stork.adoc:29
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitetura"

#. type: Plain text
#: upstream/_guides/stork.adoc:32
#, fuzzy
msgid "In this guide, we will build an application composed of:"
msgstr "Neste guia, vamos construir uma aplicação composta por:"

#. type: Plain text
#: upstream/_guides/stork.adoc:34
#, fuzzy
msgid "A simple blue service exposed on port 9000"
msgstr "Um serviço azul simples exposto na porta 9000"

#. type: Plain text
#: upstream/_guides/stork.adoc:35
#, fuzzy
msgid "A simple red service exposed on port 9001"
msgstr "Um serviço vermelho simples exposto na porta 9001"

#. type: Plain text
#: upstream/_guides/stork.adoc:36
#, fuzzy
msgid "A REST Client calling the blue or red service (the selection is delegated to Stork)"
msgstr "Um cliente REST que chama o serviço azul ou vermelho (a seleção é delegada ao Stork)"

#. type: Plain text
#: upstream/_guides/stork.adoc:37
#, fuzzy
msgid "A REST endpoint using the REST client and calling the services"
msgstr "Um ponto de extremidade REST que utiliza o cliente REST e chama os serviços"

#. type: Plain text
#: upstream/_guides/stork.adoc:38
#, fuzzy
msgid "The blue and red services are registered in https://www.consul.io/[Consul]."
msgstr "Os serviços azul e vermelho estão registados na  link:https://www.consul.io/[Consul]."

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_guides/stork.adoc:39
#, fuzzy, no-wrap
msgid "Architecture of the application"
msgstr "Arquitetura da aplicação"

#. type: Target for macro image
#: upstream/_guides/stork.adoc:39
#, no-wrap
msgid "stork-getting-started-architecture.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:43
#, fuzzy
msgid "For the sake of simplicity, everything (except Consul) will be running in the same Quarkus application.  Of course, each component will run in its own process in the real world."
msgstr "Por uma questão de simplicidade, tudo (exceto o Consul) será executado na mesma aplicação Quarkus. Naturalmente, cada componente será executado em seu próprio processo no mundo real."

#. type: Title ==
#: upstream/_guides/stork.adoc:44
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: Plain text
#: upstream/_guides/stork.adoc:48
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the applications step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas secções seguintes e crie as aplicações passo a passo. No entanto, pode ir diretamente para o exemplo completo."

#. type: Plain text
#: upstream/_guides/stork.adoc:50
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: upstream/_guides/stork.adoc:52
#, fuzzy
msgid "The solution is located in the `stork-quickstart` link:{quickstarts-tree-url}/stork-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/stork-quickstart[diretório] `stork-quickstart`."

#. type: Title ==
#: upstream/_guides/stork.adoc:53
#, fuzzy, no-wrap
msgid "Discovery and selection"
msgstr "Descoberta e seleção"

#. type: Plain text
#: upstream/_guides/stork.adoc:56
#, fuzzy
msgid "Before going further, we need to discuss discovery vs. selection."
msgstr "Antes de prosseguir, é necessário discutir a questão da descoberta e da seleção."

#. type: Plain text
#: upstream/_guides/stork.adoc:59
#, fuzzy
msgid "Service discovery is the process of locating service instances.  It produces a list of service instances that is potentially empty (if no service matches the request) or contains multiple service instances."
msgstr "A descoberta de serviços é o processo de localização de instâncias de serviços. Produz uma lista de instâncias de serviço potencialmente vazia (se nenhum serviço corresponder ao pedido) ou que contém várias instâncias de serviço."

#. type: Plain text
#: upstream/_guides/stork.adoc:62
#, fuzzy
msgid "Service selection, also called load-balancing, chooses the best instance from the list returned by the discovery process.  The result is a single service instance or an exception when no suitable instance can be found."
msgstr "A seleção de serviços, também designada por balanceamento de carga, escolhe a melhor instância da lista devolvida pelo processo de descoberta. O resultado é uma única instância de serviço ou uma exceção quando não é possível encontrar uma instância adequada."

#. type: Plain text
#: upstream/_guides/stork.adoc:66
#, fuzzy
msgid "Stork handles both discovery and selection.  However, it does not handle the communication with the service but only provides a service instance.  The various integrations in Quarkus extract the location of the service from that service instance."
msgstr "O Stork trata tanto da descoberta como da seleção. No entanto, não trata da comunicação com o serviço, mas apenas fornece uma instância de serviço. As várias integrações no Quarkus extraem a localização do serviço a partir dessa instância de serviço."

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_guides/stork.adoc:67
#, fuzzy, no-wrap
msgid "Discovery and Selection of services"
msgstr "Descoberta e seleção de serviços"

#. type: Target for macro image
#: upstream/_guides/stork.adoc:67
#, no-wrap
msgid "stork-process.png"
msgstr ""

#. type: Title ==
#: upstream/_guides/stork.adoc:69
#, fuzzy, no-wrap
msgid "Bootstrapping the project"
msgstr "Arranque do projeto"

#. type: Plain text
#: upstream/_guides/stork.adoc:72
#, fuzzy
msgid "Create a Quarkus project importing the quarkus-rest-client-reactive and quarkus-resteasy-reactive extensions using your favorite approach:"
msgstr "Crie um projeto Quarkus importando as extensões quarkus-rest-client-reactive e quarkus-resteasy-reactive utilizando a sua abordagem preferida:"

#. type: Plain text
#: upstream/_guides/stork.adoc:78
#, fuzzy
msgid "In the generated project, also add the following dependencies:"
msgstr "No projeto gerado, adicione também as seguintes dependências:"

#. type: Block title
#: upstream/_guides/stork.adoc:80
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/stork.adoc:90
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.smallrye.stork</groupId>\n"
"  <artifactId>stork-service-discovery-consul</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"  <groupId>io.smallrye.reactive</groupId>\n"
"  <artifactId>smallrye-mutiny-vertx-consul-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/stork.adoc:93
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/stork.adoc:97
#, no-wrap
msgid ""
"implementation(\"io.smallrye.stork:stork-service-discovery-consul\")\n"
"implementation(\"io.smallrye.reactive:smallrye-mutiny-vertx-consul-client\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:101
#, fuzzy
msgid "`stork-service-discovery-consul` provides an implementation of service discovery for Consul.  `smallrye-mutiny-vertx-consul-client` is a Consul client which we will use to register our services in Consul."
msgstr "`stork-service-discovery-consul` fornece uma implementação da descoberta de serviços para a Consul. `smallrye-mutiny-vertx-consul-client` é um cliente Consul que utilizaremos para registar os nossos serviços na Consul."

#. type: Title ==
#: upstream/_guides/stork.adoc:102
#, fuzzy, no-wrap
msgid "The Blue and Red services"
msgstr "Os serviços Azul e Vermelho"

#. type: Plain text
#: upstream/_guides/stork.adoc:105
#, fuzzy
msgid "Let's start with the very beginning: the service we will discover, select and call."
msgstr "Comecemos pelo princípio: o serviço que vamos descobrir, selecionar e chamar."

#. type: Plain text
#: upstream/_guides/stork.adoc:107
#, fuzzy
msgid "Create the `src/main/java/org/acme/services/BlueService.java` with the following content:"
msgstr "Criar o sítio `src/main/java/org/acme/services/BlueService.java` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:111 upstream/_guides/stork.adoc:146
#: upstream/_guides/stork.adoc:185
#, no-wrap
msgid "package org.acme.services;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:115 upstream/_guides/stork.adoc:150
#, no-wrap
msgid ""
"import io.quarkus.runtime.StartupEvent;\n"
"import io.vertx.mutiny.core.Vertx;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:118 upstream/_guides/stork.adoc:153
#: upstream/_guides/stork.adoc:195
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.enterprise.event.Observes;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:121
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class BlueService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:123
#, no-wrap
msgid "    @ConfigProperty(name = \"blue-service-port\", defaultValue = \"9000\") int port;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:135
#, no-wrap
msgid ""
"    /**\n"
"     * Start an HTTP server for the blue service.\n"
"     *\n"
"     * Note: this method is called on a worker thread, and so it is allowed to block.\n"
"     */\n"
"    public void init(@Observes StartupEvent ev, Vertx vertx) {\n"
"        vertx.createHttpServer()\n"
"                .requestHandler(req -> req.response().endAndForget(\"Hello from Blue!\"))\n"
"                .listenAndAwait(port);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:139
#, fuzzy
msgid "It creates a new HTTP server (using Vert.x) and implements our simple service when the application starts.  For each HTTP request, it sends a response with \"Hello from Blue!\" as the body."
msgstr "Ele cria um novo servidor HTTP (usando Vert.x) e implementa nosso serviço simples quando o aplicativo é iniciado. Para cada solicitação HTTP, ele envia uma resposta com \"Hello from Blue!\" como corpo."

#. type: Plain text
#: upstream/_guides/stork.adoc:141
#, fuzzy
msgid "Following the same logic, create the `src/main/java/org/acme/services/RedService.java` with the following content:"
msgstr "Seguindo a mesma lógica, crie o site `src/main/java/org/acme/services/RedService.java` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:157
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class RedService {\n"
"    @ConfigProperty(name = \"red-service-port\", defaultValue = \"9001\") int port;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:168
#, no-wrap
msgid ""
"    /**\n"
"     * Start an HTTP server for the red service.\n"
"     *\n"
"     * Note: this method is called on a worker thread, and so it is allowed to block.\n"
"     */\n"
"    public void init(@Observes StartupEvent ev, Vertx vertx) {\n"
"        vertx.createHttpServer()\n"
"                .requestHandler(req -> req.response().endAndForget(\"Hello from Red!\"))\n"
"                .listenAndAwait(port);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:170 upstream/_guides/stork.adoc:292
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:173
#, fuzzy
msgid "This time, it writes \"Hello from Red!\"."
msgstr "Desta vez, escreve \"Hello from Red!\"."

#. type: Title ==
#: upstream/_guides/stork.adoc:174
#, fuzzy, no-wrap
msgid "Service registration in Consul"
msgstr "Registo de serviços no Consul"

#. type: Plain text
#: upstream/_guides/stork.adoc:177
#, fuzzy
msgid "Now that we have implemented our services, we need to register them into Consul."
msgstr "Agora que implementámos os nossos serviços, temos de os registar no Consul."

#. type: Plain text
#: upstream/_guides/stork.adoc:179
#, fuzzy
msgid "Stork is not limited to Consul and integrates with other service discovery mechanisms."
msgstr "O Stork não se limita ao Consul e integra-se com outros mecanismos de descoberta de serviços."

#. type: Plain text
#: upstream/_guides/stork.adoc:181
#, fuzzy
msgid "Create the `src/main/java/org/acme/services/Registration.java` file with the following content:"
msgstr "Criar o ficheiro `src/main/java/org/acme/services/Registration.java` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:192
#, no-wrap
msgid ""
"import io.quarkus.runtime.StartupEvent;\n"
"import io.vertx.ext.consul.ServiceOptions;\n"
"import io.vertx.mutiny.ext.consul.ConsulClient;\n"
"import io.vertx.ext.consul.ConsulClientOptions;\n"
"import io.vertx.mutiny.core.Vertx;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:198
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class Registration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:201
#, no-wrap
msgid ""
"    @ConfigProperty(name = \"consul.host\") String host;\n"
"    @ConfigProperty(name = \"consul.port\") int port;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:204
#, no-wrap
msgid ""
"    @ConfigProperty(name = \"red-service-port\", defaultValue = \"9000\") int red;\n"
"    @ConfigProperty(name = \"blue-service-port\", defaultValue = \"9001\") int blue;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:212
#, no-wrap
msgid ""
"    /**\n"
"     * Register our two services in Consul.\n"
"     *\n"
"     * Note: this method is called on a worker thread, and so it is allowed to block.\n"
"     */\n"
"    public void init(@Observes StartupEvent ev, Vertx vertx) {\n"
"        ConsulClient client = ConsulClient.create(vertx, new ConsulClientOptions().setHost(host).setPort(port));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:219
#, no-wrap
msgid ""
"        client.registerServiceAndAwait(\n"
"                new ServiceOptions().setPort(red).setAddress(\"localhost\").setName(\"my-service\").setId(\"red\"));\n"
"        client.registerServiceAndAwait(\n"
"                new ServiceOptions().setPort(blue).setAddress(\"localhost\").setName(\"my-service\").setId(\"blue\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:223
#, fuzzy
msgid "When the application starts, it connects to Consul using the Vert.x Consul Client and registers our two instances.  Both registration uses the same name (`my-service`), but different ids to indicate that it's two instances of the same _service_."
msgstr "Quando a aplicação é iniciada, liga-se ao Consul utilizando o cliente Vert.x Consul e regista as nossas duas instâncias. Ambos os registos utilizam o mesmo nome ( `my-service`), mas ids diferentes para indicar que se trata de duas instâncias do mesmo _serviço_."

#. type: Title ==
#: upstream/_guides/stork.adoc:224
#, fuzzy, no-wrap
msgid "The REST Client interface and the front end API"
msgstr "A interface de cliente REST e a API de front-end"

#. type: Plain text
#: upstream/_guides/stork.adoc:227
#, fuzzy
msgid "So far, we didn't use Stork; we just scaffolded the services we will be discovering, selecting, and calling."
msgstr "Até agora, não utilizámos o Stork; limitámo-nos a apresentar os serviços que vamos descobrir, selecionar e chamar."

#. type: Plain text
#: upstream/_guides/stork.adoc:230
#, fuzzy
msgid "We will call the services using the Reactive REST Client.  Create the `src/main/java/org/acme/MyService.java` file with the following content:"
msgstr "Chamaremos os serviços usando o cliente REST reativo. Crie o ficheiro `src/main/java/org/acme/MyService.java` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:234 upstream/_guides/stork.adoc:269
#: upstream/_guides/stork.adoc:305
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:236
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:240
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:250
#, no-wrap
msgid ""
"/**\n"
" * The REST Client interface.\n"
" *\n"
" * Notice the `baseUri`. It uses `stork://` as URL scheme indicating that the called service uses Stork to locate and\n"
" * select the service instance. The `my-service` part is the service name. This is used to configure Stork discovery\n"
" * and selection in the `application.properties` file.\n"
" */\n"
"@RegisterRestClient(baseUri = \"stork://my-service\")\n"
"public interface MyService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:255
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    String get();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:262
#, fuzzy
msgid "It's a straightforward REST client interface containing a single method. However, note the `baseUri` attribute.  It starts with `stork://`.  It instructs the REST client to delegate the discovery and selection of the service instances to Stork.  Notice the `my-service` part in the URL.  It is the service name we will be using in the application configuration."
msgstr "É uma interface de cliente REST simples que contém um único método. No entanto, note o atributo `baseUri`. Ele começa com `stork://`. Ele instrui o cliente REST a delegar a descoberta e a seleção das instâncias de serviço ao Stork. Observe a parte `my-service` no URL. É o nome do serviço que usaremos na configuração do aplicativo."

#. type: Plain text
#: upstream/_guides/stork.adoc:265
#, fuzzy
msgid "It does not change how the REST client is used.  Create the `src/main/java/org/acme/FrontendApi.java` file with the following content:"
msgstr "Não altera a forma como o cliente REST é utilizado. Crie o ficheiro `src/main/java/org/acme/FrontendApi.java` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:271
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:276
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:282
#, no-wrap
msgid ""
"/**\n"
" * A frontend API using our REST Client (which uses Stork to locate and select the service instance on each call).\n"
" */\n"
"@Path(\"/api\")\n"
"public class FrontendApi {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:284
#, no-wrap
msgid "    @RestClient MyService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:290
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String invoke() {\n"
"        return service.get();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:295
#, fuzzy
msgid "It injects and uses the REST client as usual."
msgstr "Injecta e utiliza o cliente REST como habitualmente."

#. type: Title ==
#: upstream/_guides/stork.adoc:296
#, fuzzy, no-wrap
msgid "Stork Filter"
msgstr "Filtro Stork"

#. type: Plain text
#: upstream/_guides/stork.adoc:301
#, fuzzy
msgid "The `baseUri` configured in the REST client will be processed by `StorkClientRequestFilter` class, this is a https://quarkus.io/specs/jaxrs/2.1/index.html#filters[Jakarta REST filter].  If you need to process the metadata associated with a message: HTTP headers, query parameters, media type, and other metadata, you can implement another filter to configure what you need.  Let’s implement a custom filter to add logging capability to our service. We create `CustomLoggingFilter` and annotating it with the @Provider annotation:"
msgstr "O `baseUri` configurado no cliente REST será processado pela classe `StorkClientRequestFilter`, que é um  link:https://quarkus.io/specs/jaxrs/2.1/index.html#filters[filtro Jakarta REST]. Se precisar de processar os metadados associados a uma mensagem: Cabeçalhos HTTP, parâmetros de consulta, tipo de mídia e outros metadados, é possível implementar outro filtro para configurar o que é necessário. Vamos implementar um filtro personalizado para adicionar a capacidade de registo ao nosso serviço. Criamos `CustomLoggingFilter` e anotamo-lo com a anotação @Provider:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:310
#, no-wrap
msgid ""
"import io.vertx.core.http.HttpServerRequest;\n"
"import org.jboss.logging.Logger;\n"
"import org.jboss.resteasy.reactive.client.spi.ResteasyReactiveClientRequestContext;\n"
"import org.jboss.resteasy.reactive.client.spi.ResteasyReactiveClientRequestFilter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:312
#, no-wrap
msgid "import jakarta.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:315
#, no-wrap
msgid ""
"@Provider\n"
"public class CustomLoggingFilter implements ResteasyReactiveClientRequestFilter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:317
#, no-wrap
msgid "    private static final Logger LOG = Logger.getLogger(CustomLoggingFilter.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:323
#, no-wrap
msgid ""
"    @Override\n"
"    public void filter(ResteasyReactiveClientRequestContext requestContext) {\n"
"        LOG.infof(\"Resolved address by Stork: %s\",requestContext.getUri().toString());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:328
#, fuzzy
msgid "The order in which filters are executed is defined by https://quarkus.io/specs/jaxrs/2.1/index.html#priorities[Priorities].  Note that `CustomLoggingFilter` is using a default value, so the user-level priority and the `StorkClientRequestFilter` uses the security authentication filter priority. This means that `StorkClientRequestFilter` will be executed before our `CustomLoggingFilter`.  Use `@Priority` annotation to change this behaviour."
msgstr "A ordem pela qual os filtros são executados é definida por  link:https://quarkus.io/specs/jaxrs/2.1/index.html#priorities[Prioridades]. Note que `CustomLoggingFilter` está a utilizar um valor predefinido, pelo que a prioridade ao nível do utilizador e `StorkClientRequestFilter` utiliza a prioridade do filtro de autenticação de segurança. Isso significa que `StorkClientRequestFilter` será executado antes do nosso `CustomLoggingFilter`. Utilize a anotação `@Priority` para alterar este comportamento."

#. type: Title ==
#: upstream/_guides/stork.adoc:330
#, fuzzy, no-wrap
msgid "Stork configuration"
msgstr "Configuração da cegonha"

#. type: Plain text
#: upstream/_guides/stork.adoc:333
#, fuzzy
msgid "The system is almost complete. We only need to configure Stork and the `Registration` bean."
msgstr "O sistema está quase completo. Só precisamos de configurar o Stork e o feijão `Registration`."

#. type: Plain text
#: upstream/_guides/stork.adoc:335
#, fuzzy
msgid "In the `src/main/resources/application.properties`, add:"
msgstr "No sítio `src/main/resources/application.properties`, adicionar:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:340
#, no-wrap
msgid ""
"consul.host=localhost\n"
"consul.port=8500\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork.adoc:345
#, no-wrap
msgid ""
"quarkus.stork.my-service.service-discovery.type=consul\n"
"quarkus.stork.my-service.service-discovery.consul-host=localhost\n"
"quarkus.stork.my-service.service-discovery.consul-port=8500\n"
"quarkus.stork.my-service.load-balancer.type=round-robin\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:348
#, fuzzy
msgid "The first two lines provide the Consul location used by the `Registration` bean."
msgstr "As duas primeiras linhas fornecem a localização do Cônsul utilizada pelo bean `Registration`."

#. type: Plain text
#: upstream/_guides/stork.adoc:355
#, fuzzy
msgid "The other properties are related to Stork.  `stork.my-service.service-discovery` indicates which type of service discovery we will be using to locate the `my-service` service.  In our case, it's `consul`.  `quarkus.stork.my-service.service-discovery.consul-host` and `quarkus.stork.my-service.service-discovery.consul-port` configures the access to Consul.  Finally, `quarkus.stork.my-service.load-balancer.type` configures the service selection.  In our case, we use a `round-robin`."
msgstr "As outras propriedades estão relacionadas ao Stork. `stork.my-service.service-discovery` indica o tipo de descoberta de serviço que usaremos para localizar o serviço `my-service`. No nosso caso, é `consul`. `quarkus.stork.my-service.service-discovery.consul-host` e `quarkus.stork.my-service.service-discovery.consul-port` configuram o acesso ao Consul. Finalmente, `quarkus.stork.my-service.load-balancer.type` configura a seleção do serviço. No nosso caso, utilizamos um `round-robin`."

#. type: Title ==
#: upstream/_guides/stork.adoc:356
#, fuzzy, no-wrap
msgid "Running the application"
msgstr "Executar a aplicação"

#. type: Plain text
#: upstream/_guides/stork.adoc:360
#, fuzzy
msgid "We're done! So, let's see if it works."
msgstr "Já está! Então, vamos ver se funciona."

#. type: Plain text
#: upstream/_guides/stork.adoc:362
#, fuzzy
msgid "First, start Consul:"
msgstr "Em primeiro lugar, iniciar o Consul:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:366
#, no-wrap
msgid "docker run --rm --name consul -p 8500:8500 -p 8501:8501 consul:1.7 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:369
#, fuzzy
msgid "If you start Consul differently, do not forget to edit the application configuration."
msgstr "Se iniciar o Consul de forma diferente, não se esqueça de editar a configuração da aplicação."

#. type: Plain text
#: upstream/_guides/stork.adoc:371
#, fuzzy
msgid "Then, package the application:"
msgstr "Em seguida, embalar a aplicação:"

#. type: Plain text
#: upstream/_guides/stork.adoc:375
#, fuzzy
msgid "And run it:"
msgstr "E corre-o:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:379
#, no-wrap
msgid "> java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:382
#, fuzzy
msgid "In another terminal, run:"
msgstr "Noutro terminal, execute:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:391
#, no-wrap
msgid ""
"> curl http://localhost:8080/api\n"
"...\n"
"> curl http://localhost:8080/api\n"
"...\n"
"> curl http://localhost:8080/api\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork.adoc:394
#, fuzzy
msgid "The responses alternate between `Hello from Red!` and `Hello from Blue!`."
msgstr "As respostas alternam entre `Hello from Red!` e `Hello from Blue!`."

#. type: Plain text
#: upstream/_guides/stork.adoc:396
#, fuzzy
msgid "You can compile this application into a native executable:"
msgstr "Pode compilar esta aplicação num executável nativo:"

#. type: Plain text
#: upstream/_guides/stork.adoc:400
#, fuzzy
msgid "And start it with:"
msgstr "E começar com:"

#. type: delimited block -
#: upstream/_guides/stork.adoc:404
#, no-wrap
msgid "> ./target/stork-getting-started-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/stork.adoc:406
#, fuzzy, no-wrap
msgid "Going further"
msgstr "Ir mais longe"

#. type: Plain text
#: upstream/_guides/stork.adoc:410
#, fuzzy
msgid "This guide has shown how to use SmallRye Stork to discover and select your services.  You can find more about Stork in:"
msgstr "Este guia mostra como utilizar o SmallRye Stork para descobrir e selecionar os seus serviços. Pode encontrar mais informações sobre o Stork em:"

#. type: Plain text
#: upstream/_guides/stork.adoc:412
#, fuzzy
msgid "the xref:stork-reference.adoc[Stork reference guide],"
msgstr "o  link:stork-reference.html[guia de referência Stork],"

#. type: Plain text
#: upstream/_guides/stork.adoc:412
#, fuzzy
msgid "the https://smallrye.io/smallrye-stork[SmallRye Stork website]."
msgstr "o  link:https://smallrye.io/smallrye-stork[sítio Web SmallRye Stork]."
