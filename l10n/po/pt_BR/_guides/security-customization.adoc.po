# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-customization.adoc:6
#, fuzzy, no-wrap
msgid "Security Tips and Tricks"
msgstr "Dicas e truques de segurança"

#. type: Title ==
#: upstream/_guides/security-customization.adoc:12
#, fuzzy, no-wrap
msgid "Quarkus Security Dependency"
msgstr "Dependência de segurança do Quarkus"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:15
#, fuzzy
msgid "`io.quarkus:quarkus-security` module contains the core Quarkus Security classes."
msgstr "`io.quarkus:quarkus-security` contém as principais classes de segurança do Quarkus."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:18
#, fuzzy
msgid "In most cases, it does not have to be added directly to your project's build file as it is already provided by all the security extensions.  However, if you need to write your own custom security code (for example, register a xref:jaxrs-security-context[Custom Jakarta REST SecurityContext]) or use xref:bouncy-castle[BouncyCastle] libraries, then please make sure it is included:"
msgstr "Na maioria dos casos, ele não precisa ser adicionado diretamente ao arquivo de compilação do seu projeto, pois já é fornecido por todas as extensões de segurança. No entanto, se precisar de escrever o seu próprio código de segurança personalizado (por exemplo, registar um  link:#jaxrs-security-context[Jakarta REST SecurityContext personalizado]) ou utilizar as bibliotecas  link:#bouncy-castle[BouncyCastle], certifique-se de que está incluído:"

#. type: Block title
#: upstream/_guides/security-customization.adoc:20
#: upstream/_guides/security-customization.adoc:418
#: upstream/_guides/security-customization.adoc:453
#: upstream/_guides/security-customization.adoc:481
#: upstream/_guides/security-customization.adoc:532
#: upstream/_guides/security-customization.adoc:604
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:26
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-security</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-customization.adoc:29
#: upstream/_guides/security-customization.adoc:427
#: upstream/_guides/security-customization.adoc:462
#: upstream/_guides/security-customization.adoc:490
#: upstream/_guides/security-customization.adoc:546
#: upstream/_guides/security-customization.adoc:613
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:32
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-security\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-customization.adoc:34
#, fuzzy, no-wrap
msgid "HttpAuthenticationMechanism Customization"
msgstr "Personalização do HttpAuthenticationMechanism"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:38
#, fuzzy
msgid "One can customize `HttpAuthenticationMechanism` by registering a CDI implementation bean.  In the example below the custom authenticator delegates to `JWTAuthMechanism` provided by `quarkus-smallrye-jwt`:"
msgstr "É possível personalizar `HttpAuthenticationMechanism` registando um bean de implementação CDI. No exemplo abaixo, o autenticador personalizado delega para `JWTAuthMechanism` fornecido por `quarkus-smallrye-jwt`:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:45
#, no-wrap
msgid ""
"@Alternative\n"
"@Priority(1)\n"
"@ApplicationScoped\n"
"public class CustomAwareJWTAuthMechanism implements HttpAuthenticationMechanism {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:47
#: upstream/_guides/security-customization.adoc:96
#, no-wrap
msgid "\tprivate static final Logger LOG = LoggerFactory.getLogger(CustomAwareJWTAuthMechanism.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:50
#, no-wrap
msgid ""
"\t@Inject\n"
"\tJWTAuthMechanism delegate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:56
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<SecurityIdentity> authenticate(RoutingContext context, IdentityProviderManager identityProviderManager) {\n"
"\t    // do some custom action and delegate\n"
"            return delegate.authenticate(context, identityProviderManager);\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:61
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<ChallengeData> getChallenge(RoutingContext context) {\n"
"\t\treturn delegate.getChallenge(context);\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:66
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Set<Class<? extends AuthenticationRequest>> getCredentialTypes() {\n"
"\t\treturn delegate.getCredentialTypes();\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:71
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<HttpCredentialTransport> getCredentialTransport() {\n"
"\t\treturn delegate.getCredentialTransport();\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:73
#: upstream/_guides/security-customization.adoc:135
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-customization.adoc:76
#, fuzzy, no-wrap
msgid "Dealing with more than one HttpAuthenticationMechanism"
msgstr "Lidar com mais do que um HttpAuthenticationMechanism"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:79
#, fuzzy
msgid "More than one `HttpAuthenticationMechanism` can be combined, for example, the built-in `Basic` or `JWT` mechanism provided by `quarkus-smallrye-jwt` has to be used to verify the service clients credentials passed as the HTTP `Authorization` `Basic` or `Bearer` scheme values while the `Authorization Code` mechanism provided by `quarkus-oidc` has to be used to authenticate the users with Keycloak or other OpenID Connect providers."
msgstr "Mais do que um `HttpAuthenticationMechanism` pode ser combinado, por exemplo, o mecanismo incorporado `Basic` ou `JWT` fornecido por `quarkus-smallrye-jwt` tem de ser utilizado para verificar as credenciais dos clientes do serviço passadas como valores de esquema HTTP `Authorization` `Basic` ou `Bearer`, enquanto o mecanismo `Authorization Code` fornecido por `quarkus-oidc` tem de ser utilizado para autenticar os utilizadores com Keycloak ou outros fornecedores OpenID Connect."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:81
#, fuzzy
msgid "In such cases the mechanisms are asked to verify the credentials in turn until a `SecurityIdentity` is created. The mechanisms are sorted in the descending order using their priority. `Basic` authentication mechanism has the highest priority of `2000`, followed by the `Authorization Code` one with the priority of `1001`, with all other mechanisms provided by Quarkus having the priority of `1000`."
msgstr "Nestes casos, é pedido aos mecanismos que verifiquem as credenciais sucessivamente até ser criado um `SecurityIdentity`. Os mecanismos estão ordenados por ordem decrescente de prioridade. O mecanismo de autenticação `Basic` tem a prioridade máxima de `2000`, seguido do mecanismo `Authorization Code` com a prioridade de `1001`, tendo todos os outros mecanismos fornecidos pela Quarkus a prioridade de `1000`."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:83
#, fuzzy
msgid "If no credentials are provided then the mechanism specific challenge is created, for example, `401` status is returned by either `Basic` or `JWT` mechanisms, URL redirecting the user to the OpenID Connect provider is returned by `quarkus-oidc`, etc."
msgstr "Se não forem fornecidas credenciais, é criado o desafio específico do mecanismo, por exemplo, o estado `401` é devolvido pelos mecanismos `Basic` ou `JWT`, o URL que redirecciona o utilizador para o fornecedor OpenID Connect é devolvido por `quarkus-oidc`, etc."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:85
#, fuzzy
msgid "So if `Basic` and `Authorization Code` mechanisms are combined then `401` will be returned if no credentials are provided and if `JWT` and `Authorization Code` mechanisms are combined then a redirect URL will be returned."
msgstr "Assim, se os mecanismos `Basic` e `Authorization Code` forem combinados, será devolvido `401` se não forem fornecidas credenciais e se os mecanismos `JWT` e `Authorization Code` forem combinados, será devolvido um URL de redireccionamento."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:87
#, fuzzy
msgid "In some cases such a default logic of selecting the challenge is exactly what is required by a given application, but sometimes it may not meet the requirements. In such cases (or indeed in other similar cases where you'd like to change the order in which the mechanisms are asked to handle the current authentication or challenge request), you can create a custom mechanism and choose which mechanism should create a challenge, for example:"
msgstr "Em alguns casos, essa lógica predefinida de seleção do desafio é exatamente o que é exigido por uma determinada aplicação, mas por vezes pode não satisfazer os requisitos. Nesses casos (ou mesmo noutros casos semelhantes em que pretenda alterar a ordem pela qual os mecanismos são solicitados a tratar o pedido de autenticação ou desafio atual), pode criar um mecanismo personalizado e escolher qual o mecanismo que deve criar um desafio, por exemplo:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:94
#, no-wrap
msgid ""
"@Alternative <1>\n"
"@Priority(1)\n"
"@ApplicationScoped\n"
"public class CustomAwareJWTAuthMechanism implements HttpAuthenticationMechanism {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:99
#, no-wrap
msgid ""
"\t@Inject\n"
"\tJWTAuthMechanism jwt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:102
#, no-wrap
msgid ""
"        @Inject\n"
"\tOidcAuthenticationMechanism oidc;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:107
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<SecurityIdentity> authenticate(RoutingContext context, IdentityProviderManager identityProviderManager) {\n"
"\t    return selectBetweenJwtAndOidc(context).authenticate(context, identityProviderManager);\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:112
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<ChallengeData> getChallenge(RoutingContext context) {\n"
"            return selectBetweenJwtAndOidcChallenge(context).getChallenge(context);\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:120
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Set<Class<? extends AuthenticationRequest>> getCredentialTypes() {\n"
"            Set<Class<? extends AuthenticationRequest>> credentialTypes = new HashSet<>();\n"
"            credentialTypes.addAll(jwt.getCredentialTypes());\n"
"            credentialTypes.addAll(oidc.getCredentialTypes());\n"
"            return credentialTypes;\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:125
#, no-wrap
msgid ""
"        @Override\n"
"        public Uni<HttpCredentialTransport> getCredentialTransport(RoutingContext context) {\n"
"            return selectBetweenJwtAndOidc(context).getCredentialTransport(context);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:129
#, no-wrap
msgid ""
"        private HttpAuthenticationMechanism selectBetweenJwtAndOidc(RoutingContext context) {\n"
"            ....\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:133
#, no-wrap
msgid ""
"        private HttpAuthenticationMechanism selectBetweenJwtAndOidcChallenge(RoutingContext context) {\n"
"            // for example, if no `Authorization` header is available and no `code` parameter is provided - use `jwt` to create a challenge\n"
"        }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:137
#, fuzzy
msgid "Declaring the mechanism an alternative bean ensures this mechanism is used rather than `OidcAuthenticationMechanism` and `JWTAuthMechanism`."
msgstr "Declarar o mecanismo como um bean alternativo garante que este mecanismo é utilizado em vez de `OidcAuthenticationMechanism` e `JWTAuthMechanism`."

#. type: Title ==
#: upstream/_guides/security-customization.adoc:139
#, fuzzy, no-wrap
msgid "Security Identity Customization"
msgstr "Personalização da identidade de segurança"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:142
#, fuzzy
msgid "Internally, the identity providers create and update an instance of the `io.quarkus.security.identity.SecurityIdentity` class which holds the principal, roles, credentials which were used to authenticate the client (user) and other security attributes. An easy option to customize `SecurityIdentity` is to register a custom `SecurityIdentityAugmentor`. For example, the augmentor below adds an addition role:"
msgstr "Internamente, os fornecedores de identidade criam e actualizam uma instância da classe `io.quarkus.security.identity.SecurityIdentity` que contém o principal, as funções, as credenciais que foram utilizadas para autenticar o cliente (utilizador) e outros atributos de segurança. Uma opção fácil para personalizar `SecurityIdentity` é registar um `SecurityIdentityAugmentor` personalizado. Por exemplo, o aumentador abaixo acrescenta uma função adicional:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:150
#, no-wrap
msgid ""
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:153
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import java.util.function.Supplier;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:156
#: upstream/_guides/security-customization.adoc:198
#: upstream/_guides/security-customization.adoc:254
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class RolesAugmentor implements SecurityIdentityAugmentor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:160
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        return Uni.createFrom().item(build(identity));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:164
#, no-wrap
msgid ""
"        // Do 'return context.runBlocking(build(identity));'\n"
"        // if a blocking call is required to customize the identity\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:171
#, no-wrap
msgid ""
"    private Supplier<SecurityIdentity> build(SecurityIdentity identity) {\n"
"        if(identity.isAnonymous()) {\n"
"            return () -> identity;\n"
"        } else {\n"
"            // create a new builder and copy principal, attributes, credentials and roles from the original identity\n"
"            QuarkusSecurityIdentity.Builder builder = QuarkusSecurityIdentity.builder(identity);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:178
#, no-wrap
msgid ""
"            // add custom role source here\n"
"            builder.addRole(\"dummy\");\n"
"            return builder::build;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:181
#, fuzzy
msgid "Here is another example showing how to use the client certificate available in the current xref:security-authentication-mechanisms.adoc#mutual-TLS-authentication[mutual TLS (mTLS) authentication] request to add more roles:"
msgstr "Eis outro exemplo que mostra como utilizar o certificado de cliente disponível no pedido de  link:security-authentication-mechanisms.html#mutual-TLS-authentication[autenticação mútua TLS (mTLS)] atual para adicionar mais funções:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:191
#, no-wrap
msgid ""
"import java.security.cert.X509Certificate;\n"
"import io.quarkus.security.credential.CertificateCredential;\n"
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:195
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import java.util.function.Supplier;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:203
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        return Uni.createFrom().item(build(identity));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:207
#, no-wrap
msgid ""
"    private Supplier<SecurityIdentity> build(SecurityIdentity identity) {\n"
"        // create a new builder and copy principal, attributes, credentials and roles from the original identity\n"
"        QuarkusSecurityIdentity.Builder builder = QuarkusSecurityIdentity.builder(identity);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:214
#, no-wrap
msgid ""
"        CertificateCredential certificate = identity.getCredential(CertificateCredential.class);\n"
"        if (certificate != null) {\n"
"            builder.addRoles(extractRoles(certificate.getCertificate()));\n"
"        }\n"
"        return builder::build;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:217
#, no-wrap
msgid ""
"    private Set<String> extractRoles(X509Certificate certificate) {\n"
"        String name = certificate.getSubjectX500Principal().getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:228
#, no-wrap
msgid ""
"        switch (name) {\n"
"            case \"CN=client\":\n"
"                return Collections.singleton(\"user\");\n"
"            case \"CN=guest-client\":\n"
"                return Collections.singleton(\"guest\");\n"
"            default:\n"
"                return Collections.emptySet();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:234
#, fuzzy
msgid "If more than one custom `SecurityIdentityAugmentor` is registered then they will be considered equal candidates and invoked in random order.  You can enforce the order by implementing a default `SecurityIdentityAugmentor#priority` method. Augmentors with higher priorities will be invoked first."
msgstr "Se for registado mais do que um `SecurityIdentityAugmentor` personalizado, estes serão considerados candidatos iguais e invocados por ordem aleatória. Pode impor a ordem implementando um método `SecurityIdentityAugmentor#priority` predefinido. Os reforçadores com prioridades mais altas serão invocados primeiro."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:238
#, fuzzy
msgid "By default, the request context is not activated when augmenting the security identity, this means that if you want to use for example Hibernate that mandates a request context, you will have a `jakarta.enterprise.context.ContextNotActiveException`."
msgstr "Por defeito, o contexto de pedido não é ativado quando se aumenta a identidade de segurança, o que significa que se quiser utilizar, por exemplo, o Hibernate que exige um contexto de pedido, terá um `jakarta.enterprise.context.ContextNotActiveException`."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:240
#, fuzzy
msgid "The solution is to activate the request context, the following example shows how to get the roles from an Hibernate with Panache `UserRoleEntity`."
msgstr "A solução consiste em ativar o contexto do pedido. O exemplo seguinte mostra como obter as funções de um Hibernate com Panache `UserRoleEntity`."

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:247
#, no-wrap
msgid ""
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:251
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.enterprise.inject.Instance;\n"
"import jakarta.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:257
#, no-wrap
msgid ""
"    @Inject\n"
"    Instance<SecurityIdentitySupplier> identitySupplierInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:263
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        if(identity.isAnonymous()) {\n"
"            return Uni.createFrom().item(identity);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:270
#, no-wrap
msgid ""
"        // Hibernate ORM is blocking\n"
"        SecurityIdentitySupplier identitySupplier = identitySupplierInstance.get();\n"
"        identitySupplier.setIdentity(identity);\n"
"        return context.runBlocking(identitySupplier);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:276
#, no-wrap
msgid ""
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:280
#, no-wrap
msgid ""
"import jakarta.enterprise.context.Dependent;\n"
"import jakarta.enterprise.context.control.ActivateRequestContext;\n"
"import java.util.function.Supplier;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:283
#, no-wrap
msgid ""
"@Dependent\n"
"class SecurityIdentitySupplier implements Supplier<SecurityIdentity> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:285
#, no-wrap
msgid "    private SecurityIdentity identity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:291
#, no-wrap
msgid ""
"    @Override\n"
"    @ActivateRequestContext\n"
"    public SecurityIdentity get() {\n"
"        QuarkusSecurityIdentity.Builder builder = QuarkusSecurityIdentity.builder(identity);\n"
"        String user = identity.getPrincipal().getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:295
#, no-wrap
msgid ""
"        UserRoleEntity.<userRoleEntity>streamAll()\n"
"                .filter(role -> user.equals(role.user))\n"
"                .forEach(role -> builder.addRole(role.role));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:298
#, no-wrap
msgid ""
"        return builder.build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:303
#, no-wrap
msgid ""
"    public void setIdentity(SecurityIdentity identity) {\n"
"        this.identity = identity;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-customization.adoc:306
#, fuzzy, no-wrap
msgid "Custom Jakarta REST SecurityContext"
msgstr "Jakarta REST SecurityContext personalizado"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:309
#, fuzzy
msgid "If you use Jakarta REST `ContainerRequestFilter` to set a custom Jakarta REST `SecurityContext` then make sure `ContainerRequestFilter` runs in the Jakarta REST pre-match phase by adding a `@PreMatching` annotation to it for this custom security context to be linked with Quarkus `SecurityIdentity`, for example:"
msgstr "Se utilizar o Jakarta REST `ContainerRequestFilter` para definir um Jakarta REST personalizado `SecurityContext`, certifique-se de que o `ContainerRequestFilter` é executado na fase de pré-combinação do Jakarta REST, adicionando-lhe uma anotação `@PreMatching` para que este contexto de segurança personalizado seja ligado ao Quarkus `SecurityIdentity`, por exemplo:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:313
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:319
#, no-wrap
msgid ""
"import jakarta.ws.rs.container.ContainerRequestContext;\n"
"import jakarta.ws.rs.container.ContainerRequestFilter;\n"
"import jakarta.ws.rs.container.PreMatching;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
"import jakarta.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:338
#, no-wrap
msgid ""
"@Provider\n"
"@PreMatching\n"
"public class SecurityOverrideFilter implements ContainerRequestFilter {\n"
"    @Override\n"
"    public void filter(ContainerRequestContext requestContext) throws IOException {\n"
"        String user = requestContext.getHeaders().getFirst(\"User\");\n"
"        String role = requestContext.getHeaders().getFirst(\"Role\");\n"
"        if (user != null && role != null) {\n"
"            requestContext.setSecurityContext(new SecurityContext() {\n"
"                @Override\n"
"                public Principal getUserPrincipal() {\n"
"                    return new Principal() {\n"
"                        @Override\n"
"                        public String getName() {\n"
"                            return user;\n"
"                        }\n"
"                    };\n"
"                }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:343
#, no-wrap
msgid ""
"                @Override\n"
"                public boolean isUserInRole(String r) {\n"
"                    return role.equals(r);\n"
"                }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:348
#, no-wrap
msgid ""
"                @Override\n"
"                public boolean isSecure() {\n"
"                    return false;\n"
"                }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:355
#, no-wrap
msgid ""
"                @Override\n"
"                public String getAuthenticationScheme() {\n"
"                    return \"basic\";\n"
"                }\n"
"            });\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:358
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-customization.adoc:360
#, fuzzy, no-wrap
msgid "Disabling Authorization"
msgstr "Desativar a autorização"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:363
#, fuzzy
msgid "If you have a good reason to disable the authorization then you can register a custom `AuthorizationController`:"
msgstr "Se tiver um bom motivo para desativar a autorização, pode registar um `AuthorizationController` personalizado:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:372
#, no-wrap
msgid ""
"@Alternative\n"
"@Priority(Interceptor.Priority.LIBRARY_AFTER)\n"
"@ApplicationScoped\n"
"public class DisabledAuthController extends AuthorizationController {\n"
"    @ConfigProperty(name = \"disable.authorization\", defaultValue = \"false\")\n"
"    boolean disableAuthorization;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:378
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isAuthorizationEnabled() {\n"
"        return !disableAuthorization;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:381
#, fuzzy
msgid "For manual testing Quarkus provides a convenient config property to disable authorization in dev mode. This property has the exact same effect as the custom `AuthorizationController` shown above, but is only available in dev mode:"
msgstr "Para testes manuais, o Quarkus fornece uma propriedade de configuração conveniente para desativar a autorização no modo de desenvolvimento. Esta propriedade tem exatamente o mesmo efeito que o `AuthorizationController` personalizado mostrado acima, mas só está disponível no modo de desenvolvimento:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:385
#, no-wrap
msgid "quarkus.security.auth.enabled-in-dev-mode=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:388
#, fuzzy
msgid "Please also see xref:security-testing.adoc#testing-security[TestingSecurity Annotation] section on how to disable the security checks using `TestSecurity` annotation."
msgstr "Consulte também a secção  link:security-testing.html#testing-security[TestingSecurity Annotation] para saber como desativar as verificações de segurança utilizando a anotação `TestSecurity`."

#. type: Title ==
#: upstream/_guides/security-customization.adoc:389
#, fuzzy, no-wrap
msgid "Registering Security Providers"
msgstr "Registo de fornecedores de segurança"

#. type: Title ===
#: upstream/_guides/security-customization.adoc:391
#, fuzzy, no-wrap
msgid "Default providers"
msgstr "Fornecedores por defeito"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:397
#, fuzzy
msgid "When running in native mode, the default behavior for GraalVM native executable generation is to only include the main \"SUN\" provider unless you have enabled SSL, in which case all security providers are registered. If you are not using SSL, then you can selectively register security providers by name using the `quarkus.security.security-providers` property. The following example illustrates configuration to register the \"SunRsaSign\" and \"SunJCE\" security providers:"
msgstr "Ao executar no modo nativo, o comportamento padrão para a geração de executáveis nativos GraalVM é incluir apenas o provedor principal \"SUN\", a menos que você tenha ativado o SSL, caso em que todos os provedores de segurança são registrados. Se não estiver a utilizar SSL, então pode registar seletivamente os fornecedores de segurança por nome utilizando a propriedade `quarkus.security.security-providers`. O exemplo seguinte ilustra a configuração para registar os fornecedores de segurança \"SunRsaSign\" e \"SunJCE\":"

#. type: Block title
#: upstream/_guides/security-customization.adoc:398
#, fuzzy, no-wrap
msgid "Example Security Providers Configuration"
msgstr "Exemplo de configuração de fornecedores de segurança"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:402
#, no-wrap
msgid "quarkus.security.security-providers=SunRsaSign,SunJCE\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-customization.adoc:405
#, fuzzy, no-wrap
msgid "BouncyCastle"
msgstr "BouncyCastle"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:408
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jce.provider.BouncyCastleProvider` JCE provider then please set a `BC` provider name:"
msgstr "Se precisar de registar um fornecedor de JCE `org.bouncycastle.jce.provider.BouncyCastleProvider`, defina um nome de fornecedor `BC`:"

#. type: Block title
#: upstream/_guides/security-customization.adoc:409
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle Configuration"
msgstr "Exemplo de configuração do BouncyCastle dos fornecedores de segurança"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:413
#, no-wrap
msgid "quarkus.security.security-providers=BC\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:416
#, fuzzy
msgid "and add the BouncyCastle provider dependency:"
msgstr "e adicionar a dependência do fornecedor BouncyCastle:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:424
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.bouncycastle</groupId>\n"
"    <artifactId>bcprov-jdk18on</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:430
#, no-wrap
msgid "implementation(\"org.bouncycastle:bcprov-jdk18on\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-customization.adoc:433
#, fuzzy, no-wrap
msgid "BouncyCastle JSSE"
msgstr "BouncyCastle JSSE"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:436
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE provider and use it instead of the default SunJSSE provider then please set a `BCJSSE` provider name:"
msgstr "Se precisar de registar um fornecedor `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE e utilizá-lo em vez do fornecedor SunJSSE predefinido, defina um nome de fornecedor `BCJSSE`:"

#. type: Block title
#: upstream/_guides/security-customization.adoc:437
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle JSSE Configuration"
msgstr "Exemplo de configuração do JSSE dos fornecedores de segurança BouncyCastle"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:441
#, no-wrap
msgid "quarkus.security.security-providers=BCJSSE\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:443
#: upstream/_guides/security-customization.adoc:518
#, no-wrap
msgid "quarkus.http.ssl.client-auth=REQUIRED\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:448
#, no-wrap
msgid ""
"quarkus.http.ssl.certificate.key-store-file=server-keystore.jks\n"
"quarkus.http.ssl.certificate.key-store-password=password\n"
"quarkus.http.ssl.certificate.trust-store-file=server-truststore.jks\n"
"quarkus.http.ssl.certificate.trust-store-password=password\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:451
#, fuzzy
msgid "and add the BouncyCastle TLS dependency:"
msgstr "e adicionar a dependência TLS do BouncyCastle:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:459
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.bouncycastle</groupId>\n"
"    <artifactId>bctls-jdk18on</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:465
#, no-wrap
msgid "implementation(\"org.bouncycastle:bctls-jdk18on\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-customization.adoc:468
#, fuzzy, no-wrap
msgid "BouncyCastle FIPS"
msgstr "BouncyCastle FIPS"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:471
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` JCE provider then please set a `BCFIPS` provider name:"
msgstr "Se precisar de registar um fornecedor de JCE `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider`, defina um nome de fornecedor `BCFIPS`:"

#. type: Block title
#: upstream/_guides/security-customization.adoc:472
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle FIPS Configuration"
msgstr "Exemplo de configuração FIPS do BouncyCastle dos fornecedores de segurança"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:476
#, no-wrap
msgid "quarkus.security.security-providers=BCFIPS\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:479
#, fuzzy
msgid "and add the BouncyCastle FIPS provider dependency:"
msgstr "e adicionar a dependência do fornecedor BouncyCastle FIPS:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:487
#: upstream/_guides/security-customization.adoc:543
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.bouncycastle</groupId>\n"
"    <artifactId>bc-fips</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:493
#, no-wrap
msgid "implementation(\"org.bouncycastle:bc-fips\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:498
#, fuzzy
msgid "`BCFIPS` provider option is supported in native image but the algorithm self-tests which rely on `java.security.SecureRandom` to verify the generated keys have been removed for these tests to pass. The following classes have been affected:"
msgstr "`BCFIPS` A opção do provedor é suportada na imagem nativa, mas os autotestes do algoritmo que dependem do `java.security.SecureRandom` para verificar as chaves geradas foram removidos para que esses testes sejam aprovados. As seguintes classes foram afectadas:"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:499
#, fuzzy
msgid "`org.bouncycastle.crypto.general.DSA`"
msgstr "`org.bouncycastle.crypto.general.DSA`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:500
#, fuzzy
msgid "`org.bouncycastle.crypto.general.DSTU4145`"
msgstr "`org.bouncycastle.crypto.general.DSTU4145`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:501
#, fuzzy
msgid "`org.bouncycastle.crypto.general.ECGOST3410`"
msgstr "`org.bouncycastle.crypto.general.ECGOST3410`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:502
#, fuzzy
msgid "`org.bouncycastle.crypto.general.GOST3410`"
msgstr "`org.bouncycastle.crypto.general.GOST3410`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:503
#, fuzzy
msgid "`org.bouncycastle.crypto.fips.FipsDSA`"
msgstr "`org.bouncycastle.crypto.fips.FipsDSA`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:504
#, fuzzy
msgid "`org.bouncycastle.crypto.fips.FipsEC`"
msgstr "`org.bouncycastle.crypto.fips.FipsEC`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:505
#, fuzzy
msgid "`org.bouncycastle.crypto.fips.FipsRSA`"
msgstr "`org.bouncycastle.crypto.fips.FipsRSA`"

#. type: Title ===
#: upstream/_guides/security-customization.adoc:508
#, fuzzy, no-wrap
msgid "BouncyCastle JSSE FIPS"
msgstr "BouncyCastle JSSE FIPS"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:511
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE provider and use it in combination with `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` instead of the default SunJSSE provider then please set a `BCFIPSJSSE` provider name:"
msgstr "Se precisar de registar um fornecedor `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE e utilizá-lo em combinação com `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` em vez do fornecedor SunJSSE predefinido, defina um nome de fornecedor `BCFIPSJSSE`:"

#. type: Block title
#: upstream/_guides/security-customization.adoc:512
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle FIPS JSSE Configuration"
msgstr "Exemplo de configuração do BouncyCastle FIPS JSSE dos fornecedores de segurança"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:516
#, no-wrap
msgid "quarkus.security.security-providers=BCFIPSJSSE\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:527
#, no-wrap
msgid ""
"quarkus.http.ssl.certificate.key-store-file=server-keystore.jks\n"
"quarkus.http.ssl.certificate.key-store-password=password\n"
"quarkus.http.ssl.certificate.key-store-file-type=BCFKS\n"
"quarkus.http.ssl.certificate.key-store-provider=BCFIPS\n"
"quarkus.http.ssl.certificate.trust-store-file=server-truststore.jks\n"
"quarkus.http.ssl.certificate.trust-store-password=password\n"
"quarkus.http.ssl.certificate.trust-store-file-type=BCFKS\n"
"quarkus.http.ssl.certificate.trust-store-provider=BCFIPS\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:530
#, fuzzy
msgid "and the BouncyCastle TLS dependency optimized for using the BouncyCastle FIPS provider:"
msgstr "e a dependência do BouncyCastle TLS optimizada para utilizar o fornecedor BouncyCastle FIPS:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:538
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>org.bouncycastle</groupId>\n"
"  <artifactId>bctls-fips</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:550
#, no-wrap
msgid ""
"implementation(\"org.bouncycastle:bctls-fips\")\n"
"implementation(\"org.bouncycastle:bc-fips\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:554
#, fuzzy
msgid "Note that the keystore and truststore type and provider are set to `BCFKS` and `BCFIPS`.  One can generate a keystore with this type and provider like this:"
msgstr "Note-se que o tipo e o fornecedor do keystore e do truststore estão definidos para `BCFKS` e `BCFIPS`. É possível gerar um keystore com este tipo e fornecedor da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:558
#, no-wrap
msgid "keytool -genkey -alias server -keyalg RSA -keystore server-keystore.jks -keysize 2048 -keypass password -provider org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider -providerpath $PATH_TO_BC_FIPS_JAR -storetype BCFKS\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:563
#, fuzzy
msgid "`BCFIPSJSSE` provider option is currently not supported in native image."
msgstr "`BCFIPSJSSE` A opção de fornecedor não é atualmente suportada na imagem nativa."

#. type: Title ===
#: upstream/_guides/security-customization.adoc:566
#, fuzzy, no-wrap
msgid "SunPKCS11"
msgstr "SunPKCS11"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:569
#, fuzzy
msgid "`SunPKCS11` provider provides a bridge to specific `PKCS#11` implementations such as cryptographic smartcards and other Hardware Security Modules, Network Security Services in FIPS mode, etc."
msgstr "`SunPKCS11` fornece uma ponte para implementações específicas de `PKCS#11`, tais como cartões inteligentes criptográficos e outros módulos de segurança de hardware, serviços de segurança de rede em modo FIPS, etc."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:571
#, fuzzy
msgid "Typically, in order to work with `SunPKCS11`, one needs to install a `PKCS#11` implementation, generate a configuration which usually refers to a shared library, token slot, etc and write the following Java code:"
msgstr "Normalmente, para trabalhar com `SunPKCS11`, é necessário instalar uma implementação de `PKCS#11`, gerar uma configuração que normalmente se refere a uma biblioteca partilhada, a uma ranhura de token, etc. e escrever o seguinte código Java:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:576
#, no-wrap
msgid ""
"import java.security.Provider;\n"
"import java.security.Security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:578
#, no-wrap
msgid "String configuration = \"pkcs11.cfg\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:584
#, no-wrap
msgid ""
"Provider sunPkcs11 = Security.getProvider(\"SunPKCS11\");\n"
"Provider pkcsImplementation = sunPkcs11.configure(configuration);\n"
"// or prepare configuration in the code or read it from the file such as \"pkcs11.cfg\" and do\n"
"// sunPkcs11.configure(\"--\" + configuration);\n"
"Security.addProvider(pkcsImplementation);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:587
#, fuzzy
msgid "In Quarkus you can achieve the same at the configuration level only without having to modify the code, for example:"
msgstr "No Quarkus, pode conseguir o mesmo apenas ao nível da configuração, sem ter de modificar o código, por exemplo:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:592
#, no-wrap
msgid ""
"quarkus.security.security-providers=SunPKCS11\n"
"quarkus.security.security-provider-config.SunPKCS11=pkcs11.cfg\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:597
#, fuzzy
msgid "Note that while accessing the `SunPKCS11` bridge provider is supported in native image, configuring `SunPKCS11` is currently not supported in native image at the Quarkus level."
msgstr "Note-se que, embora o acesso ao fornecedor de pontes `SunPKCS11` seja suportado em imagem nativa, a configuração de `SunPKCS11` não é atualmente suportada em imagem nativa ao nível do Quarkus."

#. type: Title ==
#: upstream/_guides/security-customization.adoc:599
#, fuzzy, no-wrap
msgid "Reactive Security"
msgstr "Segurança reactiva"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:602
#, fuzzy
msgid "If you are going to use security in a reactive environment, you will likely need SmallRye Context Propagation:"
msgstr "Se vai utilizar a segurança num ambiente reativo, é provável que precise do SmallRye Context Propagation:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:610
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-context-propagation</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:616
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-smallrye-context-propagation\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:622
#, fuzzy
msgid "This will allow you to propagate the identity throughout the reactive callbacks. You also need to make sure you are using an executor that is capable of propagating the identity (e.g. no `CompletableFuture.supplyAsync`), to make sure that Quarkus can propagate it. For more information see the xref:context-propagation.adoc[Context Propagation Guide]."
msgstr "Isto permitir-lhe-á propagar a identidade através das chamadas de retorno reactivas. Também é necessário certificar-se de que está a utilizar um executor que é capaz de propagar a identidade (por exemplo, não `CompletableFuture.supplyAsync`), para garantir que o Quarkus a pode propagar. Para obter mais informações, consulte o  link:context-propagation.html[Guia de propagação de contexto]."

#. type: Title ==
#: upstream/_guides/security-customization.adoc:623
#, fuzzy, no-wrap
msgid "References"
msgstr "Referências"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:626
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "link:security-overview.html[Visão geral do Quarkus Security]"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:627
#, fuzzy
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr "link:security-architecture.html[Arquitetura de segurança Quarkus]"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:628
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
msgstr "link:security-authentication-mechanisms.html#other-supported-authentication-mechanisms[Mecanismos de autenticação no Quarkus]"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:628
#, fuzzy
msgid "xref:security-identity-providers.adoc[Identity providers]"
msgstr "link:security-identity-providers.html[Fornecedores de identidade]"
