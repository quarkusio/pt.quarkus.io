# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/centralized-log-management.adoc:6
#, fuzzy, no-wrap
msgid "Centralized log management (Graylog, Logstash, Fluentd)"
msgstr "Gestão centralizada de registos (Graylog, Logstash, Fluentd)"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:13
#, fuzzy
msgid "This guide explains how you can send your logs to a centralized log management system like Graylog, Logstash (inside the Elastic Stack or ELK - Elasticsearch, Logstash, Kibana) or Fluentd (inside EFK - Elasticsearch, Fluentd, Kibana)."
msgstr "Este guia explica como pode enviar os seus registos para um sistema de gestão de registos centralizado como o Graylog, o Logstash (dentro do Elastic Stack ou ELK - Elasticsearch, Logstash, Kibana) ou o Fluentd (dentro do EFK - Elasticsearch, Fluentd, Kibana)."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:16
#, fuzzy
msgid "There are a lot of different ways to centralize your logs (if you are using Kubernetes, the simplest way is to log to the console and ask you cluster administrator to integrate a central log manager inside your cluster).  In this guide, we will expose how to send them to an external tool using the `quarkus-logging-gelf` extension that can use TCP or UDP to send logs in the Graylog Extended Log Format (GELF)."
msgstr "Existem muitas maneiras diferentes de centralizar seus logs (se você estiver usando o Kubernetes, a maneira mais simples é fazer logon no console e pedir ao administrador do cluster para integrar um gerenciador de log central dentro do seu cluster). Neste guia, vamos expor como enviá-los para uma ferramenta externa usando a extensão `quarkus-logging-gelf` que pode usar TCP ou UDP para enviar logs no Graylog Extended Log Format (GELF)."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:19
#, fuzzy
msgid "The `quarkus-logging-gelf` extension will add a GELF log handler to the underlying logging backend that Quarkus uses (jboss-logmanager).  By default, it is disabled, if you enable it but still use another handler (by default the console handler is enabled), your logs will be sent to both handlers."
msgstr "A extensão `quarkus-logging-gelf` adicionará um gestor de registos GELF ao backend de registo subjacente que o Quarkus utiliza (jboss-logmanager). Por predefinição, está desactivada. Se a ativar mas continuar a utilizar outro gestor (por predefinição, o gestor da consola está ativado), os seus registos serão enviados para ambos os gestores."

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:20
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:25
#, fuzzy, no-wrap
msgid "Example application"
msgstr "Exemplo de aplicação"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:28
#, fuzzy
msgid "The following examples will all be based on the same example application that you can create with the following steps."
msgstr "Os exemplos seguintes baseiam-se todos na mesma aplicação de exemplo que pode criar com os passos seguintes."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:30
#, fuzzy
msgid "Create an application with the `quarkus-logging-gelf` extension. You can use the following command to create it:"
msgstr "Crie uma aplicação com a extensão `quarkus-logging-gelf`. Pode utilizar o seguinte comando para a criar:"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:37
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `logging-gelf` extension to your project by running the following command in your project base directory:"
msgstr "Se já tiver o seu projeto Quarkus configurado, pode adicionar a extensão `logging-gelf` ao seu projeto executando o seguinte comando no diretório de base do seu projeto:"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:42
#, fuzzy
msgid "This will add the following dependency to your build file:"
msgstr "Isto irá adicionar a seguinte dependência ao seu ficheiro de compilação:"

#. type: Block title
#: upstream/_guides/centralized-log-management.adoc:44
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:50
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-logging-gelf</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/centralized-log-management.adoc:53
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:56
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-logging-gelf\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:59
#, fuzzy
msgid "For demonstration purposes, we create an endpoint that does nothing but log a sentence. You don't need to do this inside your application."
msgstr "Para fins de demonstração, criamos um ponto final que não faz nada além de registar uma frase. Não precisa de fazer isto dentro da sua aplicação."

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:65
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:67
#, no-wrap
msgid "import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:72
#, no-wrap
msgid ""
"@Path(\"/gelf-logging\")\n"
"@ApplicationScoped\n"
"public class GelfLoggingResource {\n"
"    private static final Logger LOG = Logger.getLogger(GelfLoggingResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:77
#, no-wrap
msgid ""
"    @GET\n"
"    public void log() {\n"
"        LOG.info(\"Some useful log message\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:79
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:82
#, fuzzy
msgid "Configure the GELF log handler to send logs to an external UDP endpoint on the port 12201:"
msgstr "Configure o gestor de registos GELF para enviar registos para um ponto de extremidade UDP externo na porta 12201:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:88
#, no-wrap
msgid ""
"quarkus.log.handler.gelf.enabled=true\n"
"quarkus.log.handler.gelf.host=localhost\n"
"quarkus.log.handler.gelf.port=12201\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:90
#, fuzzy, no-wrap
msgid "Send logs to Graylog"
msgstr "Enviar registos para o Graylog"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:93
#, fuzzy
msgid "To send logs to Graylog, you first need to launch the components that compose the Graylog stack:"
msgstr "Para enviar registos para o Graylog, primeiro é necessário iniciar os componentes que compõem a pilha do Graylog:"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:95
#, fuzzy
msgid "MongoDB"
msgstr "MongoDB"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:96
#: upstream/_guides/centralized-log-management.adoc:182
#: upstream/_guides/centralized-log-management.adoc:273
#: upstream/_guides/centralized-log-management.adoc:361
#, fuzzy
msgid "Elasticsearch"
msgstr "Elasticsearch"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:97
#, fuzzy
msgid "Graylog"
msgstr "Graylog"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:99
#: upstream/_guides/centralized-log-management.adoc:186
#: upstream/_guides/centralized-log-management.adoc:277
#: upstream/_guides/centralized-log-management.adoc:365
#, fuzzy
msgid "You can do this via the following `docker-compose.yml` file that you can launch via `docker-compose up -d`:"
msgstr "Isto pode ser feito através do seguinte ficheiro `docker-compose.yml` que pode ser iniciado através de `docker-compose up -d`:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:103
#: upstream/_guides/centralized-log-management.adoc:281
#: upstream/_guides/centralized-log-management.adoc:369
#, no-wrap
msgid "version: '3.2'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:115
#, no-wrap
msgid ""
"services:\n"
"  elasticsearch:\n"
"    image: {elasticsearch-image}\n"
"    ports:\n"
"      - \"9200:9200\"\n"
"    environment:\n"
"      ES_JAVA_OPTS: \"-Xms512m -Xmx512m\"\n"
"      discovery.type: \"single-node\"\n"
"      cluster.routing.allocation.disk.threshold_enabled: false\n"
"    networks:\n"
"      - graylog\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:120
#, no-wrap
msgid ""
"  mongo:\n"
"    image: mongo:4.0\n"
"    networks:\n"
"      - graylog\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:138
#, no-wrap
msgid ""
"  graylog:\n"
"    image: graylog/graylog:4.3.0\n"
"    ports:\n"
"      - \"9000:9000\"\n"
"      - \"12201:12201/udp\"\n"
"      - \"1514:1514\"\n"
"    environment:\n"
"      GRAYLOG_HTTP_EXTERNAL_URI: \"http://127.0.0.1:9000/\"\n"
"      # CHANGE ME (must be at least 16 characters)!\n"
"      GRAYLOG_PASSWORD_SECRET: \"forpasswordencryption\"\n"
"      # Password: admin\n"
"      GRAYLOG_ROOT_PASSWORD_SHA2: \"8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918\"\n"
"    networks:\n"
"      - graylog\n"
"    depends_on:\n"
"      - elasticsearch\n"
"      - mongo\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:142
#, no-wrap
msgid ""
"networks:\n"
"  graylog:\n"
"    driver: bridge\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:146
#, fuzzy
msgid "Then, you need to create a UDP input in Graylog.  You can do it from the Graylog web console (System -> Input -> Select GELF UDP) available at http://localhost:9000 or via the API."
msgstr "Em seguida, é necessário criar uma entrada UDP no Graylog. Pode fazê-lo a partir da consola Web do Graylog (Sistema → Entrada → Selecionar GELF UDP) disponível em  http://localhost:9000  ou através da API."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:148
#, fuzzy
msgid "This curl example will create a new Input of type GELF UDP, it uses the default login from Graylog (admin/admin)."
msgstr "Este exemplo de curl criará uma nova entrada do tipo GELF UDP, que usa o login padrão do Graylog (admin/admin)."

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:154
#, no-wrap
msgid ""
"curl -H \"Content-Type: application/json\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"X-Requested-By: curl\" -X POST -v -d \\\n"
"'{\"title\":\"udp input\",\"configuration\":{\"recv_buffer_size\":262144,\"bind_address\":\"0.0.0.0\",\"port\":12201,\"decompress_size_limit\":8388608},\"type\":\"org.graylog2.inputs.gelf.udp.GELFUDPInput\",\"global\":true}' \\\n"
"http://localhost:9000/api/system/inputs\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:157
#, fuzzy
msgid "Launch your application, you should see your logs arriving inside Graylog."
msgstr "Inicie a sua aplicação e deverá ver os seus registos a chegar ao Graylog."

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:158
#, fuzzy, no-wrap
msgid "Send logs to Logstash / the Elastic Stack (ELK)"
msgstr "Enviar registos para o Logstash / o Elastic Stack (ELK)"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:161
#, fuzzy
msgid "Logstash comes by default with an Input plugin that can understand the GELF format, we will first create a pipeline that enables this plugin."
msgstr "O Logstash vem por padrão com um plugin Input que pode entender o formato GELF, vamos primeiro criar um pipeline que habilita esse plugin."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:163
#, fuzzy
msgid "Create the following file in `$HOME/pipelines/gelf.conf`:"
msgstr "Criar o seguinte ficheiro em `$HOME/pipelines/gelf.conf`:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:177
#, no-wrap
msgid ""
"input {\n"
"  gelf {\n"
"    port => 12201\n"
"  }\n"
"}\n"
"output {\n"
"  stdout {}\n"
"  elasticsearch {\n"
"    hosts => [\"http://elasticsearch:9200\"]\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:180
#, fuzzy
msgid "Finally, launch the components that compose the Elastic Stack:"
msgstr "Por fim, inicie os componentes que compõem o Elastic Stack:"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:183
#, fuzzy
msgid "Logstash"
msgstr "Logstash"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:184
#: upstream/_guides/centralized-log-management.adoc:275
#: upstream/_guides/centralized-log-management.adoc:363
#, fuzzy
msgid "Kibana"
msgstr "Kibana"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:191
#, no-wrap
msgid ""
"# Launch Elasticsearch\n"
"version: '3.2'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:204
#, no-wrap
msgid ""
"services:\n"
"  elasticsearch:\n"
"    image: {elasticsearch-image}\n"
"    ports:\n"
"      - \"9200:9200\"\n"
"      - \"9300:9300\"\n"
"    environment:\n"
"      ES_JAVA_OPTS: \"-Xms512m -Xmx512m\"\n"
"      discovery.type: \"single-node\"\n"
"      cluster.routing.allocation.disk.threshold_enabled: false\n"
"    networks:\n"
"      - elk\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:219
#, no-wrap
msgid ""
"  logstash:\n"
"    image: {logstash-image}\n"
"    volumes:\n"
"      - source: $HOME/pipelines\n"
"        target: /usr/share/logstash/pipeline\n"
"        type: bind\n"
"    ports:\n"
"      - \"12201:12201/udp\"\n"
"      - \"5000:5000\"\n"
"      - \"9600:9600\"\n"
"    networks:\n"
"      - elk\n"
"    depends_on:\n"
"      - elasticsearch\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:228
#, no-wrap
msgid ""
"  kibana:\n"
"    image: {kibana-image}\n"
"    ports:\n"
"      - \"5601:5601\"\n"
"    networks:\n"
"      - elk\n"
"    depends_on:\n"
"      - elasticsearch\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:232
#, no-wrap
msgid ""
"networks:\n"
"  elk:\n"
"    driver: bridge\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:236
#, fuzzy
msgid "Launch your application, you should see your logs arriving inside the Elastic Stack; you can use Kibana available at http://localhost:5601/ to access them."
msgstr "Inicie a sua aplicação e deverá ver os seus registos a chegar dentro do Elastic Stack; pode utilizar o Kibana disponível em  http://localhost:5601/  para lhes aceder."

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:237
#, fuzzy, no-wrap
msgid "Send logs to Fluentd (EFK)"
msgstr "Enviar registos para o Fluentd (EFK)"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:241
#, fuzzy
msgid "First, you need to create a Fluentd image with the needed plugins: elasticsearch and input-gelf.  You can use the following Dockerfile that should be created inside a `fluentd` directory."
msgstr "Primeiro, é necessário criar uma imagem do Fluentd com os plug-ins necessários: elasticsearch e input-gelf. Você pode usar o seguinte Dockerfile que deve ser criado dentro de um diretório `fluentd`."

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:247
#, no-wrap
msgid ""
"FROM fluent/fluentd:v1.3-debian\n"
"RUN [\"gem\", \"install\", \"fluent-plugin-elasticsearch\", \"--version\", \"3.7.0\"]\n"
"RUN [\"gem\", \"install\", \"fluent-plugin-input-gelf\", \"--version\", \"0.3.1\"]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:250
#, fuzzy
msgid "You can build the image or let docker-compose build it for you."
msgstr "Pode construir a imagem ou deixar que o docker-compose a construa por si."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:252
#, fuzzy
msgid "Then you need to create a fluentd configuration file inside `$HOME/fluentd/fluent.conf`"
msgstr "Em seguida, é necessário criar um ficheiro de configuração fluentd dentro de `$HOME/fluentd/fluent.conf`"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:261
#, no-wrap
msgid ""
"<source>\n"
"  type gelf\n"
"  tag example.gelf\n"
"  bind 0.0.0.0\n"
"  port 12201\n"
"</source>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:268
#, no-wrap
msgid ""
"<match example.gelf>\n"
"  @type elasticsearch\n"
"  host elasticsearch\n"
"  port 9200\n"
"  logstash_format true\n"
"</match>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:271
#, fuzzy
msgid "Finally, launch the components that compose the EFK Stack:"
msgstr "Por fim, inicie os componentes que compõem a EFK Stack:"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:274
#: upstream/_guides/centralized-log-management.adoc:362
#, fuzzy
msgid "Fluentd"
msgstr "Fluentd"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:294
#: upstream/_guides/centralized-log-management.adoc:382
#, no-wrap
msgid ""
"services:\n"
"  elasticsearch:\n"
"    image: {elasticsearch-image}\n"
"    ports:\n"
"      - \"9200:9200\"\n"
"      - \"9300:9300\"\n"
"    environment:\n"
"      ES_JAVA_OPTS: \"-Xms512m -Xmx512m\"\n"
"      discovery.type: \"single-node\"\n"
"      cluster.routing.allocation.disk.threshold_enabled: false\n"
"    networks:\n"
"      - efk\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:307
#, no-wrap
msgid ""
"  fluentd:\n"
"    build: fluentd\n"
"    ports:\n"
"      - \"12201:12201/udp\"\n"
"    volumes:\n"
"      - source: $HOME/fluentd\n"
"        target: /fluentd/etc\n"
"        type: bind\n"
"    networks:\n"
"      - efk\n"
"    depends_on:\n"
"      - elasticsearch\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:316
#: upstream/_guides/centralized-log-management.adoc:404
#, no-wrap
msgid ""
"  kibana:\n"
"    image: {kibana-image}\n"
"    ports:\n"
"      - \"5601:5601\"\n"
"    networks:\n"
"      - efk\n"
"    depends_on:\n"
"      - elasticsearch\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:320
#: upstream/_guides/centralized-log-management.adoc:408
#, no-wrap
msgid ""
"networks:\n"
"  efk:\n"
"    driver: bridge\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:323
#: upstream/_guides/centralized-log-management.adoc:422
#, fuzzy
msgid "Launch your application, you should see your logs arriving inside EFK: you can use Kibana available at http://localhost:5601/ to access them."
msgstr "Inicie a sua aplicação e deverá ver os seus registos a chegar ao EFK: pode utilizar o Kibana disponível em  http://localhost:5601/  para lhes aceder."

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:324
#, fuzzy, no-wrap
msgid "GELF alternative: use Syslog"
msgstr "Alternativa GELF: utilizar Syslog"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:328
#, fuzzy
msgid "You can also send your logs to Fluentd using a Syslog input.  As opposed to the GELF input, the Syslog input will not render multiline logs in one event, that's why we advise to use the GELF input that we implement in Quarkus."
msgstr "Também pode enviar os seus registos para o Fluentd utilizando uma entrada Syslog. Ao contrário da entrada GELF, a entrada Syslog não processa registos de várias linhas num único evento, pelo que aconselhamos a utilização da entrada GELF que implementamos no Quarkus."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:331
#, fuzzy
msgid "First, you need to create a Fluentd image with the elasticsearch plugin.  You can use the following Dockerfile that should be created inside a `fluentd` directory."
msgstr "Primeiro, é necessário criar uma imagem do Fluentd com o plug-in elasticsearch. Pode utilizar o seguinte Dockerfile que deve ser criado dentro de um diretório `fluentd`."

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:336
#, no-wrap
msgid ""
"FROM fluent/fluentd:v1.3-debian\n"
"RUN [\"gem\", \"install\", \"fluent-plugin-elasticsearch\", \"--version\", \"3.7.0\"]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:339
#, fuzzy
msgid "Then, you need to create a fluentd configuration file inside `$HOME/fluentd/fluent.conf`"
msgstr "Em seguida, é necessário criar um ficheiro de configuração fluentd dentro de `$HOME/fluentd/fluent.conf`"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:349
#, no-wrap
msgid ""
"<source>\n"
"  @type syslog\n"
"  port 5140\n"
"  bind 0.0.0.0\n"
"  message_format rfc5424\n"
"  tag system\n"
"</source>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:356
#, no-wrap
msgid ""
"<match **>\n"
"  @type elasticsearch\n"
"  host elasticsearch\n"
"  port 9200\n"
"  logstash_format true\n"
"</match>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:359
#, fuzzy
msgid "Then, launch the components that compose the EFK Stack:"
msgstr "De seguida, inicie os componentes que compõem a EFK Stack:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:395
#, no-wrap
msgid ""
"  fluentd:\n"
"    build: fluentd\n"
"    ports:\n"
"      - \"5140:5140/udp\"\n"
"    volumes:\n"
"      - source: $HOME/fluentd\n"
"        target: /fluentd/etc\n"
"        type: bind\n"
"    networks:\n"
"      - efk\n"
"    depends_on:\n"
"      - elasticsearch\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:411
#, fuzzy
msgid "Finally, configure your application to send logs to EFK using Syslog:"
msgstr "Por fim, configure a sua aplicação para enviar registos para o EFK utilizando o Syslog:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:419
#, no-wrap
msgid ""
"quarkus.log.syslog.enable=true\n"
"quarkus.log.syslog.endpoint=localhost:5140\n"
"quarkus.log.syslog.protocol=udp\n"
"quarkus.log.syslog.app-name=quarkus\n"
"quarkus.log.syslog.hostname=quarkus-test\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:423
#, fuzzy, no-wrap
msgid "Elasticsearch indexing consideration"
msgstr "Considerações sobre a indexação do Elasticsearch"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:428
#, fuzzy
msgid "Be careful that, by default, Elasticsearch will automatically map unknown fields (if not disabled in the index settings) by detecting their type.  This can become tricky if you use log parameters (which are included by default), or if you enable MDC inclusion (disabled by default), as the first log will define the type of the message parameter (or MDC parameter) field inside the index."
msgstr "Tenha em atenção que, por predefinição, o Elasticsearch mapeará automaticamente campos desconhecidos (se não estiverem desactivados nas definições do índice) detectando o respetivo tipo. Isto pode tornar-se complicado se utilizar parâmetros de registo (que são incluídos por predefinição) ou se ativar a inclusão de MDC (desactivada por predefinição), uma vez que o primeiro registo definirá o tipo do campo do parâmetro de mensagem (ou parâmetro MDC) dentro do índice."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:430
#, fuzzy
msgid "Imagine the following case:"
msgstr "Imagine o seguinte caso:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:435
#, no-wrap
msgid ""
"LOG.info(\"some {} message {} with {} param\", 1, 2, 3);\n"
"LOG.info(\"other {} message {} with {} param\", true, true, true);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:440
#, fuzzy
msgid "With log message parameters enabled, the first log message sent to Elasticsearch will have a `MessageParam0` parameter with an `int` type; this will configure the index with a field of type `integer`.  When the second message will arrive to Elasticsearch, it will have a `MessageParam0` parameter with the boolean value `true`, and this will generate an indexing error."
msgstr "Com os parâmetros de mensagem de registo activados, a primeira mensagem de registo enviada para o Elasticsearch terá um parâmetro `MessageParam0` com um tipo `int`; isto configurará o índice com um campo do tipo `integer`. Quando a segunda mensagem chegar ao Elasticsearch, terá um parâmetro `MessageParam0` com o valor booleano `true`, o que gerará um erro de indexação."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:443
#, fuzzy
msgid "To work around this limitation, you can disable sending log message parameters via `logging-gelf` by configuring `quarkus.log.handler.gelf.include-log-message-parameters=false`, or you can configure your Elasticsearch index to store those fields as text or keyword, Elasticsearch will then automatically make the translation from int/boolean to a String."
msgstr "Para contornar esta limitação, pode desativar o envio de parâmetros de mensagens de registo através de `logging-gelf` configurando `quarkus.log.handler.gelf.include-log-message-parameters=false`, ou pode configurar o seu índice Elasticsearch para armazenar esses campos como texto ou palavra-chave, o Elasticsearch fará então automaticamente a tradução de int/boolean para uma String."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:445
#, fuzzy
msgid "See the following documentation for Graylog (but the same issue exists for the other central logging stacks): link:https://docs.graylog.org/en/3.2/pages/configuration/elasticsearch.html#custom-index-mappings[Custom Index Mappings]."
msgstr "Consulte a seguinte documentação para o Graylog (mas o mesmo problema existe para as outras pilhas de registos centrais):  link:https://docs.graylog.org/en/3.2/pages/configuration/elasticsearch.html#custom-index-mappings[Mapeamentos de índices personalizados]."

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:447
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referência de configuração"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:450
#, fuzzy
msgid "Configuration is done through the usual `application.properties` file."
msgstr "A configuração é feita através do habitual ficheiro `application.properties`."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:454
#, fuzzy
msgid "This extension uses the `logstash-gelf` library that allow more configuration options via system properties, you can access its documentation here: https://logging.paluch.biz/ ."
msgstr "Esta extensão utiliza a biblioteca `logstash-gelf` que permite mais opções de configuração através das propriedades do sistema. Pode aceder à sua documentação aqui:  https://logging.paluch.biz/ ."
