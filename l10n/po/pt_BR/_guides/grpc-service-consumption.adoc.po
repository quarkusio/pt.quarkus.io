# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/grpc-service-consumption.adoc:6
#, fuzzy, no-wrap
msgid "Consuming a gRPC Service"
msgstr "Consumir um serviço gRPC"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:12
#, fuzzy
msgid "gRPC clients can be injected in your application code."
msgstr "Os clientes gRPC podem ser injectados no código da sua aplicação."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:15
#, fuzzy
msgid "Consuming gRPC services requires the gRPC classes to be generated.  Place your `proto` files in `src/main/proto` and run `mvn compile`."
msgstr "O consumo de serviços gRPC requer que as classes gRPC sejam geradas. Coloque seus arquivos `proto` em `src/main/proto` e execute `mvn compile`."

#. type: Title ==
#: upstream/_guides/grpc-service-consumption.adoc:16
#, fuzzy, no-wrap
msgid "Stubs and Injection"
msgstr "Stubs e Injeção"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:20
#, fuzzy
msgid "gRPC generation provides several stubs, providing different ways to consume a gRPC service.  You can inject:"
msgstr "A geração gRPC fornece vários stubs, proporcionando diferentes formas de consumir um serviço gRPC. É possível injetar:"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:22
#, fuzzy
msgid "a service interface using the Mutiny API,"
msgstr "uma interface de serviço utilizando a API Mutiny,"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:23
#, fuzzy
msgid "a blocking stub using the gRPC API,"
msgstr "um stub de bloqueio utilizando a API gRPC,"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:24
#, fuzzy
msgid "a reactive stub based on Mutiny,"
msgstr "um stub reativo baseado no Mutiny,"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:25
#, fuzzy
msgid "the gRPC `io.grpc.Channel`, that lets you create other types of stubs."
msgstr "o gRPC `io.grpc.Channel`, que lhe permite criar outros tipos de stubs."

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:29
#: upstream/_guides/grpc-service-consumption.adoc:107
#, no-wrap
msgid "import io.quarkus.grpc.GrpcClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:33
#, no-wrap
msgid ""
"import hello.Greeter;\n"
"import hello.GreeterGrpc.GreeterBlockingStub;\n"
"import hello.MutinyGreeterGrpc.MutinyGreeterStub;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:35
#, no-wrap
msgid "class MyBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:39
#, no-wrap
msgid ""
"   // A service interface using the Mutiny API\n"
"   @GrpcClient(\"helloService\")                   // <1>\n"
"   Greeter greeter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:43
#, no-wrap
msgid ""
"   // A reactive stub based on Mutiny\n"
"   @GrpcClient(\"helloService\")\n"
"   MutinyGreeterGrpc.MutinyGreeterStub mutiny;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:47
#, no-wrap
msgid ""
"   // A blocking stub using the gRPC API\n"
"   @GrpcClient\n"
"   GreeterGrpc.GreeterBlockingStub helloService; // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:50
#, no-wrap
msgid ""
"   @GrpcClient(\"hello-service\")\n"
"   Channel channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:52
#: upstream/_guides/grpc-service-consumption.adoc:198
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:54
#, fuzzy
msgid "A gRPC client injection point must be annotated with the `@GrpcClient` qualifier. This qualifier can be used to specify the name that is used to configure the underlying gRPC client. For example, if you set it to `hello-service`, configuring the host of the service is done using the `quarkus.grpc.clients.**hello-service**.host`."
msgstr "Um ponto de injeção de cliente gRPC tem de ser anotado com o qualificador `@GrpcClient`. Este qualificador pode ser utilizado para especificar o nome que é utilizado para configurar o cliente gRPC subjacente. Por exemplo, se o definir para `hello-service`, a configuração do anfitrião do serviço é efectuada utilizando o qualificador `quarkus.grpc.clients. *hello-service*.host`."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:55
#, fuzzy
msgid "If the name is not specified via the `GrpcClient#value()` then the field name is used instead, e.g. `helloService` in this particular case."
msgstr "Se o nome não for especificado através do endereço `GrpcClient#value()`, é utilizado o nome do campo, por exemplo, `helloService` neste caso específico."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:58
#, fuzzy
msgid "The stub class names are derived from the service name used in your `proto` file.  For example, if you use `Greeter` as a service name as in:"
msgstr "Os nomes das classes stub são derivados do nome do serviço utilizado no seu ficheiro `proto`. Por exemplo, se você usar `Greeter` como um nome de serviço como em:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:62
#, no-wrap
msgid "option java_package = \"hello\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:66
#, no-wrap
msgid ""
"service Greeter {\n"
"    rpc SayHello (HelloRequest) returns (HelloReply) {}\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:69
#, fuzzy
msgid "Then the service interface name is: `hello.Greeter`, the Mutiny stub name is: `hello.MutinyGreeterGrpc.MutinyGreeterStub` and the blocking stub name is: `hello.GreeterGrpc.GreeterBlockingStub`."
msgstr "Então o nome da interface de serviço é: `hello.Greeter`, o nome do stub Mutiny é: `hello.MutinyGreeterGrpc.MutinyGreeterStub` e o nome do stub de bloqueio é: `hello.GreeterGrpc.GreeterBlockingStub`."

#. type: Title ==
#: upstream/_guides/grpc-service-consumption.adoc:70
#, fuzzy, no-wrap
msgid "Examples"
msgstr "Exemplos"

#. type: Title ===
#: upstream/_guides/grpc-service-consumption.adoc:72
#, fuzzy, no-wrap
msgid "Service Interface"
msgstr "Interface de serviço"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:78
#, no-wrap
msgid ""
"import io.quarkus.grpc.GrpcClient;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:80
#: upstream/_guides/grpc-service-consumption.adoc:354
#, no-wrap
msgid "import hello.Greeter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:85
#: upstream/_guides/grpc-service-consumption.adoc:114
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:88
#: upstream/_guides/grpc-service-consumption.adoc:117
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:91
#, no-wrap
msgid ""
"   @GrpcClient <1>\n"
"   Greeter hello;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:99
#, no-wrap
msgid ""
"   @GET\n"
"   @Path(\"/mutiny/{name}\")\n"
"   public Uni<String> helloMutiny(String name) {\n"
"      return hello.sayHello(HelloRequest.newBuilder().setName(name).build())\n"
"            .onItem().transform(HelloReply::getMessage);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:101
#, fuzzy
msgid "The service name is derived from the injection point - the field name is used. The `quarkus.grpc.clients.hello.host` property must be set."
msgstr "O nome do serviço é derivado do ponto de injeção - é utilizado o nome do campo. A propriedade `quarkus.grpc.clients.hello.host` tem de ser definida."

#. type: Title ===
#: upstream/_guides/grpc-service-consumption.adoc:102
#, fuzzy, no-wrap
msgid "Blocking Stub"
msgstr "Bloqueio do Stub"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:109
#, no-wrap
msgid "import hello.GreeterGrpc.GreeterBlockingStub;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:120
#, no-wrap
msgid ""
"   @GrpcClient(\"hello\") <1>\n"
"   GreeterGrpc.GreeterBlockingStub blockingHelloService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:127
#, no-wrap
msgid ""
"   @GET\n"
"   @Path(\"/blocking/{name}\")\n"
"   public String helloBlocking(String name) {\n"
"      return blockingHelloService.sayHello(HelloRequest.newBuilder().setName(name).build()).getMessage();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:129
#, fuzzy
msgid "The `quarkus.grpc.clients.hello.host` property must be set."
msgstr "A propriedade `quarkus.grpc.clients.hello.host` deve ser definida."

#. type: Title ===
#: upstream/_guides/grpc-service-consumption.adoc:130
#, fuzzy, no-wrap
msgid "Handling streams"
msgstr "Manuseamento de fluxos"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:133
#, fuzzy
msgid "gRPC allows sending and receiving streams:"
msgstr "O gRPC permite enviar e receber fluxos:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:141
#, no-wrap
msgid ""
"service Streaming {\n"
"    rpc Source(Empty) returns (stream Item) {} // Returns a stream\n"
"    rpc Sink(stream Item) returns (Empty) {}   // Reads a stream\n"
"    rpc Pipe(stream Item) returns (stream Item) {}  // Reads a streams and return a streams\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:144
#, fuzzy
msgid "Using the Mutiny stub, you can interact with these as follows:"
msgstr "Utilizando o stub Mutiny, pode interagir com eles da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:148
#, no-wrap
msgid "package io.quarkus.grpc.example.streaming;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:153
#, no-wrap
msgid ""
"import io.grpc.examples.streaming.Empty;\n"
"import io.grpc.examples.streaming.Item;\n"
"import io.grpc.examples.streaming.MutinyStreamingGrpc;\n"
"import io.quarkus.grpc.GrpcClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:156
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:162
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:166
#, no-wrap
msgid ""
"@Path(\"/streaming\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"public class StreamingEndpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:169
#, no-wrap
msgid ""
"    @GrpcClient\n"
"    MutinyStreamingGrpc.MutinyStreamingStub streaming;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:176
#, no-wrap
msgid ""
"    @GET\n"
"    public Multi<String> invokeSource() {\n"
"        // Retrieve a stream\n"
"        return streaming.source(Empty.newBuilder().build())\n"
"                .onItem().transform(Item::getValue);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:186
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"sink/{max}\")\n"
"    public Uni<Void> invokeSink(int max) {\n"
"        // Send a stream and wait for completion\n"
"        Multi<Item> inputs = Multi.createFrom().range(0, max)\n"
"                .map(i -> Integer.toString(i))\n"
"                .map(i -> Item.newBuilder().setValue(i).build());\n"
"        return streaming.sink(inputs).onItem().ignore().andContinueWithNull();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:196
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{max}\")\n"
"    public Multi<String> invokePipe(int max) {\n"
"        // Send a stream and retrieve a stream\n"
"        Multi<Item> inputs = Multi.createFrom().range(0, max)\n"
"                .map(i -> Integer.toString(i))\n"
"                .map(i -> Item.newBuilder().setValue(i).build());\n"
"        return streaming.pipe(inputs).onItem().transform(Item::getValue);\n"
"    }\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/grpc-service-consumption.adoc:201
#, fuzzy, no-wrap
msgid "Client configuration"
msgstr "Configuração do cliente"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:204
#, fuzzy
msgid "For each gRPC service you inject in your application, you can configure the following attributes:"
msgstr "Para cada serviço gRPC que injetar na sua aplicação, pode configurar os seguintes atributos:"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:208
#, fuzzy
msgid "The `client-name` is the name set in the `@GrpcClient` or derived from the injection point if not explicitly defined."
msgstr "O `client-name` é o nome definido no `@GrpcClient` ou derivado do ponto de injeção, se não for explicitamente definido."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:211
#, fuzzy
msgid "The following examples uses _hello_ as the client name.  Don't forget to replace it with the name you used in the `@GrpcClient` annotation."
msgstr "Os exemplos a seguir usam _hello_ como o nome do cliente. Não se esqueça de o substituir pelo nome que utilizou na anotação `@GrpcClient`."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:213
#, fuzzy
msgid "When you enable `quarkus.grpc.clients.\"client-name\".use-quarkus-grpc-client`, you are then using the new Vert.x gRPC channel implementation, so not all configuration properties can still be applied. And currently there is no Stork support yet."
msgstr "Ao ativar `quarkus.grpc.clients.\"client-name\".use-quarkus-grpc-client`, está a utilizar a nova implementação do canal gRPC Vert.x, pelo que nem todas as propriedades de configuração podem ainda ser aplicadas. E, atualmente, ainda não existe suporte para o Stork."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:215
#, fuzzy
msgid "When you enable `quarkus.grpc.clients.\"client-name\".xds.enabled`, it's the xDS that should handle most of the configuration above."
msgstr "Quando ativa `quarkus.grpc.clients.\"client-name\".xds.enabled`, é o xDS que deve tratar da maior parte da configuração acima."

#. type: Title ===
#: upstream/_guides/grpc-service-consumption.adoc:216
#, fuzzy, no-wrap
msgid "Enabling TLS"
msgstr "Ativar o TLS"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:221
#, fuzzy
msgid "To enable TLS, use the following configuration.  Note that all paths in the configuration may either specify a resource on the classpath (typically from `src/main/resources` or its subfolder) or an external file."
msgstr "Para ativar o TLS, utilize a seguinte configuração. Observe que todos os caminhos na configuração podem especificar um recurso no classpath (normalmente de `src/main/resources` ou sua subpasta) ou um arquivo externo."

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:225
#, no-wrap
msgid "quarkus.grpc.clients.hello.host=localhost\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:228
#, no-wrap
msgid ""
"# either a path to a classpath resource or to a file:\n"
"quarkus.grpc.clients.hello.ssl.trust-store=tls/ca.pem\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:231
#, fuzzy
msgid "When SSL/TLS is configured, `plain-text` is automatically disabled."
msgstr "Quando SSL/TLS está configurado, `plain-text` é automaticamente desativado."

#. type: Title ===
#: upstream/_guides/grpc-service-consumption.adoc:232
#, fuzzy, no-wrap
msgid "TLS with Mutual Auth"
msgstr "TLS com autenticação mútua"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:235
#, fuzzy
msgid "To use TLS with mutual authentication, use the following configuration:"
msgstr "Para utilizar o TLS com autenticação mútua, utilize a seguinte configuração:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:240
#, no-wrap
msgid ""
"quarkus.grpc.clients.hello.host=localhost\n"
"quarkus.grpc.clients.hello.plain-text=false\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:245
#, no-wrap
msgid ""
"# all the following may use either a path to a classpath resource or to a file:\n"
"quarkus.grpc.clients.hello.ssl.certificate=tls/client.pem\n"
"quarkus.grpc.clients.hello.ssl.key=tls/client.key\n"
"quarkus.grpc.clients.hello.ssl.trust-store=tls/ca.pem\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/grpc-service-consumption.adoc:247
#, fuzzy, no-wrap
msgid "Client Stub Deadlines"
msgstr "Prazos de entrega do talão de cliente"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:251
#, fuzzy
msgid "If you need to configure a deadline for a gRPC stub, i.e. to specify a duration of time after which the stub will always return the status error `DEADLINE_EXCEEDED`.  You can specify the deadline via the `quarkus.grpc.clients.\"service-name\".deadline` configuration property, e.g.:"
msgstr "Se for necessário configurar um prazo para um stub gRPC, ou seja, especificar um período de tempo após o qual o stub devolverá sempre o erro de estado `DEADLINE_EXCEEDED`. Pode especificar o prazo através da propriedade de configuração `quarkus.grpc.clients.\"service-name\".deadline`, por exemplo:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:256
#, no-wrap
msgid ""
"quarkus.grpc.clients.hello.host=localhost\n"
"quarkus.grpc.clients.hello.deadline=2s <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:258
#, fuzzy
msgid "Set the deadline for all injected stubs."
msgstr "Definir o prazo para todos os stubs injectados."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:261
#, fuzzy
msgid "Do not use this feature to implement an RPC timeout.  To implement an RPC timeout, either use Mutiny `call.ifNoItem().after(...)` or Fault Tolerance `@Timeout`."
msgstr "Não utilize esta funcionalidade para implementar um tempo limite de RPC. Para implementar um tempo limite de RPC, utilize Mutiny `call.ifNoItem().after(…​)` ou Fault Tolerance `@Timeout`."

#. type: Title ==
#: upstream/_guides/grpc-service-consumption.adoc:262
#, fuzzy, no-wrap
msgid "gRPC Headers"
msgstr "Cabeçalhos gRPC"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:265
#, fuzzy
msgid "Similarly to HTTP, alongside the message, gRPC calls can carry headers.  Headers can be useful e.g. for authentication."
msgstr "Tal como no HTTP, a par da mensagem, as chamadas gRPC podem conter cabeçalhos. Os cabeçalhos podem ser úteis, por exemplo, para a autenticação."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:267
#, fuzzy
msgid "To set headers for a gRPC call, create a client with headers attached and then perform the call on this client:"
msgstr "Para definir cabeçalhos para uma chamada gRPC, crie um cliente com cabeçalhos anexados e, em seguida, efectue a chamada neste cliente:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:270
#, no-wrap
msgid "import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:278
#, no-wrap
msgid ""
"import examples.Greeter;\n"
"import examples.HelloReply;\n"
"import examples.HelloRequest;\n"
"import io.grpc.Metadata;\n"
"import io.quarkus.grpc.GrpcClient;\n"
"import io.quarkus.grpc.GrpcClientUtils;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:283
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyService {\n"
"    @GrpcClient\n"
"    Greeter client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:289
#, no-wrap
msgid ""
"    public Uni<HelloReply> doTheCall() {\n"
"        Metadata extraHeaders = new Metadata();\n"
"        if (headers) {\n"
"            extraHeaders.put(\"my-header\", \"my-interface-value\");\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:291
#, no-wrap
msgid "        Greeter alteredClient = GrpcClientUtils.attachHeaders(client, extraHeaders); // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:295
#, no-wrap
msgid ""
"        return alteredClient.sayHello(HelloRequest.newBuilder().setName(name).build()); // <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:297
#, fuzzy
msgid "Alter the client to make calls with the `extraHeaders` attached"
msgstr "Alterar o cliente para efetuar chamadas com o `extraHeaders` ligado"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:298
#, fuzzy
msgid "Perform the call with the altered client. The original client remains unmodified"
msgstr "Efetuar a chamada com o cliente alterado. O cliente original permanece inalterado"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:300
#, fuzzy
msgid "`GrpcClientUtils` work with all flavors of clients."
msgstr "`GrpcClientUtils` trabalhar com todos os tipos de clientes."

#. type: Title ==
#: upstream/_guides/grpc-service-consumption.adoc:301
#, fuzzy, no-wrap
msgid "Client Interceptors"
msgstr "Interceptores de clientes"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:307
#, fuzzy
msgid "A gRPC client interceptor can be implemented by a CDI bean that also implements the `io.grpc.ClientInterceptor` interface.  You can annotate an injected client with `@io.quarkus.grpc.RegisterClientInterceptor` to register the specified interceptor for the particular client instance.  The `@RegisterClientInterceptor` annotation is repeatable.  Alternatively, if you want to apply the interceptor to any injected client then annotate the interceptor bean with `@io.quarkus.grpc.GlobalInterceptor`."
msgstr "Um intercetor de cliente gRPC pode ser implementado por um bean CDI que também implemente a interface `io.grpc.ClientInterceptor`. É possível anotar um cliente injetado com `@io.quarkus.grpc.RegisterClientInterceptor` para registar o intercetor especificado para a instância de cliente específica. A anotação `@RegisterClientInterceptor` é repetível. Em alternativa, se pretender aplicar o intercetor a qualquer cliente injetado, anote o bean intercetor com `@io.quarkus.grpc.GlobalInterceptor`."

#. type: Block title
#: upstream/_guides/grpc-service-consumption.adoc:308
#, fuzzy, no-wrap
msgid "Global Client Interceptor Example"
msgstr "Exemplo de intercetor de cliente global"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:312
#: upstream/_guides/grpc-service-consumption.adoc:333
#, no-wrap
msgid "import io.quarkus.grpc.GlobalInterceptor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:314
#, no-wrap
msgid "import io.grpc.ClientInterceptor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:318
#, no-wrap
msgid ""
"@GlobalInterceptor <1>\n"
"@ApplicationScoped\n"
"public class MyInterceptor implements ClientInterceptor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:325
#, no-wrap
msgid ""
"    @Override\n"
"    public <ReqT, RespT> ClientCall<ReqT, RespT> interceptCall(MethodDescriptor<ReqT, RespT> method,\n"
"            CallOptions callOptions, Channel next) {\n"
"       // ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:327
#, fuzzy
msgid "This interceptor is applied to all injected gRPC clients."
msgstr "Este intercetor é aplicado a todos os clientes gRPC injectados."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:329
#, fuzzy
msgid "It's also possible to annotate a producer method as a global interceptor:"
msgstr "Também é possível anotar um método produtor como um intercetor global:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:335
#, no-wrap
msgid "import jakarta.enterprise.inject.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:343
#, no-wrap
msgid ""
"public class MyProducer {\n"
"    @GlobalInterceptor\n"
"    @Produces\n"
"    public MyInterceptor myInterceptor() {\n"
"        return new MyInterceptor();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:346
#, fuzzy
msgid "Check the https://grpc.github.io/grpc-java/javadoc/io/grpc/ClientInterceptor.html[ClientInterceptor JavaDoc] to properly implement your interceptor."
msgstr "Consulte o  link:https://grpc.github.io/grpc-java/javadoc/io/grpc/ClientInterceptor.html[JavaDoc do ClientInterceptor] para implementar corretamente o seu intercetor."

#. type: Block title
#: upstream/_guides/grpc-service-consumption.adoc:347
#, fuzzy, no-wrap
msgid "`@RegisterClientInterceptor` Example"
msgstr "`@RegisterClientInterceptor` Exemplo"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:352
#, no-wrap
msgid ""
"import io.quarkus.grpc.GrpcClient;\n"
"import io.quarkus.grpc.RegisterClientInterceptor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:357
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class MyBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:362
#, no-wrap
msgid ""
"    @RegisterClientInterceptor(MySpecialInterceptor.class) <1>\n"
"    @GrpcClient(\"helloService\")\n"
"    Greeter greeter;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:364
#, fuzzy
msgid "Registers the `MySpecialInterceptor` for this particular client."
msgstr "Regista o `MySpecialInterceptor` para este cliente específico."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:366
#, fuzzy
msgid "When you have multiple client interceptors, you can order them by implementing the `jakarta.enterprise.inject.spi.Prioritized` interface:"
msgstr "Quando tem vários interceptores de clientes, pode ordená-los implementando a interface `jakarta.enterprise.inject.spi.Prioritized`:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:371
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyInterceptor implements ClientInterceptor, Prioritized {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:377
#, no-wrap
msgid ""
"    @Override\n"
"    public <ReqT, RespT> ClientCall<ReqT, RespT> interceptCall(MethodDescriptor<ReqT, RespT> method,\n"
"            CallOptions callOptions, Channel next) {\n"
"       // ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:383
#, no-wrap
msgid ""
"    @Override\n"
"    public int getPriority() {\n"
"        return 10;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:387
#, fuzzy
msgid "Interceptors with the highest priority are called first.  The default priority, used if the interceptor does not implement the `Prioritized` interface, is `0`."
msgstr "Os interceptores com a prioridade mais elevada são chamados em primeiro lugar. A prioridade predefinida, utilizada se o intercetor não implementar a interface `Prioritized`, é `0`."

#. type: Title ==
#: upstream/_guides/grpc-service-consumption.adoc:388
#, fuzzy, no-wrap
msgid "gRPC Client metrics"
msgstr "Métricas do cliente gRPC"

#. type: Title ===
#: upstream/_guides/grpc-service-consumption.adoc:390
#, fuzzy, no-wrap
msgid "Enabling metrics collection"
msgstr "Ativar a recolha de métricas"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:394
#, fuzzy
msgid "gRPC client metrics are automatically enabled when the application also uses the xref:telemetry-micrometer.adoc[`quarkus-micrometer`] extension.  Micrometer collects the metrics of all the gRPC clients used by the application."
msgstr "As métricas do cliente gRPC são activadas automaticamente quando a aplicação também utiliza a extensão  link:telemetry-micrometer.html[`quarkus-micrometer`] extensão. O Micrometer recolhe as métricas de todos os clientes gRPC utilizados pela aplicação."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:396
#, fuzzy
msgid "As an example, if you export the metrics to Prometheus, you will get:"
msgstr "Por exemplo, se exportar as métricas para o Prometheus, obterá:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:412
#, no-wrap
msgid ""
"# HELP grpc_client_responses_received_messages_total The total number of responses received\n"
"# TYPE grpc_client_responses_received_messages_total counter\n"
"grpc_client_responses_received_messages_total{method=\"SayHello\",methodType=\"UNARY\",service=\"helloworld.Greeter\",} 6.0\n"
"# HELP grpc_client_requests_sent_messages_total The total number of requests sent\n"
"# TYPE grpc_client_requests_sent_messages_total counter\n"
"grpc_client_requests_sent_messages_total{method=\"SayHello\",methodType=\"UNARY\",service=\"helloworld.Greeter\",} 6.0\n"
"# HELP grpc_client_processing_duration_seconds The total time taken for the client to complete the call, including network delay\n"
"# TYPE grpc_client_processing_duration_seconds summary\n"
"grpc_client_processing_duration_seconds_count{method=\"SayHello\",methodType=\"UNARY\",service=\"helloworld.Greeter\",statusCode=\"OK\",} 6.0\n"
"grpc_client_processing_duration_seconds_sum{method=\"SayHello\",methodType=\"UNARY\",service=\"helloworld.Greeter\",statusCode=\"OK\",} 0.167411625\n"
"# HELP grpc_client_processing_duration_seconds_max The total time taken for the client to complete the call, including network delay\n"
"# TYPE grpc_client_processing_duration_seconds_max gauge\n"
"grpc_client_processing_duration_seconds_max{method=\"SayHello\",methodType=\"UNARY\",service=\"helloworld.Greeter\",statusCode=\"OK\",} 0.136478028\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:415
#, fuzzy
msgid "The service name, method and type can be found in the _tags_."
msgstr "O nome, o método e o tipo do serviço podem ser encontrados nas _etiquetas_."

#. type: Title ===
#: upstream/_guides/grpc-service-consumption.adoc:416
#, fuzzy, no-wrap
msgid "Disabling metrics collection"
msgstr "Desativar a recolha de métricas"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:419
#, fuzzy
msgid "To disable the gRPC client metrics when `quarkus-micrometer` is used, add the following property to the application configuration:"
msgstr "Para desativar as métricas do cliente gRPC quando `quarkus-micrometer` é utilizado, adicione a seguinte propriedade à configuração da aplicação:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:423
#, no-wrap
msgid "quarkus.micrometer.binder.grpc-client.enabled=false\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/grpc-service-consumption.adoc:425
#, fuzzy, no-wrap
msgid "Custom exception handling"
msgstr "Tratamento de excepções personalizado"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:429
#, fuzzy
msgid "If any of the gRPC services or server interceptors throw an (custom) exception, you can add your own https://github.com/quarkusio/quarkus/extensions/grpc/api/src/main/java/io/quarkus/grpc/ExceptionHandlerProvider.java[ExceptionHandlerProvider] as a CDI bean in your application, to provide a custom handling of those exceptions."
msgstr "Se algum dos serviços gRPC ou interceptores de servidor lançar uma exceção (personalizada), pode adicionar o seu próprio  link:https://github.com/quarkusio/quarkus/extensions/grpc/api/src/main/java/io/quarkus/grpc/ExceptionHandlerProvider.java[ExceptionHandlerProvider] como um bean CDI na sua aplicação, para fornecer um tratamento personalizado dessas excepções."

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:431
#, fuzzy
msgid "e.g."
msgstr "por exemplo."

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:441
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class HelloExceptionHandlerProvider implements ExceptionHandlerProvider {\n"
"    @Override\n"
"    public <ReqT, RespT> ExceptionHandler<ReqT, RespT> createHandler(ServerCall.Listener<ReqT> listener,\n"
"            ServerCall<ReqT, RespT> serverCall, Metadata metadata) {\n"
"        return new HelloExceptionHandler<>(listener, serverCall, metadata);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:450
#, no-wrap
msgid ""
"    @Override\n"
"    public Throwable transform(Throwable t) {\n"
"        if (t instanceof HelloException he) {\n"
"            return new StatusRuntimeException(Status.ABORTED.withDescription(he.getName()));\n"
"        } else {\n"
"            return ExceptionHandlerProvider.toStatusException(t, true);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:455
#, no-wrap
msgid ""
"    private static class HelloExceptionHandler<A, B> extends ExceptionHandler<A, B> {\n"
"        public HelloExceptionHandler(ServerCall.Listener<A> listener, ServerCall<A, B> call, Metadata metadata) {\n"
"            super(listener, call, metadata);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:464
#, no-wrap
msgid ""
"        @Override\n"
"        protected void handleException(Throwable t, ServerCall<A, B> call, Metadata metadata) {\n"
"            StatusRuntimeException sre = (StatusRuntimeException) ExceptionHandlerProvider.toStatusException(t, true);\n"
"            Metadata trailers = sre.getTrailers() != null ? sre.getTrailers() : metadata;\n"
"            call.close(sre.getStatus(), trailers);\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/grpc-service-consumption.adoc:466
#, fuzzy, no-wrap
msgid "Dev Mode"
msgstr "Modo de desenvolvimento"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:470
#, fuzzy
msgid "By default, when starting the application in dev mode, a gRPC server is started, even if no services are configured.  You can configure the gRPC extension's dev mode behavior using the following properties."
msgstr "Por predefinição, ao iniciar a aplicação no modo de desenvolvimento, é iniciado um servidor gRPC, mesmo que não estejam configurados quaisquer serviços. Pode configurar o comportamento do modo de desenvolvimento da extensão gRPC utilizando as seguintes propriedades."

#. type: Title ==
#: upstream/_guides/grpc-service-consumption.adoc:473
#, fuzzy, no-wrap
msgid "Inject mock clients"
msgstr "Injetar clientes fictícios"

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:476
#, fuzzy
msgid "In your `@QuarkusTest`, you can use `@InjectMock` to inject the Mutiny client of a gRPC service:"
msgstr "No seu `@QuarkusTest`, pode utilizar `@InjectMock` para injetar o cliente Mutiny de um serviço gRPC:"

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:481
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GrpcMockTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:485
#, no-wrap
msgid ""
"    @InjectMock\n"
"    @GrpcClient(\"hello\")\n"
"    Greeter greeter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-service-consumption.adoc:494
#, no-wrap
msgid ""
"    @Test\n"
"    void test1() {\n"
"        HelloRequest request = HelloRequest.newBuilder().setName(\"neo\").build();\n"
"        Mockito.when(greeter.sayHello(Mockito.any(HelloRequest.class)))\n"
"                .thenReturn(Uni.createFrom().item(HelloReply.newBuilder().setMessage(\"hello neo\").build()));\n"
"        Assertions.assertEquals(greeter.sayHello(request).await().indefinitely().getMessage(), \"hello neo\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-service-consumption.adoc:496
#, fuzzy
msgid "Only the Mutiny client can be _mocked_, channels, and other stubs cannot be mocked."
msgstr "Apenas o cliente Mutiny pode ser _simulado_, os canais e outros stubs não podem ser simulados."
