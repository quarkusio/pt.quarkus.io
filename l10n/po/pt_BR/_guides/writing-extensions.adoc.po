# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/writing-extensions.adoc:6
#, fuzzy, no-wrap
msgid "Writing Your Own Extension"
msgstr "Escrever a sua própria extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:16
#, fuzzy
msgid "Quarkus extensions add a new developer focused behavior to the core offering, and consist of two distinct parts, buildtime augmentation and runtime container. The augmentation part is responsible for all metadata processing, such as reading annotations, XML descriptors etc. The output of this augmentation phase is recorded bytecode which is responsible for directly instantiating the relevant runtime services."
msgstr "As extensões Quarkus acrescentam um novo comportamento centrado no programador à oferta principal e consistem em duas partes distintas, o aumento do tempo de construção e o contentor de tempo de execução. A parte de aumento é responsável por todo o processamento de metadados, como a leitura de anotações, descritores XML, etc. O resultado desta fase de aumento é um bytecode registado que é responsável por instanciar diretamente os serviços de tempo de execução relevantes."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:19
#, fuzzy
msgid "This means that metadata is only processed once at build time, which both saves on startup time, and also on memory usage as the classes etc that are used for processing are not loaded (or even present) in the runtime JVM."
msgstr "Isto significa que os metadados só são processados uma vez em tempo de compilação, o que poupa no tempo de arranque e também na utilização de memória, uma vez que as classes, etc., que são utilizadas para o processamento não são carregadas (ou sequer estão presentes) na JVM em tempo de execução."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:21
#, fuzzy
msgid "This is an in-depth documentation, see the xref:building-my-first-extension.adoc[building my first extension] if you need an introduction."
msgstr "Esta é uma documentação aprofundada, consulte a secção  link:building-my-first-extension.html[Construir a minha primeira extensão] se precisar de uma introdução."

#. type: Title ==
#: upstream/_guides/writing-extensions.adoc:22
#, fuzzy, no-wrap
msgid "Extension philosophy"
msgstr "Filosofia da extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:25
#, fuzzy
msgid "This section is a work in progress and gathers the philosophy under which extensions should be designed and written."
msgstr "Esta secção é um trabalho em curso e reúne a filosofia segundo a qual as extensões devem ser concebidas e escritas."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:26
#, fuzzy, no-wrap
msgid "Why an extension framework"
msgstr "Porquê um quadro de extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:32
#, fuzzy
msgid "Quarkus’s mission is to transform your entire application including the libraries it uses, into an artifact that uses significantly less resources than traditional approaches. These can then be used to build native applications using GraalVM.  To do this you need to analyze and understand the full \"closed world\" of the application.  Without the full and complete context, the best that can be achieved is partial and limited generic support.  By using the Quarkus extension approach, we can bring Java applications in line with memory footprint constrained environments like Kubernetes or cloud platforms."
msgstr "A missão do Quarkus é transformar toda a sua aplicação, incluindo as bibliotecas que utiliza, num artefacto que utiliza significativamente menos recursos do que as abordagens tradicionais. Estes podem então ser usados para construir aplicações nativas usando o GraalVM. Para tal, é necessário analisar e compreender todo o \"mundo fechado\" da aplicação. Sem o contexto total e completo, o melhor que se pode conseguir é um suporte genérico parcial e limitado. Ao usar a abordagem de extensão Quarkus, podemos alinhar os aplicativos Java com ambientes restritos de pegada de memória, como Kubernetes ou plataformas em nuvem."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:35
#, fuzzy
msgid "The Quarkus extension framework results in significantly improved resource utilization even when GraalVM is not used (e.g. in HotSpot).  Let’s list the actions an extension performs:"
msgstr "A estrutura de extensão Quarkus resulta numa utilização de recursos significativamente melhorada, mesmo quando o GraalVM não é utilizado (por exemplo, no HotSpot). Vamos listar as ações que uma extensão executa:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:37
#, fuzzy
msgid "Gather build time metadata and generate code"
msgstr "Recolher metadados de tempo de construção e gerar código"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:38
#, fuzzy
msgid "This part has nothing to do with GraalVM, it is how Quarkus starts frameworks “at build time”"
msgstr "Esta parte não tem nada a ver com o GraalVM, é a forma como o Quarkus inicia as estruturas \"no momento da construção\""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:39
#, fuzzy
msgid "The extension framework facilitates reading metadata, scanning classes as well as generating classes as needed"
msgstr "A estrutura de extensão facilita a leitura de metadados, a pesquisa de classes e a geração de classes conforme necessário"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:40
#, fuzzy
msgid "A small part of the extension work is executed at runtime via the generated classes, while the bulk of the work is done at build time (called deployment time)"
msgstr "Uma pequena parte do trabalho de extensão é executada em tempo de execução através das classes geradas, enquanto a maior parte do trabalho é feita em tempo de construção (chamado tempo de implantação)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:41
#, fuzzy
msgid "Enforce opinionated and sensible defaults based on the close world view of the application (e.g. an application with no `@Entity` does not need to start Hibernate ORM)"
msgstr "Aplicar predefinições sensatas e opinativas com base na visão global próxima da aplicação (por exemplo, uma aplicação sem `@Entity` não precisa de iniciar o Hibernate ORM)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:42
#, fuzzy
msgid "An extension hosts Substrate VM code substitution so that libraries can run on GraalVM"
msgstr "Uma extensão hospeda a substituição de código da VM de substrato para que as bibliotecas possam ser executadas no GraalVM"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:43
#, fuzzy
msgid "Most changes are pushed upstream to help the underlying library run on GraalVM"
msgstr "A maioria das alterações são enviadas para ajudar a biblioteca subjacente a funcionar no GraalVM"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:44
#, fuzzy
msgid "Not all changes can be pushed upstream, extensions host Substrate VM substitutions - which is a form of code patching - so that libraries can run"
msgstr "Nem todas as alterações podem ser enviadas para o upstream, as extensões alojam substituições de VM de substrato - que é uma forma de correção de código - para que as bibliotecas possam ser executadas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:45
#, fuzzy
msgid "Host Substrate VM code substitution to help dead code elimination based on the application needs"
msgstr "Substituição do código da VM do substrato do anfitrião para ajudar a eliminar o código morto com base nas necessidades da aplicação"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:46
#, fuzzy
msgid "This is application dependent and cannot really be shared in the library itself"
msgstr "Isto depende da aplicação e não pode ser partilhado na própria biblioteca"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:47
#, fuzzy
msgid "For example, Quarkus optimizes the Hibernate code because it knows it only needs a specific connection pool and cache provider"
msgstr "Por exemplo, o Quarkus optimiza o código do Hibernate porque sabe que só precisa de um conjunto de ligações e de um fornecedor de cache específicos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:48
#, fuzzy
msgid "Send metadata to GraalVM for example classes in need of reflection"
msgstr "Enviar metadados ao GraalVM para classes de exemplo que precisam de reflexão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:49
#, fuzzy
msgid "This information is not static per library (e.g. Hibernate) but the framework has the semantic knowledge and knows which classes need to have reflection (for example @Entity classes)"
msgstr "Esta informação não é estática por biblioteca (por exemplo, Hibernate), mas a estrutura tem o conhecimento semântico e sabe quais as classes que precisam de ter reflexão (por exemplo, classes @Entity)"

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:50
#, fuzzy, no-wrap
msgid "Favor build time work over runtime work"
msgstr "Favorecer o trabalho em tempo de construção em detrimento do trabalho em tempo de execução"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:54
#, fuzzy
msgid "As much as possible favor doing work at build time (deployment part of the extension) as opposed to let the framework do work at startup time (runtime).  The more is done there, the smaller Quarkus applications using that extension will be and the faster they will load."
msgstr "Tanto quanto possível, favoreça a realização do trabalho em tempo de construção (parte de implementação da extensão) em vez de deixar a estrutura fazer o trabalho em tempo de arranque (tempo de execução). Quanto mais trabalho for feito aí, mais pequenas serão as aplicações Quarkus que utilizam essa extensão e mais rapidamente serão carregadas."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:55
#, fuzzy, no-wrap
msgid "How to expose configuration"
msgstr "Como expor a configuração"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:59
#, fuzzy
msgid "Quarkus simplifies the most common usages.  This means that its defaults might be different from the library it integrates."
msgstr "O Quarkus simplifica as utilizações mais comuns. Isto significa que as suas predefinições podem ser diferentes das da biblioteca que integra."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:62
#, fuzzy
msgid "To make the simple experience easiest, unify the configuration in `application.properties` via SmallRye Config.  Avoid library specific configuration files, or at least make them optional: e.g. `persistence.xml` for Hibernate ORM is optional."
msgstr "Para tornar a experiência simples mais fácil, unifique a configuração em `application.properties` via SmallRye Config. Evite arquivos de configuração específicos de bibliotecas, ou pelo menos torne-os opcionais: por exemplo, `persistence.xml` para Hibernate ORM é opcional."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:67
#, fuzzy
msgid "Extensions should see the configuration holistically as a Quarkus application instead of focusing on the library experience.  For example `quarkus.database.url` and friends are shared between extensions as defining a database access is a shared task (instead of a `hibernate.` property for example).  The most useful configuration options should be exposed as `quarkus.[extension].` instead of the natural namespace of the library.  Less common properties can live in the library namespace."
msgstr "As extensões devem ver a configuração de forma holística como uma aplicação Quarkus em vez de se concentrarem na experiência da biblioteca. Por exemplo, `quarkus.database.url` e amigos são partilhados entre extensões, uma vez que a definição de um acesso à base de dados é uma tarefa partilhada (em vez de uma propriedade `hibernate.`, por exemplo). As opções de configuração mais úteis devem ser expostas como `quarkus.[extension].` em vez do espaço de nomes natural da biblioteca. As propriedades menos comuns podem residir no espaço de nomes da biblioteca."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:71
#, fuzzy
msgid "To fully enable the close world assumptions that Quarkus can optimize best, it is better to consider configuration options as build time settled vs overridable at runtime.  Of course properties like host, port, password should be overridable at runtime.  But many properties like enable caching or setting the JDBC driver can safely require a rebuild of the application."
msgstr "Para habilitar totalmente as suposições de mundo fechado que o Quarkus pode otimizar melhor, é melhor considerar as opções de configuração como tempo de construção estabelecido versus substituível em tempo de execução. É claro que propriedades como host, porta e senha devem ser substituíveis em tempo de execução. Mas muitas propriedades, como ativar o armazenamento em cache ou definir o controlador JDBC, podem exigir com segurança uma reconstrução da aplicação."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:72
#, fuzzy, no-wrap
msgid "Static Init Config"
msgstr "Configuração de inicialização estática"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:75
#, fuzzy
msgid "If the extension provides additional Config Sources and if these are required during Static Init, these must be registered with `StaticInitConfigBuilderBuildItem`. Configuration in Static Init does not scan for additional sources to avoid double initialization at application startup time."
msgstr "Se a extensão fornecer fontes de configuração adicionais e se estas forem necessárias durante a inicialização estática, devem ser registadas em `StaticInitConfigBuilderBuildItem`. A configuração na Inicialização estática não procura fontes adicionais para evitar a dupla inicialização no momento do arranque da aplicação."

#
#
#
#. === API
#. TODO: Describe where to put APIs
#. I wonder if that content should be in the technical aspects
#. === Substitution and recorders
#. TODO: Describe where Substitutions and recorders should live
#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:87
#, fuzzy, no-wrap
msgid "Expose your components via CDI"
msgstr "Exponha os seus componentes através de CDI"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:92
#, fuzzy
msgid "Since CDI is the central programming model when it comes to component composition, frameworks and extensions should expose their components as beans that are easily consumable by user applications.  For example, Hibernate ORM exposes `EntityManagerFactory` and `EntityManager` beans, the connection pool exposes `DataSource` beans etc.  Extensions must register these bean definitions at build time."
msgstr "Uma vez que o CDI é o modelo de programação central no que diz respeito à composição de componentes, as estruturas e as extensões devem expor os seus componentes como beans facilmente consumíveis pelas aplicações dos utilizadores. Por exemplo, o Hibernate ORM expõe os beans `EntityManagerFactory` e `EntityManager`, o pool de ligações expõe os beans `DataSource`, etc. As extensões devem registar estas definições de beans no momento da construção."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:93
#, fuzzy, no-wrap
msgid "Beans backed by classes"
msgstr "Feijões apoiados por classes"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:96
#, fuzzy
msgid "An extension can produce an xref:cdi-integration.adoc#additional_bean_build_item[`AdditionalBeanBuildItem`] to instruct the container to read a bean definition from a class as if it was part of the original application:"
msgstr "Uma extensão pode produzir um  link:cdi-integration.html#additional_bean_build_item[`AdditionalBeanBuildItem`] para instruir o contentor a ler uma definição de bean de uma classe como se esta fizesse parte da aplicação original:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:97
#, fuzzy, no-wrap
msgid "Bean Class Registered by `AdditionalBeanBuildItem`"
msgstr "Classe de feijão Registada por `AdditionalBeanBuildItem`"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:102
#, no-wrap
msgid ""
"@Singleton <1>\n"
"public class Echo {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:107
#, no-wrap
msgid ""
"   public String echo(String val) {\n"
"      return val;\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:109
#, fuzzy
msgid "If a bean registered by an `AdditionalBeanBuildItem` does not specify a scope then `@Dependent` is assumed."
msgstr "Se um bean registado por um `AdditionalBeanBuildItem` não especificar um âmbito, assume-se `@Dependent`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:111
#, fuzzy
msgid "All other beans can inject such a bean:"
msgstr "Todos os outros feijões podem injetar esse feijão:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:112
#, fuzzy, no-wrap
msgid "Bean Injecting a Bean Produced by an `AdditionalBeanBuildItem`"
msgstr "Bean Injectando um Bean Produzido por um `AdditionalBeanBuildItem`"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:117
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:120
#, no-wrap
msgid ""
"    @Inject\n"
"    Echo echo;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:127
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello(String foo) {\n"
"        return echo.echo(foo);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:130
#, fuzzy
msgid "And vice versa - the extension bean can inject application beans and beans provided by other extensions:"
msgstr "E vice-versa - o bean de extensão pode injetar beans de aplicação e beans fornecidos por outras extensões:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:131
#, fuzzy, no-wrap
msgid "Extension Bean Injection Example"
msgstr "Exemplo de injeção de bean de extensão"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:136
#, no-wrap
msgid ""
"@Singleton\n"
"public class Echo {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:139
#, no-wrap
msgid ""
"    @Inject\n"
"    DataSource dataSource;  <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:142
#, no-wrap
msgid ""
"    @Inject\n"
"    Instance<List<String>> listsOfStrings; <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:145
#, no-wrap
msgid ""
"    //...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:147
#, fuzzy
msgid "Inject a bean provided by other extension."
msgstr "Injetar um bean fornecido por outra extensão."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:148
#, fuzzy
msgid "Inject all beans matching the type `List<String>`."
msgstr "Injetar todos os feijões que correspondam ao tipo `List&amp;lt;String&amp;gt;`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:150
#, fuzzy, no-wrap
msgid "Bean initialization"
msgstr "Inicialização do feijão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:157
#, fuzzy
msgid "Some components may require additional initialization based on information collected during augmentation.  The most straightforward solution is to obtain a bean instance and call a method directly from a build step.  However, it is _illegal_ to obtain a bean instance during the augmentation phase.  The reason is that the CDI container is not started yet.  It's started during the xref:bootstrap-three-phases[Static init bootstrap phase]."
msgstr "Alguns componentes podem exigir uma inicialização adicional com base nas informações recolhidas durante o aumento. A solução mais simples é obter uma instância de bean e chamar um método diretamente a partir de um passo de construção. No entanto, é _ilegal_ obter uma instância de bean durante a fase de aumento. A razão é que o contentor CDI ainda não foi iniciado. Ele é iniciado durante a  link:#bootstrap-three-phases[fase de inicialização Static init]."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:159
#, fuzzy
msgid "`BUILD_AND_RUN_TIME_FIXED` and `RUN_TIME` config roots can be injected in any bean. `RUN_TIME` config roots should only be injected after the bootstrap though."
msgstr "`BUILD_AND_RUN_TIME_FIXED` e `RUN_TIME` config roots podem ser injectadas em qualquer bean. No entanto, `RUN_TIME` config roots só devem ser injectadas após o bootstrap."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:165
#, fuzzy
msgid "It is possible to invoke a bean method from a xref:bytecode-recording[recorder method] though.  If you need to access a bean in a `@Record(STATIC_INIT)` build step then is must either depend on the `BeanContainerBuildItem` or wrap the logic in a `BeanContainerListenerBuildItem`.  The reason is simple - we need to make sure the CDI container is fully initialized and started.  However, it is safe to expect that the CDI container is fully initialized and running in a `@Record(RUNTIME_INIT)` build step.  You can obtain a reference to the container via `CDI.current()` or Quarkus-specific `Arc.container()`."
msgstr "No entanto, é possível invocar um método bean a partir de um  link:#bytecode-recording[método recorder]. Se precisar de aceder a um bean num passo de construção `@Record(STATIC_INIT)`, então deve depender do `BeanContainerBuildItem` ou envolver a lógica num `BeanContainerListenerBuildItem`. A razão é simples - precisamos de garantir que o contentor CDI é totalmente inicializado e iniciado. No entanto, é seguro esperar que o contêiner CDI esteja totalmente inicializado e em execução em uma etapa de compilação `@Record(RUNTIME_INIT)`. Pode obter uma referência ao contentor através de `CDI.current()` ou `Arc.container()` específico do Quarkus."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:167
#, fuzzy
msgid "Don't forget to make sure the bean state guarantees the visibility, e.g. via the `volatile` keyword."
msgstr "Não se esqueça de se certificar de que o estado do feijão garante a visibilidade, por exemplo, através da palavra-chave `volatile`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:171
#, fuzzy
msgid "There is one significant drawback of this \"late initialization\" approach.  An _uninitialized_ bean may be accessed by other extensions or application components that are instantiated during bootstrap.  We'll cover a more robust solution in the xref:synthetic_beans[Synthetic beans]."
msgstr "Há uma desvantagem significativa dessa abordagem de \"inicialização tardia\". Um bean _não inicializado_ pode ser acedido por outras extensões ou componentes de aplicação que são instanciados durante o bootstrap. Cobriremos uma solução mais robusta nos  link:#synthetic_beans[beans sintéticos]."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:172
#, fuzzy, no-wrap
msgid "Default beans"
msgstr "Feijões por defeito"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:177
#, fuzzy
msgid "A very useful pattern of creating such beans but also giving application code the ability to easily override some beans with custom implementations, is to use the `@DefaultBean` that Quarkus provides.  This is best explained with an example."
msgstr "Um padrão muito útil para criar esses beans, mas também para dar ao código da aplicação a capacidade de substituir facilmente alguns beans com implementações personalizadas, é utilizar o `@DefaultBean` que o Quarkus fornece. Isto é melhor explicado com um exemplo."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:179
#, fuzzy
msgid "Let us assume that the Quarkus extension needs to provide a `Tracer` bean which application code is meant to inject into its own beans."
msgstr "Suponhamos que a extensão Quarkus precisa de fornecer um `Tracer` bean que o código da aplicação deve injetar nos seus próprios beans."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:184
#, no-wrap
msgid ""
"@Dependent\n"
"public class TracerConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:189
#, no-wrap
msgid ""
"    @Produces\n"
"    public Tracer tracer(Reporter reporter, Configuration configuration) {\n"
"        return new Tracer(reporter, configuration);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:195
#, no-wrap
msgid ""
"    @Produces\n"
"    @DefaultBean\n"
"    public Configuration configuration() {\n"
"        // create a Configuration\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:202
#, no-wrap
msgid ""
"    @Produces\n"
"    @DefaultBean\n"
"    public Reporter reporter(){\n"
"        // create a Reporter\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:205
#, fuzzy
msgid "If for example application code wants to use `Tracer`, but also needs to use a custom `Reporter` bean, such a requirement could easily be done using something like:"
msgstr "Se, por exemplo, o código da aplicação quiser utilizar `Tracer`, mas também precisar de utilizar um bean `Reporter` personalizado, esse requisito pode ser facilmente cumprido utilizando algo do género:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:211
#, no-wrap
msgid ""
"@Dependent\n"
"public class CustomTracerConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:217
#, no-wrap
msgid ""
"    @Produces\n"
"    public Reporter reporter(){\n"
"        // create a custom Reporter\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:219
#, fuzzy, no-wrap
msgid "How to Override a Bean Defined by a Library/Quarkus Extension that doesn't use @DefaultBean"
msgstr "Como substituir um Bean definido por uma biblioteca/extensão Quarkus que não utiliza @DefaultBean"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:224
#, fuzzy
msgid "Although `@DefaultBean` is the recommended approach, it is also possible for application code to override beans provided by an extension by marking beans as a CDI `@Alternative` and including `@Priority` annotation.  Let's show a simple example.  Suppose we work on an imaginary \"quarkus-parser\" extension and we have a default bean implementation:"
msgstr "Embora `@DefaultBean` seja a abordagem recomendada, também é possível que o código da aplicação substitua os beans fornecidos por uma extensão, marcando-os como um CDI `@Alternative` e incluindo a anotação `@Priority`. Vamos mostrar um exemplo simples. Suponha que trabalhamos numa extensão imaginária \"quarkus-parser\" e que temos uma implementação de bean predefinida:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:229
#, no-wrap
msgid ""
"@Dependent\n"
"class Parser {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:234
#, no-wrap
msgid ""
"  String[] parse(String expression) {\n"
"    return expression.split(\"::\");\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:237
#, fuzzy
msgid "And our extension also consumes this parser:"
msgstr "E a nossa extensão também consome este analisador:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:242
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class ParserService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:245
#, no-wrap
msgid ""
"  @Inject\n"
"  Parser parser;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:248
#, no-wrap
msgid ""
"  //...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:251
#, fuzzy
msgid "Now, if a user or even some other extension needs to override the default implementation of the `Parser` the simplest solution is to use CDI `@Alternative` + `@Priority`:"
msgstr "Agora, se um utilizador ou mesmo outra extensão precisar de substituir a implementação predefinida do `Parser`, a solução mais simples é utilizar CDI `@Alternative` + `@Priority`:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:258
#, no-wrap
msgid ""
"@Alternative <1>\n"
"@Priority(1) <2>\n"
"@Singleton\n"
"class MyParser extends Parser {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:263
#, no-wrap
msgid ""
"  String[] parse(String expression) {\n"
"    // my super impl...\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:265
#, fuzzy
msgid "`MyParser` is an alternative bean."
msgstr "`MyParser` é um feijão alternativo."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:266
#, fuzzy
msgid "Enables the alternative. The priority could be any number to override the default bean but if there are multiple alternatives the highest priority wins."
msgstr "Ativa a alternativa. A prioridade pode ser qualquer número para substituir o feijão predefinido, mas se existirem várias alternativas, a prioridade mais elevada ganha."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:268
#, fuzzy
msgid "CDI alternatives are only considered during injection and type-safe resolution. For example the default implementation would still receive observer notifications."
msgstr "As alternativas CDI só são consideradas durante a injeção e a resolução segura do tipo. Por exemplo, a implementação predefinida continuaria a receber notificações do observador."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:270
#, fuzzy, no-wrap
msgid "Synthetic beans"
msgstr "Feijões sintéticos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:275
#, fuzzy
msgid "Sometimes it is very useful to be able to register a synthetic bean.  Bean attributes of a synthetic bean are not derived from a java class, method or field.  Instead, the attributes are specified by an extension."
msgstr "Por vezes, é muito útil poder registar um bean sintético. Os atributos de um bean sintético não são derivados de uma classe, método ou campo java. Em vez disso, os atributos são especificados por uma extensão."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:278
#, fuzzy
msgid "Since the CDI container does not control the instantiation of a synthetic bean the dependency injection and other services (such as interceptors) are not supported.  In other words, it's up to the extension to provide all required services to a synthetic bean instance."
msgstr "Uma vez que o contentor CDI não controla a instanciação de um bean sintético, a injeção de dependência e outros serviços (como interceptores) não são suportados. Por outras palavras, cabe à extensão fornecer todos os serviços necessários a uma instância de bean sintético."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:281
#, fuzzy
msgid "There are several ways to register a xref:cdi-reference.adoc#synthetic_beans[synthetic bean] in Quarkus.  In this chapter, we will cover a use case that can be used to initialize extension beans in a safe manner (compared to xref:bean_init[Bean initialization])."
msgstr "Existem várias formas de registar um  link:cdi-reference.html#synthetic_beans[bean sintético] no Quarkus. Neste capítulo, abordaremos um caso de utilização que pode ser utilizado para inicializar os beans de extensão de uma forma segura (em comparação com a  link:#bean_init[inicialização do Bean])."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:283
#, fuzzy
msgid "The `SyntheticBeanBuildItem` can be used to register a synthetic bean:"
msgstr "O site `SyntheticBeanBuildItem` pode ser utilizado para registar um feijão sintético:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:285
#, fuzzy
msgid "whose instance can be easily produced through a xref:bytecode-recording[recorder],"
msgstr "cuja instância pode ser facilmente produzida através de um  link:#bytecode-recording[gravador],"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:286
#, fuzzy
msgid "to provide a \"context\" bean that holds all the information collected during augmentation so that the real components do not need any \"late initialization\" because they can inject the context bean directly."
msgstr "para fornecer um bean de \"contexto\" que contém todas as informações recolhidas durante o aumento, de modo a que os componentes reais não necessitem de qualquer \"inicialização tardia\" porque podem injetar diretamente o bean de contexto."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:287
#, fuzzy, no-wrap
msgid "Instance Produced Through Recorder"
msgstr "Instância produzida através do registador"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:297
#, no-wrap
msgid ""
"@BuildStep\n"
"@Record(STATIC_INIT)\n"
"SyntheticBeanBuildItem syntheticBean(TestRecorder recorder) {\n"
"   return SyntheticBeanBuildItem.configure(Foo.class).scope(Singleton.class)\n"
"                .runtimeValue(recorder.createFoo(\"parameters are recorder in the bytecode\")) <1>\n"
"                .done();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:299
#, fuzzy
msgid "The string value is recorded in the bytecode and used to initialize the instance of `Foo`."
msgstr "O valor da cadeia de caracteres é registado no bytecode e utilizado para inicializar a instância de `Foo`."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:300
#, fuzzy, no-wrap
msgid "\"Context\" Holder"
msgstr "\"Contexto\" Titular"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:310
#, no-wrap
msgid ""
"@BuildStep\n"
"@Record(STATIC_INIT)\n"
"SyntheticBeanBuildItem syntheticBean(TestRecorder recorder) {\n"
"   return SyntheticBeanBuildItem.configure(TestContext.class).scope(Singleton.class)\n"
"                .runtimeValue(recorder.createContext(\"parameters are recorder in the bytecode\")) <1>\n"
"                .done();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:312
#, fuzzy
msgid "The \"real\" components can inject the `TestContext` directly."
msgstr "Os componentes \"reais\" podem injetar diretamente o `TestContext`."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:313
#, fuzzy, no-wrap
msgid "Some types of extensions"
msgstr "Alguns tipos de extensões"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:316
#, fuzzy
msgid "There exist multiple stereotypes of extension, let's list a few."
msgstr "Existem vários estereótipos de extensão, vamos enumerar alguns."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:317
#, fuzzy, no-wrap
msgid "Bare library running"
msgstr "Biblioteca nua em funcionamento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:322
#, fuzzy
msgid "This is the less sophisticated extension.  It consists of a set of patches to make sure a library runs on GraalVM.  If possible, contribute these patches upstream, not in extensions.  Second best is to write Substrate VM substitutions, which are patches applied during native image compilation."
msgstr "Esta é a extensão menos sofisticada. Ela consiste em um conjunto de patches para garantir que uma biblioteca rode no GraalVM. Se possível, contribua com esses patches no upstream, não em extensões. A segunda melhor opção é escrever substituições para o Substrate VM, que são patches aplicados durante a compilação de imagens nativas."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:323
#, fuzzy, no-wrap
msgid "Get a framework running"
msgstr "Colocar uma estrutura em funcionamento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:326
#, fuzzy
msgid "A framework at runtime typically reads configuration, scan the classpath and classes for metadata (annotations, getters etc.), build a metamodel on top of which it runs, find options via the service loader pattern, prepare invocation calls (reflection), proxy interfaces, etc. + These operations should be done at build time and the metamodel be passed to the recorder DSL that will generate classes that will be executed at runtime and boot the framework."
msgstr "Uma estrutura em tempo de execução normalmente lê a configuração, procura metadados no classpath e nas classes (anotações, getters, etc.), constrói um metamodelo sobre o qual é executada, encontra opções através do padrão do carregador de serviços, prepara chamadas de invocação (reflexão), interfaces proxy, etc. + Estas operações devem ser efectuadas em tempo de construção e o metamodelo deve ser passado para a DSL do gravador, que irá gerar classes que serão executadas em tempo de execução e iniciar a estrutura."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:327
#, fuzzy, no-wrap
msgid "Get a CDI portable extension running"
msgstr "Colocar uma extensão portátil CDI em funcionamento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:332
#, fuzzy
msgid "The CDI portable extension model is very flexible.  Too flexible to benefit from the build time boot promoted by Quarkus.  Most extension we have seen do not make use of these extreme flexibility capabilities.  The way to port a CDI extension to Quarkus is to rewrite it as a Quarkus extension which will define the various beans at build time (deployment time in extension parlance)."
msgstr "O modelo de extensão portátil CDI é muito flexível. Demasiado flexível para beneficiar do arranque em tempo de construção promovido pelo Quarkus. A maioria das extensões que temos visto não faz uso destas capacidades de extrema flexibilidade. A maneira de portar uma extensão CDI para o Quarkus é reescrevê-la como uma extensão Quarkus que definirá os vários beans em tempo de construção (tempo de implantação na linguagem da extensão)."

#. type: Title ==
#: upstream/_guides/writing-extensions.adoc:333
#, fuzzy, no-wrap
msgid "Technical aspect"
msgstr "Aspeto técnico"

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:336
#, fuzzy, no-wrap
msgid "Three Phases of Bootstrap and Quarkus Philosophy"
msgstr "Três fases da filosofia Bootstrap e Quarkus"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:339
#, fuzzy
msgid "There are three distinct bootstrap phases of a Quarkus app:"
msgstr "Há três fases distintas de arranque de uma aplicação Quarkus:"

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:340
#, fuzzy, no-wrap
msgid "Augmentation"
msgstr "Aumento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:346
#, fuzzy
msgid "This is the first phase, and is done by the xref:build-step-processors[Build Step Processors]. These processors have access to Jandex annotation information and can parse any descriptors and read annotations, but should not attempt to load any application classes. The output of these build steps is some recorded bytecode, using an extension of the ObjectWeb ASM project called Gizmo(ext/gizmo), that is used to actually bootstrap the application at runtime.  Depending on the `io.quarkus.deployment.annotations.ExecutionTime` value of the `@io.quarkus.deployment.annotations.Record` annotation associated with the build step, the step may be run in a different JVM based on the following two modes."
msgstr "Esta é a primeira fase e é feita pelos  link:#build-step-processors[processadores da etapa de construção]. Esses processadores têm acesso às informações de anotações do Jandex e podem analisar qualquer descritor e ler anotações, mas não devem tentar carregar nenhuma classe de aplicação. A saída desses passos de construção é algum bytecode gravado, usando uma extensão do projeto ObjectWeb ASM chamado Gizmo(ext/gizmo), que é usado para realmente inicializar a aplicação em tempo de execução. Dependendo do valor `io.quarkus.deployment.annotations.ExecutionTime` da anotação `@io.quarkus.deployment.annotations.Record` associada à etapa de construção, a etapa pode ser executada em uma JVM diferente com base nos dois modos a seguir."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:347
#, fuzzy, no-wrap
msgid "Static Init"
msgstr "Inicialização estática"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:353
#, fuzzy
msgid "If bytecode is recorded with `@Record(STATIC_INIT)` then it will be executed from a static init method on the main class. For a native executable build, this code is executed in a normal JVM as part of the native build process, and any retained objects that are produced in this stage will be directly serialized into the native executable via an image mapped file.  This means that if a framework can boot in this phase then it will have its booted state directly written to the image, and so the boot code does not need to be executed when the image is started."
msgstr "Se o bytecode for registado em `@Record(STATIC_INIT)`, será executado a partir de um método init estático na classe principal. Para uma compilação executável nativa, este código é executado numa JVM normal como parte do processo de compilação nativa, e quaisquer objectos retidos que sejam produzidos nesta fase serão diretamente serializados no executável nativo através de um ficheiro mapeado de imagem. Isto significa que se uma estrutura pode arrancar nesta fase, então terá o seu estado de arranque escrito diretamente na imagem, e assim o código de arranque não precisa de ser executado quando a imagem é iniciada."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:355
#, fuzzy
msgid "There are some restrictions on what can be done in this stage as the Substrate VM disallows some objects in the native executable. For example you should not attempt to listen on a port or start threads in this phase. In addition, it is disallowed to read run time configuration during static initialization."
msgstr "Existem algumas restrições sobre o que pode ser feito nesta fase, uma vez que a VM de substrato não permite alguns objectos no executável nativo. Por exemplo, não se deve tentar escutar numa porta ou iniciar threads nesta fase. Além disso, não é permitido ler a configuração em tempo de execução durante a inicialização estática."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:360
#, fuzzy
msgid "In non-native pure JVM mode, there is no real difference between Static and Runtime Init, except that Static Init is always executed first. This mode benefits from the same build phase augmentation as native mode as the descriptor parsing and annotation scanning are done at build time and any associated class/framework dependencies can be removed from the build output jar. In servers like WildFly, deployment related classes such as XML parsers hang around for the life of the application, using up valuable memory. Quarkus aims to eliminate this, so that the only classes loaded at runtime are actually used at runtime."
msgstr "No modo JVM puro não-nativo, não há diferença real entre a inicialização estática e a inicialização em tempo de execução, exceto que a inicialização estática é sempre executada primeiro. Este modo se beneficia do mesmo aumento da fase de construção que o modo nativo, já que a análise do descritor e a varredura de anotações são feitas no momento da construção e quaisquer dependências de classe/framework associadas podem ser removidas do jar de saída da construção. Em servidores como o WildFly, as classes relacionadas à implantação, como analisadores XML, permanecem durante toda a vida da aplicação, usando uma memória valiosa. O objetivo do Quarkus é eliminar isto, para que as únicas classes carregadas em tempo de execução sejam realmente utilizadas em tempo de execução."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:363
#, fuzzy
msgid "As an example, the only reason that a Quarkus application should load an XML parser is if the user is using XML in their application. Any XML parsing of configuration should be done in the Augmentation phase."
msgstr "A título de exemplo, a única razão pela qual uma aplicação Quarkus deve carregar um analisador XML é se o utilizador estiver a utilizar XML na sua aplicação. Qualquer análise XML da configuração deve ser efectuada na fase de Aumento."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:364
#, fuzzy, no-wrap
msgid "Runtime Init"
msgstr "Inicialização em tempo de execução"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:368
#, fuzzy
msgid "If bytecode is recorded with `@Record(RUNTIME_INIT)` then it is executed from the application's main method. This code will be run on native executable boot. In general as little code as possible should be executed in this phase, and should be restricted to code that needs to open ports etc."
msgstr "Se o bytecode for registado com `@Record(RUNTIME_INIT)`, é executado a partir do método principal da aplicação. Este código será executado no arranque do executável nativo. Em geral, deve ser executado o mínimo de código possível nesta fase e deve ser restringido ao código que precisa de abrir portas, etc."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:370
#, fuzzy
msgid "Pushing as much as possible into the `@Record(STATIC_INIT)` phase allows for two different optimizations:"
msgstr "Empurrar o máximo possível para a fase `@Record(STATIC_INIT)` permite duas optimizações diferentes:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:372
#, fuzzy
msgid "In both native executable and pure JVM mode this allows the app to start as fast as possible since processing was done during build time. This also minimizes the classes/native code needed in the application to pure runtime related behaviors."
msgstr "Tanto no modo executável nativo quanto no modo JVM puro, isso permite que o aplicativo seja iniciado o mais rápido possível, pois o processamento foi feito durante o tempo de compilação. Isto também minimiza as classes/código nativo necessário na aplicação para comportamentos puramente relacionados com o tempo de execução."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:375
#, fuzzy
msgid "Another benefit with native executable mode is that Substrate can more easily eliminate features that are not used. If features are directly initialized via bytecode, Substrate can detect that a method is never called and eliminate that method. If config is read at runtime, Substrate cannot reason about the contents of the config and so needs to keep all features in case they are required."
msgstr "Outra vantagem do modo executável nativo é que o substrato pode eliminar mais facilmente os recursos que não são usados. Se as funcionalidades são diretamente inicializadas através de bytecode, o substrato pode detetar que um método nunca é chamado e eliminar esse método. Se a configuração for lida em tempo de execução, o substrato não pode raciocinar sobre o conteúdo da configuração e, portanto, precisa manter todos os recursos, caso sejam necessários."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:377
#, fuzzy, no-wrap
msgid "Project setup"
msgstr "Configuração do projeto"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:380
#, fuzzy
msgid "Your extension project should be setup as a multi-module project with two submodules:"
msgstr "O seu projeto de extensão deve ser configurado como um projeto multi-módulo com dois submódulos:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:382
#, fuzzy
msgid "A deployment time submodule that handles the build time processing and bytecode recording."
msgstr "Um submódulo de tempo de implementação que trata do processamento do tempo de construção e da gravação de bytecode."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:384
#, fuzzy
msgid "A runtime submodule that contains the runtime behavior that will provide the extension behavior in the native executable or runtime JVM."
msgstr "Um submódulo de tempo de execução que contém o comportamento de tempo de execução que fornecerá o comportamento de extensão no executável nativo ou na JVM de tempo de execução."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:389
#, fuzzy
msgid "Your runtime artifact should depend on `io.quarkus:quarkus-core`, and possibly the runtime artifacts of other Quarkus modules if you want to use functionality provided by them.  Your deployment time module should depend on `io.quarkus:quarkus-core-deployment`, your runtime artifact, and possibly the deployment artifacts of other Quarkus modules if you want to use functionality provided by them."
msgstr "O seu artefacto de tempo de execução deve depender de `io.quarkus:quarkus-core` e, possivelmente, dos artefactos de tempo de execução de outros módulos Quarkus, se pretender utilizar a funcionalidade fornecida por estes. O seu módulo de tempo de implementação deve depender de `io.quarkus:quarkus-core-deployment`, do seu artefacto de tempo de execução e, possivelmente, dos artefactos de implementação de outros módulos Quarkus, caso pretenda utilizar a funcionalidade fornecida por estes."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:394
#, fuzzy
msgid "Under no circumstances can the runtime module depend on a deployment artifact. This would result in pulling all the deployment time code into runtime scope, which defeats the purpose of having the split."
msgstr "Em nenhuma circunstância o módulo de tempo de execução pode depender de um artefato de implantação. Isso resultaria em puxar todo o código de tempo de implantação para o escopo de tempo de execução, o que anula o objetivo de ter a divisão."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:396
#, fuzzy, no-wrap
msgid "Using Maven"
msgstr "Utilizar o Maven"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:399
#, fuzzy
msgid "You will need to include the `io.quarkus:quarkus-extension-maven-plugin` and configure the `maven-compiler-plugin` to detect the `quarkus-extension-processor` annotation processor to collect and generate the necessary xref:extension-metadata.adoc[Quarkus extension metadata] for the extension artifacts, if you are using the Quarkus parent pom it will automatically inherit the correct configuration."
msgstr "Terá de incluir o `io.quarkus:quarkus-extension-maven-plugin` e configurar o `maven-compiler-plugin` para detetar o processador de anotações `quarkus-extension-processor` para recolher e gerar os  link:extension-metadata.html[metadados de extensão Quarkus] necessários para os artefactos de extensão. Se estiver a utilizar o pom principal do Quarkus, este herdará automaticamente a configuração correcta."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:401
#, fuzzy
msgid "You may want to use the `create-extension` mojo of `{quarkus-platform-groupid}:quarkus-maven-plugin` to create these Maven modules - see the next section."
msgstr "Pode querer utilizar o mojo `create-extension` de `{quarkus-platform-groupid}:quarkus-maven-plugin` para criar estes módulos Maven - ver a próxima secção."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:404
#, fuzzy
msgid "By convention the deployment time artifact has the `-deployment` suffix, and the runtime artifact has no suffix (and is what the end user adds to their project)."
msgstr "Por convenção, o artefacto de tempo de implementação tem o sufixo `-deployment` e o artefacto de tempo de execução não tem sufixo (e é o que o utilizador final adiciona ao seu projeto)."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:414
#, no-wrap
msgid ""
"<dependencies>\n"
"    <dependency>\n"
"      <groupId>io.quarkus</groupId>\n"
"      <artifactId>quarkus-core</artifactId>\n"
"    </dependency>\n"
"</dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:446
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-extension-maven-plugin</artifactId>\n"
"            <!-- Executions configuration can be inherited from quarkus-build-parent -->\n"
"            <executions>\n"
"                <execution>\n"
"                    <goals>\n"
"                        <goal>extension-descriptor</goal>\n"
"                    </goals>\n"
"                    <configuration>\n"
"                         <deployment>${project.groupId}:${project.artifactId}-deployment:${project.version}</deployment>\n"
"                   </configuration>\n"
"               </execution>\n"
"           </executions>\n"
"        </plugin>\n"
"        <plugin>\n"
"            <groupId>org.apache.maven.plugins</groupId>\n"
"            <artifactId>maven-compiler-plugin</artifactId>\n"
"            <configuration>\n"
"                <annotationProcessorPaths>\n"
"                    <path>\n"
"                        <groupId>io.quarkus</groupId>\n"
"                        <artifactId>quarkus-extension-processor</artifactId>\n"
"                    </path>\n"
"                </annotationProcessorPaths>\n"
"            </configuration>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:449
#, fuzzy
msgid "The above `maven-compiler-plugin` configuration requires version 3.5+."
msgstr "A configuração `maven-compiler-plugin` acima requer a versão 3.5+."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:451
#, fuzzy
msgid "You will also need to configure the `maven-compiler-plugin` of the deployment module to detect the `quarkus-extension-processor` annotation processor."
msgstr "Também será necessário configurar o `maven-compiler-plugin` do módulo de implantação para detetar o processador de anotações `quarkus-extension-processor`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:460
#, no-wrap
msgid ""
"<dependencies>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-core-deployment</artifactId>\n"
"    </dependency>\n"
"</dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:477
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>org.apache.maven.plugins</groupId>\n"
"            <artifactId>maven-compiler-plugin</artifactId>\n"
"            <configuration>\n"
"                <annotationProcessorPaths>\n"
"                    <path>\n"
"                        <groupId>io.quarkus</groupId>\n"
"                        <artifactId>quarkus-extension-processor</artifactId>\n"
"                    </path>\n"
"                </annotationProcessorPaths>\n"
"            </configuration>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:479
#, fuzzy, no-wrap
msgid "Create new Quarkus Core extension modules using Maven"
msgstr "Criar novos módulos de extensão do Quarkus Core utilizando o Maven"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:482
#, fuzzy
msgid "Quarkus provides `create-extension` Maven Mojo to initialize your extension project."
msgstr "O Quarkus fornece `create-extension` Maven Mojo para inicializar o seu projeto de extensão."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:484
#, fuzzy
msgid "It will try to auto-detect its options:"
msgstr "Tentará detetar automaticamente as suas opções:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:486
#, fuzzy
msgid "from `quarkus` (Quarkus Core) or `quarkus/extensions` directory, it will use the 'Quarkus Core' extension layout and defaults."
msgstr "a partir do diretório `quarkus` (Quarkus Core) ou `quarkus/extensions`, utilizará a apresentação da extensão 'Quarkus Core' e as predefinições."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:487
#, fuzzy
msgid "with `-DgroupId=io.quarkiverse.[extensionId]`, it will use the 'Quarkiverse' extension layout and defaults."
msgstr "com `-DgroupId=io.quarkiverse.[extensionId]`, utilizará o esquema e as predefinições da extensão 'Quarkiverse'."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:488
#, fuzzy
msgid "in other cases it will use the 'Standalone' extension layout and defaults."
msgstr "noutros casos, utilizará o esquema e as predefinições da extensão \"Standalone\"."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:489
#, fuzzy
msgid "we may introduce other layout types in the future."
msgstr "podemos introduzir outros tipos de apresentação no futuro."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:491
#, fuzzy
msgid "You may not specify any parameter to use the interactive mode: `mvn {quarkus-platform-groupid}:quarkus-maven-plugin:{quarkus-version}:create-extension -N`"
msgstr "Não pode especificar qualquer parâmetro para utilizar o modo interativo: `mvn {quarkus-platform-groupid}:quarkus-maven-plugin:{quarkus-version}:create-extension -N`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:493
#, fuzzy
msgid "As and example, let's add a new extension called `my-ext` to the Quarkus source tree:"
msgstr "Como exemplo, vamos adicionar uma nova extensão chamada `my-ext` à árvore de origem do Quarkus:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:502
#, no-wrap
msgid ""
"git clone https://github.com/quarkusio/quarkus.git\n"
"cd quarkus\n"
"mvn {quarkus-platform-groupid}:quarkus-maven-plugin:{quarkus-version}:create-extension -N \\\n"
"    -DextensionId=my-ext \\\n"
"    -DextensionName=\"My Extension\" \\\n"
"    -DextensionDescription=\"Do something useful.\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:505
#, fuzzy
msgid "By default, the `groupId`, `version`, `quarkusVersion`, `namespaceId`, and `namespaceName` will be consistent with other Quarkus core extensions."
msgstr "Por defeito, as extensões `groupId`, `version`, `quarkusVersion`, `namespaceId`, e `namespaceName` serão coerentes com as outras extensões do núcleo do Quarkus."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:507
#, fuzzy
msgid "The extension description is important as it is displayed on https://code.quarkus.io/, when listing extensions with the Quarkus CLI, etc."
msgstr "A descrição da extensão é importante, uma vez que é apresentada em  https://code.quarkus.io/  ao listar extensões com o Quarkus CLI, etc."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:509
#, fuzzy
msgid "The above sequence of commands does the following:"
msgstr "A sequência de comandos acima faz o seguinte:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:511
#, fuzzy
msgid "Creates four new Maven modules:"
msgstr "Cria quatro novos módulos Maven:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:512
#, fuzzy
msgid "`quarkus-my-ext-parent` in the `extensions/my-ext` directory"
msgstr "`quarkus-my-ext-parent` no diretório `extensions/my-ext`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:513
#, fuzzy
msgid "`quarkus-my-ext` in the `extensions/my-ext/runtime` directory"
msgstr "`quarkus-my-ext` no diretório `extensions/my-ext/runtime`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:514
#, fuzzy
msgid "`quarkus-my-ext-deployment` in the `extensions/my-ext/deployment` directory; a basic `MyExtProcessor` class is generated in this module."
msgstr "`quarkus-my-ext-deployment` no diretório `extensions/my-ext/deployment`; neste módulo é gerada uma classe básica `MyExtProcessor`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:515
#, fuzzy
msgid "`quarkus-my-ext-integration-test` in the `integration-tests/my-ext/deployment` directory; an empty Jakarta REST Resource class and two test classes (for JVM mode and native mode) are generated in this module."
msgstr "`quarkus-my-ext-integration-test` no diretório `integration-tests/my-ext/deployment`; uma classe de recurso Jakarta REST vazia e duas classes de teste (para o modo JVM e o modo nativo) são geradas neste módulo."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:516
#, fuzzy
msgid "Links these three modules where necessary:"
msgstr "Liga estes três módulos sempre que necessário:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:517
#, fuzzy
msgid "`quarkus-my-ext-parent` is added to the `<modules>` of `quarkus-extensions-parent`"
msgstr "`quarkus-my-ext-parent` é adicionado ao sítio `&amp;lt;modules&amp;gt;` de `quarkus-extensions-parent`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:518
#, fuzzy
msgid "`quarkus-my-ext` is added to the `<dependencyManagement>` of the Quarkus BOM (Bill of Materials) `bom/application/pom.xml`"
msgstr "`quarkus-my-ext` é adicionado a `&amp;lt;dependencyManagement&amp;gt;` da lista técnica Quarkus (Bill of Materials) `bom/application/pom.xml`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:519
#, fuzzy
msgid "`quarkus-my-ext-deployment` is added to the `<dependencyManagement>` of the Quarkus BOM (Bill of Materials) `bom/application/pom.xml`"
msgstr "`quarkus-my-ext-deployment` é adicionado a `&amp;lt;dependencyManagement&amp;gt;` da lista técnica Quarkus (Bill of Materials) `bom/application/pom.xml`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:520
#, fuzzy
msgid "`quarkus-my-ext-integration-test` is added to the `<modules>` of `quarkus-integration-tests-parent`"
msgstr "`quarkus-my-ext-integration-test` é adicionado ao sítio `&amp;lt;modules&amp;gt;` de `quarkus-integration-tests-parent`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:522
#, fuzzy
msgid "You also have to fill the xref:extension-metadata.adoc#quarkus-extension-yaml[quarkus-extension.yaml] template file that describe your extension inside the runtime module `src/main/resources/META-INF` folder."
msgstr "Também tem de preencher o ficheiro de modelo  link:extension-metadata.html#quarkus-extension-yaml[quarkus-extension.yaml] que descreve a sua extensão dentro da pasta `src/main/resources/META-INF` do módulo de tempo de execução."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:524
#, fuzzy
msgid "This is the `quarkus-extension.yaml` template of the `quarkus-agroal` extension, you can use it as an example:"
msgstr "Este é o modelo `quarkus-extension.yaml` da extensão `quarkus-agroal`. Pode utilizá-lo como exemplo:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:538
#, no-wrap
msgid ""
"name: \"Agroal - Database connection pool\" <1>\n"
"metadata:\n"
"  keywords: <2>\n"
"  - \"agroal\"\n"
"  - \"database-connection-pool\"\n"
"  - \"datasource\"\n"
"  - \"jdbc\"\n"
"  guide: \"https://quarkus.io/guides/datasource\" <3>\n"
"  categories: <4>\n"
"  - \"data\"\n"
"  status: \"stable\" <5>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:541
#, fuzzy
msgid "the name of the extension that will be displayed to users"
msgstr "o nome da extensão que será apresentada aos utilizadores"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:542
#, fuzzy
msgid "keywords that can be used to find the extension in the extension catalog"
msgstr "palavras-chave que podem ser utilizadas para encontrar a extensão no catálogo de extensões"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:543
#, fuzzy
msgid "link to the extension's guide or documentation"
msgstr "ligação para o guia ou documentação da extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:544
#, fuzzy
msgid "categories under which the extension should appear on https://code.quarkus.io[code.quarkus.io], could be omitted, in which case the extension will still be listed but not under any specific category"
msgstr "as categorias em que a extensão deve aparecer em  link:https://code.quarkus.io[code.quarkus.io], podem ser omitidas, caso em que a extensão continuará a ser listada mas não numa categoria específica"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:545
#, fuzzy
msgid "maturity status, which could be `stable`, `preview` or `experimental`, evaluated by extension maintainers"
msgstr "estado de maturidade, que pode ser `stable`, `preview` ou `experimental`, avaliado pelos responsáveis pela extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:549
#, fuzzy
msgid "The `name` parameter of the mojo is optional.  If you do not specify it on the command line, the plugin will derive it from `extensionId` by replacing dashes with spaces and uppercasing each token.  So you may consider omitting explicit `name` in some cases."
msgstr "O parâmetro `name` do mojo é opcional. Se não o especificar na linha de comando, o plugin deriva-o de `extensionId` substituindo os traços por espaços e colocando cada token em maiúsculas. Por isso, pode considerar omitir explicitamente `name` em alguns casos."

#.  The following link should point to the mojo page once https://github.com/quarkusio/quarkusio.github.io/issues/265 is fixed
#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:552
#, fuzzy
msgid "Please refer to https://github.com/quarkusio/quarkus/blob/{quarkus-version}/devtools/maven/src/main/java/io/quarkus/maven/CreateExtensionMojo.java[CreateExtensionMojo JavaDoc] for all the available options of the mojo."
msgstr "Consulte o  link:https://github.com/quarkusio/quarkus/blob/{quarkus-version}/devtools/maven/src/main/java/io/quarkus/maven/CreateExtensionMojo.java[JavaDoc de CreateExtensionMojo] para conhecer todas as opções disponíveis do mojo."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:553
#, fuzzy, no-wrap
msgid "Using Gradle"
msgstr "Utilizar o Gradle"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:559
#, fuzzy
msgid "You will need to apply the `io.quarkus.extension` plugin in the `runtime` module of your extension project.  The plugin includes the `extensionDescriptor` task that will generate `META-INF/quarkus-extension.properties` and `META-INF/quarkus-extension.yml` files.  The plugin also enables the `io.quarkus:quarkus-extension-processor` annotation processor in both `deployment` and `runtime` modules to collect and generate the rest of the xref:extension-metadata.adoc[Quarkus extension metadata].  The name of the deployment module can be configured in the plugin by setting the `deploymentModule` property. The property is set to `deployment` by default:"
msgstr "Terá de aplicar o plug-in `io.quarkus.extension` no módulo `runtime` do seu projeto de extensão. O plug-in inclui a tarefa `extensionDescriptor` que irá gerar ficheiros `META-INF/quarkus-extension.properties` e `META-INF/quarkus-extension.yml`. O plug-in também ativa o processador de anotações `io.quarkus:quarkus-extension-processor` nos módulos `deployment` e `runtime` para recolher e gerar o resto dos  link:extension-metadata.html[metadados da extensão Quarkus]. O nome do módulo de implantação pode ser configurado no plug-in definindo a propriedade `deploymentModule`. A propriedade está definida para `deployment` por defeito:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:566
#, no-wrap
msgid ""
"plugins {\n"
"    id 'java'\n"
"    id 'io.quarkus.extension'\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:570
#, no-wrap
msgid ""
"quarkusExtension {\n"
"    deploymentModule = 'deployment'\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:574
#, no-wrap
msgid ""
"dependencies {\n"
"    implementation platform('io.quarkus:quarkus-bom:{quarkus-version}')\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:579
#, fuzzy
msgid "This plugin is still experimental, it does not validate the extension dependencies as the equivalent Maven plugin does."
msgstr "Este plugin ainda é experimental, não valida as dependências da extensão como faz o plugin Maven equivalente."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:582
#, fuzzy, no-wrap
msgid "Build Step Processors"
msgstr "Construir processadores por etapas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:587
#, fuzzy
msgid "Work is done at augmentation time by _build steps_ which produce and consume _build items_.  The build steps found in the deployment modules that correspond to the extensions in the project build are automatically wired together and executed to produce the final build artifact(s)."
msgstr "O trabalho é feito no momento do aumento por _etapas de construção_ que produzem e consomem _itens de construção_. As etapas de construção encontradas nos módulos de implantação que correspondem às extensões na construção do projeto são automaticamente ligadas entre si e executadas para produzir o(s) artefacto(s) de construção final."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:588
#, fuzzy, no-wrap
msgid "Build steps"
msgstr "Construir etapas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:593
#, fuzzy
msgid "A _build step_ is a non-static method which is annotated with the `@io.quarkus.deployment.annotations.BuildStep` annotation.  Each build step may xref:consuming-values[consume] items that are produced by earlier stages, and xref:producing-values[produce] items that can be consumed by later stages. Build steps are normally only run when they produce a build item that is ultimately consumed by another step."
msgstr "Uma _etapa de construção_ é um método não estático que é anotado com a anotação `@io.quarkus.deployment.annotations.BuildStep`. Cada etapa de construção pode  link:#consuming-values[consumir] itens que são produzidos por etapas anteriores e  link:#producing-values[produzir] itens que podem ser consumidos por etapas posteriores. Normalmente, as etapas de construção só são executadas quando produzem um item de construção que acaba por ser consumido por outra etapa."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:596
#, fuzzy
msgid "Build steps are normally placed on plain classes within an extension's deployment module.  The classes are automatically instantiated during the augment process and utilize xref:injection[injection]."
msgstr "As etapas de compilação são normalmente colocadas em classes simples dentro do módulo de implantação de uma extensão. As classes são instanciadas automaticamente durante o processo de aumento e utilizam  link:#injection[injeção]."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:598
#, fuzzy, no-wrap
msgid "Build items"
msgstr "Construir objectos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:604
#, fuzzy
msgid "Build items are concrete, final subclasses of the abstract `io.quarkus.builder.item.BuildItem` class.  Each build item represents some unit of information that must be passed from one stage to another.  The base `BuildItem` class may not itself be directly subclassed; rather, there are abstract subclasses for each of the kinds of build item subclasses that _may_ be created: xref:simple-build-items[simple], xref:multi-build-items[multi], and xref:empty-build-items[empty]."
msgstr "Os itens de construção são subclasses concretas e finais da classe abstrata `io.quarkus.builder.item.BuildItem`. Cada item de construção representa alguma unidade de informação que deve ser passada de um estágio para outro. A classe base `BuildItem` não pode ser diretamente subclassificada; em vez disso, existem subclasses abstractas para cada um dos tipos de subclasses de itens de construção que _podem_ ser criados:  link:#simple-build-items[simples],  link:#multi-build-items[multi] e  link:#empty-build-items[vazio]."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:606
#, fuzzy
msgid "Think of build items as a way for different extensions to communicate with one another.  For example, a build item can:"
msgstr "Pense nos itens de construção como uma forma de as diferentes extensões comunicarem umas com as outras. Por exemplo, um item de compilação pode:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:608
#, fuzzy
msgid "expose the fact that a database configuration exists"
msgstr "expor o facto de existir uma configuração da base de dados"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:609
#, fuzzy
msgid "consume that database configuration (e.g. a connection pool extension or an ORM extension)"
msgstr "consumir essa configuração de base de dados (por exemplo, uma extensão de pool de ligações ou uma extensão ORM)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:611
#, fuzzy
msgid "ask an extension to do work for another extension: e.g. an extension wanting to define a new CDI bean and asking the ArC extension to do so"
msgstr "pedir a uma extensão que trabalhe para outra extensão: por exemplo, uma extensão que pretende definir um novo bean CDI e pede à extensão ArC que o faça"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:613
#, fuzzy
msgid "This is a very flexible mechanism."
msgstr "Trata-se de um mecanismo muito flexível."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:616
#, fuzzy
msgid "`BuildItem` instances should be immutable, as the producer/consumer model does not allow for mutation to be correctly ordered. This is not enforced but failure to adhere to this rule can result in race conditions."
msgstr "`BuildItem` devem ser imutáveis, uma vez que o modelo produtor/consumidor não permite que a mutação seja corretamente ordenada. Isto não é imposto, mas o não cumprimento desta regra pode resultar em condições de corrida."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:618
#, fuzzy
msgid "Build steps are executed if and only if they produce build items that are (transitively) needed by other build steps. Make sure your build step produces a build item, otherwise you should probably produce either `ValidationErrorBuildItem` for build validations, or `ArtifactResultBuildItem` for generated artifacts."
msgstr "Os passos de construção são executados se e somente se eles produzem itens de construção que são (transitivamente) necessários para outros passos de construção. Certifique-se de que sua etapa de construção produz um item de construção, caso contrário, você provavelmente deve produzir `ValidationErrorBuildItem` para validações de construção, ou `ArtifactResultBuildItem` para artefatos gerados."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:620
#, fuzzy, no-wrap
msgid "Simple build items"
msgstr "Itens de construção simples"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:626
#, fuzzy
msgid "Simple build items are final classes which extend `io.quarkus.builder.item.SimpleBuildItem`.  Simple build items may only be produced by one step in a given build; if multiple steps in a build declare that they produce the same simple build item, an error is raised.  Any number of build steps may consume a simple build item.  A build step which consumes a simple build item will always run _after_ the build step which produced that item."
msgstr "Os itens de compilação simples são classes finais que estendem `io.quarkus.builder.item.SimpleBuildItem`. Os itens de compilação simples só podem ser produzidos por um passo numa determinada compilação; se vários passos numa compilação declararem que produzem o mesmo item de compilação simples, é apresentado um erro. Qualquer número de passos de construção pode consumir um item de construção simples. Uma etapa de compilação que consome um item de compilação simples será sempre executada _após_ a etapa de compilação que produziu esse item."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:627
#, fuzzy, no-wrap
msgid "Example of a single build item"
msgstr "Exemplo de um item de construção individual"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:636
#, no-wrap
msgid ""
"/**\n"
" * The build item which represents the Jandex index of the application,\n"
" * and would normally be used by many build steps to find usages\n"
" * of annotations.\n"
" */\n"
"public final class ApplicationIndexBuildItem extends SimpleBuildItem {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:638
#, no-wrap
msgid "    private final Index index;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:642
#, no-wrap
msgid ""
"    public ApplicationIndexBuildItem(Index index) {\n"
"        this.index = index;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:647
#, no-wrap
msgid ""
"    public Index getIndex() {\n"
"        return index;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:651
#, fuzzy, no-wrap
msgid "Multi build items"
msgstr "Itens de construção múltipla"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:656
#, fuzzy
msgid "Multiple or \"multi\" build items are final classes which extend `io.quarkus.builder.item.MultiBuildItem`.  Any number of multi build items of a given class may be produced by any number of steps, but any steps which consume multi build items will only run _after_ every step which can produce them has run."
msgstr "Itens de construção múltiplos ou \"multi\" são classes finais que estendem `io.quarkus.builder.item.MultiBuildItem`. Qualquer número de itens de compilação múltipla de uma determinada classe pode ser produzido por qualquer número de passos, mas quaisquer passos que consumam itens de compilação múltipla só serão executados _depois de_ todos os passos que os possam produzir terem sido executados."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:657
#, fuzzy, no-wrap
msgid "Example of a multiple build item"
msgstr "Exemplo de um item de construção múltipla"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:663
#, no-wrap
msgid ""
"public final class ServiceWriterBuildItem extends MultiBuildItem {\n"
"    private final String serviceName;\n"
"    private final List<String> implementations;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:673
#, no-wrap
msgid ""
"    public ServiceWriterBuildItem(String serviceName, String... implementations) {\n"
"        this.serviceName = serviceName;\n"
"        // Make sure it's immutable\n"
"        this.implementations = Collections.unmodifiableList(\n"
"            Arrays.asList(\n"
"                implementations.clone()\n"
"            )\n"
"        );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:677
#, no-wrap
msgid ""
"    public String getServiceName() {\n"
"        return serviceName;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:682
#, no-wrap
msgid ""
"    public List<String> getImplementations() {\n"
"        return implementations;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:684
#, fuzzy, no-wrap
msgid "Example of multiple build item usage"
msgstr "Exemplo de utilização de vários itens de construção"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:699
#, no-wrap
msgid ""
"/**\n"
" * This build step produces a single multi build item that declares two\n"
" * providers of one configuration-related service.\n"
" */\n"
"@BuildStep\n"
"public ServiceWriterBuildItem registerOneService() {\n"
"    return new ServiceWriterBuildItem(\n"
"        Converter.class.getName(),\n"
"        MyFirstConfigConverterImpl.class.getName(),\n"
"        MySecondConfigConverterImpl.class.getName()\n"
"    );\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:718
#, no-wrap
msgid ""
"/**\n"
" * This build step produces several multi build items that declare multiple\n"
" * providers of multiple configuration-related services.\n"
" */\n"
"@BuildStep\n"
"public void registerSeveralServices(\n"
"    BuildProducer<ServiceWriterBuildItem> providerProducer\n"
") {\n"
"    providerProducer.produce(new ServiceWriterBuildItem(\n"
"        Converter.class.getName(),\n"
"        MyThirdConfigConverterImpl.class.getName(),\n"
"        MyFourthConfigConverterImpl.class.getName()\n"
"    ));\n"
"    providerProducer.produce(new ServiceWriterBuildItem(\n"
"        ConfigSource.class.getName(),\n"
"        MyConfigSourceImpl.class.getName()\n"
"    ));\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:729
#, no-wrap
msgid ""
"/**\n"
" * This build step aggregates all the produced service providers\n"
" * and outputs them as resources.\n"
" */\n"
"@BuildStep\n"
"public void produceServiceFiles(\n"
"    List<ServiceWriterBuildItem> items,\n"
"    BuildProducer<GeneratedResourceBuildItem> resourceProducer\n"
") throws IOException {\n"
"    // Aggregate all the providers\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:740
#, no-wrap
msgid ""
"    Map<String, Set<String>> map = new HashMap<>();\n"
"    for (ServiceWriterBuildItem item : items) {\n"
"        String serviceName = item.getName();\n"
"        for (String implName : item.getImplementations()) {\n"
"            map.computeIfAbsent(\n"
"                serviceName,\n"
"                (k, v) -> new LinkedHashSet<>()\n"
"            ).add(implName);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:761
#, no-wrap
msgid ""
"    // Now produce the resource(s) for the SPI files\n"
"    for (Map.Entry<String, Set<String>> entry : map.entrySet()) {\n"
"        String serviceName = entry.getKey();\n"
"        try (ByteArrayOutputStream os = new ByteArrayOutputStream()) {\n"
"            try (OutputStreamWriter w = new OutputStreamWriter(os, StandardCharsets.UTF_8)) {\n"
"                for (String implName : entry.getValue()) {\n"
"                    w.write(implName);\n"
"                    w.write(System.lineSeparator());\n"
"                }\n"
"                w.flush();\n"
"            }\n"
"            resourceProducer.produce(\n"
"                new GeneratedResourceBuildItem(\n"
"                    \"META-INF/services/\" + serviceName,\n"
"                    os.toByteArray()\n"
"                )\n"
"            );\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:764
#, fuzzy, no-wrap
msgid "Empty build items"
msgstr "Itens de construção vazios"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:769
#, fuzzy
msgid "Empty build items are final (usually empty) classes which extend `io.quarkus.builder.item.EmptyBuildItem`.  They represent build items that don't actually carry any data, and allow such items to be produced and consumed without having to instantiate empty classes.  They cannot themselves be instantiated."
msgstr "Itens de construção vazios são classes finais (geralmente vazias) que estendem `io.quarkus.builder.item.EmptyBuildItem`. Representam itens de construção que não transportam efetivamente quaisquer dados e permitem que tais itens sejam produzidos e consumidos sem ter de instanciar classes vazias. Eles não podem ser instanciados."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:772
#, fuzzy
msgid "As they cannot be instantiated, they cannot be injected by any means, nor be returned by a build step (or via a `BuildProducer`).  To produce an empty build item you must annotate the build step with `@Produce(MyEmptyBuildItem.class)` and to consume it by `@Consume(MyEmptyBuildItem.class)`."
msgstr "Como não podem ser instanciados, não podem ser injectados por qualquer meio, nem devolvidos por um passo de construção (ou através de um `BuildProducer`). Para produzir um item de construção vazio, é necessário anotar o passo de construção com `@Produce(MyEmptyBuildItem.class)` e consumi-lo com `@Consume(MyEmptyBuildItem.class)`."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:773
#, fuzzy, no-wrap
msgid "Example of an empty build item"
msgstr "Exemplo de um item de compilação vazio"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:779
#, no-wrap
msgid ""
"public final class NativeImageBuildItem extends EmptyBuildItem {\n"
"    // empty\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:784
#, fuzzy
msgid "Empty build items can represent \"barriers\" which can impose ordering between steps.  They can also be used in the same way that popular build systems use \"pseudo-targets\", which is to say that the build item can represent a conceptual goal that does not have a concrete representation."
msgstr "Os itens de construção vazios podem representar \"barreiras\" que podem impor uma ordem entre as etapas. Também podem ser utilizados da mesma forma que os sistemas de construção populares utilizam \"pseudo-objectivos\", o que significa que o item de construção pode representar um objetivo concetual que não tem uma representação concreta."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:785
#, fuzzy, no-wrap
msgid "Example of usage of an empty build item in a \"pseudo-target\" style"
msgstr "Exemplo de utilização de um item de construção vazio num estilo \"pseudo-objetivo"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:800
#, no-wrap
msgid ""
"/**\n"
" * Contrived build step that produces the native image on disk.  The main augmentation\n"
" * step (which is run by Maven or Gradle) would be declared to consume this empty item,\n"
" * causing this step to be run.\n"
" */\n"
"@BuildStep\n"
"@Produce(NativeImageBuildItem.class)\n"
"void produceNativeImage() {\n"
"    // ...\n"
"    // (produce the native image)\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:802
#, fuzzy, no-wrap
msgid "Example of usage of an empty build item in a \"barrier\" style"
msgstr "Exemplo de utilização de um item de construção vazio num estilo \"barreira"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:814
#, no-wrap
msgid ""
"/**\n"
" * This would always run after {@link #produceNativeImage()} completes, producing\n"
" * an instance of {@code SomeOtherBuildItem}.\n"
" */\n"
"@BuildStep\n"
"@Consume(NativeImageBuildItem.class)\n"
"SomeOtherBuildItem secondBuildStep() {\n"
"    return new SomeOtherBuildItem(\"foobar\");\n"
"}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:817
#, fuzzy, no-wrap
msgid "Validation Error build items"
msgstr "Itens de compilação de erros de validação"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:820
#, fuzzy
msgid "They represent build items with validation errors that make the build fail. These build items are consumed during the initialization of the CDI container."
msgstr "Eles representam itens de compilação com erros de validação que fazem a compilação falhar. Estes itens de construção são consumidos durante a inicialização do contentor CDI."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:821
#, fuzzy, no-wrap
msgid "Example of usage of an validation error build item in a \"pseudo-target\" style"
msgstr "Exemplo de utilização de um item de construção de erro de validação num estilo \"pseudo-objetivo"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:832
#, no-wrap
msgid ""
"@BuildStep\n"
"void checkCompatibility(Capabilities capabilities, BuildProducer<ValidationErrorBuildItem> validationErrors) {\n"
"    if (capabilities.isMissing(Capability.RESTEASY_REACTIVE)\n"
"            && capabilities.isMissing(Capability.RESTEASY_CLASSIC)) {\n"
"        validationErrors.produce(new ValidationErrorBuildItem(\n"
"                new ConfigurationException(\"Cannot use both RESTEasy Classic and Reactive extensions at the same time\")));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:835
#, fuzzy, no-wrap
msgid "Artifact Result build items"
msgstr "Itens de construção do resultado do artefacto"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:839
#, fuzzy
msgid "They represent build items containing the runnable artifact generated by the build, such as an uberjar or thin jar.  These build items can also be used to always execute a build step without needing to produce anything."
msgstr "Eles representam itens de compilação contendo o artefato executável gerado pela compilação, como um uberjar ou thin jar. Esses itens de compilação também podem ser usados para sempre executar uma etapa de compilação sem precisar produzir nada."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:840
#, fuzzy, no-wrap
msgid "Example of build step that is always executed in a \"pseudo-target\" style"
msgstr "Exemplo de passo de construção que é sempre executado num estilo \"pseudo-target\""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:848
#, no-wrap
msgid ""
"@BuildStep\n"
"@Produce(ArtifactResultBuildItem.class)\n"
"void runBuildStepThatProducesNothing() {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:851
#, fuzzy, no-wrap
msgid "Injection"
msgstr "Injeção"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:854
#, fuzzy
msgid "Classes which contain build steps support the following types of injection:"
msgstr "As classes que contêm etapas de construção suportam os seguintes tipos de injeção:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:856
#, fuzzy
msgid "Constructor parameter injection"
msgstr "Injeção de parâmetros do construtor"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:857
#, fuzzy
msgid "Field injection"
msgstr "Injeção no terreno"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:858
#, fuzzy
msgid "Method parameter injection (for build step methods only)"
msgstr "Injeção de parâmetros de métodos (apenas para métodos de etapas de construção)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:861
#, fuzzy
msgid "Build step classes are instantiated and injected for each build step invocation, and are discarded afterwards.  State should only be communicated between build steps by way of build items, even if the steps are on the same class."
msgstr "As classes de etapas de construção são instanciadas e injetadas para cada invocação de etapa de construção e são descartadas depois. O estado só deve ser comunicado entre as etapas de construção por meio de itens de construção, mesmo que as etapas estejam na mesma classe."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:864
#, fuzzy
msgid "Final fields are not considered for injection, but can be populated by way of constructor parameter injection if desired.  Static fields are never considered for injection."
msgstr "Os campos finais não são considerados para injeção, mas podem ser preenchidos através da injeção de parâmetros do construtor, se desejado. Os campos estáticos nunca são considerados para injeção."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:866
#, fuzzy
msgid "The types of values that can be injected include:"
msgstr "Os tipos de valores que podem ser injectados incluem:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:868
#, fuzzy
msgid "xref:build-items[Build items] produced by previous build steps"
msgstr "link:#build-items[Itens de construção] produzidos por etapas de construção anteriores"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:869
#, fuzzy
msgid "xref:producing-values[Build producers] to produce items for subsequent build steps"
msgstr "link:#producing-values[Produtores] de construção para produzir itens para etapas de construção subsequentes"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:870
#, fuzzy
msgid "xref:configuration[Configuration Mapping] types"
msgstr "link:#configuration[Configuração] Tipos de  link:#configuration[mapeamento]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:871
#, fuzzy
msgid "Template objects for xref:bytecode-recording[bytecode recording]"
msgstr "Objectos modelo para  link:#bytecode-recording[registo de bytecode]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:874
#, fuzzy
msgid "Objects which are injected into a build step method or its class _must not_ be used outside that method's execution."
msgstr "Os objectos injectados num método da etapa de construção ou na sua classe _não devem_ ser utilizados fora da execução desse método."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:877
#, fuzzy
msgid "Injection is resolved at compile time via an annotation processor, and the resulting code does not have permission to inject private fields or invoke private methods."
msgstr "A injeção é resolvida em tempo de compilação através de um processador de anotações, e o código resultante não tem permissão para injetar campos privados ou invocar métodos privados."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:879
#, fuzzy, no-wrap
msgid "Producing values"
msgstr "Produção de valores"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:882
#, fuzzy
msgid "A build step may produce values for subsequent steps in several possible ways:"
msgstr "Uma etapa de construção pode produzir valores para as etapas subsequentes de várias maneiras possíveis:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:884
#, fuzzy
msgid "By returning a xref:simple-build-items[simple build item] or xref:multi-build-items[multi build item] instance"
msgstr "Ao devolver um  link:#simple-build-items[item de construção simples] ou uma instância de  link:#multi-build-items[item de construção múltipla]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:885
#, fuzzy
msgid "By returning a `List` of a multi build item class"
msgstr "Ao devolver um `List` de uma classe de item multi-construção"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:886
#, fuzzy
msgid "By injecting a `BuildProducer` of a simple or multi build item class"
msgstr "Ao injetar um `BuildProducer` de uma classe de item simples ou multi-construção"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:888
#, fuzzy
msgid "By annotating the method with `@io.quarkus.deployment.annotations.Produce`, giving the class name of an xref:empty-build-items[empty build item]"
msgstr "Anotando o método com `@io.quarkus.deployment.annotations.Produce`, dando o nome da classe de um  link:#empty-build-items[item de compilação vazio]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:891
#, fuzzy
msgid "If a simple build item is declared on a build step, it _must_ be produced during that build step, otherwise an error will result.  Build producers, which are injected into steps, _must not_ be used outside that step."
msgstr "Se um item de compilação simples for declarado numa etapa de compilação, ele _deve_ ser produzido durante essa etapa de compilação, caso contrário, ocorrerá um erro. Os produtores de construção, que são injectados nas etapas, _não devem_ ser utilizados fora dessa etapa."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:897
#, fuzzy
msgid "Note that a `@BuildStep` method will only be called if it produces something that another consumer or the final output requires. If there is no consumer for a particular item then it will not be produced. What is required will depend on the final target that is being produced.  For example, when running in developer mode the final output will not ask for GraalVM-specific build items such as `ReflectiveClassBuildItem`, so methods that only produce these items will not be invoked."
msgstr "Note que um método `@BuildStep` só será chamado se produzir algo que outro consumidor ou a saída final necessite. Se não existir um consumidor para um determinado item, este não será produzido. O que é necessário dependerá do alvo final que está a ser produzido. Por exemplo, ao executar no modo de desenvolvedor, a saída final não solicitará itens de compilação específicos do GraalVM, como `ReflectiveClassBuildItem`, portanto, os métodos que produzem apenas esses itens não serão invocados."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:899
#, fuzzy, no-wrap
msgid "Consuming values"
msgstr "Valores de consumo"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:902
#, fuzzy
msgid "A build step may consume values from previous steps in the following ways:"
msgstr "Um passo de construção pode consumir valores de passos anteriores das seguintes formas:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:904
#, fuzzy
msgid "By injecting a xref:simple-build-items[simple build item]"
msgstr "Ao injetar um  link:#simple-build-items[item de construção simples]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:905
#, fuzzy
msgid "By injecting an `Optional` of a simple build item class"
msgstr "Ao injetar um `Optional` de uma classe de item de construção simples"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:906
#, fuzzy
msgid "By injecting a `List` of a xref:multi-build-items[multi build item] class"
msgstr "Ao injetar um `List` de uma classe de  link:#multi-build-items[item multi-construção]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:908
#, fuzzy
msgid "By annotating the method with `@io.quarkus.deployment.annotations.Consume`, giving the class name of an xref:empty-build-items[empty build item]"
msgstr "Anotando o método com `@io.quarkus.deployment.annotations.Consume`, dando o nome da classe de um  link:#empty-build-items[item de compilação vazio]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:911
#, fuzzy
msgid "Normally it is an error for a step which is included to consume a simple build item that is not produced by any other step.  In this way, it is guaranteed that all the declared values will be present and non-`null` when a step is run."
msgstr "Normalmente, é um erro que uma etapa incluída consuma um item de construção simples que não é produzido por nenhuma outra etapa. Desta forma, é garantido que todos os valores declarados estarão presentes e não `null` quando uma etapa é executada."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:914
#, fuzzy
msgid "Sometimes a value isn't necessary for the build to complete, but might inform some behavior of the build step if it is present.  In this case, the value can be optionally injected."
msgstr "Às vezes, um valor não é necessário para que a compilação seja concluída, mas pode informar algum comportamento da etapa de compilação se estiver presente. Neste caso, o valor pode ser injetado opcionalmente."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:916
#, fuzzy
msgid "Multi build values are always considered _optional_.  If not present, an empty list will be injected."
msgstr "Os valores de compilação múltipla são sempre considerados _opcionais_. Se não estiverem presentes, será injectada uma lista vazia."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:918
#, fuzzy, no-wrap
msgid "Weak value production"
msgstr "Produção de valor fraco"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:923
#, fuzzy
msgid "Normally a build step is included whenever it produces any build item which is in turn consumed by any other build step.  In this way, only the steps necessary to produce the final artifact(s) are included, and steps which pertain to extensions which are not installed or which only produce build items which are not relevant for the given artifact type are excluded."
msgstr "Normalmente, uma etapa de construção é incluída sempre que produz qualquer item de construção que é, por sua vez, consumido por qualquer outra etapa de construção. Desta forma, apenas as etapas necessárias para produzir o(s) artefacto(s) final(is) são incluídas, e as etapas que dizem respeito a extensões que não estão instaladas ou que apenas produzem itens de construção que não são relevantes para o tipo de artefacto em questão são excluídas."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:926
#, fuzzy
msgid "For cases where this is not desired behavior, the `@io.quarkus.deployment.annotations.Weak` annotation may be used.  This annotation indicates that the build step should not automatically be included solely on the basis of producing the annotated value."
msgstr "Para os casos em que este não é o comportamento desejado, pode ser utilizada a anotação `@io.quarkus.deployment.annotations.Weak`. Esta anotação indica que a etapa de construção não deve ser incluída automaticamente apenas com base na produção do valor anotado."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:927
#, fuzzy, no-wrap
msgid "Example of producing a build item weakly"
msgstr "Exemplo de produção de um item de construção de forma fraca"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:943
#, no-wrap
msgid ""
"/**\n"
" * This build step is only run if something consumes the ExecutorClassBuildItem.\n"
" */\n"
"@BuildStep\n"
"void createExecutor(\n"
"        @Weak BuildProducer<GeneratedClassBuildItem> classConsumer,\n"
"        BuildProducer<ExecutorClassBuildItem> executorClassConsumer\n"
") {\n"
"        ClassWriter cw = new ClassWriter(Gizmo.ASM_API_VERSION);\n"
"        String className = generateClassThatCreatesExecutor(cw); // <1>\n"
"        classConsumer.produce(new GeneratedClassBuildItem(true, className, cw.toByteArray()));\n"
"        executorClassConsumer.produce(new ExecutorClassBuildItem(className));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:945
#, fuzzy
msgid "This method (not provided in this example) would generate the class using the ASM API."
msgstr "Este método (não fornecido neste exemplo) geraria a classe utilizando a API ASM."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:952
#, fuzzy
msgid "Certain types of build items are generally always consumed, such as generated classes or resources.  An extension might produce a build item along with a generated class to facilitate the usage of that build item.  Such a build step would use the `@Weak` annotation on the generated class build item, while normally producing the other build item.  If the other build item is ultimately consumed by something, then the step would run and the class would be generated.  If nothing consumes the other build item, the step would not be included in the build process."
msgstr "Certos tipos de itens de construção são geralmente sempre consumidos, como classes ou recursos gerados. Uma extensão pode produzir um item de compilação junto com uma classe gerada para facilitar o uso desse item de compilação. Tal etapa de construção usaria a anotação `@Weak` no item de construção da classe gerada, enquanto normalmente produz o outro item de construção. Se o outro item de construção for consumido por algo, a etapa será executada e a classe será gerada. Se nada consumir o outro item de compilação, a etapa não será incluída no processo de compilação."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:955
#, fuzzy
msgid "In the example above, `GeneratedClassBuildItem` would only be produced if `ExecutorClassBuildItem` is consumed by some other build step."
msgstr "No exemplo acima, `GeneratedClassBuildItem` só seria produzido se `ExecutorClassBuildItem` fosse consumido por alguma outra etapa de compilação."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:958
#, fuzzy
msgid "Note that when using xref:bytecode-recording[bytecode recording], the implicitly generated class can be declared to be weak by using the `optional` attribute of the `@io.quarkus.deployment.annotations.Record` annotation."
msgstr "Note-se que, ao utilizar o  link:#bytecode-recording[registo de bytecode], a classe gerada implicitamente pode ser declarada como fraca utilizando o atributo `optional` da anotação `@io.quarkus.deployment.annotations.Record`."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:959
#, fuzzy, no-wrap
msgid "Example of using a bytecode recorder where the generated class is weakly produced"
msgstr "Exemplo de utilização de um registador de bytecode em que a classe gerada é fracamente produzida"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:971
#, no-wrap
msgid ""
"/**\n"
" * This build step is only run if something consumes the ExecutorBuildItem.\n"
" */\n"
"@BuildStep\n"
"@Record(value = ExecutionTime.RUNTIME_INIT, optional = true) // <1>\n"
"ExecutorBuildItem createExecutor( // <2>\n"
"        ExecutorRecorder recorder,\n"
"        ThreadPoolConfig threadPoolConfig\n"
") {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:980
#, no-wrap
msgid ""
"    return new ExecutorBuildItem(\n"
"        recorder.setupRunTime(\n"
"            shutdownContextBuildItem,\n"
"            threadPoolConfig,\n"
"            launchModeBuildItem.getLaunchMode()\n"
"        )\n"
"    );\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:982
#, fuzzy
msgid "Note the `optional` attribute."
msgstr "Note-se o atributo `optional`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:983
#, fuzzy
msgid "This example is using recorder proxies; see the section on xref:bytecode-recording[bytecode recording] for more information."
msgstr "Este exemplo está a utilizar proxies de gravador; consulte a secção sobre  link:#bytecode-recording[gravação de bytecode] para obter mais informações."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:984
#, fuzzy, no-wrap
msgid "Application Archives"
msgstr "Arquivos de aplicações"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:990
#, fuzzy
msgid "The `@BuildStep` annotation can also register marker files that determine which archives on the class path are considered to be 'Application Archives', and will therefore get indexed. This is done via the `applicationArchiveMarkers`. For example the ArC extension registers `META-INF/beans.xml`, which means that all archives on the class path with a `beans.xml` file will be indexed."
msgstr "A anotação `@BuildStep` também pode registar ficheiros marcadores que determinam quais os arquivos no caminho da classe que são considerados 'Arquivos de Aplicação' e que, por isso, serão indexados. Isto é feito através do `applicationArchiveMarkers`. Por exemplo, a extensão ArC regista `META-INF/beans.xml`, o que significa que todos os arquivos no caminho da classe com um ficheiro `beans.xml` serão indexados."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:991
#, fuzzy, no-wrap
msgid "Using Thread's Context Class Loader"
msgstr "Usando o carregador de classe de contexto da Thread"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:997
#, fuzzy
msgid "The build step will be run with a TCCL that can load user classes from the deployment in a transformer-safe way.  This class loader only lasts for the life of the augmentation, and is discarded afterwards.  The classes will be loaded again in a different class loader at runtime.  This means that loading a class during augmentation does not stop it from being transformed when running in the development/test mode."
msgstr "O passo de construção será executado com um TCCL que pode carregar classes de utilizador a partir da implementação de uma forma segura para o transformador. Este carregador de classes dura apenas o tempo de vida do aumento e é descartado depois. As classes serão carregadas novamente em um carregador de classes diferente em tempo de execução. Isso significa que carregar uma classe durante o aumento não impede que ela seja transformada quando executada no modo de desenvolvimento/teste."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:998
#, fuzzy, no-wrap
msgid "Adding external JARs to the indexer with IndexDependencyBuildItem"
msgstr "Adicionar JARs externos ao indexador com IndexDependencyBuildItem"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1002
#, fuzzy
msgid "The index of scanned classes will not automatically include your external class dependencies.  To add dependencies, create a `@BuildStep` that produces `IndexDependencyBuildItem` objects, for a `groupId` and `artifactId`."
msgstr "O índice de classes digitalizadas não incluirá automaticamente as suas dependências de classe externas. Para adicionar dependências, crie um `@BuildStep` que produza objectos `IndexDependencyBuildItem`, para um `groupId` e `artifactId`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1004
#, fuzzy
msgid "It is important to specify all the required artifacts to be added to the indexer. No artifacts are implicitly added transitively."
msgstr "É importante especificar todos os artefactos necessários a serem adicionados ao indexador. Nenhum artefacto é adicionado implicitamente de forma transitória."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1006
#, fuzzy
msgid "The `Amazon Alexa` extension adds dependent libraries from the Alexa SDK that are used in Jackson JSON transformations, in order for the reflective classes to identified and included at `BUILD_TIME`."
msgstr "A extensão `Amazon Alexa` adiciona bibliotecas dependentes do Alexa SDK que são utilizadas nas transformações Jackson JSON, para que as classes reflectoras sejam identificadas e incluídas em `BUILD_TIME`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1020
#, no-wrap
msgid ""
"   @BuildStep\n"
"    void addDependencies(BuildProducer<IndexDependencyBuildItem> indexDependency) {\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-runtime\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-model\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-lambda-support\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-servlet-support\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-dynamodb-persistence-adapter\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-apache-client\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-model-runtime\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1023
#, fuzzy
msgid "With the artifacts added to the `Jandex` indexer, you can now search the index to identify classes implementing an interface, subclasses of a specific class, or classes with a target annotation."
msgstr "Com os artefactos adicionados ao indexador `Jandex`, pode agora pesquisar o índice para identificar classes que implementam uma interface, subclasses de uma classe específica ou classes com uma anotação de destino."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1026
#, fuzzy
msgid "For example, the `Jackson` extension uses code like below to search for annotations used in JSON deserialization, and add them to the reflective hierarchy for `BUILD_TIME` analysis."
msgstr "Por exemplo, a extensão `Jackson` usa código como o abaixo para procurar anotações usadas na desserialização JSON e adicioná-las à hierarquia reflexiva para análise `BUILD_TIME`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1031
#, no-wrap
msgid "    DotName JSON_DESERIALIZE = DotName.createSimple(JsonDeserialize.class.getName());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1033
#, no-wrap
msgid "    IndexView index = combinedIndexBuildItem.getIndex();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1042
#, no-wrap
msgid ""
"    // handle the various @JsonDeserialize cases\n"
"    for (AnnotationInstance deserializeInstance : index.getAnnotations(JSON_DESERIALIZE)) {\n"
"        AnnotationTarget annotationTarget = deserializeInstance.target();\n"
"        if (CLASS.equals(annotationTarget.kind())) {\n"
"            DotName dotName = annotationTarget.asClass().name();\n"
"            Type jandexType = Type.create(dotName, Type.Kind.CLASS);\n"
"            reflectiveHierarchyClass.produce(new ReflectiveHierarchyBuildItem(jandexType));\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1044
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1047
#, fuzzy, no-wrap
msgid "Visualizing build step dependencies"
msgstr "Visualizando dependências de etapas de compilação"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1051
#, fuzzy
msgid "It can occasionally be useful to see a visual representation of the interactions between the various build steps. For such cases, adding `-Dquarkus.builder.graph-output=build.dot` when building an application will result in the creation of the `build.dot` file in the project's root directory. See link:https://graphviz.org/resources/[this] for a list of software that can open the file and show the actual visual representation."
msgstr "Ocasionalmente, pode ser útil ver uma representação visual das interações entre as várias etapas de compilação. Para esses casos, adicionar `-Dquarkus.builder.graph-output=build.dot` ao compilar um aplicativo resultará na criação do arquivo `build.dot` no diretório raiz do projeto. Veja  link:https://graphviz.org/resources/[isto] para obter uma lista de software que pode abrir o arquivo e mostrar a representação visual real."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1053
#, fuzzy, no-wrap
msgid "Configuration"
msgstr "Configuração"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1057
#, fuzzy
msgid "Configuration in Quarkus is based on https://smallrye.io/smallrye-config/Main/[SmallRye Config]. All features provided by https://smallrye.io/smallrye-config/Main/[SmallRye Config] are also available in Quarkus."
msgstr "A configuração no Quarkus é baseada no  link:https://smallrye.io/smallrye-config/Main/[SmallRye Config]. Todos os recursos fornecidos pelo  link:https://smallrye.io/smallrye-config/Main/[SmallRye Config] também estão disponíveis no Quarkus."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1061
#, fuzzy
msgid "Extensions must use https://smallrye.io/smallrye-config/Main/config/mappings/[SmallRye Config @ConfigMapping] to map the configuration required by the Extension. This will allow Quarkus to automatically expose an instance of the mapping to each configuration phase and generate the configuration documentation."
msgstr "As extensões devem utilizar o  link:https://smallrye.io/smallrye-config/Main/config/mappings/[@ConfigMapping do SmallRye Config] para mapear a configuração exigida pela extensão. Isso permitirá que o Quarkus exponha automaticamente uma instância do mapeamento para cada fase de configuração e gere a documentação da configuração."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1063
#, fuzzy, no-wrap
msgid "Config Phases"
msgstr "Fases de configuração"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1069
#, fuzzy
msgid "Configuration mappings are strictly bound by configuration phase, and attempting to access a configuration mapping from outside its corresponding phase will result in an error. They dictate when its contained keys are read from the configuration, and when they are available to applications. The phases defined by `io.quarkus.runtime.annotations.ConfigPhase` are as follows:"
msgstr "Os mapeamentos de configuração estão estritamente vinculados à fase de configuração e a tentativa de aceder a um mapeamento de configuração fora da sua fase correspondente resultará num erro. Ditam quando as suas chaves contidas são lidas a partir da configuração e quando estão disponíveis para as aplicações. As fases definidas por `io.quarkus.runtime.annotations.ConfigPhase` são as seguintes:"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1073
#, fuzzy, no-wrap
msgid "Phase name"
msgstr "Nome da fase"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1074
#, fuzzy, no-wrap
msgid "Read & avail. at build time"
msgstr "Ler e disponibilizar na altura da construção"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1075
#, fuzzy, no-wrap
msgid "Avail. at run time"
msgstr "Disponível em tempo de execução"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1076
#, fuzzy, no-wrap
msgid "Read during static init"
msgstr "Lido durante a inicialização estática"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1077
#, fuzzy, no-wrap
msgid "Re-read during startup (native executable)"
msgstr "Releitura durante o arranque (executável nativo)"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1079
#, fuzzy, no-wrap
msgid "Notes"
msgstr "Notas"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1080
#, fuzzy, no-wrap
msgid "BUILD_TIME"
msgstr "TEMPO_DE_CONSTRUÇÃO"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1081
#: upstream/_guides/writing-extensions.adoc:1088
#: upstream/_guides/writing-extensions.adoc:1089
#: upstream/_guides/writing-extensions.adoc:1096
#: upstream/_guides/writing-extensions.adoc:1098
#: upstream/_guides/writing-extensions.adoc:1103
#: upstream/_guides/writing-extensions.adoc:1104
#: upstream/_guides/writing-extensions.adoc:1105
#, fuzzy, no-wrap
msgid "✓"
msgstr "✓"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1082
#: upstream/_guides/writing-extensions.adoc:1083
#: upstream/_guides/writing-extensions.adoc:1084
#: upstream/_guides/writing-extensions.adoc:1090
#: upstream/_guides/writing-extensions.adoc:1091
#: upstream/_guides/writing-extensions.adoc:1095
#: upstream/_guides/writing-extensions.adoc:1097
#: upstream/_guides/writing-extensions.adoc:1102
#, fuzzy, no-wrap
msgid "✗"
msgstr "✗"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1086
#, fuzzy, no-wrap
msgid "Appropriate for things which affect build."
msgstr "Adequado para coisas que afectam a construção."

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1087
#, fuzzy, no-wrap
msgid "BUILD_AND_RUN_TIME_FIXED"
msgstr "BUILD_AND_RUN_TIME_FIXED"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1093
#, fuzzy, no-wrap
msgid "Appropriate for things which affect build and must be visible for run time code.  Not read from config at run time."
msgstr "Apropriado para coisas que afectam a compilação e devem ser visíveis para o código em tempo de execução. Não ler da configuração em tempo de execução."

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1094
#, fuzzy, no-wrap
msgid "BOOTSTRAP"
msgstr "BOOTSTRAP"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1100
#, fuzzy, no-wrap
msgid "Used when runtime configuration needs to be obtained from an external system (like `Consul`), but details of that system need to be configurable (for example Consul's URL). The high level way this works is by using the standard Quarkus config sources (such as properties files, system properties, etc.) and producing `ConfigSourceProvider` objects which are subsequently taken into account by Quarkus when creating the final runtime `Config` object."
msgstr "Utilizado quando a configuração do tempo de execução tem de ser obtida a partir de um sistema externo (como `Consul`), mas os pormenores desse sistema têm de ser configuráveis (por exemplo, o URL do Consul). A forma mais simples de o fazer é utilizar as fontes de configuração padrão do Quarkus (tais como ficheiros de propriedades, propriedades do sistema, etc.) e produzir objectos `ConfigSourceProvider` que são posteriormente tidos em conta pelo Quarkus ao criar o objeto final de tempo de execução `Config`."

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1101
#, fuzzy, no-wrap
msgid "RUN_TIME"
msgstr "TEMPO DE EXECUÇÃO"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1107
#, fuzzy, no-wrap
msgid "Not available at build, read at start in all modes."
msgstr "Não disponível na construção, lido no início em todos os modos."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1110
#, fuzzy
msgid "For all cases other than the `BUILD_TIME` case, the configuration mapping interface and all the configuration groups and types contained therein must be located in, or reachable from, the extension's run time artifact. Configuration mappings of phase `BUILD_TIME` may be located in or reachable from either of the extension's run time or deployment artifacts."
msgstr "Para todos os casos, com exceção do caso `BUILD_TIME`, a interface de mapeamento da configuração e todos os grupos e tipos de configuração nela contidos devem estar localizados ou ser acessíveis a partir do artefacto de tempo de execução da extensão. Os mapeamentos de configuração da fase `BUILD_TIME` podem ser localizados ou acessíveis a partir de qualquer um dos artefactos de tempo de execução ou de implantação da extensão."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1112
#, fuzzy
msgid "_Bootstrap_ configuration steps are executed during runtime-init *before* any of other runtime steps. This means that code executed as part of this step cannot access anything that gets initialized in runtime init steps (runtime synthetic CDI beans being one such example)."
msgstr "As etapas de configuração _do bootstrap_ são executadas durante o runtime-init *antes de* qualquer outra etapa de tempo de execução. Isso significa que o código executado como parte dessa etapa não pode acessar nada que seja inicializado nas etapas de inicialização em tempo de execução (beans CDI sintéticos em tempo de execução são um exemplo disso)."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1113
#, fuzzy, no-wrap
msgid "Configuration Example"
msgstr "Exemplo de configuração"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1121
#, no-wrap
msgid ""
"import io.quarkus.runtime.annotations.ConfigPhase;\n"
"import io.quarkus.runtime.annotations.ConfigRoot;\n"
"import io.smallrye.config.ConfigMapping;\n"
"import io.smallrye.config.WithDefault;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1124
#, no-wrap
msgid ""
"import java.io.File;\n"
"import java.util.logging.Level;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1132
#, no-wrap
msgid ""
"/**\n"
" * Logging configuration.\n"
" */\n"
"@ConfigMapping(prefix = \"quarkus.log\")      // <1>\n"
"@ConfigRoot(phase = ConfigPhase.RUN_TIME)   // <2>\n"
"public interface LogConfiguration {\n"
"    // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1137
#, no-wrap
msgid ""
"    /**\n"
"     * Configuration properties for the logging file handler.\n"
"     */\n"
"    FileConfig file();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1144
#, no-wrap
msgid ""
"    interface FileConfig {\n"
"        /**\n"
"         * Enable logging to a file.\n"
"         */\n"
"        @WithDefault(\"true\")\n"
"        boolean enable();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1150
#, no-wrap
msgid ""
"        /**\n"
"         * The log format.\n"
"         */\n"
"        @WithDefault(\"%d{yyyy-MM-dd HH:mm:ss,SSS} %h %N[%i] %-5p [%c{1.}] (%t) %s%e%n\")\n"
"        String format();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1156
#, no-wrap
msgid ""
"        /**\n"
"         * The level of logs to be written into the file.\n"
"         */\n"
"        @WithDefault(\"ALL\")\n"
"        Level level();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1164
#, no-wrap
msgid ""
"        /**\n"
"         * The name of the file in which logs will be written.\n"
"         */\n"
"        @WithDefault(\"application.log\")\n"
"        File path();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1170
#, no-wrap
msgid ""
"public class LoggingProcessor {\n"
"    // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1176
#, no-wrap
msgid ""
"    /*\n"
"     * Logging configuration.\n"
"     */\n"
"    LogConfiguration config; // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1180
#, fuzzy
msgid "A configuration property name can be split into segments. For example, a property name like `quarkus.log.file.enable` can be split into the following segments:"
msgstr "Um nome de propriedade de configuração pode ser dividido em segmentos. Por exemplo, um nome de propriedade como `quarkus.log.file.enable` pode ser dividido nos seguintes segmentos:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1182
#, fuzzy
msgid "`quarkus` - a namespace claimed by Quarkus which is a prefix for `@ConfigMapping` interfaces,"
msgstr "`quarkus` - um espaço de nomes reivindicado pela Quarkus que é um prefixo para as interfaces `@ConfigMapping`,"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1183
#, fuzzy
msgid "`log` - a name segment which corresponds to the prefix set in the interface annotated with `@ConfigMapping`,"
msgstr "`log` - um segmento de nome que corresponde ao prefixo definido na interface anotada com `@ConfigMapping`,"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1184
#, fuzzy
msgid "`file` - a name segment which corresponds to the `file` field in this class,"
msgstr "`file` - um segmento de nome que corresponde ao campo `file` desta classe,"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1185
#, fuzzy
msgid "`enable` - a name segment which corresponds to `enable` field in `FileConfig`."
msgstr "`enable` - um segmento de nome que corresponde ao campo `enable` em `FileConfig`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1188
#, fuzzy
msgid "The `@ConfigMapping` annotation indicates that the interface is a configuration mapping, in this case one which corresponds to a `quarkus.log` segment."
msgstr "A anotação `@ConfigMapping` indica que a interface é um mapeamento de configuração, neste caso um que corresponde a um segmento `quarkus.log`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1189
#, fuzzy
msgid "The `@ConfigRoot` annotation indicated to which Config phase, the configuration applies to."
msgstr "A anotação `@ConfigRoot` indica a que fase do Config a configuração se aplica."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1191
#, fuzzy
msgid "Here the `LoggingProcessor` injects a `LogConfiguration` instance automatically by detecting the `@ConfigRoot` annotation."
msgstr "Aqui, o `LoggingProcessor` injecta uma instância `LogConfiguration` automaticamente, detectando a anotação `@ConfigRoot`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1193
#, fuzzy
msgid "A corresponding `application.properties` for the above example could be:"
msgstr "Um `application.properties` correspondente para o exemplo acima poderia ser:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1199
#, no-wrap
msgid ""
"quarkus.log.file.enable=true\n"
"quarkus.log.file.level=DEBUG\n"
"quarkus.log.file.path=/tmp/debug.log\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1202
#, fuzzy
msgid "Since `format` is not defined in these properties, the default value from `@WithDefault` will be used instead."
msgstr "Uma vez que `format` não está definido nestas propriedades, será utilizado o valor predefinido de `@WithDefault`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1208
#, fuzzy
msgid "A configuration mapping name can contain an extra suffix segment for the case where there are configuration mappings for multiple xref:config-phases[Config Phases]. Classes which correspond to the `BUILD_TIME` and `BUILD_AND_RUN_TIME_FIXED` may end with `BuildTimeConfig` or `BuildTimeConfiguration`, classes which correspond to the `RUN_TIME` phase may end with `RuntimeConfig`, `RunTimeConfig`, `RuntimeConfiguration` or `RunTimeConfiguration` while classes which correspond to the `BOOTSTRAP` configuration may end with `BootstrapConfig` or `BootstrapConfiguration`."
msgstr "Um nome de mapeamento de configuração pode conter um segmento de sufixo extra para o caso de existirem mapeamentos de configuração para várias  link:#config-phases[fases] de configuração. As classes que correspondem a `BUILD_TIME` e `BUILD_AND_RUN_TIME_FIXED` podem terminar com `BuildTimeConfig` ou `BuildTimeConfiguration`, as classes que correspondem à fase `RUN_TIME` podem terminar com `RuntimeConfig`, `RunTimeConfig`, `RuntimeConfiguration` ou `RunTimeConfiguration`, enquanto as classes que correspondem à configuração `BOOTSTRAP` podem terminar com `BootstrapConfig` ou `BootstrapConfiguration`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1209
#, fuzzy, no-wrap
msgid "Configuration Reference Documentation"
msgstr "Documentação de referência de configuração"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1213
#, fuzzy
msgid "The configuration is an important part of each extension and therefore needs to be properly documented. Each configuration property should have a proper Javadoc comment."
msgstr "A configuração é uma parte importante de cada extensão e, por isso, precisa de ser devidamente documentada. Cada propriedade de configuração deve ter um comentário Javadoc adequado."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1217
#, fuzzy
msgid "While it is handy to have the documentation available when coding, the configuration documentation must also be available in the extension guides. The Quarkus build automatically generates the configuration documentation based on the Javadoc comments, but it needs to be explicitly included in each guide."
msgstr "Embora seja útil ter a documentação disponível durante a codificação, a documentação de configuração também deve estar disponível nos guias de extensão. A compilação do Quarkus gera automaticamente a documentação de configuração com base nos comentários Javadoc, mas precisa de ser explicitamente incluída em cada guia."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1218
#, fuzzy, no-wrap
msgid "Writing the documentation"
msgstr "Redigir a documentação"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1221
#, fuzzy
msgid "Each configuration property, requires a Javadoc explaining its purpose."
msgstr "Cada propriedade de configuração requer um Javadoc que explique o seu objetivo."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1225
#, fuzzy
msgid "The first sentence should be meaningful and self-contained as it is included in the summary table."
msgstr "A primeira frase deve ser significativa e autónoma, uma vez que está incluída no quadro de síntese."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1229
#, fuzzy
msgid "While standard Javadoc comments are perfectly fine for simple documentation (recommended even), AsciiDoc is more suitable for tips, source code extracts, lists and more:"
msgstr "Enquanto os comentários Javadoc padrão são perfeitamente adequados para documentação simples (recomendados até), o AsciiDoc é mais adequado para dicas, extractos de código-fonte, listas e muito mais:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1245
#, no-wrap
msgid ""
"/**\n"
" * Class name of the Hibernate ORM dialect. The complete list of bundled dialects is available in the\n"
" * https://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/dialect/package-summary.html[Hibernate ORM JavaDoc].\n"
" *\n"
" * [NOTE]\n"
" * ====\n"
" * Not all the dialects are supported in GraalVM native executables: we currently provide driver extensions for\n"
" * PostgreSQL, MariaDB, Microsoft SQL Server and H2.\n"
" * ====\n"
" *\n"
" * @asciidoclet\n"
" */\n"
"Optional<String> dialect();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1249
#, fuzzy
msgid "To use AsciiDoc, the Javadoc comment must be annotated with `@asciidoclet` tag. This tag serves two purposes: it is used as a marker for Quarkus generation tool, but it is also used by the `javadoc` process for the Javadoc generation."
msgstr "Para utilizar o AsciiDoc, o comentário Javadoc tem de ser anotado com a etiqueta `@asciidoclet`. Esta etiqueta tem dois objectivos: é utilizada como um marcador para a ferramenta de geração Quarkus, mas também é utilizada pelo processo `javadoc` para a geração do Javadoc."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1251
#, fuzzy
msgid "A more detailed example:"
msgstr "Um exemplo mais pormenorizado:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1288
#, no-wrap
msgid ""
"// @formatter:off\n"
"/**\n"
" * Name of the file containing the SQL statements to execute when Hibernate ORM starts.\n"
" * Its default value differs depending on the Quarkus launch mode:\n"
" *\n"
" * * In dev and test modes, it defaults to `import.sql`.\n"
" *   Simply add an `import.sql` file in the root of your resources directory\n"
" *   and it will be picked up without having to set this property.\n"
" *   Pass `no-file` to force Hibernate ORM to ignore the SQL import file.\n"
" * * In production mode, it defaults to `no-file`.\n"
" *   It means Hibernate ORM won't try to execute any SQL import file by default.\n"
" *   Pass an explicit value to force Hibernate ORM to execute the SQL import file.\n"
" *\n"
" * If you need different SQL statements between dev mode, test (`@QuarkusTest`) and in production, use Quarkus\n"
" * https://quarkus.io/guides/config#configuration-profiles[configuration profiles facility].\n"
" *\n"
" * [source,property]\n"
" * .application.properties\n"
" * ----\n"
" * %dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql\n"
" * %test.quarkus.hibernate-orm.sql-load-script = import-test.sql\n"
" * %prod.quarkus.hibernate-orm.sql-load-script = no-file\n"
" * ----\n"
" *\n"
" * [NOTE]\n"
" * ====\n"
" * Quarkus supports `.sql` file with SQL statements or comments spread over multiple lines.\n"
" * Each SQL statement must be terminated by a semicolon.\n"
" * ====\n"
" *\n"
" * @asciidoclet\n"
" */\n"
"// @formatter:on\n"
"Optional<String> sqlLoadScript();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1294
#, fuzzy
msgid "For indentation to be respected in the Javadoc comment (list items spread on multiple lines or indented source code), the automatic Eclipse formatter must be disabled (the formatter is automatically included in the build), with the markers `// @formatter:off`/`// @formatter:on`. These require separate comments and a mandatory space after the `//` marker."
msgstr "Para que a indentação seja respeitada no comentário Javadoc (itens de lista espalhados em várias linhas ou código fonte indentado), o formatador automático do Eclipse deve ser desativado (o formatador é automaticamente incluído na compilação), com os marcadores `// @formatter:off`/ `// @formatter:on`. Estes requerem comentários separados e um espaço obrigatório após o marcador `//`."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1299
#, fuzzy
msgid "Open blocks (`--`) are not supported in the AsciiDoc documentation. All the other types of blocks (source, admonitions...) are supported."
msgstr "Os blocos abertos ( `--`) não são suportados na documentação AsciiDoc. Todos os outros tipos de blocos (fonte, advertências...) são suportados."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1305
#, fuzzy
msgid "By default, the documentation generator will use the hyphenated field name as the key of a `java.util.Map`. Use the `io.quarkus.runtime.annotations.ConfigDocMapKey` annotation to override the behaviour."
msgstr "Por predefinição, o gerador de documentação utilizará o nome do campo hifenizado como a chave de um `java.util.Map`. Utilize a anotação `io.quarkus.runtime.annotations.ConfigDocMapKey` para substituir o comportamento."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1318
#, no-wrap
msgid ""
"@ConfigMapping(prefix = \"quarkus.some\")\n"
"@ConfigRoot\n"
"public interface SomeConfig {\n"
"    /**\n"
"     * Namespace configuration.\n"
"     */\n"
"    @WithParentName\n"
"    @ConfigDocMapKey(\"cache-name\") // <1>\n"
"    Map<String, Name> namespace();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1320
#, fuzzy
msgid "This will generate a configuration map key named `quarkus.some.\"cache-name\"` instead of `quarkus.some.\"namespace\"`."
msgstr "Isto irá gerar uma chave de mapa de configuração com o nome `quarkus.some.\"cache-name\"` em vez de `quarkus.some.\"namespace\"`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1322
#, fuzzy
msgid "It is possible to write a textual explanation for the documentation default value, this is useful when it is generated: `@ConfigDocDefault(\"explain how this is generated\")`."
msgstr "É possível escrever uma explicação textual para o valor padrão da documentação, o que é útil quando ela é gerada: `@ConfigDocDefault(\"explain how this is generated\")`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1324
#, fuzzy
msgid "`@ConfigDocEnumValue` gives a way to explicitly customize the string displayed in the documentation when listing accepted values for an enum."
msgstr "`@ConfigDocEnumValue` oferece uma maneira de personalizar explicitamente a cadeia de caracteres exibida na documentação ao listar os valores aceitos para um enum."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1327
#, fuzzy, no-wrap
msgid "Writing section documentation"
msgstr "Redigir a documentação da secção"

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1330
#, fuzzy
msgid "To generate a configuration section of a given group, use the `@ConfigDocSection` annotation:"
msgstr "Para gerar uma secção de configuração de um determinado grupo, utilize a anotação `@ConfigDocSection`:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1339
#, no-wrap
msgid ""
"/**\n"
"* Config group related configuration.\n"
"* Amazing introduction here\n"
"*/\n"
"@ConfigDocSection // <1>\n"
"ConfigGroupConfig configGroup();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1343
#, fuzzy
msgid "This will add a section documentation for the `configGroup` config item in the generated documentation. The section title and introduction will be derived from the javadoc of the configuration item. The first sentence from the javadoc is considered as the section title and the remaining sentences used as section introduction."
msgstr "Isto irá adicionar uma secção de documentação para o item de configuração `configGroup` na documentação gerada. O título e a introdução da secção serão derivados do javadoc do item de configuração. A primeira frase do javadoc é considerada como o título da secção e as restantes frases são utilizadas como a introdução da secção."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1344
#, fuzzy, no-wrap
msgid "Generating the documentation"
msgstr "Geração da documentação"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1347
#, fuzzy
msgid "To generate the documentation:"
msgstr "Para gerar a documentação:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1349
#, fuzzy
msgid "Execute `./mvnw -DquicklyDocs`"
msgstr "Executar `./mvnw -DquicklyDocs`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1350
#, fuzzy
msgid "Can be executed globally or in a specific extension directory (e.g. `extensions/mailer`)."
msgstr "Pode ser executado globalmente ou num diretório de extensão específico (por exemplo, `extensions/mailer`)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1352
#, fuzzy
msgid "The documentation is generated in the global `target/asciidoc/generated/config/` located at the root of the project."
msgstr "A documentação é gerada na página global `target/asciidoc/generated/config/` localizada na raiz do projeto."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1353
#, fuzzy, no-wrap
msgid "Including the documentation in the extension guide"
msgstr "Incluir a documentação no guia de extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1356
#, fuzzy
msgid "To include the generated configuration reference documentation in a guide, use:"
msgstr "Para incluir a documentação de referência de configuração gerada num guia, utilize:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1360
#, no-wrap
msgid "\\include::{generated-dir}/config/quarkus-your-extension.adoc[opts=optional, leveloffset=+1]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1363
#, fuzzy
msgid "To include only a specific config group:"
msgstr "Para incluir apenas um grupo de configuração específico:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1366
#, no-wrap
msgid "\\include::{generated-dir}/config/hyphenated-config-group-class-name-with-runtime-or-deployment-namespace-replaced-by-config-group-namespace.adoc[opts=optional, leveloffset=+1]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1370
#, fuzzy
msgid "For example, the `io.quarkus.vertx.http.runtime.FormAuthConfig` configuration group will be generated in a file named `quarkus-vertx-http-config-group-form-auth-config.adoc`."
msgstr "Por exemplo, o grupo de configuração `io.quarkus.vertx.http.runtime.FormAuthConfig` será gerado num ficheiro com o nome `quarkus-vertx-http-config-group-form-auth-config.adoc`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1372
#, fuzzy
msgid "A few recommendations:"
msgstr "Algumas recomendações:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1374
#, fuzzy
msgid "`opts=optional` is mandatory to not fail the build if only part of the configuration documentation has been generated."
msgstr "`opts=optional` é obrigatório para não falhar a construção se apenas parte da documentação de configuração tiver sido gerada."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1375
#, fuzzy
msgid "The documentation is generated with a title level of 2 (i.e. `==`). It may need an adjustment with `leveloffset=+N`."
msgstr "A documentação é gerada com um nível de título de 2 (ou seja, `==`). Pode ser necessário um ajuste com `leveloffset=+N`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1376
#, fuzzy
msgid "The whole configuration documentation should not be included in the middle of the guide."
msgstr "Toda a documentação de configuração não deve ser incluída no meio do guia."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1378
#, fuzzy
msgid "If the guide includes an `application.properties` example, a tip must be included just below the code snippet:"
msgstr "Se o guia incluir um exemplo em `application.properties`, deve ser incluída uma dica logo abaixo do trecho de código:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1383
#, no-wrap
msgid ""
"[TIP]\n"
"For more information about the extension configuration please refer to the <<configuration-reference,Configuration Reference>>.\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1386
#, fuzzy
msgid "And at the end of the guide, the extensive configuration documentation:"
msgstr "E no final do guia, a extensa documentação de configuração:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1390
#, no-wrap
msgid "[[configuration-reference]]\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/writing-extensions.adoc:1390
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referência de configuração"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1393
msgid "\\include::{generated-dir}/config/quarkus-your-extension.adoc[opts=optional, leveloffset=+1]"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1398
#, fuzzy
msgid "All documentation should be generated and validated before being committed."
msgstr "Toda a documentação deve ser gerada e validada antes de ser aceite."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1400
#, fuzzy, no-wrap
msgid "Conditional Step Inclusion"
msgstr "Inclusão condicional de etapas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1406
#, fuzzy
msgid "It is possible to only include a given `@BuildStep` under certain conditions.  The `@BuildStep` annotation has two optional parameters: `onlyIf` and `onlyIfNot`.  These parameters can be set to one or more classes which implement `BooleanSupplier`.  The build step will only be included when the method returns `true` (for `onlyIf`) or `false` (for `onlyIfNot`)."
msgstr "É possível incluir um determinado `@BuildStep` apenas em determinadas condições. A anotação `@BuildStep` tem dois parâmetros opcionais: `onlyIf` e `onlyIfNot`. Esses parâmetros podem ser definidos para uma ou mais classes que implementam `BooleanSupplier`. A etapa de construção só será incluída quando o método retornar `true` (para `onlyIf`) ou `false` (para `onlyIfNot`)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1409
#, fuzzy
msgid "The condition class can inject xref:configuration[configuration mappings] as long as they belong to a build-time phase.  Run time configuration is not available for condition classes."
msgstr "A classe de condição pode injetar  link:#configuration[mapeamentos de configuração] desde que pertençam a uma fase de tempo de construção. A configuração em tempo de execução não está disponível para classes de condição."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1412
#, fuzzy
msgid "The condition class may also inject a value of type `io.quarkus.runtime.LaunchMode`.  Constructor parameter and field injection is supported."
msgstr "A classe de condição também pode injetar um valor do tipo `io.quarkus.runtime.LaunchMode`. O parâmetro do construtor e a injeção de campo são suportados."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:1413
#, fuzzy, no-wrap
msgid "An example of a conditional build step"
msgstr "Um exemplo de um passo de construção condicional"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1420
#, no-wrap
msgid ""
"@BuildStep(onlyIf = IsDevMode.class)\n"
"LogCategoryBuildItem enableDebugLogging() {\n"
"    return new LogCategoryBuildItem(\"org.your.quarkus.extension\", Level.DEBUG);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1423
#, no-wrap
msgid ""
"static class IsDevMode implements BooleanSupplier {\n"
"    LaunchMode launchMode;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1428
#, no-wrap
msgid ""
"    public boolean getAsBoolean() {\n"
"        return launchMode == LaunchMode.DEVELOPMENT;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1432
#, fuzzy
msgid "If you need to make your build step conditional on the presence or absence of another extension, you can use xref:capabilities[Capabilities] for that."
msgstr "Se precisar de condicionar o seu passo de construção à presença ou ausência de outra extensão, pode utilizar  link:#capabilities[as Capacidades] para o efeito."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1434
#, fuzzy
msgid "You can also apply a set of conditions to all build steps in a given class with `@BuildSteps`:"
msgstr "Também é possível aplicar um conjunto de condições a todos os passos de construção numa determinada classe com `@BuildSteps`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:1435
#, fuzzy, no-wrap
msgid "Class-wide condition for build step with @BuildSteps"
msgstr "Condição em toda a classe para o passo de construção com @BuildSteps"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1440
#, no-wrap
msgid ""
"@BuildSteps(onlyIf = MyDevModeProcessor.IsDevMode.class) // <1>\n"
"class MyDevModeProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1445
#, no-wrap
msgid ""
"    @BuildStep\n"
"    SomeOutputBuildItem mainBuildStep(SomeOtherBuildItem input) { // <2>\n"
"        return new SomeOutputBuildItem(input.getValue());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1450
#, no-wrap
msgid ""
"    @BuildStep\n"
"    SomeOtherOutputBuildItem otherBuildStep(SomeOtherInputBuildItem input) { // <3>\n"
"        return new SomeOtherOutputBuildItem(input.getValue());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1453
#, no-wrap
msgid ""
"    static class IsDevMode implements BooleanSupplier {\n"
"        LaunchMode launchMode;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1459
#, no-wrap
msgid ""
"        public boolean getAsBoolean() {\n"
"            return launchMode == LaunchMode.DEVELOPMENT;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1461
#, fuzzy
msgid "This condition will apply to all methods defined in `MyDevModeProcessor`"
msgstr "Esta condição aplicar-se-á a todos os métodos definidos em `MyDevModeProcessor`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1462
#, fuzzy
msgid "The main build step will only be executed in dev mode."
msgstr "A etapa principal de compilação só será executada no modo de desenvolvimento."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1463
#, fuzzy
msgid "The other build step will only be executed in dev mode."
msgstr "A outra etapa de compilação só será executada no modo de desenvolvimento."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1465
#, fuzzy, no-wrap
msgid "Bytecode Recording"
msgstr "Registo de bytecode"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1469
#, fuzzy
msgid "One of the main outputs of the build process is recorded bytecode. This bytecode actually sets up the runtime environment. For example, in order to start Undertow, the resulting application will have some bytecode that directly registers all Servlet instances and then starts Undertow."
msgstr "Um dos principais resultados do processo de construção é o bytecode registado. Esse bytecode realmente configura o ambiente de tempo de execução. Por exemplo, para iniciar o Undertow, a aplicação resultante terá algum bytecode que regista diretamente todas as instâncias de Servlet e, em seguida, inicia o Undertow."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1475
#, fuzzy
msgid "As writing bytecode directly is complex, this is instead done via bytecode recorders. At deployment time, invocations are made on recorder objects that contain the actual runtime logic, but instead of these invocations proceeding as normal they are intercepted and recorded (hence the name). This recording is then used to generate bytecode that performs the same sequence of invocations at runtime. This is essentially a form of deferred execution where invocations made at deployment time get deferred until runtime."
msgstr "Como escrever bytecode diretamente é complexo, isto é feito através de registadores de bytecode. No momento da implementação, as invocações são feitas em objectos gravadores que contêm a lógica real do tempo de execução, mas em vez de estas invocações prosseguirem normalmente, são interceptadas e gravadas (daí o nome). Esta gravação é então utilizada para gerar bytecode que executa a mesma sequência de invocações em tempo de execução. Trata-se essencialmente de uma forma de execução diferida, em que as invocações feitas no momento da implantação são adiadas até o momento da execução."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1477
#, fuzzy
msgid "Let's look at the classic 'Hello World' type example. To do this the Quarkus way we would create a recorder as follows:"
msgstr "Vejamos o exemplo clássico do tipo 'Olá Mundo'. Para fazer isto à maneira do Quarkus, criaríamos um gravador como se segue:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1482
#, no-wrap
msgid ""
"@Recorder\n"
"class HelloRecorder {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1486
#, no-wrap
msgid ""
"  public void sayHello(String name) {\n"
"    System.out.println(\"Hello\" + name);\n"
"  }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1488
#: upstream/_guides/writing-extensions.adoc:2090
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1491
#, fuzzy
msgid "And then create a build step that uses this recorder:"
msgstr "E, em seguida, criar um passo de construção que utilize este registador:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1499
#, no-wrap
msgid ""
"@Record(RUNTIME_INIT)\n"
"@BuildStep\n"
"public void helloBuildStep(HelloRecorder recorder) {\n"
"    recorder.sayHello(\"World\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1504
#, fuzzy
msgid "When this build step is run nothing is printed to the console. This is because the `HelloRecorder` that is injected is actually a proxy that records all invocations. Instead, if we run the resulting Quarkus program we will see 'Hello World' printed to the console."
msgstr "Quando este passo de construção é executado, nada é impresso na consola. Isto acontece porque o `HelloRecorder` que é injetado é na realidade um proxy que regista todas as invocações. Em vez disso, se executarmos o programa Quarkus resultante, veremos 'Hello World' impresso na consola."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1509
#, fuzzy
msgid "Methods on a recorder can return a value, which must be proxiable (if you want to return a non-proxiable item wrap it in `io.quarkus.runtime.RuntimeValue`). These proxies may not be invoked directly, however they can be passed into other recorder methods. This can be any recorder method, including from other `@BuildStep` methods, so a common pattern is to produce `BuildItem` instances that wrap the results of these recorder invocations."
msgstr "Os métodos num registador podem devolver um valor, que deve ser proxiable (se pretender devolver um item não proxiable, envolva-o em `io.quarkus.runtime.RuntimeValue`). Estes proxies não podem ser invocados diretamente, mas podem ser passados para outros métodos do registador. Este pode ser qualquer método de registador, incluindo de outros métodos `@BuildStep`, pelo que um padrão comum é produzir instâncias `BuildItem` que envolvam os resultados destas invocações de registadores."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1513
#, fuzzy
msgid "For instance, in order to make arbitrary changes to a Servlet deployment Undertow has a `ServletExtensionBuildItem`, which is a `MultiBuildItem` that wraps a `ServletExtension` instance. I can return a `ServletExtension` from a recorder in another module, and Undertow will consume it and pass it into the recorder method that starts Undertow."
msgstr "Por exemplo, para fazer alterações arbitrárias em uma implantação de Servlet, o Undertow tem um `ServletExtensionBuildItem`, que é um `MultiBuildItem` que envolve uma instância `ServletExtension`. Posso devolver um `ServletExtension` de um gravador noutro módulo, e o Undertow irá consumi-lo e passá-lo para o método do gravador que inicia o Undertow."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1517
#, fuzzy
msgid "At runtime the bytecode will be invoked in the order it is generated. This means that build step dependencies implicitly control the order that generated bytecode is run. In the example above we know that the bytecode that produces a `ServletExtensionBuildItem` will be run before the bytecode that consumes it."
msgstr "Em tempo de execução, o bytecode será invocado na ordem em que é gerado. Isso significa que as dependências da etapa de construção controlam implicitamente a ordem em que o bytecode gerado é executado. No exemplo acima, sabemos que o bytecode que produz um `ServletExtensionBuildItem` será executado antes do bytecode que o consome."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1519
#, fuzzy
msgid "The following objects can be passed to recorders:"
msgstr "Os seguintes objectos podem ser transmitidos aos registadores:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1521
#, fuzzy
msgid "Primitives"
msgstr "Primitivos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1522
#, fuzzy
msgid "String"
msgstr "Cordas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1523
#, fuzzy
msgid "Class<?> objects"
msgstr "Objectos classe&lt;?&gt;"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1524
#, fuzzy
msgid "Objects returned from a previous recorder invocation"
msgstr "Objectos devolvidos de uma invocação anterior do registador"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1525
#, fuzzy
msgid "Objects with a no-arg constructor and getter/setters for all properties (or public fields)"
msgstr "Objectos com um construtor sem argumentos e getter/setters para todas as propriedades (ou campos públicos)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1526
#, fuzzy
msgid "Objects with a constructor annotated with `@RecordableConstructor` with parameter names that match field names"
msgstr "Objectos com um construtor anotado com `@RecordableConstructor` com nomes de parâmetros que correspondem a nomes de campos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1527
#, fuzzy
msgid "Any arbitrary object via the `io.quarkus.deployment.recording.RecorderContext#registerSubstitution(Class, Class, Class)` mechanism"
msgstr "Qualquer objeto arbitrário através do mecanismo `io.quarkus.deployment.recording.RecorderContext#registerSubstitution(Class, Class, Class)`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1528
#, fuzzy
msgid "Arrays, Lists and Maps of the above"
msgstr "Matrizes, listas e mapas dos elementos acima referidos"

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1532
#, fuzzy
msgid "In cases where some fields of an object to be recorded should be ignored (i.e. the value that being at build time should not be reflected at runtime), the `@IgnoreProperty` can be placed on the field."
msgstr "Nos casos em que alguns campos de um objeto a registar devam ser ignorados (ou seja, o valor que está a ser construído não deve ser refletido em tempo de execução), o `@IgnoreProperty` pode ser colocado no campo."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1534
#, fuzzy
msgid "If the class cannot depend on Quarkus, then Quarkus can use any custom annotation, as long as the extension implements the `io.quarkus.deployment.recording.RecordingAnnotationsProvider` SPI."
msgstr "Se a classe não puder depender do Quarkus, o Quarkus pode utilizar qualquer anotação personalizada, desde que a extensão implemente o `io.quarkus.deployment.recording.RecordingAnnotationsProvider` SPI."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1536
#, fuzzy
msgid "This same SPI can also be used to provide a custom annotation that will substitute for `@RecordableConstructor`."
msgstr "Este mesmo SPI também pode ser utilizado para fornecer uma anotação personalizada que substituirá `@RecordableConstructor`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1538
#, fuzzy, no-wrap
msgid "Injecting Configuration into Recorders"
msgstr "Injetar a configuração nos gravadores"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1545
#, fuzzy
msgid "Configuration objects with phase `RUNTIME` or `BUILD_AND_RUNTIME_FIXED` can be injected into recorders via constructor injection. Just create a constructor that takes the configuration objects the recorder needs. If the recorder has multiple constructors you can annotate the one you want Quarkus to use with `@Inject`. If the recorder wants to inject runtime config but is also used at static init time then it needs to inject a `RuntimeValue<ConfigObject>`, this value will only be set when the runtime methods are being invoked."
msgstr "Os objectos de configuração com a fase `RUNTIME` ou `BUILD_AND_RUNTIME_FIXED` podem ser injectados nos registadores através da injeção do construtor. Basta criar um construtor que receba os objectos de configuração de que o registador necessita. Se o registador tiver vários construtores, pode anotar aquele que pretende que o Quarkus utilize com `@Inject`. Se o registador pretender injetar a configuração em tempo de execução, mas também for utilizado no momento da inicialização estática, é necessário injetar um valor `RuntimeValue&amp;lt;ConfigObject&amp;gt;`, que só será definido quando os métodos em tempo de execução forem invocados."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1546
#, fuzzy, no-wrap
msgid "RecorderContext"
msgstr "Contexto do registador"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1552
#, fuzzy
msgid "`io.quarkus.deployment.recording.RecorderContext` provides some convenience methods to enhance bytecode recording, this includes the ability to register creation functions for classes without no-arg constructors, to register an object substitution (basically a transformer from a non-serializable object to a serializable one and vice versa), and to create a class proxy. This interface can be directly injected as a method parameter into any `@Record` method."
msgstr "`io.quarkus.deployment.recording.RecorderContext` fornece alguns métodos de conveniência para melhorar a gravação de bytecode, o que inclui a capacidade de registar funções de criação para classes sem construtores sem argumento, de registar uma substituição de objectos (basicamente um transformador de um objeto não serializável para um objeto serializável e vice-versa) e de criar um proxy de classe. Esta interface pode ser injectada diretamente como um parâmetro de método em qualquer método `@Record`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1558
#, fuzzy
msgid "Calling `classProxy` with a given fully-qualified class name will create a `Class` instance that can be passed into a recorder method, and at runtime will be substituted with the class whose name was passed in to `classProxy()`.  However, this method should not be needed in most use cases because directly loading deployment/application classes at processing time in build steps is safe.  Therefore, this method is deprecated.  Nonetheless, there are some use cases where this method comes in handy, such as referring to classes that were generated in previous build steps using `GeneratedClassBuildItem`."
msgstr "Chamar `classProxy` com um determinado nome de classe totalmente qualificado criará uma instância `Class` que pode ser passada para um método gravador e, em tempo de execução, será substituída pela classe cujo nome foi passado para `classProxy()`. No entanto, este método não deve ser necessário na maioria dos casos de utilização porque é seguro carregar diretamente classes de implementação/aplicação em tempo de processamento nas etapas de construção. Portanto, este método está obsoleto. No entanto, há alguns casos de uso em que esse método é útil, como a referência a classes que foram geradas em etapas de compilação anteriores usando `GeneratedClassBuildItem`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1559
#, fuzzy, no-wrap
msgid "Runtime Classpath check"
msgstr "Verificação do caminho de classe em tempo de execução"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1563
#, fuzzy
msgid "Extensions often need a way to determine whether a given class is part of the application's runtime classpath.  The proper way for an extension to perform this check is to use `io.quarkus.bootstrap.classloading.QuarkusClassLoader.isClassPresentAtRuntime`."
msgstr "As extensões geralmente precisam de uma maneira de determinar se uma determinada classe faz parte do classpath de tempo de execução do aplicativo. A maneira correta de uma extensão realizar essa verificação é usar `io.quarkus.bootstrap.classloading.QuarkusClassLoader.isClassPresentAtRuntime`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1564
#, fuzzy, no-wrap
msgid "Printing step execution time"
msgstr "Tempo de execução da etapa de impressão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1569
#, fuzzy
msgid "At times, it can be useful to know how the exact time each startup task (which is the result of each bytecode recording) takes when the application is run.  The simplest way to determine this information is to launch the Quarkus application with the `-Dquarkus.debug.print-startup-times=true` system property.  The output will look something like:"
msgstr "Por vezes, pode ser útil saber o tempo exato que cada tarefa de arranque (que é o resultado de cada gravação de bytecode) demora quando a aplicação é executada. A forma mais simples de determinar esta informação é lançar a aplicação Quarkus com a propriedade de sistema `-Dquarkus.debug.print-startup-times=true`. O resultado será algo parecido com:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1582
#, no-wrap
msgid ""
"Build step LoggingResourceProcessor.setupLoggingRuntimeInit completed in: 42ms\n"
"Build step ConfigGenerationBuildStep.checkForBuildTimeConfigChange completed in: 4ms\n"
"Build step SyntheticBeansProcessor.initRuntime completed in: 0ms\n"
"Build step ConfigBuildStep.validateConfigProperties completed in: 1ms\n"
"Build step ResteasyStandaloneBuildStep.boot completed in: 95ms\n"
"Build step VertxHttpProcessor.initializeRouter completed in: 1ms\n"
"Build step VertxHttpProcessor.finalizeRouter completed in: 4ms\n"
"Build step LifecycleEventsBuildStep.startupEvent completed in: 1ms\n"
"Build step VertxHttpProcessor.openSocket completed in: 93ms\n"
"Build step ShutdownListenerBuildStep.setupShutdown completed in: 1ms\n"
msgstr ""

#. TODO: config integration
#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1587
#, fuzzy, no-wrap
msgid "Contexts and Dependency Injection"
msgstr "Contextos e injeção de dependência"

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1589
#, fuzzy, no-wrap
msgid "Extension Points"
msgstr "Pontos de extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1594
#, fuzzy
msgid "As a CDI based runtime, Quarkus extensions often make CDI beans available as part of the extension behavior.  However, Quarkus DI solution does not support CDI Portable Extensions.  Instead, Quarkus extensions can make use of various xref:cdi-reference.adoc[Build Time Extension Points]."
msgstr "Como um tempo de execução baseado em CDI, as extensões Quarkus disponibilizam frequentemente beans CDI como parte do comportamento da extensão. No entanto, a solução Quarkus DI não suporta Extensões Portáteis CDI. Em vez disso, as extensões Quarkus podem utilizar vários  link:cdi-reference.html[pontos de extensão de tempo de construção]."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1595
#, fuzzy, no-wrap
msgid "Quarkus Dev UI"
msgstr "Quarkus Dev UI"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1598
#, fuzzy
msgid "You can make your extension support the xref:dev-ui-v2.adoc[Quarkus Dev UI] for a greater developer experience."
msgstr "Pode tornar a sua extensão compatível com a  link:dev-ui-v2.html[interface de] utilizador  link:dev-ui-v2.html[Quarkus] Dev para uma melhor experiência de desenvolvimento."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1599
#, fuzzy, no-wrap
msgid "Extension-defined endpoints"
msgstr "Pontos finais definidos pela extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1603
#, fuzzy
msgid "Your extension can add additional, non-application endpoints to be served alongside endpoints for Health, Metrics, OpenAPI, Swagger UI, etc."
msgstr "A sua extensão pode adicionar pontos finais adicionais que não sejam de aplicações para serem servidos juntamente com pontos finais para Saúde, Métricas, OpenAPI, Swagger UI, etc."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1605
#, fuzzy
msgid "Use a `NonApplicationRootPathBuildItem` to define an endpoint:"
msgstr "Utilize um `NonApplicationRootPathBuildItem` para definir um ponto final:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1616
#, no-wrap
msgid ""
"@BuildStep\n"
"RouteBuildItem myExtensionRoute(NonApplicationRootPathBuildItem nonApplicationRootPathBuildItem) {\n"
"    return nonApplicationRootPathBuildItem.routeBuilder()\n"
"                .route(\"custom-endpoint\")\n"
"                .handler(new MyCustomHandler())\n"
"                .displayOnNotFoundPage()\n"
"                .build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1621
#, fuzzy
msgid "Note that the path above does not start with a '/', indicating it is a relative path. The above endpoint will be served relative to the configured non-application endpoint root. The non-application endpoint root is `/q` by default, which means the resulting endpoint will be found at `/q/custom-endpoint`."
msgstr "Note que o caminho acima não começa com um '/', indicando que é um caminho relativo. O ponto de extremidade acima será servido em relação à raiz do ponto de extremidade não aplicativo configurado. A raiz do ponto de extremidade não aplicativo é `/q` por padrão, o que significa que o ponto de extremidade resultante será encontrado em `/q/custom-endpoint`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1624
#, fuzzy
msgid "Absolute paths are handled differently. If the above called `route(\"/custom-endpoint\")`, the resulting endpoint will be found at `/custom-endpoint`."
msgstr "Os caminhos absolutos são tratados de forma diferente. Se o acima chamado `route(\"/custom-endpoint\")`, o ponto final resultante será encontrado em `/custom-endpoint`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1626
#, fuzzy
msgid "If an extension needs nested non-application endpoints:"
msgstr "Se uma extensão precisar de pontos finais não relacionados com a aplicação aninhados:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1637
#, no-wrap
msgid ""
"@BuildStep\n"
"RouteBuildItem myNestedExtensionRoute(NonApplicationRootPathBuildItem nonApplicationRootPathBuildItem) {\n"
"    return nonApplicationRootPathBuildItem.routeBuilder()\n"
"                .nestedRoute(\"custom-endpoint\", \"deep\")\n"
"                .handler(new MyCustomHandler())\n"
"                .displayOnNotFoundPage()\n"
"                .build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1640
#, fuzzy
msgid "Given a default non-application endpoint root of `/q`, this will create an endpoint at `/q/custom-endpoint/deep`."
msgstr "Dada uma raiz de ponto final não-aplicação predefinida de `/q`, isto criará um ponto final em `/q/custom-endpoint/deep`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1643
#, fuzzy
msgid "Absolute paths also have an impact on nested endpoints. If the above called `nestedRoute(\"custom-endpoint\", \"/deep\")`, the resulting endpoint will be found at `/deep`."
msgstr "Os caminhos absolutos também têm um impacto nos pontos finais aninhados. Se o acima chamado `nestedRoute(\"custom-endpoint\", \"/deep\")`, o ponto final resultante será encontrado em `/deep`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1646
#, fuzzy
msgid "Refer to the xref:all-config.adoc#quarkus-vertx-http_quarkus.http.non-application-root-path[Quarkus Vertx HTTP configuration reference] for details on how the non-application root path is configured."
msgstr "Consulte a  link:all-config.html#quarkus-vertx-http_quarkus.http.non-application-root-path[referência de configuração HTTP do Quarkus Vertx] para obter detalhes sobre como o caminho raiz que não é da aplicação é configurado."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1647
#, fuzzy, no-wrap
msgid "Extension Health Check"
msgstr "Exame de saúde da extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1650
#, fuzzy
msgid "Health checks are provided via the `quarkus-smallrye-health` extension. It provides both liveness and readiness checks capabilities."
msgstr "Os controlos de saúde são fornecidos através da extensão `quarkus-smallrye-health`. Fornece capacidades de verificação de vivacidade e prontidão."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1652
#, fuzzy
msgid "When writing an extension, it's beneficial to provide health checks for the extension, that can be automatically included without the developer needing to write their own."
msgstr "Ao escrever uma extensão, é vantajoso fornecer controlos de saúde para a extensão, que podem ser automaticamente incluídos sem que o programador tenha de escrever os seus próprios controlos."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1654
#, fuzzy
msgid "In order to provide a health check, you should do the following:"
msgstr "Para efetuar um exame de saúde, deve fazer o seguinte"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1657
#, fuzzy
msgid "Import the `quarkus-smallrye-health` extension as an **optional** dependency in your runtime module so it will not impact the size of the application if health check is not included."
msgstr "Importe a extensão `quarkus-smallrye-health` como uma dependência *opcional* no seu módulo de tempo de execução para que não tenha impacto no tamanho da aplicação se o controlo de saúde não for incluído."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1659
#, fuzzy
msgid "Create your health check following the xref:smallrye-health.adoc[SmallRye Health] guide. We advise providing only readiness check for an extension (liveness check is designed to express the fact that an application is up and needs to be lightweight)."
msgstr "Crie o seu controlo de saúde seguindo o guia  link:smallrye-health.html[SmallRye Health]. Aconselhamos a fornecer apenas uma verificação de prontidão para uma extensão (a verificação de vivacidade foi concebida para expressar o facto de uma aplicação estar ativa e precisar de ser leve)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1660
#, fuzzy
msgid "Import the `quarkus-smallrye-health-spi` library in your deployment module."
msgstr "Importe a biblioteca `quarkus-smallrye-health-spi` no seu módulo de implantação."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1661
#, fuzzy
msgid "Add a build step in your deployment module that produces a `HealthBuildItem`."
msgstr "Adicione uma etapa de compilação no seu módulo de implantação que produz um `HealthBuildItem`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1662
#, fuzzy
msgid "Add a way to disable the extension health check via a config item `quarkus.<extension>.health.enabled` that should be enabled by default."
msgstr "Adicionar uma forma de desativar a verificação do estado da extensão através de um item de configuração `quarkus.&amp;lt;extension&amp;gt;.health.enabled` que deve ser ativado por predefinição."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1664
#, fuzzy
msgid "Following is an example from the Agroal extension that provides a `DataSourceHealthCheck` to validate the readiness of a datasource."
msgstr "Segue-se um exemplo da extensão Agroal que fornece um `DataSourceHealthCheck` para validar a prontidão de uma fonte de dados."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1672
#, no-wrap
msgid ""
"@BuildStep\n"
"HealthBuildItem addHealthCheck(AgroalBuildTimeConfig agroalBuildTimeConfig) {\n"
"    return new HealthBuildItem(\"io.quarkus.agroal.runtime.health.DataSourceHealthCheck\",\n"
"            agroalBuildTimeConfig.healthEnabled);\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1674
#, fuzzy, no-wrap
msgid "Extension Metrics"
msgstr "Métricas de extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1679
#, fuzzy
msgid "The `quarkus-micrometer` extension and the `quarkus-smallrye-metrics` extension provide support for collecting metrics.  As a compatibility note, the `quarkus-micrometer` extension adapts the MP Metrics API to Micrometer library primitives, so the `quarkus-micrometer` extension can be enabled without breaking code that relies on the MP Metrics API.  Note that the metrics emitted by Micrometer are different, see the `quarkus-micrometer` extension documentation for more information."
msgstr "A extensão `quarkus-micrometer` e a extensão `quarkus-smallrye-metrics` fornecem suporte para a recolha de métricas. Como nota de compatibilidade, a extensão `quarkus-micrometer` adapta a API MP Metrics às primitivas da biblioteca Micrometer, de modo que a extensão `quarkus-micrometer` pode ser ativada sem quebrar o código que depende da API MP Metrics. Observe que as métricas emitidas pelo Micrometer são diferentes, consulte a documentação da extensão `quarkus-micrometer` para obter mais informações."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1681
#, fuzzy
msgid "The compatibility layer for MP Metrics APIs will move to a different extension in the future."
msgstr "A camada de compatibilidade para as APIs de métricas MP será transferida para uma extensão diferente no futuro."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1683
#, fuzzy
msgid "There are two broad patterns that extensions can use to interact with an optional metrics extension to add their own metrics:"
msgstr "Existem dois padrões gerais que as extensões podem utilizar para interagir com uma extensão de métricas opcional para adicionar as suas próprias métricas:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1685
#, fuzzy
msgid "Consumer pattern: An extension declares a `MetricsFactoryConsumerBuildItem` and uses that to provide a bytecode recorder to the metrics extension. When the metrics extension has initialized, it will iterate over registered consumers to initialize them with a `MetricsFactory`. This factory can be used to declare API-agnostic metrics, which can be a good fit for extensions that provide an instrumentable object for gathering statistics (e.g. Hibernate's `Statistics` class)."
msgstr "Padrão do consumidor: Uma extensão declara um `MetricsFactoryConsumerBuildItem` e usa-o para fornecer um gravador de bytecode para a extensão de métricas. Quando a extensão de métricas for inicializada, ela iterará sobre os consumidores registrados para inicializá-los com um `MetricsFactory`. Essa fábrica pode ser usada para declarar métricas agnósticas à API, o que pode ser uma boa opção para extensões que fornecem um objeto instrumentável para coletar estatísticas (por exemplo, a classe `Statistics` do Hibernate)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1687
#, fuzzy
msgid "Binder pattern: An extension can opt to use completely different gathering implementations depending on the metrics system. An `Optional<MetricsCapabilityBuildItem> metricsCapability` build step parameter can be used to declare or otherwise initialize API-specific metrics based on the active metrics extension (e.g. \"smallrye-metrics\" or \"micrometer\"). This pattern can be combined with the consumer pattern by using `MetricsFactory::metricsSystemSupported()` to test the active metrics extension within the recorder."
msgstr "Padrão Binder: Uma extensão pode optar por usar implementações de coleta completamente diferentes, dependendo do sistema de métricas. Um parâmetro da etapa de construção `Optional&amp;lt;MetricsCapabilityBuildItem&amp;gt; metricsCapability` pode ser usado para declarar ou inicializar métricas específicas da API com base na extensão de métricas ativa (por exemplo, \"smallrye-metrics\" ou \"micrometer\"). Este padrão pode ser combinado com o padrão do consumidor utilizando `MetricsFactory::metricsSystemSupported()` para testar a extensão de métrica ativa dentro do registador."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1689
#, fuzzy
msgid "Remember that support for metrics is optional. Extensions can use an `Optional<MetricsCapabilityBuildItem> metricsCapability` parameter in their build step to test for the presence of an enabled metrics extension. Consider using additional configuration to control behavior of metrics. Datasource metrics can be expensive, for example, so additional configuration flags are used enable metrics collection on individual datasources."
msgstr "Lembre-se de que o suporte para métricas é opcional. As extensões podem usar um parâmetro `Optional&amp;lt;MetricsCapabilityBuildItem&amp;gt; metricsCapability` em sua etapa de compilação para testar a presença de uma extensão de métricas habilitada. Considere o uso de configuração adicional para controlar o comportamento das métricas. As métricas de fontes de dados podem ser caras, por exemplo, portanto, sinalizadores de configuração adicionais são usados para habilitar a coleta de métricas em fontes de dados individuais."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1691
#, fuzzy
msgid "When adding metrics for your extension, you may find yourself in one of the following situations:"
msgstr "Ao adicionar métricas para a sua extensão, pode encontrar-se numa das seguintes situações:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1693
#, fuzzy
msgid "An underlying library used by the extension is using a specific Metrics API directly (either MP Metrics, Micrometer, or some other)."
msgstr "Uma biblioteca subjacente utilizada pela extensão está a utilizar diretamente uma API de métricas específica (MP Metrics, Micrometer ou outra)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1694
#, fuzzy
msgid "An underlying library uses its own mechanism for collecting metrics and makes them available at runtime using its own API, e.g. Hibernate's `Statistics` class, or Vert.x `MetricsOptions`."
msgstr "Uma biblioteca subjacente utiliza o seu próprio mecanismo de recolha de métricas e disponibiliza-as em tempo de execução utilizando a sua própria API, por exemplo, a classe `Statistics` do Hibernate ou a Vert.x `MetricsOptions`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1695
#, fuzzy
msgid "An underlying library does not provide metrics (or there is no library at all) and you want to add instrumentation."
msgstr "Uma biblioteca subjacente não fornece métricas (ou não existe qualquer biblioteca) e pretende adicionar instrumentação."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1696
#, fuzzy, no-wrap
msgid "Case 1: The library uses a metrics library directly"
msgstr "Caso 1: A biblioteca utiliza diretamente uma biblioteca de métricas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1699
#, fuzzy
msgid "If the library directly uses a metrics API, there are two options:"
msgstr "Se a biblioteca utilizar diretamente uma API de métricas, existem duas opções:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1701
#, fuzzy
msgid "Use an `Optional<MetricsCapabilityBuildItem> metricsCapability` parameter to test which metrics API is supported (e.g. \"smallrye-metrics\" or \"micrometer\") in your build step, and use that to selectively declare or initialize API-specific beans or build items."
msgstr "Use um parâmetro `Optional&amp;lt;MetricsCapabilityBuildItem&amp;gt; metricsCapability` para testar qual API de métricas é suportada (por exemplo, \"smallrye-metrics\" ou \"micrometer\") em sua etapa de compilação e use isso para declarar ou inicializar seletivamente beans ou itens de compilação específicos da API."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1703
#, fuzzy
msgid "Create a separate build step that consumes a `MetricsFactory`, and use the `MetricsFactory::metricsSystemSupported()` method within the bytecode recorder to initialize required resources if the desired metrics API is supported (e.g. \"smallrye-metrics\" or \"micrometer\")."
msgstr "Crie uma etapa de construção separada que consuma um `MetricsFactory` e utilize o método `MetricsFactory::metricsSystemSupported()` no gravador de bytecode para inicializar os recursos necessários se a API de métricas pretendida for suportada (por exemplo, \"smallrye-metrics\" ou \"micrometer\")."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1705
#, fuzzy
msgid "Extensions may need to provide a fallback if there is no active metrics extension or the extension doesn't support the API required by the library."
msgstr "As extensões podem ter de fornecer uma alternativa se não existir uma extensão de métricas ativa ou se a extensão não suportar a API exigida pela biblioteca."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1706
#, fuzzy, no-wrap
msgid "Case 2: The library provides its own metric API"
msgstr "Caso 2: A biblioteca fornece a sua própria API métrica"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1709
#, fuzzy
msgid "There are two examples of a library providing its own metrics API:"
msgstr "Existem dois exemplos de uma biblioteca que fornece a sua própria API de métricas:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1711
#, fuzzy
msgid "The extension defines an instrumentable object as Agroal does with `io.agroal.api.AgroalDataSourceMetrics`, or"
msgstr "A extensão define um objeto instrumentável como faz o Agroal com `io.agroal.api.AgroalDataSourceMetrics`, ou"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1712
#, fuzzy
msgid "The extension provides its own abstraction of metrics, as Jaeger does with `io.jaegertracing.spi.MetricsFactory`."
msgstr "A extensão fornece a sua própria abstração de métricas, tal como Jaeger faz com `io.jaegertracing.spi.MetricsFactory`."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1713
#, fuzzy, no-wrap
msgid "Observing instrumentable objects"
msgstr "Observação de objectos instrumentáveis"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1716
#, fuzzy
msgid "Let's take the instrumentable object (`io.agroal.api.AgroalDataSourceMetrics`) case first. In this case, you can do the following:"
msgstr "Vejamos primeiro o caso do objeto instrumentável ( `io.agroal.api.AgroalDataSourceMetrics`). Neste caso, pode fazer o seguinte:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1718
#, fuzzy
msgid "Define a `BuildStep` that produces a `MetricsFactoryConsumerBuildItem` that uses a `RUNTIME_INIT` or `STATIC_INIT` Recorder to define a `MetricsFactory` consumer. For example, the following creates a `MetricsFactoryConsumerBuildItem` if and only if metrics are enabled both for Agroal generally, and for a datasource specifically:"
msgstr "Defina um `BuildStep` que produz um `MetricsFactoryConsumerBuildItem` que usa um registador `RUNTIME_INIT` ou `STATIC_INIT` para definir um consumidor `MetricsFactory`. Por exemplo, o seguinte cria um `MetricsFactoryConsumerBuildItem` se e apenas se as métricas estiverem activadas para o Agroal em geral e para uma fonte de dados especificamente:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1727
#, no-wrap
msgid ""
"@BuildStep\n"
"@Record(ExecutionTime.RUNTIME_INIT)\n"
"void registerMetrics(AgroalMetricsRecorder recorder,\n"
"        DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig,\n"
"        BuildProducer<MetricsFactoryConsumerBuildItem> datasourceMetrics,\n"
"        List<AggregatedDataSourceBuildTimeConfigBuildItem> aggregatedDataSourceBuildTimeConfigs) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1739
#, no-wrap
msgid ""
"    for (AggregatedDataSourceBuildTimeConfigBuildItem aggregatedDataSourceBuildTimeConfig : aggregatedDataSourceBuildTimeConfigs) {\n"
"        // Create a MetricsFactory consumer to register metrics for a data source\n"
"        // IFF metrics are enabled globally and for the data source\n"
"        // (they are enabled for each data source by default if they are also enabled globally)\n"
"        if (dataSourcesBuildTimeConfig.metricsEnabled &&\n"
"                aggregatedDataSourceBuildTimeConfig.getJdbcConfig().enableMetrics.orElse(true)) {\n"
"            datasourceMetrics.produce(new MetricsFactoryConsumerBuildItem(\n"
"                    recorder.registerDataSourceMetrics(aggregatedDataSourceBuildTimeConfig.getName())));\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1742
#, fuzzy
msgid "The associated recorder should use the provided `MetricsFactory` to register metrics. For Agroal, this means using the `MetricFactory` API to observe `io.agroal.api.AgroalDataSourceMetrics` methods. For example:"
msgstr "O registador associado deve utilizar o `MetricsFactory` fornecido para registar métricas. Para o Agroal, isto significa utilizar a API `MetricFactory` para observar os métodos `io.agroal.api.AgroalDataSourceMetrics`. Por exemplo:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1752
#, no-wrap
msgid ""
"/* RUNTIME_INIT */\n"
"public Consumer<MetricsFactory> registerDataSourceMetrics(String dataSourceName) {\n"
"    return new Consumer<MetricsFactory>() {\n"
"        @Override\n"
"        public void accept(MetricsFactory metricsFactory) {\n"
"            String tagValue = DataSourceUtil.isDefault(dataSourceName) ? \"default\" : dataSourceName;\n"
"            AgroalDataSourceMetrics metrics = getDataSource(dataSourceName).getMetrics();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1760
#, no-wrap
msgid ""
"            // When using MP Metrics, the builder uses the VENDOR registry by default.\n"
"            metricsFactory.builder(\"agroal.active.count\")\n"
"                    .description(\n"
"                            \"Number of active connections. These connections are in use and not available to be acquired.\")\n"
"                    .tag(\"datasource\", tagValue)\n"
"                    .buildGauge(metrics::activeCount);\n"
"            ....\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1763
#, fuzzy
msgid "The `MetricsFactory` provides a fluid builder for registration of metrics, with the final step constructing gauges or counters based on a `Supplier` or `ToDoubleFunction`. Timers can either wrap `Callable`, `Runnable`, or `Supplier` implementations, or can use a `TimeRecorder` to accumulate chunks of time. The underlying metrics extension will create appropriate artifacts to observe or measure the defined functions."
msgstr "O `MetricsFactory` fornece um construtor fluido para o registo de métricas, com o passo final a construir medidores ou contadores com base num `Supplier` ou `ToDoubleFunction`. Os temporizadores podem envolver implementações `Callable`, `Runnable` ou `Supplier`, ou podem utilizar um `TimeRecorder` para acumular pedaços de tempo. A extensão métrica subjacente criará artefactos apropriados para observar ou medir as funções definidas."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1764
#, fuzzy, no-wrap
msgid "Using a Metrics API-specific implementation"
msgstr "Usando uma implementação específica da API de métricas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1767
#, fuzzy
msgid "Using metrics-API specific implementations may be preferred in some cases. Jaeger, for example, defines its own metrics interface, `io.jaegertracing.spi.MetricsFactory`, that it uses to define counters and gauges. A direct mapping from that interface to the metrics system will be the most efficient. In this case, it is important to isolate these specialized implementations and to avoid eager classloading to ensure the metrics API remains an optional, compile-time dependency."
msgstr "Nalguns casos, pode ser preferível utilizar implementações específicas da API de métricas. O Jaeger, por exemplo, define a sua própria interface de métricas, `io.jaegertracing.spi.MetricsFactory`, que utiliza para definir contadores e medidores. Um mapeamento direto dessa interface para o sistema de métricas será o mais eficiente. Nesse caso, é importante isolar essas implementações especializadas e evitar o carregamento ansioso de classes para garantir que a API de métricas permaneça uma dependência opcional em tempo de compilação."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1769
#, fuzzy
msgid "`Optional<MetricsCapabilityBuildItem> metricsCapability` can be used in the build step to selectively control initialization of beans or the production of other build items. The Jaeger extension, for example, can use the following to control initialization of specialized Metrics API adapters:"
msgstr "`Optional&amp;lt;MetricsCapabilityBuildItem&amp;gt; metricsCapability` podem ser usados na etapa de construção para controlar seletivamente a inicialização de beans ou a produção de outros itens de construção. A extensão Jaeger, por exemplo, pode usar o seguinte para controlar a inicialização de adaptadores especializados da API de métricas:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1777
#, no-wrap
msgid ""
"/* RUNTIME_INIT */\n"
"@BuildStep\n"
"@Record(ExecutionTime.RUNTIME_INIT)\n"
"void setupTracer(JaegerDeploymentRecorder jdr, JaegerBuildTimeConfig buildTimeConfig, JaegerConfig jaeger,\n"
"        ApplicationConfig appConfig, Optional<MetricsCapabilityBuildItem> metricsCapability) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1780
#, no-wrap
msgid ""
"    // Indicates that this extension would like the SSL support to be enabled\n"
"    extensionSslNativeSupport.produce(new ExtensionSslNativeSupportBuildItem(Feature.JAEGER.getName()));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1794
#, no-wrap
msgid ""
"    if (buildTimeConfig.enabled) {\n"
"        // To avoid dependency creep, use two separate recorder methods for the two metrics systems\n"
"        if (buildTimeConfig.metricsEnabled && metricsCapability.isPresent()) {\n"
"            if (metricsCapability.get().metricsSupported(MetricsFactory.MICROMETER)) {\n"
"                jdr.registerTracerWithMicrometerMetrics(jaeger, appConfig);\n"
"            } else {\n"
"                jdr.registerTracerWithMpMetrics(jaeger, appConfig);\n"
"            }\n"
"        } else {\n"
"            jdr.registerTracerWithoutMetrics(jaeger, appConfig);\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1797
#, fuzzy
msgid "A recorder consuming a `MetricsFactory` can use `MetricsFactory::metricsSystemSupported()` can be used to control initialization of metrics objects during bytecode recording in a similar way."
msgstr "Um gravador que consome um `MetricsFactory` pode utilizar `MetricsFactory::metricsSystemSupported()` pode ser utilizado para controlar a inicialização de objectos métricos durante a gravação de bytecode de forma semelhante."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1798
#, fuzzy, no-wrap
msgid "Case 3: It is necessary to collect metrics within the extension code"
msgstr "Caso 3: É necessário recolher métricas no código da extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1801
#, fuzzy
msgid "To define your own metrics from scratch, you have two basic options: Use the generic `MetricFactory` builders, or follow the binder pattern, and create instrumentation specific to the enabled metrics extension."
msgstr "Para definir suas próprias métricas do zero, você tem duas opções básicas: Usar os construtores genéricos do `MetricFactory` ou seguir o padrão binder e criar instrumentação específica para a extensão de métricas habilitada."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1803
#, fuzzy
msgid "To use the extension-agnostic `MetricFactory` API, your processor can define a `BuildStep` that produces a `MetricsFactoryConsumerBuildItem` that uses a `RUNTIME_INIT` or `STATIC_INIT` Recorder to define a `MetricsFactory` consumer."
msgstr "Para utilizar a API `MetricFactory` agnóstica em termos de extensão, o seu processador pode definir um `BuildStep` que produz um `MetricsFactoryConsumerBuildItem` que utiliza um `RUNTIME_INIT` ou `STATIC_INIT` Recorder para definir um consumidor `MetricsFactory`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1811
#, no-wrap
msgid ""
"@BuildStep\n"
"@Record(ExecutionTime.RUNTIME_INIT)\n"
"MetricsFactoryConsumerBuildItem registerMetrics(MyExtensionRecorder recorder) {\n"
"    return new MetricsFactoryConsumerBuildItem(recorder.registerMetrics());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1814
#, fuzzy
msgid "The associated recorder should use the provided `MetricsFactory` to register metrics, for example"
msgstr "O registador associado deve utilizar o endereço `MetricsFactory` para registar as métricas, por exemplo"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1818
#, no-wrap
msgid "final LongAdder extensionCounter = new LongAdder();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1827
#, no-wrap
msgid ""
"/* RUNTIME_INIT */\n"
"public Consumer<MetricsFactory> registerMetrics() {\n"
"    return new Consumer<MetricsFactory>() {\n"
"        @Override\n"
"        public void accept(MetricsFactory metricsFactory) {\n"
"            metricsFactory.builder(\"my.extension.counter\")\n"
"                    .buildGauge(extensionCounter::longValue);\n"
"            ....\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1830
#, fuzzy
msgid "Remember that metrics extensions are optional. Keep metrics-related initialization isolated from other setup for your extension, and structure your code to avoid eager imports of metrics APIs. Gathering metrics can also be expensive. Consider using additional extension-specific configuration to control behavior of metrics if the presence/absence of metrics support isn't sufficient."
msgstr "Lembre-se de que as extensões de métricas são opcionais. Mantenha a inicialização relacionada a métricas isolada de outras configurações para sua extensão e estruture seu código para evitar importações ansiosas de APIs de métricas. A coleta de métricas também pode ser cara. Considere o uso de configuração adicional específica da extensão para controlar o comportamento das métricas se a presença/ausência de suporte a métricas não for suficiente."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1831
#, fuzzy, no-wrap
msgid "Customizing JSON handling from an extension"
msgstr "Personalização do tratamento JSON a partir de uma extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1834
#, fuzzy
msgid "Extensions often need to register serializers and/or deserializers for types the extension provides."
msgstr "As extensões necessitam frequentemente de registar serializadores e/ou desserializadores para os tipos que a extensão fornece."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1837
#, fuzzy
msgid "For this, both Jackson and JSON-B extensions provide a way to register serializer/deserializer from within an extension deployment module."
msgstr "Para isso, tanto as extensões Jackson como JSON-B fornecem uma forma de registar o serializador/desserializador a partir de um módulo de implementação de extensão."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1839
#, fuzzy
msgid "Keep in mind that not everybody will need JSON, so you need to make it optional."
msgstr "Tenha em conta que nem toda a gente vai precisar de JSON, por isso deve torná-lo opcional."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1842
#, fuzzy
msgid "If an extension intends to provide JSON related customization, it is strongly advised to provide customization for both Jackson and JSON-B."
msgstr "Se uma extensão pretender fornecer personalização relacionada com JSON, é fortemente aconselhada a fornecer personalização para Jackson e JSON-B."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1843
#, fuzzy, no-wrap
msgid "Customizing Jackson"
msgstr "Personalização da Jackson"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1846
#, fuzzy
msgid "First, add an *optional* dependency to `quarkus-jackson` on your extension's runtime module."
msgstr "Primeiro, adicione uma dependência *opcional* a `quarkus-jackson` no módulo de tempo de execução da sua extensão."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1854
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-jackson</artifactId>\n"
"  <optional>true</optional>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1857
#, fuzzy
msgid "Then create a serializer or a deserializer (or both) for Jackson, an example of which can be seen in the `mongodb-panache` extension."
msgstr "Em seguida, crie um serializador ou um desserializador (ou ambos) para a Jackson, um exemplo do qual pode ser visto na extensão `mongodb-panache`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1872
#, no-wrap
msgid ""
"public class ObjectIdSerializer extends StdSerializer<ObjectId> {\n"
"    public ObjectIdSerializer() {\n"
"        super(ObjectId.class);\n"
"    }\n"
"    @Override\n"
"    public void serialize(ObjectId objectId, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)\n"
"            throws IOException {\n"
"        if (objectId != null) {\n"
"            jsonGenerator.writeString(objectId.toString());\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1875
#, fuzzy
msgid "Add a dependency to `quarkus-jackson-spi` on your extension's deployment module."
msgstr "Adicione uma dependência a `quarkus-jackson-spi` no módulo de implantação da sua extensão."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1882
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-jackson-spi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1886
#, fuzzy
msgid "Add a build step to your processor to register a Jackson module via the `JacksonModuleBuildItem`.  You need to name your module in a unique way across all Jackson modules."
msgstr "Adicione um passo de compilação ao seu processador para registar um módulo Jackson através do `JacksonModuleBuildItem`. É necessário nomear o seu módulo de uma forma única em todos os módulos Jackson."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1897
#, no-wrap
msgid ""
"@BuildStep\n"
"JacksonModuleBuildItem registerJacksonSerDeser() {\n"
"    return new JacksonModuleBuildItem.Builder(\"ObjectIdModule\")\n"
"                    .add(io.quarkus.mongodb.panache.jackson.ObjectIdSerializer.class.getName(),\n"
"                            io.quarkus.mongodb.panache.jackson.ObjectIdDeserializer.class.getName(),\n"
"                            ObjectId.class.getName())\n"
"                    .build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1900
#, fuzzy
msgid "The Jackson extension will then use the produced build item to register a module within Jackson automatically."
msgstr "A extensão Jackson utilizará então o item de compilação produzido para registar automaticamente um módulo na Jackson."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1904
#, fuzzy
msgid "If you need more customization capabilities than registering a module, you can produce a CDI bean that implements `io.quarkus.jackson.ObjectMapperCustomizer` via an `AdditionalBeanBuildItem`.  More info about customizing Jackson can be found on the JSON guide xref:rest-json.adoc#json[Configuring JSON support]"
msgstr "Se precisar de mais capacidades de personalização do que o registo de um módulo, pode produzir um bean CDI que implemente `io.quarkus.jackson.ObjectMapperCustomizer` através de um `AdditionalBeanBuildItem`. Mais informações sobre a personalização da Jackson podem ser encontradas no guia JSON  link:rest-json.html#configuring-json-support[Configurar o suporte JSON]"

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1905
#, fuzzy, no-wrap
msgid "Customizing JSON-B"
msgstr "Personalização do JSON-B"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1907
#, fuzzy
msgid "First, add an *optional* dependency to `quarkus-jsonb` on your extension's runtime module."
msgstr "Primeiro, adicione uma dependência *opcional* a `quarkus-jsonb` no módulo de tempo de execução da sua extensão."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1915
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-jsonb</artifactId>\n"
"  <optional>true</optional>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1918
#, fuzzy
msgid "Then create a serializer and/or a deserializer for JSON-B, an example of which can be seen in the `mongodb-panache` extension."
msgstr "Em seguida, crie um serializador e/ou desserializador para JSON-B, um exemplo do qual pode ser visto na extensão `mongodb-panache`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1929
#, no-wrap
msgid ""
"public class ObjectIdSerializer implements JsonbSerializer<ObjectId> {\n"
"    @Override\n"
"    public void serialize(ObjectId obj, JsonGenerator generator, SerializationContext ctx) {\n"
"        if (obj != null) {\n"
"            generator.write(obj.toString());\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1932
#, fuzzy
msgid "Add a dependency to `quarkus-jsonb-spi` on your extension's deployment module."
msgstr "Adicione uma dependência a `quarkus-jsonb-spi` no módulo de implantação da sua extensão."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1939
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-jsonb-spi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1942
#, fuzzy
msgid "Add a build step to your processor to register the serializer via the `JsonbSerializerBuildItem`."
msgstr "Adicione um passo de construção ao seu processador para registar o serializador através do `JsonbSerializerBuildItem`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1949
#, no-wrap
msgid ""
"@BuildStep\n"
"JsonbSerializerBuildItem registerJsonbSerializer() {\n"
"    return new JsonbSerializerBuildItem(io.quarkus.mongodb.panache.jsonb.ObjectIdSerializer.class.getName()));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1952
#, fuzzy
msgid "The JSON-B extension will then use the produced build item to register your serializer/deserializer automatically."
msgstr "A extensão JSON-B utilizará então o item de compilação produzido para registar automaticamente o seu serializador/desserializador."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1956
#, fuzzy
msgid "If you need more customization capabilities than registering a serializer or a deserializer, you can produce a CDI bean that implements `io.quarkus.jsonb.JsonbConfigCustomizer` via an `AdditionalBeanBuildItem`.  More info about customizing JSON-B can be found on the JSON guide xref:rest-json.adoc#configuring-json-support[Configuring JSON support]"
msgstr "Se necessitar de mais capacidades de personalização do que registar um serializador ou um desserializador, pode produzir um bean CDI que implemente `io.quarkus.jsonb.JsonbConfigCustomizer` através de um `AdditionalBeanBuildItem`. Mais informações sobre a personalização do JSON-B podem ser encontradas no guia JSON  link:rest-json.html#configuring-json-support[Configurar o suporte JSON]"

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1957
#, fuzzy, no-wrap
msgid "Integrating with Development Mode"
msgstr "Integração com o modo de desenvolvimento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1960
#, fuzzy
msgid "There are various APIS that you can use to integrate with development mode, and to get information about the current state."
msgstr "Existem vários APIS que podem ser utilizados para integrar o modo de desenvolvimento e para obter informações sobre o estado atual."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1961
#, fuzzy, no-wrap
msgid "Handling restarts"
msgstr "Tratamento de reinícios"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1965
#, fuzzy
msgid "When Quarkus is starting the `io.quarkus.deployment.builditem.LiveReloadBuildItem` is guaranteed to be present that gives information about this start, in particular:"
msgstr "Quando o Quarkus está a arrancar, é garantida a presença do endereço `io.quarkus.deployment.builditem.LiveReloadBuildItem` que fornece informações sobre este arranque, em particular:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1967
#, fuzzy
msgid "Is this a clean start or a live reload"
msgstr "Trata-se de um arranque limpo ou de uma recarga em direto"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1968
#, fuzzy
msgid "If this is a live reload which changed files / classes triggered the reload"
msgstr "Se se tratar de um recarregamento em direto, os ficheiros/classes alterados desencadearam o recarregamento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1971
#, fuzzy
msgid "It also provides a global context map you can use to store information between restarts, without needing to resort to static fields."
msgstr "Também fornece um mapa de contexto global que pode ser utilizado para armazenar informações entre reinícios, sem necessidade de recorrer a campos estáticos."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1972
#, fuzzy, no-wrap
msgid "Triggering Live Reload"
msgstr "Ativar o recarregamento em direto"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1977
#, fuzzy
msgid "Live reload is generally triggered by an HTTP request, however not all applications are HTTP applications and some extensions may want to trigger live reload based on other events. To do this you need to implement `io.quarkus.dev.spi.HotReplacementSetup` in your runtime module, and add a `META-INF/services/io.quarkus.dev.spi.HotReplacementSetup` that lists your implementation."
msgstr "O recarregamento em tempo real é geralmente acionado por um pedido HTTP, mas nem todas as aplicações são aplicações HTTP e algumas extensões podem querer acionar o recarregamento em tempo real com base noutros eventos. Para tal, é necessário implementar `io.quarkus.dev.spi.HotReplacementSetup` no seu módulo de tempo de execução e adicionar um `META-INF/services/io.quarkus.dev.spi.HotReplacementSetup` que liste a sua implementação."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1980
#, fuzzy
msgid "On startup the `setupHotDeployment` method will be called, and you can use the provided `io.quarkus.dev.spi.HotReplacementContext` to initiate a scan for changed files."
msgstr "No arranque, o método `setupHotDeployment` será chamado e pode utilizar o `io.quarkus.dev.spi.HotReplacementContext` fornecido para iniciar uma pesquisa de ficheiros alterados."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1981
#, fuzzy, no-wrap
msgid "Testing Extensions"
msgstr "Teste de extensões"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1988
#, fuzzy
msgid "Testing of Quarkus extensions should be done with the `io.quarkus.test.QuarkusUnitTest` JUnit 5 extension.  This extension allows for Arquillian-style tests that test specific functionalities.  It is not intended for testing user applications, as this should be done via `io.quarkus.test.junit.QuarkusTest`.  The main difference is that `QuarkusTest` simply boots the application once at the start of the run, while `QuarkusUnitTest` deploys a custom Quarkus application for each test class."
msgstr "O teste das extensões Quarkus deve ser efectuado com a extensão `io.quarkus.test.QuarkusUnitTest` JUnit 5. Esta extensão permite efetuar testes do tipo Arquillian que testam funcionalidades específicas. Não se destina a testar aplicações de utilizador, uma vez que isso deve ser feito através de `io.quarkus.test.junit.QuarkusTest`. A principal diferença é que `QuarkusTest` simplesmente inicializa a aplicação uma vez no início da execução, enquanto `QuarkusUnitTest` implementa uma aplicação Quarkus personalizada para cada classe de teste."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1991
#, fuzzy
msgid "These tests should be placed in the deployment module, if additional Quarkus modules are required for testing their deployment modules should also be added as test scoped dependencies."
msgstr "Estes testes devem ser colocados no módulo de implantação, se forem necessários módulos Quarkus adicionais para os testes, os seus módulos de implantação devem também ser adicionados como dependências com âmbito de teste."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1993
#, fuzzy
msgid "Note that `QuarkusUnitTest` is in the `quarkus-junit5-internal` module."
msgstr "Note-se que `QuarkusUnitTest` está no módulo `quarkus-junit5-internal`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1995
#, fuzzy
msgid "An example test class may look like:"
msgstr "Um exemplo de classe de teste pode ter o seguinte aspeto:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1999
#, no-wrap
msgid "package io.quarkus.health.test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2001
#, no-wrap
msgid "import static org.junit.jupiter.api.Assertions.assertEquals;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2004
#, no-wrap
msgid ""
"import java.util.ArrayList;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2007
#, no-wrap
msgid ""
"import jakarta.enterprise.inject.Instance;\n"
"import jakarta.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2017
#, no-wrap
msgid ""
"import org.eclipse.microprofile.health.Liveness;\n"
"import org.eclipse.microprofile.health.HealthCheck;\n"
"import org.eclipse.microprofile.health.HealthCheckResponse;\n"
"import io.quarkus.test.QuarkusUnitTest;\n"
"import org.jboss.shrinkwrap.api.ShrinkWrap;\n"
"import org.jboss.shrinkwrap.api.asset.EmptyAsset;\n"
"import org.jboss.shrinkwrap.api.spec.JavaArchive;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.junit.jupiter.api.extension.RegisterExtension;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2019
#, no-wrap
msgid "import io.restassured.RestAssured;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2021
#, no-wrap
msgid "public class FailingUnitTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2029
#, no-wrap
msgid ""
"    @RegisterExtension                                                                  // <1>\n"
"    static final QuarkusUnitTest config = new QuarkusUnitTest()\n"
"            .setArchiveProducer(() ->\n"
"                    ShrinkWrap.create(JavaArchive.class)                                // <2>\n"
"                            .addClasses(FailingHealthCheck.class)\n"
"                            .addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\")\n"
"            );\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2033
#, no-wrap
msgid ""
"    @Inject                                                                             // <3>\n"
"    @Liveness\n"
"    Instance<HealthCheck> checks;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2038
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHealthServlet() {\n"
"        RestAssured.when().get(\"/q/health\").then().statusCode(503);                       // <4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2049
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHealthBeans() {\n"
"        List<HealthCheck> check = new ArrayList<>();                                    // <5>\n"
"        for (HealthCheck i : checks) {\n"
"            check.add(i);\n"
"        }\n"
"        assertEquals(1, check.size());\n"
"        assertEquals(HealthCheckResponse.State.DOWN, check.get(0).call().getState());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2052
#, fuzzy
msgid "The `QuarkusUnitTest` extension must be used with a static field. If used with a non-static field, the test application is not started."
msgstr "A extensão `QuarkusUnitTest` deve ser utilizada com um campo estático. Se for utilizada com um campo não estático, a aplicação de teste não é iniciada."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2053
#, fuzzy
msgid "This producer is used to build the application to be tested. It uses Shrinkwrap to create a JavaArchive to test"
msgstr "Este produtor é utilizado para construir a aplicação a ser testada. Ele usa o Shrinkwrap para criar um JavaArchive para testar"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2054
#, fuzzy
msgid "It is possible to inject beans from our test deployment directly into the test case"
msgstr "É possível injetar beans da nossa implementação de teste diretamente no caso de teste"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2055
#, fuzzy
msgid "This method directly invokes the health check Servlet and verifies the response"
msgstr "Este método invoca diretamente o Servlet de controlo de saúde e verifica a resposta"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2056
#, fuzzy
msgid "This method uses the injected health check bean to verify it is returning the expected result"
msgstr "Este método utiliza o bean de verificação de saúde injetado para verificar se está a devolver o resultado esperado"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2058
#, fuzzy
msgid "If you want to test that an extension properly fails at build time, use the `setExpectedException` method:"
msgstr "Se pretender testar se uma extensão falha corretamente na altura da compilação, utilize o método `setExpectedException`:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2063
#, no-wrap
msgid "package io.quarkus.hibernate.orm;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2071
#, no-wrap
msgid ""
"import io.quarkus.runtime.configuration.ConfigurationException;\n"
"import io.quarkus.test.QuarkusUnitTest;\n"
"import org.jboss.shrinkwrap.api.ShrinkWrap;\n"
"import org.jboss.shrinkwrap.api.spec.JavaArchive;\n"
"import org.junit.jupiter.api.Assertions;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.junit.jupiter.api.extension.RegisterExtension;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2073
#, no-wrap
msgid "public class PersistenceAndQuarkusConfigTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2080
#, no-wrap
msgid ""
"    @RegisterExtension\n"
"    static QuarkusUnitTest runner = new QuarkusUnitTest()\n"
"            .setExpectedException(ConfigurationException.class)                     <1>\n"
"            .withApplicationRoot((jar) -> jar\n"
"                    .addAsManifestResource(\"META-INF/some-persistence.xml\", \"persistence.xml\")\n"
"                    .addAsResource(\"application.properties\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2088
#, no-wrap
msgid ""
"    @Test\n"
"    public void testPersistenceAndConfigTest() {\n"
"        // should not be called, deployment exception should happen first:\n"
"        // it's illegal to have Hibernate configuration properties in both the\n"
"        // application.properties and in the persistence.xml\n"
"        Assertions.fail();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2093
#, fuzzy
msgid "This tells JUnit that the Quarkus deployment should fail with a specific exception"
msgstr "Isto diz ao JUnit que a implementação do Quarkus deve falhar com uma exceção específica"

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:2095
#, fuzzy, no-wrap
msgid "Testing hot reload"
msgstr "Teste de recarga a quente"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2099
#, fuzzy
msgid "It is also possible to write tests that verify an extension works correctly in development mode and can correctly handle updates."
msgstr "Também é possível escrever testes que verifiquem se uma extensão funciona corretamente no modo de desenvolvimento e se pode tratar corretamente as actualizações."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2102
#, fuzzy
msgid "For most extensions this will just work 'out of the box', however it is still a good idea to have a smoke test to verify that this functionality is working as expected. To test this we use `QuarkusDevModeTest`:"
msgstr "Para a maioria das extensões, isto funcionará \"fora da caixa\", no entanto, é uma boa ideia fazer um teste para verificar se esta funcionalidade está a funcionar como esperado. Para testar isso, usamos `QuarkusDevModeTest`:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2107
#, no-wrap
msgid "public class ServletChangeTestCase {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2118
#, no-wrap
msgid ""
"    @RegisterExtension\n"
"    final static QuarkusDevModeTest test = new QuarkusDevModeTest()\n"
"            .setArchiveProducer(new Supplier<>() {\n"
"                @Override\n"
"                public JavaArchive get() {\n"
"                    return ShrinkWrap.create(JavaArchive.class)   <1>\n"
"                            .addClass(DevServlet.class)\n"
"                            .addAsManifestResource(new StringAsset(\"Hello Resource\"), \"resources/file.txt\");\n"
"                }\n"
"            });\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2124
#, no-wrap
msgid ""
"    @Test\n"
"    public void testServletChange() throws InterruptedException {\n"
"        RestAssured.when().get(\"/dev\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"Hello World\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2126
#, no-wrap
msgid "        test.modifySourceFile(\"DevServlet.java\", new Function<String, String>() {  <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2132
#, no-wrap
msgid ""
"            @Override\n"
"            public String apply(String s) {\n"
"                return s.replace(\"Hello World\", \"Hello Quarkus\");\n"
"            }\n"
"        });\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2137
#, no-wrap
msgid ""
"        RestAssured.when().get(\"/dev\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"Hello Quarkus\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2142
#, no-wrap
msgid ""
"    @Test\n"
"    public void testAddServlet() throws InterruptedException {\n"
"        RestAssured.when().get(\"/new\").then()\n"
"                .statusCode(404);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2144
#, no-wrap
msgid "        test.addSourceFile(NewServlet.class);                                       <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2149
#, no-wrap
msgid ""
"        RestAssured.when().get(\"/new\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"A new Servlet\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2155
#, no-wrap
msgid ""
"    @Test\n"
"    public void testResourceChange() throws InterruptedException {\n"
"        RestAssured.when().get(\"/file.txt\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"Hello Resource\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2157
#, no-wrap
msgid "        test.modifyResourceFile(\"META-INF/resources/file.txt\", new Function<String, String>() { <4>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2163
#, no-wrap
msgid ""
"            @Override\n"
"            public String apply(String s) {\n"
"                return \"A new resource\";\n"
"            }\n"
"        });\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2168
#, no-wrap
msgid ""
"        RestAssured.when().get(\"file.txt\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"A new resource\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2171
#, no-wrap
msgid ""
"    @Test\n"
"    public void testAddResource() throws InterruptedException {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2174
#, no-wrap
msgid ""
"        RestAssured.when().get(\"/new.txt\").then()\n"
"                .statusCode(404);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2176
#, no-wrap
msgid "        test.addResourceFile(\"META-INF/resources/new.txt\", \"New File\");  <5>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2180
#, no-wrap
msgid ""
"        RestAssured.when().get(\"/new.txt\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"New File\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2183
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2187
#, fuzzy
msgid "This starts the deployment, your test can modify it as part of the test suite. Quarkus will be restarted between each test method so every method starts with a clean deployment."
msgstr "Isto inicia a implementação, o seu teste pode modificá-la como parte do conjunto de testes. O Quarkus será reiniciado entre cada método de teste para que cada método comece com uma implantação limpa."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2190
#, fuzzy
msgid "This method allows you to modify the source of a class file. The old source is passed into the function, and the updated source is returned."
msgstr "Este método permite-lhe modificar a fonte de um ficheiro de classe. A fonte antiga é passada para a função e a fonte actualizada é devolvida."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2193
#, fuzzy
msgid "This method adds a new class file to the deployment. The source that is used will be the original source that is part of the current project."
msgstr "Este método adiciona um novo arquivo de classe à implantação. A fonte utilizada será a fonte original que faz parte do projeto atual."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2195
#, fuzzy
msgid "This method modifies a static resource"
msgstr "Este método modifica um recurso estático"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2197
#, fuzzy
msgid "This method adds a new static resource"
msgstr "Este método adiciona um novo recurso estático"

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:2198
#, fuzzy, no-wrap
msgid "Native Executable Support"
msgstr "Suporte a executáveis nativos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2203
#, fuzzy
msgid "There Quarkus provides a lot of build items that control aspects of the native executable build. This allows for extensions to programmatically perform tasks such as registering classes for reflection or adding static resources to the native executable. Some of these build items are listed below:"
msgstr "O Quarkus fornece uma série de itens de construção que controlam aspectos da construção do executável nativo. Isto permite que as extensões executem programaticamente tarefas como o registo de classes para reflexão ou a adição de recursos estáticos ao executável nativo. Alguns desses itens de compilação estão listados abaixo:"

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2204
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2206
#, fuzzy
msgid "Includes static resources into the native executable."
msgstr "Inclui recursos estáticos no executável nativo."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2207
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceDirectoryBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceDirectoryBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2209
#, fuzzy
msgid "Includes directory's static resources into the native executable."
msgstr "Inclui os recursos estáticos do diretório no executável nativo."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2210
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.RuntimeReinitializedClassBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.RuntimeReinitializedClassBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2212
#, fuzzy
msgid "A class that will be reinitialized at runtime by Substrate. This will result in the static initializer running twice."
msgstr "Uma classe que será reinicializada em tempo de execução pelo Substrate. Isso fará com que o inicializador estático seja executado duas vezes."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2213
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.NativeImageSystemPropertyBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.NativeImageSystemPropertyBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2215
#, fuzzy
msgid "A system property that will be set at native executable build time."
msgstr "Uma propriedade do sistema que será definida no momento da construção do executável nativo."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2216
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2218
#, fuzzy
msgid "Includes a resource bundle in the native executable."
msgstr "Inclui um pacote de recursos no executável nativo."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2219
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2221
#, fuzzy
msgid "Registers a class for reflection in Substrate. Constructors are always registered, while methods and fields are optional."
msgstr "Regista uma classe para reflexão no Substrate. Os construtores são sempre registados, enquanto os métodos e campos são opcionais."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2222
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2224
#, fuzzy
msgid "A class that will be initialized at runtime rather than build time. This will cause the build to fail if the class is initialized as part of the native executable build process, so care must be taken."
msgstr "Uma classe que será inicializada em tempo de execução e não em tempo de compilação. Isso fará com que a construção falhe se a classe for inicializada como parte do processo de construção do executável nativo, portanto, é preciso ter cuidado."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2225
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.NativeImageConfigBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.NativeImageConfigBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2227
#, fuzzy
msgid "A convenience feature that allows you to control most of the above features from a single build item."
msgstr "Uma funcionalidade de conveniência que permite controlar a maioria das funcionalidades acima referidas a partir de um único item de construção."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2228
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.NativeImageEnableAllCharsetsBuildItem`"
msgstr "`io.quarkus.deployment.builditem.NativeImageEnableAllCharsetsBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2230
#, fuzzy
msgid "Indicates that all charsets should be enabled in native image."
msgstr "Indica que todos os conjuntos de carateres devem ser ativados na imagem nativa."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2231
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.ExtensionSslNativeSupportBuildItem`"
msgstr "`io.quarkus.deployment.builditem.ExtensionSslNativeSupportBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2234
#, fuzzy
msgid "A convenient way to tell Quarkus that the extension requires SSL, and it should be enabled during native image build.  When using this feature, remember to add your extension to the list of extensions that offer SSL support automatically on the https://github.com/quarkusio/quarkus/blob/main/docs/src/main/asciidoc/native-and-ssl.adoc[native and ssl guide]."
msgstr "Uma forma conveniente de dizer ao Quarkus que a extensão requer SSL, e que deve ser activada durante a construção da imagem nativa. Quando utilizar esta funcionalidade, lembre-se de adicionar a sua extensão à lista de extensões que oferecem suporte SSL automaticamente na  link:https://github.com/quarkusio/quarkus/blob/main/docs/src/main/asciidoc/native-and-ssl.adoc[guia nativo e ssl]."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:2235
#, fuzzy, no-wrap
msgid "IDE support tips"
msgstr "Sugestões de suporte IDE"

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2237
#, fuzzy, no-wrap
msgid "Writing Quarkus extensions in Eclipse"
msgstr "Escrever extensões Quarkus no Eclipse"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2240
#, fuzzy
msgid "The only particular aspect of writing Quarkus extensions in Eclipse is that APT (Annotation Processing Tool) is required as part of extension builds, which means you need to:"
msgstr "O único aspeto particular da escrita de extensões Quarkus no Eclipse é o facto de a APT (Annotation Processing Tool) ser necessária como parte das compilações de extensões, o que significa que é necessário:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2242
#, fuzzy
msgid "Install `m2e-apt` from https://marketplace.eclipse.org/content/m2e-apt"
msgstr "Instalar `m2e-apt` a partir de  https://marketplace.eclipse.org/content/m2e-apt"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2243
#, fuzzy
msgid "Define this property in your `pom.xml`: `<m2e.apt.activation>jdt_apt</m2e.apt.activation>`, although if you rely on `io.quarkus:quarkus-build-parent` you will get it for free."
msgstr "Defina esta propriedade em `pom.xml`: `&amp;lt;m2e.apt.activation&amp;gt;jdt_apt&amp;lt;/m2e.apt.activation&amp;gt;`, embora se recorrer a `io.quarkus:quarkus-build-parent` a obtenha gratuitamente."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2244
#, fuzzy
msgid "If you have the `io.quarkus:quarkus-extension-processor` project open at the same time in your IDE (for example, if you have the Quarkus sources checked out and open in your IDE) you will need to close that project. Otherwise, Eclipse will not invoke the APT plugin that it contains."
msgstr "Se tiver o projeto `io.quarkus:quarkus-extension-processor` aberto ao mesmo tempo no seu IDE (por exemplo, se tiver as fontes Quarkus verificadas e abertas no seu IDE), terá de fechar esse projeto. Caso contrário, o Eclipse não invocará o plug-in APT que ele contém."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2245
#, fuzzy
msgid "If you just closed the extension processor project, be sure to do `Maven > Update Project` on the other projects in order for Eclipse to pick up the extension processor from the Maven repository."
msgstr "Se acabou de fechar o projeto do processador de extensões, certifique-se de que faz `Maven &amp;gt; Update Project` nos outros projectos para que o Eclipse vá buscar o processador de extensões ao repositório Maven."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:2246
#, fuzzy, no-wrap
msgid "Troubleshooting / Debugging Tips"
msgstr "Dicas de resolução de problemas / depuração"

#.  This id was previously used for the "Dump the Generated Classes to the File System" section
#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2250
#, fuzzy, no-wrap
msgid "Inspecting the Generated/Transformed Classes"
msgstr "Inspecionar as classes geradas/transformadas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2254
#, fuzzy
msgid "Quarkus generates a lot of classes during the build phase and in many cases also transforms existing classes.  It is often extremely useful to see the generated bytecode and transformed classes during the development of an extension."
msgstr "O Quarkus gera muitas classes durante a fase de construção e, em muitos casos, também transforma classes existentes. Muitas vezes é extremamente útil ver o bytecode gerado e as classes transformadas durante o desenvolvimento de uma extensão."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2256
#, fuzzy
msgid "If you set the `quarkus.package.vineflower.enabled` property to `true` then Quarkus will download and invoke the https://github.com/Vineflower/vineflower[Vineflower decompiler] and dump the result in the `decompiled` directory of the build tool output (`target/decompiled` for Maven for example)."
msgstr "Se definir a propriedade `quarkus.package.quiltflower.enabled` para `true`, o Quarkus descarregará e invocará o  link:https://github.com/QuiltMC/quiltflower[descompilador Quiltflower] e colocará o resultado no diretório `decompiled` da saída da ferramenta de construção ( `target/decompiled` para Maven, por exemplo)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2258
#, fuzzy
msgid "This property only works during a normal production build (i.e. not for dev mode/tests) and when `fast-jar` packaging type is used (the default behavior)."
msgstr "Esta propriedade só funciona durante uma compilação de produção normal (ou seja, não para o modo de desenvolvimento/testes) e quando o tipo de empacotamento `fast-jar` é usado (o comportamento padrão)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2260
#, fuzzy
msgid "There are also three system properties that allow you to dump the generated/transformed classes to the filesystem and inspect them later, for example via a decompiler in your IDE."
msgstr "Existem também três propriedades do sistema que lhe permitem descarregar as classes geradas/transformadas para o sistema de ficheiros e inspeccioná-las mais tarde, por exemplo, através de um descompilador no seu IDE."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2262
#, fuzzy
msgid "`quarkus.debug.generated-classes-dir` - to dump the generated classes, such as bean metadata"
msgstr "`quarkus.debug.generated-classes-dir` - para descarregar as classes geradas, tais como metadados de feijões"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2263
#, fuzzy
msgid "`quarkus.debug.transformed-classes-dir` - to dump the transformed classes, e.g. Panache entities"
msgstr "`quarkus.debug.transformed-classes-dir` - para descarregar as classes transformadas, por exemplo, entidades Panache"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2264
#, fuzzy
msgid "`quarkus.debug.generated-sources-dir` - to dump the ZIG files; ZIG file is a textual representation of the generated code that is referenced in the stack traces"
msgstr "`quarkus.debug.generated-sources-dir` - para descarregar os ficheiros ZIG; o ficheiro ZIG é uma representação textual do código gerado que é referenciado nos traços de pilha"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2266
#, fuzzy
msgid "These properties are especially useful in the development mode or when running the tests where the generated/transformed classes are only held in memory in a class loader."
msgstr "Estas propriedades são especialmente úteis no modo de desenvolvimento ou durante a execução dos testes em que as classes geradas/transformadas são apenas mantidas em memória num carregador de classes."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2268
#, fuzzy
msgid "For example, you can specify the `quarkus.debug.generated-classes-dir` system property to have these classes written out to disk for inspection in the development mode:"
msgstr "Por exemplo, pode especificar a propriedade de sistema `quarkus.debug.generated-classes-dir` para que estas classes sejam gravadas no disco para inspeção no modo de desenvolvimento:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2272
#, no-wrap
msgid "./mvnw quarkus:dev -Dquarkus.debug.generated-classes-dir=dump-classes\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2275
#, fuzzy
msgid "The property value could be either an absolute path, such as `/home/foo/dump` on a Linux machine, or a path relative to the user working directory, i.e. `dump` corresponds to the `{user.dir}/target/dump` in the dev mode and `{user.dir}/dump` when running the tests."
msgstr "O valor da propriedade pode ser um caminho absoluto, como `/home/foo/dump` numa máquina Linux, ou um caminho relativo ao diretório de trabalho do utilizador, ou seja, `dump` corresponde a `{user.dir}/target/dump` no modo de desenvolvimento e `{user.dir}/dump` quando se executam os testes."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2277
#, fuzzy
msgid "You should see a line in the log for each class written to the directory:"
msgstr "Deverá ver uma linha no registo para cada classe escrita no diretório:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2281
#, no-wrap
msgid "INFO  [io.qua.run.boo.StartupActionImpl] (main) Wrote /path/to/my/app/target/dump-classes/io/quarkus/arc/impl/ActivateRequestContextInterceptor_Bean.class\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2284
#, fuzzy
msgid "The property is also honored when running tests:"
msgstr "A propriedade também é honrada durante a execução de testes:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2288
#, no-wrap
msgid "./mvnw clean test -Dquarkus.debug.generated-classes-dir=target/dump-generated-classes\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2291
#, fuzzy
msgid "Analogously, you can use the `quarkus.debug.transformed-classes-dir` and `quarkus.debug.generated-sources-dir` properties to dump the relevant output."
msgstr "De forma análoga, pode utilizar as propriedades `quarkus.debug.transformed-classes-dir` e `quarkus.debug.generated-sources-dir` para descarregar a saída relevante."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2292
#, fuzzy, no-wrap
msgid "Multi-module Maven Projects and the Development Mode"
msgstr "Projectos Maven multi-módulos e o modo de desenvolvimento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2297
#, fuzzy
msgid "It's not uncommon to develop an extension in a multi-module Maven project that also contains an \"example\" module.  However, if you want to run the example in the development mode then the `-DnoDeps` system property must be used in order to exclude the local project dependencies.  Otherwise, Quarkus attempts to monitor the extension classes and this may result in weird class loading issues."
msgstr "Não é raro desenvolver uma extensão num projeto Maven multi-módulo que também contém um módulo \"exemplo\". No entanto, se quiser executar o exemplo no modo de desenvolvimento, a propriedade do sistema `-DnoDeps` deve ser utilizada para excluir as dependências do projeto local. Caso contrário, o Quarkus tenta monitorar as classes de extensão e isso pode resultar em problemas estranhos de carregamento de classes."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2301
#, no-wrap
msgid "./mvnw compile quarkus:dev -DnoDeps\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2303
#, fuzzy, no-wrap
msgid "Indexer does not include your external dependency"
msgstr "O indexador não inclui a sua dependência externa"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2306
#, fuzzy
msgid "Remember to add `IndexDependencyBuildItem` artifacts to your `@BuildStep`."
msgstr "Não se esqueça de adicionar os artefactos `IndexDependencyBuildItem` ao seu `@BuildStep`."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:2307
#, fuzzy, no-wrap
msgid "Sample Test Extension"
msgstr "Extensão do teste de amostra"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2310
#, fuzzy
msgid "We have an extension that is used to test for regressions in the extension processing. It is located in {quarkus-tree-url}/integration-tests/test-extension/extension directory. In this section we touch on some tasks an extension author will typically need to perform using the test-extension code to illustrate how the task could be done."
msgstr "Temos uma extensão que é utilizada para testar regressões no processamento da extensão. Está localizada no diretório {quarkus-tree-url}/integration-tests/test-extension/extension. Nesta secção, abordamos algumas tarefas que um autor de extensão terá normalmente de realizar utilizando o código da extensão de teste para ilustrar como a tarefa pode ser realizada."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2311
#, fuzzy, no-wrap
msgid "Features and Capabilities"
msgstr "Características e capacidades"

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:2313
#, fuzzy, no-wrap
msgid "Features"
msgstr "Características"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2317
#, fuzzy
msgid "A _feature_ represents a functionality provided by an extension.  The name of the feature gets displayed in the log during application bootstrap."
msgstr "Uma _caraterística_ representa uma funcionalidade fornecida por uma extensão. O nome da caraterística é apresentado no registo durante o arranque da aplicação."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2318
#, fuzzy, no-wrap
msgid "Example Startup Lines"
msgstr "Exemplo de linhas de arranque"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2323
#, no-wrap
msgid ""
"2019-03-22 14:02:37,884 INFO  [io.quarkus] (main) Quarkus 999-SNAPSHOT started in 0.061s.\n"
"2019-03-22 14:02:37,884 INFO  [io.quarkus] (main) Installed features: [cdi, test-extension] <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2325
#, fuzzy
msgid "A list of features installed in the runtime image"
msgstr "Uma lista de funcionalidades instaladas na imagem de tempo de execução"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2327
#, fuzzy
msgid "A feature can be registered in a xref:build-step-processors[Build Step Processors] method that produces a `FeatureBuildItem`:"
msgstr "Uma caraterística pode ser registada num método  link:#build-step-processors[Build Step Processors] que produz um `FeatureBuildItem`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2328
#, fuzzy, no-wrap
msgid "TestProcessor#feature()"
msgstr "TestProcessor#feature()"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2335
#, no-wrap
msgid ""
"    @BuildStep\n"
"    FeatureBuildItem feature() {\n"
"        return new FeatureBuildItem(\"test-extension\");\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2340
#, fuzzy
msgid "The name of the feature should only contain lowercase characters, words are separated by dash; e.g. `security-jpa`.  An extension should provide at most one feature and the name must be unique.  If multiple extensions register a feature of the same name the build fails."
msgstr "O nome da caraterística só deve conter caracteres minúsculos e as palavras são separadas por um travessão; por exemplo, `security-jpa`. Uma extensão deve fornecer no máximo uma caraterística e o nome deve ser único. Se várias extensões registarem uma caraterística com o mesmo nome, a compilação falha."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2344
#, fuzzy
msgid "The feature name should also map to a label in the extension's `devtools/common/src/main/filtered/extensions.json` entry so that the feature name displayed by the startup line matches a label that one can use to select the extension when creating a project using the Quarkus maven plugin as shown in this example taken from the xref:rest-json.adoc[Writing JSON REST Services] guide where the `resteasy-reactive-jackson` feature is referenced:"
msgstr "O nome da caraterística também deve ser mapeado para uma etiqueta na entrada `devtools/common/src/main/filtered/extensions.json` da extensão, de modo a que o nome da caraterística apresentado pela linha de arranque corresponda a uma etiqueta que pode ser utilizada para selecionar a extensão ao criar um projeto utilizando o plug-in maven do Quarkus, tal como mostrado neste exemplo retirado do guia  link:rest-json.html[Writing JSON REST Services], onde a caraterística `resteasy-reactive-jackson` é referenciada:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2354
#, no-wrap
msgid ""
"mvn {quarkus-platform-groupid}:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=rest-json \\\n"
"    -DclassName=\"org.acme.rest.json.FruitResource\" \\\n"
"    -Dpath=\"/fruits\" \\\n"
"    -Dextensions=\"resteasy-reactive,resteasy-reactive-jackson\"\n"
"cd rest-json\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:2356
#, fuzzy, no-wrap
msgid "Capabilities"
msgstr "Capacidades"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2362
#, fuzzy
msgid "A _capability_ represents a technical capability that can be queried by other extensions.  An extension may provide multiple capabilities and multiple extensions can provide the same capability.  By default, capabilities are not displayed to users.  Capabilities should be used when checking for the presence of an extension rather than class path based checks."
msgstr "Uma _capacidade_ representa uma capacidade técnica que pode ser consultada por outras extensões. Uma extensão pode fornecer várias capacidades e várias extensões podem fornecer a mesma capacidade. Por defeito, as capacidades não são apresentadas aos utilizadores. As capacidades devem ser utilizadas para verificar a presença de uma extensão em vez de verificações baseadas no caminho de classe."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2364
#, fuzzy
msgid "Capabilities can be registered in a xref:build-step-processors[Build Step Processors] method that produces a `CapabilityBuildItem`:"
msgstr "As capacidades podem ser registadas num método  link:#build-step-processors[Build Step Processors] que produz um `CapabilityBuildItem`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2365
#, fuzzy, no-wrap
msgid "TestProcessor#capability()"
msgstr "TestProcessor#capability()"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2373
#, no-wrap
msgid ""
"    @BuildStep\n"
"    void capabilities(BuildProducer<CapabilityBuildItem> capabilityProducer) {\n"
"        capabilityProducer.produce(new CapabilityBuildItem(\"org.acme.test-transactions\"));\n"
"        capabilityProducer.produce(new CapabilityBuildItem(\"org.acme.test-metrics\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2376
#, fuzzy
msgid "Extensions can consume registered capabilities using the `Capabilities` build item:"
msgstr "As extensões podem consumir capacidades registadas utilizando o item de compilação `Capabilities`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2377
#, fuzzy, no-wrap
msgid "TestProcessor#doSomeCoolStuff()"
msgstr "TestProcessor#doSomeCoolStuff()"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2386
#, no-wrap
msgid ""
"    @BuildStep\n"
"    void doSomeCoolStuff(Capabilities capabilities) {\n"
"        if (capabilities.isPresent(Capability.TRANSACTIONS)) {\n"
"          // do something only if JTA transactions are in...\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2390
#, fuzzy
msgid "Capabilities should follow the naming conventions of Java packages; e.g. `io.quarkus.security.jpa`.  Capabilities provided by core extensions should be listed in the `io.quarkus.deployment.Capability` enum and their name should always start with the `io.quarkus` prefix."
msgstr "As capacidades devem seguir as convenções de nomenclatura dos pacotes Java; por exemplo, `io.quarkus.security.jpa`. As capacidades fornecidas por extensões de núcleo devem ser listadas no enum `io.quarkus.deployment.Capability` e o seu nome deve começar sempre com o prefixo `io.quarkus`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2391
#, fuzzy, no-wrap
msgid "Bean Defining Annotations"
msgstr "Anotações de definição de feijão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2393
#, fuzzy
msgid "The CDI layer processes CDI beans that are either explicitly registered or that it discovers based on bean defining annotations as defined in https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#bean_defining_annotations[2.5.1. Bean defining annotations]. You can expand this set of annotations to include annotations your extension processes using a `BeanDefiningAnnotationBuildItem` as shown in this `TestProcessor#registerBeanDefinningAnnotations` example:"
msgstr "A camada CDI processa beans CDI que são explicitamente registados ou que descobre com base em anotações de definição de beans, tal como definido em  link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#bean_defining_annotations[2.5.1.] Anotações de definição  link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#bean_defining_annotations[de beans]. Pode expandir este conjunto de anotações para incluir anotações que a sua extensão processa utilizando um `BeanDefiningAnnotationBuildItem`, tal como mostrado neste exemplo `TestProcessor#registerBeanDefinningAnnotations`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2394
#, fuzzy, no-wrap
msgid "Register a Bean Defining Annotation"
msgstr "Registar uma Anotação de Definição de Bean"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2400
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import org.jboss.jandex.DotName;\n"
"import io.quarkus.extest.runtime.TestAnnotation;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2404
#, no-wrap
msgid ""
"public final class TestProcessor {\n"
"    static DotName TEST_ANNOTATION = DotName.createSimple(TestAnnotation.class.getName());\n"
"    static DotName TEST_ANNOTATION_SCOPE = DotName.createSimple(ApplicationScoped.class.getName());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2406
#: upstream/_guides/writing-extensions.adoc:2432
#, no-wrap
msgid "...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2414
#, no-wrap
msgid ""
"    @BuildStep\n"
"    BeanDefiningAnnotationBuildItem registerX() {\n"
"        <1>\n"
"        return new BeanDefiningAnnotationBuildItem(TEST_ANNOTATION, TEST_ANNOTATION_SCOPE);\n"
"    }\n"
"...\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2424
#, no-wrap
msgid ""
"/**\n"
" * Marker annotation for test configuration target beans\n"
" */\n"
"@Target({ TYPE })\n"
"@Retention(RUNTIME)\n"
"@Documented\n"
"@Inherited\n"
"public @interface TestAnnotation {\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2430
#, no-wrap
msgid ""
"/**\n"
" * A sample bean\n"
" */\n"
"@TestAnnotation <2>\n"
"public class ConfiguredBean implements IConfigConsumer {\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2434
#, fuzzy
msgid "Register the annotation class and CDI default scope using the Jandex `DotName` class."
msgstr "Registar a classe de anotação e o âmbito predefinido de CDI utilizando a classe Jandex `DotName`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2435
#, fuzzy
msgid "`ConfiguredBean` will be processed by the CDI layer the same as a bean annotated with the CDI standard @ApplicationScoped."
msgstr "`ConfiguredBean` será processado pela camada CDI da mesma forma que um bean anotado com a norma CDI @ApplicationScoped."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2437
#, fuzzy, no-wrap
msgid "Parsing Config to Objects"
msgstr "Analisar a configuração para objectos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2440
#, fuzzy
msgid "One of the main things an extension is likely to do is completely separate the configuration phase of behavior from the runtime phase.  Frameworks often do parsing/load of configuration on startup that can be done during build time to both reduce the runtime dependencies on frameworks like xml parsers as well as reducing the startup time the parsing incurs."
msgstr "Uma das principais coisas que uma extensão provavelmente fará é separar completamente a fase de configuração do comportamento da fase de tempo de execução. Os frameworks geralmente analisam/carregam a configuração na inicialização, o que pode ser feito durante o tempo de compilação para reduzir as dependências em tempo de execução de frameworks como analisadores xml, bem como reduzir o tempo de inicialização em que a análise incorre."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2442
#, fuzzy
msgid "An example of parsing an XML config file using JAXB is shown in the `TestProcessor#parseServiceXmlConfig` method:"
msgstr "Um exemplo de análise de um ficheiro de configuração XML utilizando JAXB é apresentado no método `TestProcessor#parseServiceXmlConfig`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2442
#, fuzzy, no-wrap
msgid "Parsing an XML Configuration into Runtime XmlConfig Instance"
msgstr "Analisar uma configuração XML numa instância XmlConfig em tempo de execução"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2459
#, no-wrap
msgid ""
"    @BuildStep\n"
"    @Record(STATIC_INIT)\n"
"    RuntimeServiceBuildItem parseServiceXmlConfig(TestRecorder recorder) throws JAXBException {\n"
"        RuntimeServiceBuildItem serviceBuildItem = null;\n"
"        JAXBContext context = JAXBContext.newInstance(XmlConfig.class);\n"
"        Unmarshaller unmarshaller = context.createUnmarshaller();\n"
"        InputStream is = getClass().getResourceAsStream(\"/config.xml\"); <1>\n"
"        if (is != null) {\n"
"            log.info(\"Have XmlConfig, loading\");\n"
"            XmlConfig config = (XmlConfig) unmarshaller.unmarshal(is); <2>\n"
"...\n"
"        }\n"
"        return serviceBuildItem;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2462
#, fuzzy
msgid "Look for a config.xml classpath resource"
msgstr "Procure por um recurso config.xml classpath"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2463
#, fuzzy
msgid "If found, parse using JAXB context for `XmlConfig.class`"
msgstr "Se for encontrado, analisar utilizando o contexto JAXB para `XmlConfig.class`"

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:2467
#, fuzzy
msgid "If there was no /config.xml resource available in the build environment, then a null `RuntimeServiceBuildItem` would be returned and no subsequent logic based on a `RuntimeServiceBuildItem` being produced would execute."
msgstr "Se não houvesse nenhum recurso /config.xml disponível no ambiente de construção, seria devolvido um `RuntimeServiceBuildItem` nulo e não seria executada qualquer lógica subsequente baseada num `RuntimeServiceBuildItem` produzido."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2470
#, fuzzy
msgid "Typically, one is loading a configuration to create some runtime component/service as `parseServiceXmlConfig` is doing. We will come back to the rest of the behavior in `parseServiceXmlConfig` in the following xref:manage-non-cdi-service[Manage Non-CDI Service] section."
msgstr "Normalmente, está-se a carregar uma configuração para criar algum componente/serviço de tempo de execução, como está a fazer o `parseServiceXmlConfig`. Voltaremos ao resto do comportamento em `parseServiceXmlConfig` na secção seguinte  link:#manage-non-cdi-service[Gerir serviço não CDI]."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2472
#, fuzzy
msgid "If for some reason you need to parse the config and use it in other build steps in an extension processor, you would need to create an `XmlConfigBuildItem` to pass the parsed XmlConfig instance around."
msgstr "Se, por algum motivo, for necessário analisar a configuração e utilizá-la noutros passos de construção num processador de extensão, será necessário criar um `XmlConfigBuildItem` para transmitir a instância XmlConfig analisada."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:2477
#, fuzzy
msgid "If you look at the XmlConfig code you will see that it does carry around the JAXB annotations. If you don't want these in the runtime image, you could clone the XmlConfig instance into some POJO object graph and then replace XmlConfig with the POJO class.  We will do this in xref:replacing-classes-in-native-image[Replacing Classes in the Native Image]."
msgstr "Se olhar para o código XmlConfig, verá que ele carrega as anotações JAXB. Se não as quiser na imagem de tempo de execução, pode clonar a instância XmlConfig num gráfico de objectos POJO e depois substituir XmlConfig pela classe POJO. Faremos isso em  link:#replacing-classes-in-native-image[Substituindo classes na imagem nativa]."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2479
#, fuzzy, no-wrap
msgid "Scanning Deployments Using Jandex"
msgstr "Verificação de implantações usando o Jandex"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2481
#, fuzzy
msgid "If your extension defines annotations or interfaces that mark beans needing to be processed, you can locate these beans using the Jandex API, a Java annotation indexer and offline reflection library. The following `TestProcessor#scanForBeans` method shows how to find the beans annotated with our `@TestAnnotation` that also implement the `IConfigConsumer` interface:"
msgstr "Se a sua extensão definir anotações ou interfaces que marcam os beans que precisam de ser processados, pode localizar esses beans utilizando a API Jandex, um indexador de anotações Java e uma biblioteca de reflexão offline. O método `TestProcessor#scanForBeans` a seguir mostra como localizar os beans anotados com nosso `@TestAnnotation` que também implementam a interface `IConfigConsumer`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2482
#, fuzzy, no-wrap
msgid "Example Jandex Usage"
msgstr "Exemplo de utilização do Jandex"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2487
#, no-wrap
msgid ""
"    static DotName TEST_ANNOTATION = DotName.createSimple(TestAnnotation.class.getName());\n"
"...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2510
#, no-wrap
msgid ""
"    @BuildStep\n"
"    @Record(STATIC_INIT)\n"
"    void scanForBeans(TestRecorder recorder, BeanArchiveIndexBuildItem beanArchiveIndex, <1>\n"
"            BuildProducer<TestBeanBuildItem> testBeanProducer) {\n"
"        IndexView indexView = beanArchiveIndex.getIndex(); <2>\n"
"        Collection<AnnotationInstance> testBeans = indexView.getAnnotations(TEST_ANNOTATION); <3>\n"
"        for (AnnotationInstance ann : testBeans) {\n"
"            ClassInfo beanClassInfo = ann.target().asClass();\n"
"            try {\n"
"                boolean isConfigConsumer = beanClassInfo.interfaceNames()\n"
"                        .stream()\n"
"                        .anyMatch(dotName -> dotName.equals(DotName.createSimple(IConfigConsumer.class.getName()))); <4>\n"
"                if (isConfigConsumer) {\n"
"                    Class<IConfigConsumer> beanClass = (Class<IConfigConsumer>) Class.forName(beanClassInfo.name().toString(), false, Thread.currentThread().getContextClassLoader());\n"
"                    testBeanProducer.produce(new TestBeanBuildItem(beanClass)); <5>\n"
"                    log.infof(\"Configured bean: %s\", beanClass);\n"
"                }\n"
"            } catch (ClassNotFoundException e) {\n"
"                log.warn(\"Failed to load bean class\", e);\n"
"            }\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2512
#, fuzzy
msgid "Depend on a `BeanArchiveIndexBuildItem` to have the build step be run after the deployment has been indexed."
msgstr "Depende de um `BeanArchiveIndexBuildItem` para que o passo de construção seja executado depois de a implementação ter sido indexada."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2513
#, fuzzy
msgid "Retrieve the index."
msgstr "Recuperar o índice."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2514
#, fuzzy
msgid "Find all beans annotated with `@TestAnnotation`."
msgstr "Encontrar todos os feijões anotados com `@TestAnnotation`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2515
#, fuzzy
msgid "Determine which of these beans also has the `IConfigConsumer` interface."
msgstr "Determine qual destes beans também tem a interface `IConfigConsumer`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2516
#, fuzzy
msgid "Save the bean class in a `TestBeanBuildItem` for use in a latter RUNTIME_INIT build step that will interact with the bean instances."
msgstr "Guarde a classe do bean em `TestBeanBuildItem` para utilizar num passo de construção RUNTIME_INIT posterior que irá interagir com as instâncias do bean."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2517
#, fuzzy, no-wrap
msgid "Interacting With Extension Beans"
msgstr "Interação com os beans de extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2519
#, fuzzy
msgid "You can use the `io.quarkus.arc.runtime.BeanContainer` interface to interact with your extension beans. The following `configureBeans` methods illustrate interacting with the beans scanned for in the previous section:"
msgstr "Pode utilizar a interface `io.quarkus.arc.runtime.BeanContainer` para interagir com os seus beans de extensão. Os seguintes métodos `configureBeans` ilustram a interação com os beans analisados na secção anterior:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2520
#, fuzzy, no-wrap
msgid "Using CDI BeanContainer Interface"
msgstr "Utilização da interface CDI BeanContainer"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2529
#, no-wrap
msgid ""
"// TestProcessor#configureBeans\n"
"    @BuildStep\n"
"    @Record(RUNTIME_INIT)\n"
"    void configureBeans(TestRecorder recorder, List<TestBeanBuildItem> testBeans, <1>\n"
"            BeanContainerBuildItem beanContainer, <2>\n"
"            TestRunTimeConfig runTimeConfig) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2535
#, no-wrap
msgid ""
"        for (TestBeanBuildItem testBeanBuildItem : testBeans) {\n"
"            Class<IConfigConsumer> beanClass = testBeanBuildItem.getConfigConsumer();\n"
"            recorder.configureBeans(beanContainer.getValue(), beanClass, buildAndRunTimeConfig, runTimeConfig); <3>\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2545
#, no-wrap
msgid ""
"// TestRecorder#configureBeans\n"
"    public void configureBeans(BeanContainer beanContainer, Class<IConfigConsumer> beanClass,\n"
"            TestBuildAndRunTimeConfig buildTimeConfig,\n"
"            TestRunTimeConfig runTimeConfig) {\n"
"        log.info(\"Begin BeanContainerListener callback\\n\");\n"
"        IConfigConsumer instance = beanContainer.beanInstance(beanClass); <4>\n"
"        instance.loadConfig(buildTimeConfig, runTimeConfig); <5>\n"
"        log.infof(\"configureBeans, instance=%s\\n\", instance);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2547
#, fuzzy
msgid "Consume the `TestBeanBuildItem`s produced from the scanning build step."
msgstr "Consome o `TestBeanBuildItem` produzido a partir da etapa de construção de varredura."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2548
#, fuzzy
msgid "Consume the `BeanContainerBuildItem` to order this build step to run after the CDI bean container has been created."
msgstr "Consuma o `BeanContainerBuildItem` para ordenar que este passo de construção seja executado depois de o contentor de feijões CDI ter sido criado."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2549
#, fuzzy
msgid "Call the runtime recorder to record the bean interactions."
msgstr "Chame o gravador de tempo de execução para registar as interacções do bean."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2550
#, fuzzy
msgid "Runtime recorder retrieves the bean using its type."
msgstr "O registador de tempo de execução recupera o bean utilizando o seu tipo."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2551
#, fuzzy
msgid "Runtime recorder invokes the `IConfigConsumer#loadConfig(...)` method passing in the configuration objects with runtime information."
msgstr "O gravador de tempo de execução invoca o método `IConfigConsumer#loadConfig(…​)`, passando os objectos de configuração com informações de tempo de execução."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2553
#, fuzzy, no-wrap
msgid "Manage Non-CDI Service"
msgstr "Gerir o serviço não CDI"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2558
#, fuzzy
msgid "A common purpose for an extension is to integrate a non-CDI aware service into the CDI based Quarkus runtime.  Step 1 of this task is to load any configuration needed in a STATIC_INIT build step as we did in xref:parsing-config-to-objects[Parsing Config to Objects].  Now we need to create an instance of the service using the configuration.  Let's return to the `TestProcessor#parseServiceXmlConfig` method to see how this can be done."
msgstr "Um objetivo comum para uma extensão é integrar um serviço que não tenha conhecimento de CDI no tempo de execução do Quarkus baseado em CDI. O passo 1 desta tarefa é carregar qualquer configuração necessária num passo de construção STATIC_INIT, como fizemos em  link:#parsing-config-to-objects[Parsing Config to Objects]. Agora precisamos criar uma instância do serviço usando a configuração. Vamos voltar ao método `TestProcessor#parseServiceXmlConfig` para ver como isso pode ser feito."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2559
#, fuzzy, no-wrap
msgid "Creating a Non-CDI Service"
msgstr "Criação de um serviço não CDI"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2579
#, no-wrap
msgid ""
"// TestProcessor#parseServiceXmlConfig\n"
"    @BuildStep\n"
"    @Record(STATIC_INIT)\n"
"    RuntimeServiceBuildItem parseServiceXmlConfig(TestRecorder recorder) throws JAXBException {\n"
"        RuntimeServiceBuildItem serviceBuildItem = null;\n"
"        JAXBContext context = JAXBContext.newInstance(XmlConfig.class);\n"
"        Unmarshaller unmarshaller = context.createUnmarshaller();\n"
"        InputStream is = getClass().getResourceAsStream(\"/config.xml\");\n"
"        if (is != null) {\n"
"            log.info(\"Have XmlConfig, loading\");\n"
"            XmlConfig config = (XmlConfig) unmarshaller.unmarshal(is);\n"
"            log.info(\"Loaded XmlConfig, creating service\");\n"
"            RuntimeValue<RuntimeXmlConfigService> service = recorder.initRuntimeService(config); //<1>\n"
"            serviceBuildItem = new RuntimeServiceBuildItem(service); //<3>\n"
"        }\n"
"        return serviceBuildItem;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2585
#, no-wrap
msgid ""
"// TestRecorder#initRuntimeService\n"
"    public RuntimeValue<RuntimeXmlConfigService> initRuntimeService(XmlConfig config) {\n"
"        RuntimeXmlConfigService service = new RuntimeXmlConfigService(config); //<2>\n"
"        return new RuntimeValue<>(service);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2589
#, no-wrap
msgid ""
"// RuntimeServiceBuildItem\n"
"    final public class RuntimeServiceBuildItem extends SimpleBuildItem {\n"
"    private RuntimeValue<RuntimeXmlConfigService> service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2593
#, no-wrap
msgid ""
"    public RuntimeServiceBuildItem(RuntimeValue<RuntimeXmlConfigService> service) {\n"
"        this.service = service;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2598
#, no-wrap
msgid ""
"    public RuntimeValue<RuntimeXmlConfigService> getService() {\n"
"        return service;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2600
#, fuzzy
msgid "Call into the runtime recorder to record the creation of the service."
msgstr "Chamar o gravador de tempo de execução para registar a criação do serviço."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2601
#, fuzzy
msgid "Using the parsed `XmlConfig` instance, create an instance of `RuntimeXmlConfigService` and wrap it in a `RuntimeValue`. Use a `RuntimeValue` wrapper for non-interface objects that are non-proxiable."
msgstr "Utilizando a instância analisada de `XmlConfig`, crie uma instância de `RuntimeXmlConfigService` e envolva-a numa `RuntimeValue`. Utilize um invólucro `RuntimeValue` para objectos que não sejam de interface e que não sejam proxiais."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2602
#, fuzzy
msgid "Wrap the return service value in a `RuntimeServiceBuildItem` for use in a RUNTIME_INIT build step that will start the service."
msgstr "Envolver o valor do serviço de retorno num `RuntimeServiceBuildItem` para utilização num passo de construção RUNTIME_INIT que iniciará o serviço."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:2604
#, fuzzy, no-wrap
msgid "Starting a Service"
msgstr "Iniciar um serviço"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2607
#, fuzzy
msgid "Now that you have recorded the creation of a service during the build phase, you need to record how to start the service at runtime during booting.  You do this with a RUNTIME_INIT build step as shown in the `TestProcessor#startRuntimeService` method."
msgstr "Agora que registou a criação de um serviço durante a fase de construção, é necessário registar como iniciar o serviço em tempo de execução durante o arranque. Isso é feito com uma etapa de construção RUNTIME_INIT, conforme mostrado no método `TestProcessor#startRuntimeService`."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2608
#, fuzzy, no-wrap
msgid "Starting/Stopping a Non-CDI Service"
msgstr "Iniciar/parar um serviço não CDI"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2624
#, no-wrap
msgid ""
"// TestProcessor#startRuntimeService\n"
"    @BuildStep\n"
"    @Record(RUNTIME_INIT)\n"
"    ServiceStartBuildItem startRuntimeService(TestRecorder recorder, ShutdownContextBuildItem shutdownContextBuildItem , // <1>\n"
"            RuntimeServiceBuildItem serviceBuildItem) throws IOException { // <2>\n"
"        if (serviceBuildItem != null) {\n"
"            log.info(\"Registering service start\");\n"
"            recorder.startRuntimeService(shutdownContextBuildItem, serviceBuildItem.getService()); // <3>\n"
"        } else {\n"
"            log.info(\"No RuntimeServiceBuildItem seen, check config.xml\");\n"
"        }\n"
"        return new ServiceStartBuildItem(\"RuntimeXmlConfigService\"); //<4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2632
#, no-wrap
msgid ""
"// TestRecorder#startRuntimeService\n"
"    public void startRuntimeService(ShutdownContext shutdownContext, RuntimeValue<RuntimeXmlConfigService> runtimeValue)\n"
"            throws IOException {\n"
"        RuntimeXmlConfigService service = runtimeValue.getValue();\n"
"        service.startService(); //<5>\n"
"        shutdownContext.addShutdownTask(service::stopService); //<6>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2634
#, fuzzy
msgid "We consume a ShutdownContextBuildItem to register the service shutdown."
msgstr "Consumimos um ShutdownContextBuildItem para registar o encerramento do serviço."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2635
#, fuzzy
msgid "We consume the previously initialized service captured in `RuntimeServiceBuildItem`."
msgstr "Consumimos o serviço previamente inicializado capturado em `RuntimeServiceBuildItem`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2636
#, fuzzy
msgid "Call the runtime recorder to record the service start invocation."
msgstr "Chamar o gravador de tempo de execução para registar a invocação do início do serviço."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2637
#, fuzzy
msgid "Produce a `ServiceStartBuildItem` to indicate the startup of a service. See xref:startup-shutdown-events[Startup and Shutdown Events] for details."
msgstr "Produzir um `ServiceStartBuildItem` para indicar o arranque de um serviço. Para obter detalhes, consulte  link:#startup-shutdown-events[Eventos de inicialização e desligamento]."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2638
#, fuzzy
msgid "Runtime recorder retrieves the service instance reference and calls its `startService` method."
msgstr "O registador de tempo de execução recupera a referência da instância do serviço e chama o seu método `startService`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2639
#, fuzzy
msgid "Runtime recorder registers an invocation of the service instance `stopService` method with the Quarkus `ShutdownContext`."
msgstr "O registador de tempo de execução regista uma invocação do método `stopService` da instância do serviço com o Quarkus `ShutdownContext`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2642
#, fuzzy
msgid "The code for the `RuntimeXmlConfigService` can be viewed here: {quarkus-blob-url}/integration-tests/test-extension/extension/runtime/src/main/java/io/quarkus/extest/runtime/RuntimeXmlConfigService.java[RuntimeXmlConfigService.java]"
msgstr "O código para `RuntimeXmlConfigService` pode ser visualizado aqui: {quarkus-blob-url}/integration-tests/test-extension/extension/runtime/src/main/java/io/quarkus/extest/runtime/RuntimeXmlConfigService.java[RuntimeXmlConfigService.java]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2644
#, fuzzy
msgid "The testcase for validating that the `RuntimeXmlConfigService` has started can be found in the `testRuntimeXmlConfigService` test of `ConfiguredBeanTest` and `NativeImageIT`."
msgstr "O caso de teste para validar que o `RuntimeXmlConfigService` foi iniciado pode ser encontrado no teste `testRuntimeXmlConfigService` de `ConfiguredBeanTest` e `NativeImageIT`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2646
#, fuzzy, no-wrap
msgid "Startup and Shutdown Events"
msgstr "Eventos de arranque e de encerramento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2649
#, fuzzy
msgid "The Quarkus container supports startup and shutdown lifecycle events to notify components of the container startup and shutdown. There are CDI events fired that components can observe are illustrated in this example:"
msgstr "O contentor Quarkus suporta eventos de ciclo de vida de arranque e encerramento para notificar os componentes do arranque e encerramento do contentor. Existem eventos CDI disparados que os componentes podem observar e que são ilustrados neste exemplo:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2650
#, fuzzy, no-wrap
msgid "Observing Container Startup"
msgstr "Observação do arranque do contentor"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2655
#, no-wrap
msgid ""
"import io.quarkus.runtime.ShutdownEvent;\n"
"import io.quarkus.runtime.StartupEvent;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2664
#, no-wrap
msgid ""
"public class SomeBean {\n"
"    /**\n"
"     * Called when the runtime has started\n"
"     * @param event\n"
"     */\n"
"    void onStart(@Observes StartupEvent event) { // <1>\n"
"        System.out.printf(\"onStart, event=%s%n\", event);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2673
#, no-wrap
msgid ""
"    /**\n"
"     * Called when the runtime is shutting down\n"
"     * @param event\n"
"    */\n"
"    void onStop(@Observes ShutdownEvent event) { // <2>\n"
"        System.out.printf(\"onStop, event=%s%n\", event);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2675
#, fuzzy
msgid "Observe a `StartupEvent` to be notified the runtime has started."
msgstr "Observar um `StartupEvent` para ser notificado de que o tempo de execução foi iniciado."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2676
#, fuzzy
msgid "Observe a `ShutdownEvent` to be notified when the runtime is going to shut down."
msgstr "Observar um `ShutdownEvent` para ser notificado quando o tempo de execução for encerrado."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2681
#, fuzzy
msgid "What is the relevance of startup and shutdown events for extension authors? We have already seen the use of a `ShutdownContext` to register a callback to perform shutdown tasks in the xref:starting-service[Starting a Service] section.  These shutdown tasks would be called after a `ShutdownEvent` had been sent."
msgstr "Qual é a importância dos eventos de arranque e encerramento para os autores de extensões? Já vimos a utilização de um `ShutdownContext` para registar uma chamada de retorno para executar tarefas de encerramento na secção  link:#starting-service[Iniciar um serviço]. Estas tarefas de encerramento seriam chamadas depois de um `ShutdownEvent` ter sido enviado."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2687
#, fuzzy
msgid "A `StartupEvent` is fired after all `io.quarkus.deployment.builditem.ServiceStartBuildItem` producers have been consumed.  The implication of this is that if an extension has services that application components would expect to have been started when they observe a `StartupEvent`, the build steps that invoke the runtime code to start those services needs to produce a `ServiceStartBuildItem` to ensure that the runtime code is run before the `StartupEvent` is sent. Recall that we saw the production of a `ServiceStartBuildItem` in the previous section, and it is repeated here for clarity:"
msgstr "Um `StartupEvent` é disparado depois de todos os produtores de `io.quarkus.deployment.builditem.ServiceStartBuildItem` terem sido consumidos. A implicação disto é que, se uma extensão tiver serviços que os componentes da aplicação esperam que tenham sido iniciados quando observam um `StartupEvent`, as etapas de construção que invocam o código de tempo de execução para iniciar esses serviços precisam de produzir um `ServiceStartBuildItem` para garantir que o código de tempo de execução é executado antes de o `StartupEvent` ser enviado. Recorde-se que vimos a produção de um `ServiceStartBuildItem` na secção anterior, que é aqui repetida para maior clareza:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2688
#, fuzzy, no-wrap
msgid "Example of Producing a ServiceStartBuildItem"
msgstr "Exemplo de produção de um ServiceStartBuildItem"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2699
#, no-wrap
msgid ""
"// TestProcessor#startRuntimeService\n"
"    @BuildStep\n"
"    @Record(RUNTIME_INIT)\n"
"    ServiceStartBuildItem startRuntimeService(TestRecorder recorder, ShutdownContextBuildItem shutdownContextBuildItem,\n"
"            RuntimeServiceBuildItem serviceBuildItem) throws IOException {\n"
"...\n"
"        return new ServiceStartBuildItem(\"RuntimeXmlConfigService\"); //<1>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2701
#, fuzzy
msgid "Produce a `ServiceStartBuildItem` to indicate that this is a service starting step that needs to run before the `StartupEvent` is sent."
msgstr "Produzir um `ServiceStartBuildItem` para indicar que se trata de uma etapa de arranque do serviço que tem de ser executada antes de o `StartupEvent` ser enviado."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2702
#, fuzzy, no-wrap
msgid "Register Resources for Use in Native Image"
msgstr "Registar recursos para utilização em imagem nativa"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2704
#, fuzzy
msgid "Not all configuration or resources can be consumed at build time. If you have classpath resources that the runtime needs to access, you need to inform the build phase that these resources need to be copied into the native image. This is done by producing one or more `NativeImageResourceBuildItem` or `NativeImageResourceBundleBuildItem` in the case of resource bundles. Examples of this are shown in this sample `registerNativeImageResources` build step:"
msgstr "Nem todas as configurações ou recursos podem ser consumidos no momento da compilação. Se você tiver recursos do classpath que o runtime precisa acessar, é necessário informar à fase de compilação que esses recursos precisam ser copiados para a imagem nativa. Isso é feito produzindo um ou mais `NativeImageResourceBuildItem` ou `NativeImageResourceBundleBuildItem` no caso de pacotes de recursos. Exemplos disso são mostrados neste exemplo de etapa de compilação `registerNativeImageResources`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2705
#, fuzzy, no-wrap
msgid "Registering Resources and ResourceBundles"
msgstr "Registar recursos e ResourceBundles"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2709
#: upstream/_guides/writing-extensions.adoc:2733
#: upstream/_guides/writing-extensions.adoc:2763
#: upstream/_guides/writing-extensions.adoc:2792
#, no-wrap
msgid "public final class MyExtProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2713
#, no-wrap
msgid ""
"    @BuildStep\n"
"    void registerNativeImageResources(BuildProducer<NativeImageResourceBuildItem> resource, BuildProducer<NativeImageResourceBundleBuildItem> resourceBundle) {\n"
"        resource.produce(new NativeImageResourceBuildItem(\"/security/runtime.keys\")); //<1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2716
#, no-wrap
msgid ""
"        resource.produce(new NativeImageResourceBuildItem(\n"
"                \"META-INF/my-descriptor.xml\")); //<2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2720
#, no-wrap
msgid ""
"        resourceBundle.produce(new NativeImageResourceBuildItem(\"jakarta.xml.bind.Messages\")); //<3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2722
#, fuzzy
msgid "Indicate that the /security/runtime.keys classpath resource should be copied into native image."
msgstr "Indicar que o recurso de classpath /security/runtime.keys deve ser copiado para a imagem nativa."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2723
#, fuzzy
msgid "Indicate that the `META-INF/my-descriptor.xml` resource should be copied into native image"
msgstr "Indicar que o recurso `META-INF/my-descriptor.xml` deve ser copiado para a imagem nativa"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2724
#, fuzzy
msgid "Indicate that the \"jakarta.xml.bind.Messages\" resource bundle should be copied into native image."
msgstr "Indique que o pacote de recursos \"jakarta.xml.bind.Messages\" deve ser copiado para a imagem nativa."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2725
#, fuzzy, no-wrap
msgid "Service files"
msgstr "Ficheiros de serviço"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2729
#, fuzzy
msgid "If you are using `META-INF/services` files you need to register the files as resources so that your native image can find them, but you also need to register each listed class for reflection so they can be instantiated or inspected at run-time:"
msgstr "Se estiver a utilizar ficheiros `META-INF/services`, tem de registar os ficheiros como recursos para que a sua imagem nativa os possa encontrar, mas também tem de registar cada classe listada para reflexão, para que possam ser instanciadas ou inspeccionadas em tempo de execução:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2737
#, no-wrap
msgid ""
"    @BuildStep\n"
"    void registerNativeImageResources(BuildProducer<ServiceProviderBuildItem> services) {\n"
"        String service = \"META-INF/services/\" + io.quarkus.SomeService.class.getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2742
#, no-wrap
msgid ""
"        // find out all the implementation classes listed in the service files\n"
"        Set<String> implementations =\n"
"            ServiceUtil.classNamesNamedIn(Thread.currentThread().getContextClassLoader(),\n"
"                                          service);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2750
#, no-wrap
msgid ""
"        // register every listed implementation class so they can be instantiated\n"
"        // in native-image at run-time\n"
"        services.produce(\n"
"            new ServiceProviderBuildItem(io.quarkus.SomeService.class.getName(),\n"
"                                         implementations.toArray(new String[0])));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2756
#, fuzzy
msgid "`ServiceProviderBuildItem` takes a list of service implementation classes as parameters: if you are not reading them from the service file, make sure that they correspond to the service file contents because the service file will still be read and used at run-time. This is not a substitute for writing a service file."
msgstr "`ServiceProviderBuildItem` recebe uma lista de classes de implementação de serviço como parâmetros: se não as estiver a ler do ficheiro de serviço, certifique-se de que correspondem ao conteúdo do ficheiro de serviço, porque o ficheiro de serviço continuará a ser lido e utilizado em tempo de execução. Isto não é um substituto para escrever um ficheiro de serviço."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2759
#, fuzzy
msgid "This only registers the implementation classes for instantiation via reflection (you will not be able to inspect its fields and methods). If you need to do that, you can do it this way:"
msgstr "Isto apenas regista as classes de implementação para instanciação através de reflexão (não será possível inspecionar os seus campos e métodos). Se precisar de fazer isso, pode fazê-lo desta forma:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2768
#, no-wrap
msgid ""
"    @BuildStep\n"
"    void registerNativeImageResources(BuildProducer<NativeImageResourceBuildItem> resource,\n"
"                                     BuildProducer<ReflectiveClassBuildItem> reflectionClasses) {\n"
"        String service = \"META-INF/services/\" + io.quarkus.SomeService.class.getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2771
#, no-wrap
msgid ""
"        // register the service file so it is visible in native-image\n"
"        resource.produce(new NativeImageResourceBuildItem(service));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2781
#, no-wrap
msgid ""
"        // register every listed implementation class so they can be inspected/instantiated\n"
"        // in native-image at run-time\n"
"        Set<String> implementations =\n"
"            ServiceUtil.classNamesNamedIn(Thread.currentThread().getContextClassLoader(),\n"
"                                          service);\n"
"        reflectionClasses.produce(\n"
"            new ReflectiveClassBuildItem(true, true, implementations.toArray(new String[0])));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2785
#, fuzzy
msgid "While this is the easiest way to get your services running natively, it's less efficient than scanning the implementation classes at build time and generating code that registers them at static-init time instead of relying on reflection."
msgstr "Embora esta seja a forma mais fácil de ter os seus serviços a funcionar nativamente, é menos eficiente do que procurar as classes de implementação em tempo de construção e gerar código que as registe em tempo de inicialização estática em vez de depender da reflexão."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2788
#, fuzzy
msgid "You can achieve that by adapting the previous build step to use a static-init recorder instead of registering classes for reflection:"
msgstr "Pode conseguir isso adaptando o passo de construção anterior para utilizar um registador de inicialização estática em vez de registar classes para reflexão:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2798
#, no-wrap
msgid ""
"    @BuildStep\n"
"    @Record(ExecutionTime.STATIC_INIT)\n"
"    void registerNativeImageResources(RecorderContext recorderContext,\n"
"                                     SomeServiceRecorder recorder) {\n"
"        String service = \"META-INF/services/\" + io.quarkus.SomeService.class.getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2807
#, no-wrap
msgid ""
"        // read the implementation classes\n"
"        Collection<Class<? extends io.quarkus.SomeService>> implementationClasses = new LinkedHashSet<>();\n"
"        Set<String> implementations = ServiceUtil.classNamesNamedIn(Thread.currentThread().getContextClassLoader(),\n"
"                                                                    service);\n"
"        for(String implementation : implementations) {\n"
"            implementationClasses.add((Class<? extends io.quarkus.SomeService>)\n"
"                recorderContext.classProxy(implementation));\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2812
#, no-wrap
msgid ""
"        // produce a static-initializer with those classes\n"
"        recorder.configure(implementationClasses);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2815
#, no-wrap
msgid ""
"@Recorder\n"
"public class SomeServiceRecorder {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2820
#, no-wrap
msgid ""
"    public void configure(List<Class<? extends io.quarkus.SomeService>> implementations) {\n"
"        // configure our service statically\n"
"        SomeServiceProvider serviceProvider = SomeServiceProvider.instance();\n"
"        SomeServiceBuilder builder = serviceProvider.getSomeServiceBuilder();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2830
#, no-wrap
msgid ""
"        List<io.quarkus.SomeService> services = new ArrayList<>(implementations.size());\n"
"        // instantiate the service implementations\n"
"        for (Class<? extends io.quarkus.SomeService> implementationClass : implementations) {\n"
"            try {\n"
"                services.add(implementationClass.getConstructor().newInstance());\n"
"            } catch (Exception e) {\n"
"                throw new IllegalArgumentException(\"Unable to instantiate service \" + implementationClass, e);\n"
"            }\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2834
#, no-wrap
msgid ""
"        // build our service\n"
"        builder.withSomeServices(implementations.toArray(new io.quarkus.SomeService[0]));\n"
"        ServiceManager serviceManager = builder.build();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2839
#, no-wrap
msgid ""
"        // register it\n"
"        serviceProvider.registerServiceManager(serviceManager, Thread.currentThread().getContextClassLoader());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2842
#, fuzzy, no-wrap
msgid "Object Substitution"
msgstr "Substituição de objectos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2844
#, fuzzy
msgid "Objects created during the build phase that are passed into the runtime need to have a default constructor in order for them to be created and configured at startup of the runtime from the build time state. If an object does not have a default constructor you will see an error similar to the following during generation of the augmented artifacts:"
msgstr "Os objectos criados durante a fase de construção que são passados para o tempo de execução têm de ter um construtor predefinido para que sejam criados e configurados no arranque do tempo de execução a partir do estado do tempo de construção. Se um objeto não tiver um construtor predefinido, verá um erro semelhante ao seguinte durante a geração dos artefactos aumentados:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2845
#, fuzzy, no-wrap
msgid "DSAPublicKey Serialization Error"
msgstr "Erro de serialização de DSAPublicKey"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2854
#, no-wrap
msgid ""
"\t[error]: Build step io.quarkus.deployment.steps.MainClassBuildStep#build threw an exception: java.lang.RuntimeException: Unable to serialize objects of type class sun.security.provider.DSAPublicKeyImpl to bytecode as it has no default constructor\n"
"\tat io.quarkus.builder.Execution.run(Execution.java:123)\n"
"\tat io.quarkus.builder.BuildExecutionBuilder.execute(BuildExecutionBuilder.java:136)\n"
"\tat io.quarkus.deployment.QuarkusAugmentor.run(QuarkusAugmentor.java:110)\n"
"\tat io.quarkus.runner.RuntimeRunner.run(RuntimeRunner.java:99)\n"
"\t... 36 more\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2857
#, fuzzy
msgid "There is a `io.quarkus.runtime.ObjectSubstitution` interface that can be implemented to tell Quarkus how to handle such classes. An example implementation for the `DSAPublicKey` is shown here:"
msgstr "Existe uma interface `io.quarkus.runtime.ObjectSubstitution` que pode ser implementada para dizer ao Quarkus como lidar com essas classes. Um exemplo de implementação para a interface `DSAPublicKey` é mostrado aqui:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2858
#, fuzzy, no-wrap
msgid "DSAPublicKeyObjectSubstitution Example"
msgstr "Exemplo de DSAPublicKeyObjectSubstitution"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2862
#, no-wrap
msgid "package io.quarkus.extest.runtime.subst;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2869
#, no-wrap
msgid ""
"import java.security.KeyFactory;\n"
"import java.security.NoSuchAlgorithmException;\n"
"import java.security.interfaces.DSAPublicKey;\n"
"import java.security.spec.InvalidKeySpecException;\n"
"import java.security.spec.X509EncodedKeySpec;\n"
"import java.util.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2871
#, no-wrap
msgid "import io.quarkus.runtime.ObjectSubstitution;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2882
#, no-wrap
msgid ""
"public class DSAPublicKeyObjectSubstitution implements ObjectSubstitution<DSAPublicKey, KeyProxy> {\n"
"    private static final Logger log = Logger.getLogger(\"DSAPublicKeyObjectSubstitution\");\n"
"    @Override\n"
"    public KeyProxy serialize(DSAPublicKey obj) { //<1>\n"
"        log.info(\"DSAPublicKeyObjectSubstitution.serialize\");\n"
"        byte[] encoded = obj.getEncoded();\n"
"        KeyProxy proxy = new KeyProxy();\n"
"        proxy.setContent(encoded);\n"
"        return proxy;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2892
#, no-wrap
msgid ""
"    @Override\n"
"    public DSAPublicKey deserialize(KeyProxy obj) { //<2>\n"
"        log.info(\"DSAPublicKeyObjectSubstitution.deserialize\");\n"
"        byte[] encoded = obj.getContent();\n"
"        X509EncodedKeySpec publicKeySpec = new X509EncodedKeySpec(encoded);\n"
"        DSAPublicKey dsaPublicKey = null;\n"
"        try {\n"
"            KeyFactory kf = KeyFactory.getInstance(\"DSA\");\n"
"            dsaPublicKey = (DSAPublicKey) kf.generatePublic(publicKeySpec);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2899
#, no-wrap
msgid ""
"        } catch (NoSuchAlgorithmException | InvalidKeySpecException e) {\n"
"            e.printStackTrace();\n"
"        }\n"
"        return dsaPublicKey;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2901
#, fuzzy
msgid "The serialize method takes the object without a default constructor and creates a `KeyProxy` that contains the information necessary to recreate the `DSAPublicKey`."
msgstr "O método serialize pega no objeto sem um construtor predefinido e cria um `KeyProxy` que contém as informações necessárias para recriar o `DSAPublicKey`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2902
#, fuzzy
msgid "The deserialize method uses the `KeyProxy` to recreate the `DSAPublicKey` from its encoded form using the key factory."
msgstr "O método deserialize utiliza o `KeyProxy` para recriar o `DSAPublicKey` a partir da sua forma codificada, utilizando a fábrica de chaves."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2904
#, fuzzy
msgid "An extension registers this substitution by producing an `ObjectSubstitutionBuildItem` as shown in this `TestProcessor#loadDSAPublicKey` fragment:"
msgstr "Uma extensão regista esta substituição produzindo um `ObjectSubstitutionBuildItem`, como mostra este fragmento de `TestProcessor#loadDSAPublicKey`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2905
#, fuzzy, no-wrap
msgid "Registering an Object Substitution"
msgstr "Registo de uma substituição de objeto"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2918
#, no-wrap
msgid ""
"    @BuildStep\n"
"    @Record(STATIC_INIT)\n"
"    PublicKeyBuildItem loadDSAPublicKey(TestRecorder recorder,\n"
"            BuildProducer<ObjectSubstitutionBuildItem> substitutions) throws IOException, GeneralSecurityException {\n"
"...\n"
"        // Register how to serialize DSAPublicKey\n"
"        ObjectSubstitutionBuildItem.Holder<DSAPublicKey, KeyProxy> holder = new ObjectSubstitutionBuildItem.Holder(\n"
"                DSAPublicKey.class, KeyProxy.class, DSAPublicKeyObjectSubstitution.class);\n"
"        ObjectSubstitutionBuildItem keysub = new ObjectSubstitutionBuildItem(holder);\n"
"        substitutions.produce(keysub);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2922
#, no-wrap
msgid ""
"        log.info(\"loadDSAPublicKey run\");\n"
"        return new PublicKeyBuildItem(publicKey);\n"
"    }\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2925
#, fuzzy, no-wrap
msgid "Replacing Classes in the Native Image"
msgstr "Substituição de classes na imagem nativa"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2928
#, fuzzy
msgid "The Graal SDK supports substitutions of classes in the native image.  An example of how one could replace the `XmlConfig/XmlData` classes with versions that have no JAXB annotation dependencies is shown in these example classes:"
msgstr "O Graal SDK suporta substituições de classes na imagem nativa. Um exemplo de como se poderia substituir as classes `XmlConfig/XmlData` por versões que não têm dependências de anotação JAXB é mostrado nestas classes de exemplo:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2929
#, fuzzy, no-wrap
msgid "Substitution of XmlConfig/XmlData Classes Example"
msgstr "Exemplo de substituição das classes XmlConfig/XmlData"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2937
#, no-wrap
msgid ""
"package io.quarkus.extest.runtime.graal;\n"
"import java.util.Date;\n"
"import com.oracle.svm.core.annotate.Substitute;\n"
"import com.oracle.svm.core.annotate.TargetClass;\n"
"import io.quarkus.extest.runtime.config.XmlData;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2941
#, no-wrap
msgid ""
"@TargetClass(XmlConfig.class)\n"
"@Substitute\n"
"public final class Target_XmlConfig {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2948
#, no-wrap
msgid ""
"    @Substitute\n"
"    private String address;\n"
"    @Substitute\n"
"    private int port;\n"
"    @Substitute\n"
"    private ArrayList<XData> dataList;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2953
#, no-wrap
msgid ""
"    @Substitute\n"
"    public String getAddress() {\n"
"        return address;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2958
#, no-wrap
msgid ""
"    @Substitute\n"
"    public int getPort() {\n"
"        return port;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2963
#, no-wrap
msgid ""
"    @Substitute\n"
"    public ArrayList<XData> getDataList() {\n"
"        return dataList;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2974
#, no-wrap
msgid ""
"    @Substitute\n"
"    @Override\n"
"    public String toString() {\n"
"        return \"Target_XmlConfig{\" +\n"
"                \"address='\" + address + '\\'' +\n"
"                \", port=\" + port +\n"
"                \", dataList=\" + dataList +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2978
#, no-wrap
msgid ""
"@TargetClass(XmlData.class)\n"
"@Substitute\n"
"public final class Target_XmlData {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2985
#, no-wrap
msgid ""
"    @Substitute\n"
"    private String name;\n"
"    @Substitute\n"
"    private String model;\n"
"    @Substitute\n"
"    private Date date;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2990
#, no-wrap
msgid ""
"    @Substitute\n"
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2995
#, no-wrap
msgid ""
"    @Substitute\n"
"    public String getModel() {\n"
"        return model;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:3000
#, no-wrap
msgid ""
"    @Substitute\n"
"    public Date getDate() {\n"
"        return date;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:3011
#, no-wrap
msgid ""
"    @Substitute\n"
"    @Override\n"
"    public String toString() {\n"
"        return \"Target_XmlData{\" +\n"
"                \"name='\" + name + '\\'' +\n"
"                \", model='\" + model + '\\'' +\n"
"                \", date='\" + date + '\\'' +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/writing-extensions.adoc:3014
#, fuzzy, no-wrap
msgid "Ecosystem integration"
msgstr "Integração do ecossistema"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3022
#, fuzzy
msgid "Some extensions may be private, and some may wish to be part of the broader Quarkus ecosystem, and available for community re-use.  Inclusion in the Quarkiverse Hub is a convenient mechanism for handling continuous testing and publication.  The link:https://github.com/quarkiverse/quarkiverse/wiki#getting-an-extension-onboarded[Quarkiverse Hub wiki] has instructions for on-boarding your extension."
msgstr "Algumas extensões podem ser privadas e outras podem querer fazer parte do ecossistema Quarkus mais alargado e estar disponíveis para reutilização pela comunidade. A inclusão no Quarkiverse Hub é um mecanismo conveniente para lidar com testes e publicações contínuas. O  link:https://github.com/quarkiverse/quarkiverse/wiki#getting-an-extension-onboarded[wiki do Quarkiverse H] ub tem instruções para integrar a sua extensão."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3024
#, fuzzy
msgid "Alternatively, continuous testing and publication can be handled manually."
msgstr "Em alternativa, os testes contínuos e a publicação podem ser efectuados manualmente."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:3026
#, fuzzy, no-wrap
msgid "Continuous testing of your extension"
msgstr "Testes contínuos da sua extensão"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3032
#, fuzzy
msgid "In order to make it easy for extension authors to test their extensions daily against the latest snapshot of Quarkus, Quarkus has introduced the notion of Ecosystem CI. The Ecosystem CI link:https://github.com/quarkusio/quarkus-ecosystem-ci/blob/main/README.adoc[README] has all the details on how to set up a GitHub Actions job to take advantage of this capability, while this link:https://www.youtube.com/watch?v=VpbRA1n0hHQ[video] provides an overview of what the process looks like."
msgstr "A fim de tornar mais fácil para os autores de extensões testarem suas extensões diariamente contra o último snapshot do Quarkus, o Quarkus introduziu a noção de Ecossistema CI. O  link:https://github.com/quarkusio/quarkus-ecosystem-ci/blob/main/README.adoc[LEIAME] do Ecossistema CI tem todos os detalhes sobre como configurar um trabalho do GitHub Actions para tirar proveito desse recurso, enquanto este  link:https://www.youtube.com/watch?v=VpbRA1n0hHQ[vídeo] fornece uma visão geral de como é o processo."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:3033
#, fuzzy, no-wrap
msgid "Publish your extension in registry.quarkus.io"
msgstr "Publique a sua extensão em registry.quarkus.io"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3036
#, fuzzy
msgid "Before publishing your extension to the xref:tooling.adoc[Quarkus tooling], make sure that the following requirements are met:"
msgstr "Antes de publicar a sua extensão nas  link:tooling.html[ferramentas Quarkus], certifique-se de que os seguintes requisitos são cumpridos:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3038
#, fuzzy
msgid "The xref:extension-metadata.adoc#quarkus-extension-yaml[quarkus-extension.yaml] file (in the extension's `runtime/` module) has the minimum metadata set:"
msgstr "O ficheiro  link:extension-metadata.html#quarkus-extension-yaml[quarkus-extension.yaml] (no módulo `runtime/` da extensão) tem o conjunto mínimo de metadados:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3039
#, fuzzy
msgid "`name`"
msgstr "`name`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3040
#, fuzzy
msgid "`description` (unless you have it already set in the ``runtime/pom.xml``'s `<description>` element, which is the recommended approach)"
msgstr "`description` (a menos que já esteja definido no elemento `&amp;lt;description&amp;gt;` do sítio `runtime/pom.xml`, que é a abordagem recomendada)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3042
#, fuzzy
msgid "Your extension is published in Maven Central"
msgstr "A sua extensão é publicada no Maven Central"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3044
#, fuzzy
msgid "Your extension repository is configured to use the xref:ecosystem-ci[Ecosystem CI]."
msgstr "O seu repositório de extensões está configurado para utilizar o  link:#ecosystem-ci[CI do ecossistema]."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3046
#, fuzzy
msgid "Then you must create a pull request adding a `your-extension.yaml` file in the `extensions/` directory in the link:https://github.com/quarkusio/quarkus-extension-catalog[Quarkus Extension Catalog]. The YAML must have the following structure:"
msgstr "Em seguida, deve criar um pedido pull adicionando um ficheiro `your-extension.yaml` no diretório `extensions/` no  link:https://github.com/quarkusio/quarkus-extension-catalog[catálogo de extensões do Quarkus]. O YAML deve ter a seguinte estrutura:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:3051
#, no-wrap
msgid ""
"group-id: <YOUR_EXTENSION_RUNTIME_GROUP_ID>\n"
"artifact-id: <YOUR_EXTENSION_RUNTIME_ARTIFACT_ID>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3054
#, fuzzy
msgid "That's all. Once the pull request is merged, a scheduled job will check Maven Central for new versions and update the xref:extension-registry-user.adoc[Quarkus Extension Registry]."
msgstr "Isso é tudo. Assim que o pull request for fundido, um trabalho agendado irá verificar o Maven Central para novas versões e atualizar o  link:extension-registry-user.html[Registo de Extensões Quarkus]."
