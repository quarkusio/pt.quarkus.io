# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/platform.adoc:6
#, fuzzy, no-wrap
msgid "Platform"
msgstr "Plataforma"

#. type: Plain text
#: upstream/_guides/platform.adoc:13
#, fuzzy
msgid "The Quarkus extension ecosystem consists of the Quarkus extensions developed and maintained by the community, including the Quarkus core development team. While the Quarkus ecosystem (sometimes also referred to as the \"Quarkus universe\") includes all the Quarkus extensions ever developed, there is also a concept of a Quarkus platform."
msgstr "O ecossistema de extensões Quarkus consiste nas extensões Quarkus desenvolvidas e mantidas pela comunidade, incluindo a equipa de desenvolvimento principal do Quarkus. Embora o ecossistema Quarkus (por vezes também referido como o \"universo Quarkus\") inclua todas as extensões Quarkus alguma vez desenvolvidas, existe também um conceito de plataforma Quarkus."

#. type: Title ==
#: upstream/_guides/platform.adoc:14
#, fuzzy, no-wrap
msgid "Quarkus Platform"
msgstr "Plataforma Quarkus"

#. type: Plain text
#: upstream/_guides/platform.adoc:18
#, fuzzy
msgid "The fundamental promise of a Quarkus platform is any combination of the Quarkus extensions the platform consists of can be used in the same application without causing any conflict for each other.  Each organization creating their Quarkus platform may establish their own criteria for the extensions to be accepted into the platform and the means to guarantee the compatibility between the accepted extensions."
msgstr "A promessa fundamental de uma plataforma Quarkus é que qualquer combinação das extensões Quarkus em que a plataforma consiste pode ser utilizada na mesma aplicação sem causar qualquer conflito entre si. Cada organização que cria a sua plataforma Quarkus pode estabelecer os seus próprios critérios para as extensões a aceitar na plataforma e os meios para garantir a compatibilidade entre as extensões aceites."

#. type: Title ===
#: upstream/_guides/platform.adoc:19
#, fuzzy, no-wrap
msgid "Quarkus Platform Artifacts"
msgstr "Artefactos da plataforma Quarkus"

#. type: Plain text
#: upstream/_guides/platform.adoc:22
#, fuzzy
msgid "Each Quarkus platform is defined with a few artifacts."
msgstr "Cada plataforma Quarkus é definida com alguns artefactos."

#. type: Title ===
#: upstream/_guides/platform.adoc:23
#, fuzzy, no-wrap
msgid "Quarkus Platform BOM"
msgstr "Lista técnica da plataforma Quarkus"

#. type: Plain text
#: upstream/_guides/platform.adoc:26
#, fuzzy
msgid "Each Quarkus Platform is expected to provide a Maven BOM artifact that"
msgstr "Espera-se que cada plataforma Quarkus forneça um artefacto Maven BOM que"

#. type: Plain text
#: upstream/_guides/platform.adoc:28
#, fuzzy
msgid "imports a chosen version of `io.quarkus:quarkus-bom` (the platform BOM may be flattened at the end, but it has to be based on some version of `io.quarkus:quarkus-bom`)"
msgstr "importa uma versão selecionada de `io.quarkus:quarkus-bom` (a lista técnica da plataforma pode ser aplanada no final, mas tem de se basear numa versão de `io.quarkus:quarkus-bom`)"

#. type: Plain text
#: upstream/_guides/platform.adoc:29
#, fuzzy
msgid "includes all the Quarkus extension artifacts (the runtime and the deployment ones) the platform consists of"
msgstr "inclui todos os artefactos da extensão Quarkus (o tempo de execução e os artefactos de implantação) a plataforma consiste em"

#. type: Plain text
#: upstream/_guides/platform.adoc:30
#, fuzzy
msgid "includes all the necessary third-party artifacts that align the transitive dependency versions of the platform extensions to guarantee compatibility between them"
msgstr "inclui todos os artefactos de terceiros necessários que alinham as versões de dependência transitiva das extensões da plataforma para garantir a compatibilidade entre elas"

#. type: Plain text
#: upstream/_guides/platform.adoc:31
#, fuzzy
msgid "includes the xref:platform-descriptor[platform JSON descriptor] artifact"
msgstr "inclui o artefacto  link:#platform-descriptor[descritor JSON da plataforma]"

#. type: Plain text
#: upstream/_guides/platform.adoc:32
#, fuzzy
msgid "possibly includes the xref:platform-properties[platform configuration properties] artifacts"
msgstr "inclui possivelmente os artefactos  link:#platform-properties[das propriedades de configuração da plataforma]"

#. type: Plain text
#: upstream/_guides/platform.adoc:34
#, fuzzy
msgid "Quarkus applications that want to include extensions from a Quarkus platform will be importing the Quarkus platform BOM."
msgstr "As aplicações Quarkus que pretendam incluir extensões de uma plataforma Quarkus importarão a lista técnica da plataforma Quarkus."

#. type: Title ===
#: upstream/_guides/platform.adoc:36
#, fuzzy, no-wrap
msgid "Quarkus Platform Descriptor"
msgstr "Descritor da plataforma Quarkus"

#. type: Plain text
#: upstream/_guides/platform.adoc:40
#, fuzzy
msgid "Quarkus platform descriptor is a JSON artifact that provides information about the platform and its extensions to the Quarkus tools. E.g. https://code.quarkus.io/ and the Quarkus command line tools consult this descriptor to list, add and remove extensions to/from the project on user's request.  This artifact is also used as a Quarkus platform identifier. When Quarkus tools need to identify the Quarkus platform(s) used in the project, they will analyze the dependency version constraints of the project (the effective list of the managed dependencies from the `dependencyManagement` section in Maven terms) looking for the platform descriptor artifact(s) among them. Given that the platform descriptors are included into the Quarkus platform BOMs, every Quarkus application will inherit the platform descriptor artifact from the imported platform BOM(s) as a dependency version constraint (managed dependency in Maven terms)."
msgstr "O descritor da plataforma Quarkus é um artefacto JSON que fornece informações sobre a plataforma e as suas extensões às ferramentas Quarkus. Por exemplo,  https://code.quarkus.io/  e as ferramentas de linha de comando Quarkus consultam este descritor para listar, adicionar e remover extensões de/para o projeto a pedido do utilizador. Este artefacto é também utilizado como identificador da plataforma Quarkus. Quando as ferramentas Quarkus necessitam de identificar a(s) plataforma(s) Quarkus utilizada(s) no projeto, analisam as restrições de versão das dependências do projeto (a lista efectiva das dependências geridas da secção `dependencyManagement` em termos Maven) procurando o(s) artefacto(s) descritor(es) de plataforma entre elas. Dado que os descritores de plataforma estão incluídos nas listas técnicas da plataforma Quarkus, cada aplicação Quarkus herdará o artefacto descritor de plataforma da(s) lista(s) técnica(s) da plataforma importada(s) como uma restrição de versão de dependência (dependência gerida em termos de Maven)."

#. type: Plain text
#: upstream/_guides/platform.adoc:42
#, fuzzy
msgid "To be able to easily identify Quarkus platform descriptors among the project's dependency constraints, the platform descriptor Maven artifact coordinates should follow the following naming convention:"
msgstr "Para poder identificar facilmente os descritores da plataforma Quarkus entre as restrições de dependência do projeto, as coordenadas do artefacto Maven do descritor da plataforma devem seguir a seguinte convenção de nomenclatura:"

#. type: Plain text
#: upstream/_guides/platform.adoc:44
#, fuzzy
msgid "the `groupId` of the descriptor artifact should match the `groupId` of the corresponding Quarkus Platform BOM;"
msgstr "o `groupId` do artefacto descritor deve corresponder ao `groupId` da lista técnica correspondente da plataforma Quarkus;"

#. type: Plain text
#: upstream/_guides/platform.adoc:45
#, fuzzy
msgid "the `artifactId` of the descriptor artifact should be the `artifactId` of the corresponding Quarkus Platform BOM with the `-quarkus-platform-descriptor` suffix;"
msgstr "o `artifactId` do artefacto descritor deve ser o `artifactId` da lista técnica correspondente da plataforma Quarkus com o sufixo `-quarkus-platform-descriptor`;"

#. type: Plain text
#: upstream/_guides/platform.adoc:46
#, fuzzy
msgid "the `classifier` of the descriptor artifact should match the `version` of the corresponding Quarkus Platform BOM;"
msgstr "o `classifier` do artefacto descritor deve corresponder ao `version` da lista técnica correspondente da plataforma Quarkus;"

#. type: Plain text
#: upstream/_guides/platform.adoc:47
#, fuzzy
msgid "the `type` of the descriptor artifact should be `json`;"
msgstr "o `type` do artefacto descritor deve ser `json`;"

#. type: Plain text
#: upstream/_guides/platform.adoc:48 upstream/_guides/platform.adoc:104
#, fuzzy
msgid "the `version` of the descriptor artifact should match the `version` of the corresponding Quarkus Platform BOM."
msgstr "o `version` do artefacto descritor deve corresponder ao `version` da lista técnica correspondente da plataforma Quarkus."

#. type: Plain text
#: upstream/_guides/platform.adoc:50
#, fuzzy
msgid "As a string it will look like `<platform-bom-groupId>:<platform-bom-artifactId>-quarkus-platform-descriptor:<platform-version>:json:<platform-version>`"
msgstr "Como uma cadeia de caracteres, terá o seguinte aspeto `&amp;lt;platform-bom-groupId&amp;gt;:&amp;lt;platform-bom-artifactId&amp;gt;-quarkus-platform-descriptor:&amp;lt;platform-version&amp;gt;:json:&amp;lt;platform-version&amp;gt;`"

#. type: Plain text
#: upstream/_guides/platform.adoc:53
#, fuzzy
msgid "E.g. the coordinates of the descriptor for the Quarkus BOM `{quarkus-platform-groupid}:quarkus-bom::pom:1.2.3` will be `{quarkus-platform-groupid}:quarkus-bom-quarkus-platform-descriptor:1.2.3:json:1.2.3`.  And for a custom Quarkus platform defined with BOM `org.acme:acme-bom::pom:555` it will be `org.acme:acme-bom-quarkus-platform-descriptor:555:json:555`."
msgstr "Por exemplo, as coordenadas do descritor para a lista técnica Quarkus `{quarkus-platform-groupid}:quarkus-bom::pom:1.2.3` serão `{quarkus-platform-groupid}:quarkus-bom-quarkus-platform-descriptor:1.2.3:json:1.2.3`. E para uma plataforma Quarkus personalizada definida com a lista técnica `org.acme:acme-bom::pom:555` será `org.acme:acme-bom-quarkus-platform-descriptor:555:json:555`."

#. type: Plain text
#: upstream/_guides/platform.adoc:55
#, fuzzy
msgid "The classifier matching the version of the platform may look confusing at first. But this is what turns the descriptor into a true \"fingerprint\" of the platform. In both Maven and Gradle, the effective set of the dependency version constraints (or the managed dependencies) is obtained by merging all the imported BOMs and version constraints specified individually in the current project and also its parent(s). The artifact `classifier` is a part of the dependency ID, which could be expressed as `groupId:artifactId:classifier:type`. Which means that if a project imports a couple of BOMs, e.g. `org.apple:apple-bom::pom:1.0` and `org.orange:orange-bom::pom:1.0`, and each of these two BOMs imports a different version `{quarkus-platform-groupid}:quarkus-bom::pom`, the Quarkus tools will be able to detect this fact and make the user aware of it, since it *might* not be a safe combination. If the descriptor artifact didn't include the classifier containing the version of the platform then the tools wouldn't be able to detect a potentially incompatible mix of different versions of the same platform in the same project."
msgstr "O classificador que corresponde à versão da plataforma pode parecer confuso à primeira vista. Mas é isso que transforma o descritor em uma verdadeira \"impressão digital\" da plataforma. Tanto no Maven como no Gradle, o conjunto efetivo das restrições de versão de dependência (ou as dependências geridas) é obtido através da fusão de todas as listas técnicas importadas e restrições de versão especificadas individualmente no projeto atual e também no(s) seu(s) pai(s). O artefacto `classifier` é uma parte da identificação da dependência, que pode ser expressa como `groupId:artifactId:classifier:type`. O que significa que, se um projeto importar duas listas técnicas, por exemplo, `org.apple:apple-bom::pom:1.0` e `org.orange:orange-bom::pom:1.0`, e cada uma destas duas listas técnicas importar uma versão diferente `{quarkus-platform-groupid}:quarkus-bom::pom`, as ferramentas Quarkus poderão detetar este facto e informar o utilizador, uma vez que *pode* não ser uma combinação segura. Se o artefacto descritor não incluísse o classificador que contém a versão da plataforma, as ferramentas não conseguiriam detetar uma mistura potencialmente incompatível de diferentes versões da mesma plataforma no mesmo projeto."

#. type: Plain text
#: upstream/_guides/platform.adoc:57
#, fuzzy
msgid "The platform descriptor will normally be generated using a Maven plugin, e.g."
msgstr "O descritor da plataforma será normalmente gerado utilizando um plugin Maven, por exemplo"

#. type: delimited block -
#: upstream/_guides/platform.adoc:80
#, no-wrap
msgid ""
"<plugin>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-platform-descriptor-json-plugin</artifactId>\n"
"  <version>${quarkus.version}</version> <1>\n"
"  <executions>\n"
"    <execution>\n"
"      <phase>process-resources</phase>\n"
"      <goals>\n"
"        <goal>generate-extensions-json</goal> <2>\n"
"      </goals>\n"
"    </execution>\n"
"  </executions>\n"
"  <configuration>\n"
"    <bomGroupId>${quarkus.platform.group-id}</bomGroupId> <3>\n"
"    <bomArtifactId>${quarkus.platform.artifact-id}</bomArtifactId> <4>\n"
"    <bomVersion>${quarkus.platform.version}</bomVersion> <5>\n"
"    <overridesFile>${overridesfile}</overridesFile> <6>\n"
"    <resolveDependencyManagement>true</resolveDependencyManagement> <7>\n"
"  </configuration>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/platform.adoc:83
#, fuzzy
msgid "the version of the `quarkus-platform-descriptor-json-plugin`"
msgstr "a versão do `quarkus-platform-descriptor-json-plugin`"

#. type: Plain text
#: upstream/_guides/platform.adoc:84
#, fuzzy
msgid "`generate-extensions-json` is the goal generating the platform descriptor"
msgstr "`generate-extensions-json` é o objetivo que gera o descritor da plataforma"

#. type: Plain text
#: upstream/_guides/platform.adoc:85
#, fuzzy
msgid "the `groupId` of the platform BOM"
msgstr "o endereço `groupId` da lista técnica da plataforma"

#. type: Plain text
#: upstream/_guides/platform.adoc:86
#, fuzzy
msgid "the `artifactId` of the platform BOM"
msgstr "o endereço `artifactId` da lista técnica da plataforma"

#. type: Plain text
#: upstream/_guides/platform.adoc:87
#, fuzzy
msgid "the `version` of the platform BOM"
msgstr "o endereço `version` da lista técnica da plataforma"

#. type: Plain text
#: upstream/_guides/platform.adoc:88
#, fuzzy
msgid "this parameter is optional, it allows to override some metadata from the Quarkus extension descriptors found in every runtime extension artifact from which the platform descriptor is generated"
msgstr "este parâmetro é facultativo e permite substituir alguns metadados dos descritores de extensão Quarkus que se encontram em cada artefacto de extensão de tempo de execução a partir do qual é gerado o descritor de plataforma"

#. type: Plain text
#: upstream/_guides/platform.adoc:89
#, fuzzy
msgid "this parameter is also optional and defaults to false. It has to be set to true in case the platform BOM *is not generated* and *is not flattened*. Which for example is the case for `io.quarkus:quarkus-bom`."
msgstr "este parâmetro também é facultativo e a predefinição é falsa. Tem de ser definido como verdadeiro no caso de a lista técnica da plataforma *não ser* gerada e *não ser nivelada*. O que é o caso, por exemplo, de `io.quarkus:quarkus-bom`."

#. type: Title ===
#: upstream/_guides/platform.adoc:91
#, fuzzy, no-wrap
msgid "Quarkus Platform Properties"
msgstr "Propriedades da plataforma Quarkus"

#. type: Plain text
#: upstream/_guides/platform.adoc:94
#, fuzzy
msgid "A Quarkus platform may provide its own default values for some configuration options."
msgstr "Uma plataforma Quarkus pode fornecer os seus próprios valores predefinidos para algumas opções de configuração."

#. type: Plain text
#: upstream/_guides/platform.adoc:96
#, fuzzy
msgid "Quarkus is using https://github.com/smallrye/smallrye-config[SmallRye Config] for wiring application configuration. A Quarkus platform may be used as another source of configuration in the hierarchy of the configuration sources dominated by the application's `application.properties`."
msgstr "O Quarkus utiliza o  link:https://github.com/smallrye/smallrye-config[SmallRye Config] para a configuração da aplicação de cablagem. Uma plataforma Quarkus pode ser utilizada como outra fonte de configuração na hierarquia das fontes de configuração dominadas pela aplicação `application.properties`."

#. type: Plain text
#: upstream/_guides/platform.adoc:98
#, fuzzy
msgid "To provide platform-specific defaults, the platform needs to include a dependency version constraint in its BOM for a properties artifact whose coordinates follow the following naming convention:"
msgstr "Para fornecer predefinições específicas da plataforma, esta tem de incluir uma restrição de versão de dependência na sua lista técnica para um artefacto de propriedades cujas coordenadas seguem a seguinte convenção de nomenclatura:"

#. type: Plain text
#: upstream/_guides/platform.adoc:100
#, fuzzy
msgid "the `groupId` of the properties artifact should match the `groupId` of the corresponding Quarkus Platform BOM;"
msgstr "o `groupId` do artefacto de propriedades deve corresponder ao `groupId` da lista técnica correspondente da plataforma Quarkus;"

#. type: Plain text
#: upstream/_guides/platform.adoc:101
#, fuzzy
msgid "the `artifactId` of the properties artifact should be the `artifactId` of the corresponding Quarkus Platform BOM with the `-quarkus-platform-properties` suffix;"
msgstr "o `artifactId` do artefacto de propriedades deve ser o `artifactId` da lista técnica correspondente da plataforma Quarkus com o sufixo `-quarkus-platform-properties`;"

#. type: Plain text
#: upstream/_guides/platform.adoc:102
#, fuzzy
msgid "the `classifier` of the descriptor artifact should be left empty/null;"
msgstr "o `classifier` do artefacto descritor deve ser deixado vazio/nulo;"

#. type: Plain text
#: upstream/_guides/platform.adoc:103
#, fuzzy
msgid "the `type` of the descriptor artifact should be `properties`;"
msgstr "o `type` do artefacto descritor deve ser `properties`;"

#. type: Plain text
#: upstream/_guides/platform.adoc:106
#, fuzzy
msgid "The properties artifact itself is expected to be a traditional `properties` file that will be loaded into an instance of `java.util.Properties` class."
msgstr "Espera-se que o artefacto de propriedades em si seja um ficheiro `properties` tradicional que será carregado numa instância da classe `java.util.Properties`."

#. type: Plain text
#: upstream/_guides/platform.adoc:108
#, fuzzy
msgid "At this point, platform properties are only allowed to provide the default values for a restricted set of configuration options. The property names in the platform properties file must be prefixed with the `platform.` suffix."
msgstr "Neste momento, as propriedades da plataforma só podem fornecer os valores padrão para um conjunto restrito de opções de configuração. Os nomes das propriedades no arquivo de propriedades da plataforma devem ser prefixados com o sufixo `platform.`."

#. type: Plain text
#: upstream/_guides/platform.adoc:110
#, fuzzy
msgid "Extension developers that want to make their configuration options platform-specific should set their default values to properties that start with the `platform.` suffix. Here is an example:"
msgstr "Os programadores de extensões que pretendam tornar as suas opções de configuração específicas da plataforma devem definir os seus valores predefinidos para as propriedades que começam com o sufixo `platform.`. Aqui está um exemplo:"

#. type: delimited block -
#: upstream/_guides/platform.adoc:114
#, no-wrap
msgid "package io.quarkus.deployment.pkg;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/platform.adoc:118
#, no-wrap
msgid ""
"@ConfigRoot(phase = ConfigPhase.BUILD_TIME)\n"
"@ConfigMapping(prefix = \"quarkus\")\n"
"public interface NativeConfig {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/platform.adoc:125
#, no-wrap
msgid ""
"    /**\n"
"     * The docker image to use to do the image build\n"
"     */\n"
"    @WithDefault(\"${platform.quarkus.native.builder-image}\")\n"
"    String builderImage();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/platform.adoc:129
#, fuzzy
msgid "In this case the default value for `quarkus.native.builder-image` will be provided by the platform. The user will still be able to set the desired value for `quarkus.native.builder-image` in its `application.properties`, of course. But in case it's not customized by the user, the default value will be coming from the platform properties.  A platform properties file for the example above would contain:"
msgstr "Neste caso, o valor por defeito para `quarkus.native.builder-image` será fornecido pela plataforma. O utilizador poderá ainda definir o valor pretendido para `quarkus.native.builder-image` no seu `application.properties`, como é óbvio. Mas, caso não seja personalizado pelo utilizador, o valor predefinido virá das propriedades da plataforma. Um arquivo de propriedades da plataforma para o exemplo acima conteria:"

#. type: delimited block -
#: upstream/_guides/platform.adoc:133
#, no-wrap
msgid "platform.quarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:{mandrel-flavor}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/platform.adoc:136
#, fuzzy
msgid "There is also a Maven plugin goal that validates the platform properties content and its artifact coordinates and also checks whether the platform properties artifact is present in the platform's BOM. Here is a sample plugin configuration:"
msgstr "Há também um objetivo de plugin Maven que valida o conteúdo das propriedades da plataforma e as suas coordenadas de artefacto e também verifica se o artefacto de propriedades da plataforma está presente na lista técnica da plataforma. Aqui está um exemplo de configuração de plug-in:"

#. type: delimited block -
#: upstream/_guides/platform.adoc:152
#, no-wrap
msgid ""
"<plugin>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-platform-descriptor-json-plugin</artifactId>\n"
"  <version>${quarkus.version}</version>\n"
"  <executions>\n"
"    <execution>\n"
"      <phase>process-resources</phase>\n"
"      <goals>\n"
"        <goal>platform-properties</goal>\n"
"      </goals>\n"
"    </execution>\n"
"  </executions>\n"
"</plugin>\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/platform.adoc:154
#, fuzzy, no-wrap
msgid "Merging Quarkus Platform Properties"
msgstr "Fusão de propriedades da plataforma Quarkus"

#. type: Plain text
#: upstream/_guides/platform.adoc:158
#, fuzzy
msgid "In case an application is importing more than one Quarkus platform and those platforms include their own platform properties artifacts, the content of those platform properties artifacts will be merged to form a single set of properties that will be used for the application build.  The order in which the properties artifacts are merged will correspond to the order in which they appear in the list of dependency version constraints of the application (in the Maven terms that will correspond to the effective list of application's managed dependencies, i.e. the flattened `managedDependencies` POM section)."
msgstr "Caso uma aplicação esteja a importar mais do que uma plataforma Quarkus e essas plataformas incluam os seus próprios artefactos de propriedades de plataforma, o conteúdo desses artefactos de propriedades de plataforma será fundido para formar um único conjunto de propriedades que será utilizado para a construção da aplicação. A ordem pela qual os artefactos de propriedades são fundidos corresponderá à ordem pela qual aparecem na lista de restrições de versão de dependência da aplicação (nos termos do Maven, que corresponderá à lista efectiva de dependências geridas da aplicação, ou seja, a secção achatada do POM `managedDependencies` )."

#. type: Plain text
#: upstream/_guides/platform.adoc:160
#, fuzzy
msgid "The content of the properties artifacts found earlier will dominate over those found later among the application's dependency constraints!"
msgstr "O conteúdo dos artefactos de propriedades encontrados mais cedo dominará os encontrados mais tarde entre as restrições de dependência da aplicação!"

#. type: Plain text
#: upstream/_guides/platform.adoc:162
#, fuzzy
msgid "That means if a platform needs to override a certain property value defined in the platform it is based on, it will need to include its platform properties artifact into the `managedDependencies` section of its BOM before importing the base platform."
msgstr "Isto significa que se uma plataforma precisar de substituir um determinado valor de propriedade definido na plataforma em que se baseia, terá de incluir o seu artefacto de propriedades da plataforma na secção `managedDependencies` da sua lista de materiais antes de importar a plataforma de base."

#. type: Plain text
#: upstream/_guides/platform.adoc:164
#, fuzzy
msgid "For example, let's assume `org.acme:acme-quarkus-bom` platform extends the `io.quarkus:quarkus-bom` platform by importing its BOM. In case, the `org.acme:acme-quarkus-bom` platform were to override certain properties defined in the `io.quarkus:quarkus-bom-quarkus-platform-properties` included in the `io.quarkus:quarkus-bom`, the `org.acme:acme-quarkus-bom` would have to be composed as"
msgstr "Por exemplo, suponhamos que a plataforma `org.acme:acme-quarkus-bom` estende a plataforma `io.quarkus:quarkus-bom` importando a sua lista técnica. No caso de a plataforma `org.acme:acme-quarkus-bom` substituir certas propriedades definidas na `io.quarkus:quarkus-bom-quarkus-platform-properties` incluídas na `io.quarkus:quarkus-bom`, a `org.acme:acme-quarkus-bom` teria de ser composta como"

#. type: delimited block -
#: upstream/_guides/platform.adoc:167 upstream/_guides/platform.adoc:192
#, no-wrap
msgid "  <!-- skipped content -->\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/platform.adoc:171
#, no-wrap
msgid ""
"  <artifactId>acme-quarkus-bom</artifactId>\n"
"  <name>Acme - Quarkus - BOM</name>\n"
"  <packaging>pom</packaging>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/platform.adoc:181
#, no-wrap
msgid ""
"  <dependencyManagement>\n"
"    <dependencies>\n"
"      <!-- Acme Quarkus platform properties -->\n"
"      <dependency>\n"
"        <groupId>org.acme</groupId>\n"
"        <artifactId>acme-quarkus-bom-quarkus-platform-properties</artifactId>\n"
"        <type>properties</type>\n"
"        <version>${project.version}</version>\n"
"      </dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/platform.adoc:190
#, no-wrap
msgid ""
"      <!-- The base Quarkus BOM -->\n"
"      <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-bom</artifactId>\n"
"        <version>${quarkus.version}</version>\n"
"        <type>pom</type>\n"
"        <scope>import</scope>\n"
"      </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/platform.adoc:194
#, fuzzy
msgid "That way, the `org.acme:acme-quarkus-bom` platform properties will appear before those provided by the `io.quarkus:quarkus-bom` properties and so will be dominating at build time."
msgstr "Desta forma, as propriedades da plataforma `org.acme:acme-quarkus-bom` aparecerão antes das fornecidas pelas propriedades `io.quarkus:quarkus-bom` e, por isso, serão dominantes no momento da construção."
