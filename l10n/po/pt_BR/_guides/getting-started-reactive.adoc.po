# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/getting-started-reactive.adoc:6
#, fuzzy, no-wrap
msgid "Getting Started With Reactive"
msgstr "Começar a utilizar o Reactive"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:14
#, fuzzy
msgid "_Reactive_ is a set of principles to build robust, efficient, and concurrent applications and systems.  These principles let you handle more load than traditional approaches while using the resources (CPU and memory) more efficiently while also reacting to failures gracefully."
msgstr "_Reativo_ é um conjunto de princípios para construir aplicações e sistemas robustos, eficientes e concorrentes. Estes princípios permitem-lhe lidar com mais carga do que as abordagens tradicionais, utilizando os recursos (CPU e memória) de forma mais eficiente e reagindo a falhas de forma graciosa."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:18
#, fuzzy
msgid "Quarkus is a _Reactive_ framework.  Since the beginning, _Reactive_ has been an essential tenet of the Quarkus architecture.  It includes many reactive features and offers a broad ecosystem."
msgstr "O Quarkus é uma estrutura _reactiva_. Desde o início, _a reatividade_ tem sido um princípio essencial da arquitetura Quarkus. Inclui muitas funcionalidades reactivas e oferece um vasto ecossistema."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:21
#, fuzzy
msgid "This guide is not an in-depth article about what _Reactive_ is and how Quarkus enables reactive architectures.  If you want to read more about these topics, refer to the xref:quarkus-reactive-architecture.adoc[Reactive Architecture guide], which provides an overview of the Quarkus reactive ecosystem."
msgstr "Este guia não é um artigo aprofundado sobre o que é _Reativo_ e como o Quarkus permite arquitecturas reactivas. Se quiser ler mais sobre esses tópicos, consulte o  link:quarkus-reactive-architecture.html[guia Arquitetura reativa], que fornece uma visão geral do ecossistema reativo do Quarkus."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:25
#, fuzzy
msgid "In this guide, we will get you started with some reactive features of Quarkus.  We are going to implement a simple CRUD application.  Yet, unlike in the xref:hibernate-orm-panache.adoc[Hibernate with Panache guide], it uses the reactive features of Quarkus."
msgstr "Neste guia, vamos dar-lhe a conhecer algumas funcionalidades reactivas do Quarkus. Vamos implementar uma aplicação CRUD simples. No entanto, ao contrário do que acontece no  link:hibernate-orm-panache.html[guia Hibernate com Panache], esta aplicação utiliza as funcionalidades reactivas do Quarkus."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:27
#, fuzzy
msgid "This guide will help you with:"
msgstr "Este guia ajudá-lo-á a:"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:29
#, fuzzy
msgid "Bootstrapping a reactive CRUD application with Quarkus"
msgstr "Criação de uma aplicação CRUD reactiva com o Quarkus"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:30
#, fuzzy
msgid "Using Hibernate Reactive with Panache to interact with a database in a reactive fashion"
msgstr "Utilizar o Hibernate Reactive com o Panache para interagir com uma base de dados de forma reactiva"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:31
#, fuzzy
msgid "Using RESTEasy Reactive to implement HTTP API while enforcing the reactive principle"
msgstr "Utilização do RESTEasy Reactive para implementar a API HTTP, aplicando o princípio reativo"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:32
#, fuzzy
msgid "Packaging and Running the application"
msgstr "Empacotar e executar a aplicação"

#. type: Title ==
#: upstream/_guides/getting-started-reactive.adoc:33
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:40
#, fuzzy
msgid "Verify that Maven is using the Java version you expect.  If you have multiple JDKs installed, make sure Maven is using the expected one.  You can verify which JDK Maven uses by running `mvn --version.`"
msgstr "Verifique se o Maven está a utilizar a versão de Java esperada. Se tiver vários JDKs instalados, certifique-se de que o Maven está a utilizar a versão esperada. É possível verificar qual JDK o Maven usa executando `mvn --version.`"

#. type: Title ==
#: upstream/_guides/getting-started-reactive.adoc:41
#, fuzzy, no-wrap
msgid "Imperative vs. Reactive: a question of threads"
msgstr "Imperativo vs. Reativo: uma questão de fios"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:45
#, fuzzy
msgid "As mentioned above, in this guide, we are going to implement a reactive CRUD application.  But you may wonder what the differences and benefits are in comparison to the traditional and imperative model."
msgstr "Como mencionado acima, neste guia, vamos implementar uma aplicação CRUD reactiva. Mas pode perguntar-se quais são as diferenças e os benefícios em comparação com o modelo tradicional e imperativo."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:48
#, fuzzy
msgid "To better understand the contrast, we need to explain the difference between the reactive and imperative execution models.  It's essential to comprehend that _Reactive_ is not just a different execution model, but that distinction is necessary to understand this guide."
msgstr "Para entender melhor o contraste, precisamos explicar a diferença entre os modelos de execução reativo e imperativo. É essencial compreender que _Reactive_ não é apenas um modelo de execução diferente, mas essa distinção é necessária para compreender este guia."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:55
#, fuzzy
msgid "In the traditional and imperative approach, frameworks assign a thread to handle the request.  So, the whole processing of the request runs on this worker thread.  This model does not scale very well.  Indeed, to handle multiple concurrent requests, you need multiple threads; and so your application concurrency is constrained by the number of threads.  In addition, these threads are blocked as soon as your code interacts with remote services.  So, it leads to inefficient usage of the resources, as you may need more threads, and each thread, as they are mapped to OS threads, has a cost in terms of memory and CPU."
msgstr "Na abordagem tradicional e imperativa, as estruturas atribuem um thread para tratar o pedido. Assim, todo o processamento do pedido é executado nessa thread de trabalho. Este modelo não escala muito bem. De facto, para tratar vários pedidos simultâneos, são necessárias várias threads; assim, a simultaneidade da aplicação é limitada pelo número de threads. Além disso, estas threads são bloqueadas assim que o seu código interage com serviços remotos. Assim, isso leva a uma utilização ineficiente dos recursos, uma vez que pode precisar de mais threads, e cada thread, uma vez que são mapeados para threads do SO, tem um custo em termos de memória e CPU."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/getting-started-reactive.adoc:56
#, fuzzy, no-wrap
msgid "Imperative"
msgstr "Imperativo"

#. type: Target for macro image
#: upstream/_guides/getting-started-reactive.adoc:56
#, no-wrap
msgid "blocking-threads.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:64
#, fuzzy
msgid "On the other side, the reactive model relies on non-blocking I/Os and a different execution model.  Non-blocking I/O provides an efficient way to deal with concurrent I/O.  A minimal amount of threads called I/O threads, can handle many concurrent I/O.  With such a model, request processing is not delegated to a worker thread but uses these I/O threads directly.It saves memory and CPU as there is no need to create worker threads to handle the requests.  It also improves the concurrency as it removes the constraint on the number of threads.  Finally, it also improves response time as it reduces the number of thread switches."
msgstr "Por outro lado, o modelo reativo baseia-se em E/S não bloqueantes e num modelo de execução diferente. As E/S não bloqueantes proporcionam uma forma eficiente de lidar com E/S simultâneas. Uma quantidade mínima de threads, chamadas threads de E/S, pode lidar com muitas E/S simultâneas. Com este modelo, o processamento de pedidos não é delegado a uma thread de trabalho, mas utiliza diretamente estas threads de E/S. Poupa memória e CPU, uma vez que não é necessário criar threads de trabalho para tratar os pedidos. Também melhora a concorrência, pois elimina a restrição do número de threads. Por fim, também melhora o tempo de resposta, pois reduz o número de trocas de threads."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/getting-started-reactive.adoc:65
#, fuzzy, no-wrap
msgid "Reactive"
msgstr "Reativo"

#. type: Target for macro image
#: upstream/_guides/getting-started-reactive.adoc:65
#, no-wrap
msgid "reactive-thread.png"
msgstr ""

#. type: Title ==
#: upstream/_guides/getting-started-reactive.adoc:68
#, fuzzy, no-wrap
msgid "From sequential to continuation style"
msgstr "Do estilo sequencial ao estilo de continuação"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:74
#, fuzzy
msgid "So, with the reactive execution model, the requests are processed using I/O threads.  But that's not all.  An I/O thread can handle multiple concurrent requests.  How? Here is the trick and one of the most significant differences between reactive and imperative."
msgstr "Assim, com o modelo de execução reativo, os pedidos são processados utilizando threads de E/S. Mas isso não é tudo. Uma thread de E/S pode tratar vários pedidos simultâneos. Como? Aqui está o truque e uma das diferenças mais significativas entre reativo e imperativo."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:80
#, fuzzy
msgid "When processing a request requires interacting with a remote service, like an HTTP API or a database, it does not block the execution while waiting for the response.  Instead, it schedules the I/O operation and attaches a continuation, i.e., the request processing remaining code.  This continuation can be passed as a callback (a function invoked with the I/O outcome), or use more advanced constructs such as reactive programming or co-routines.  Regardless of how the continuation is expressed, the essential aspect is the release of the I/O thread and, as a consequence, the fact that this thread can be used to process another request.  When the scheduled I/O completes, the I/O thread executes the continuation, and the processing of the pending request continues."
msgstr "Quando o processamento de um pedido requer a interação com um serviço remoto, como uma API HTTP ou uma base de dados, não bloqueia a execução enquanto aguarda a resposta. Em vez disso, agenda a operação de E/S e anexa uma continuação, ou seja, o código restante do processamento do pedido. Esta continuação pode ser passada como um retorno de chamada (uma função invocada com o resultado de E/S) ou utilizar construções mais avançadas, como a programação reactiva ou as co-rotinas. Independentemente da forma como a continuação é expressa, o aspeto essencial é a libertação da thread de E/S e, consequentemente, o facto de esta thread poder ser utilizada para processar outro pedido. Quando a E/S programada é concluída, a thread de E/S executa a continuação e o processamento do pedido pendente continua."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:83
#, fuzzy
msgid "So, unlike the imperative model, where I/O blocks the execution, reactive switches to a continuation-based design, where the I/O threads are released, and continuation invoked when the I/Os complete.  As a result, the I/O thread can handle multiple concurrent requests, improving the overall concurrency of the application."
msgstr "Assim, ao contrário do modelo imperativo, em que as E/S bloqueiam a execução, o reativo muda para uma conceção baseada na continuação, em que as threads de E/S são libertadas e a continuação é invocada quando as E/S são concluídas. Como resultado, a thread de E/S pode lidar com vários pedidos simultâneos, melhorando a simultaneidade geral da aplicação."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:88
#, fuzzy
msgid "But, there is a catch.  We need a way to write continuation-passing code.  There are many ways of doing this.  In Quarkus, we propose:"
msgstr "Mas há um senão. Precisamos de uma forma de escrever código de passagem de continuação. Há muitas formas de o fazer. No Quarkus, nós propomos:"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:90
#, fuzzy
msgid "Mutiny - an intuitive and event-driven reactive programming library"
msgstr "Mutiny - uma biblioteca de programação reactiva intuitiva e orientada para eventos"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:91
#, fuzzy
msgid "Kotlin co-routines - a way to write asynchronous code in a sequential manner"
msgstr "Rotinas conjuntas Kotlin - uma forma de escrever código assíncrono de forma sequencial"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:94
#, fuzzy
msgid "In this guide, we will use Mutiny.  To know more about Mutiny, check the xref:mutiny-primer.adoc[Mutiny documentation]."
msgstr "Neste guia, utilizaremos o Mutiny. Para saber mais sobre o Mutiny, consulte a  link:mutiny-primer.html[documentação do Mutiny]."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:97
#, fuzzy
msgid "Project Loom is coming to the JDK soon and proposes a virtual thread-based model.  The Quarkus architecture is ready to support Loom as soon as it's become globally available."
msgstr "O projeto Loom está a chegar em breve ao JDK e propõe um modelo virtual baseado em threads. A arquitetura Quarkus está pronta para suportar o Loom assim que estiver disponível a nível mundial."

#. type: Title ==
#: upstream/_guides/getting-started-reactive.adoc:98
#, fuzzy, no-wrap
msgid "Bootstrapping the Reactive Fruits application"
msgstr "Bootstrapping da aplicação Reactive Fruits"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:101
#, fuzzy
msgid "With this in mind, let's see how we can develop a CRUD application with Quarkus, which will use the I/O thread to handle the HTTP requests, interact with a database, process the result, and write the HTTP response; in other words: a reactive CRUD application."
msgstr "Com isto em mente, vamos ver como podemos desenvolver uma aplicação CRUD com o Quarkus, que utilizará a thread de E/S para tratar os pedidos HTTP, interagir com uma base de dados, processar o resultado e escrever a resposta HTTP; por outras palavras: uma aplicação CRUD reactiva."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:103
#, fuzzy
msgid "While we recommend you to follow the step-by-step instructions, you can find the final solution on https://github.com/quarkusio/quarkus-quickstarts/tree/main/hibernate-reactive-panache-quickstart."
msgstr "Embora recomendemos que siga as instruções passo a passo, pode encontrar a solução final em  https://github.com/quarkusio/quarkus-quickstarts/tree/main/hibernate-reactive-panache-quickstart"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:105
#, fuzzy
msgid "First, go to https://code.quarkus.io[code.quarkus.io] and select the following extensions:"
msgstr "Primeiro, vá a  link:https://code.quarkus.io[code.quarkus.io] e seleccione as seguintes extensões:"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:107
#, fuzzy
msgid "RESTEasy Reactive Jackson"
msgstr "RESTEasy Reactive Jackson"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:108
#, fuzzy
msgid "Hibernate Reactive with Panache"
msgstr "Hibernação reactiva com panache"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:109
#, fuzzy
msgid "Reactive PostgreSQL client"
msgstr "Cliente PostgreSQL reativo"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/getting-started-reactive.adoc:110
#, fuzzy, no-wrap
msgid "Extensions"
msgstr "Extensões"

#. type: Target for macro image
#: upstream/_guides/getting-started-reactive.adoc:110
#, no-wrap
msgid "reactive-guide-code.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:114
#, fuzzy
msgid "The last extension is the reactive database driver for PostgreSQL.  Hibernate Reactive uses that driver to interact with the database without blocking the caller thread."
msgstr "A última extensão é o controlador de base de dados reativo para PostgreSQL. O Hibernate Reactive utiliza esse controlador para interagir com a base de dados sem bloquear a thread que o chama."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:116
#, fuzzy
msgid "Once selected, click on \"Generate your application\", download the zip file, unzip it and open the code in your favorite IDE."
msgstr "Uma vez selecionada, clique em \"Generate your application\", descarregue o ficheiro zip, descomprima-o e abra o código no seu IDE favorito."

#. type: Title ==
#: upstream/_guides/getting-started-reactive.adoc:117
#, fuzzy, no-wrap
msgid "Reactive Panache Entity"
msgstr "Entidade Panache Reactiva"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:120
#, fuzzy
msgid "Let's start with the `Fruit` entity.Create the `src/main/java/org/acme/hibernate/orm/panache/Fruit.java` file with the following content:"
msgstr "Vamos começar com a entidade `Fruit`. Criar o ficheiro `src/main/java/org/acme/hibernate/orm/panache/Fruit.java` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:124
#: upstream/_guides/getting-started-reactive.adoc:186
#, no-wrap
msgid "package org.acme.hibernate.orm.panache;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:128
#, no-wrap
msgid ""
"import jakarta.persistence.Cacheable;\n"
"import jakarta.persistence.Column;\n"
"import jakarta.persistence.Entity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:130
#, no-wrap
msgid "import io.quarkus.hibernate.reactive.panache.PanacheEntity;  // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:134
#, no-wrap
msgid ""
"@Entity\n"
"@Cacheable\n"
"public class Fruit extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:137
#, no-wrap
msgid ""
"\t @Column(length = 40, unique = true)\n"
"\t public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:139
#: upstream/_guides/getting-started-reactive.adoc:195
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:141
#, fuzzy
msgid "Make sure you import the reactive variant of `PanacheEntity`."
msgstr "Certifique-se de que importa a variante reactiva de `PanacheEntity`."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:149
#, fuzzy
msgid "This class represents `Fruits`.  It's a straightforward entity with a single field (`name`).  Note that it uses `io.quarkus.hibernate.reactive.panache.PanacheEntity`, the reactive variant of `PanacheEntity`.  So, behind the scenes, Hibernate uses the execution model we described above.  It interacts with the database without blocking the thread.  In addition, this reactive `PanacheEntity` proposes a reactive API.  We will use this API to implement the REST endpoint."
msgstr "Esta classe representa `Fruits`. É uma entidade simples com um único campo ( `name`). Note que utiliza `io.quarkus.hibernate.reactive.panache.PanacheEntity`, a variante reactiva de `PanacheEntity`. Assim, nos bastidores, o Hibernate utiliza o modelo de execução que descrevemos acima. Ele interage com o banco de dados sem bloquear o thread. Além disso, este `PanacheEntity` reativo propõe uma API reactiva. Utilizaremos esta API para implementar o ponto de extremidade REST."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:151
#, fuzzy
msgid "Before going further, open the `src/main/resources/application.properties` file and add:"
msgstr "Antes de prosseguir, abra o ficheiro `src/main/resources/application.properties` e adicione:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:156
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.hibernate-orm.database.generation=drop-and-create\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:159
#, fuzzy
msgid "It instructs the application to use PostgreSQL for the database and to handle the database schema generation."
msgstr "Dá instruções à aplicação para utilizar o PostgreSQL para a base de dados e para tratar da geração do esquema da base de dados."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:161
#, fuzzy
msgid "In the same directory, create an `import.sql` file, which inserts a few fruits, so we don't start with an empty database in dev mode:"
msgstr "No mesmo diretório, crie um ficheiro `import.sql`, que insere algumas frutas, para não começarmos com uma base de dados vazia no modo de desenvolvimento:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:168
#, no-wrap
msgid ""
"INSERT INTO fruit(id, name) VALUES (1, 'Cherry');\n"
"INSERT INTO fruit(id, name) VALUES (2, 'Apple');\n"
"INSERT INTO fruit(id, name) VALUES (3, 'Banana');\n"
"ALTER SEQUENCE fruit_seq RESTART WITH 4;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:172
#, fuzzy
msgid "In a terminal, launch the application in dev mode using: `./mvnw quarkus:dev`.  Quarkus automatically starts a database instance for you and configure the application. Now we only need to implement the HTTP endpoint."
msgstr "Num terminal, inicie a aplicação em modo de desenvolvimento utilizando: `./mvnw quarkus:dev`. O Quarkus inicia automaticamente uma instância de base de dados para si e configura a aplicação. Agora só precisamos de implementar o ponto de extremidade HTTP."

#. type: Title ==
#: upstream/_guides/getting-started-reactive.adoc:174
#, fuzzy, no-wrap
msgid "Reactive Resource"
msgstr "Recurso reativo"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:180
#, fuzzy
msgid "Because the interaction with the database is non-blocking and asynchronous, we need to use asynchronous constructs to implement our HTTP resource.  Quarkus uses Mutiny as its central reactive programming model.  So, it supports returning Mutiny types (`Uni` and `Multi`) from HTTP endpoints.  Also, our Fruit Panache entity exposes methods using these types, so we only need to implement the _glue_."
msgstr "Uma vez que a interação com a base de dados é assíncrona e não bloqueante, temos de utilizar construções assíncronas para implementar o nosso recurso HTTP. O Quarkus utiliza o Mutiny como modelo central de programação reactiva. Por isso, suporta o retorno de tipos Mutiny ( `Uni` e `Multi`) a partir de pontos de extremidade HTTP. Além disso, a nossa entidade Fruit Panache expõe métodos que utilizam estes tipos, pelo que só precisamos de implementar a _cola_."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:182
#, fuzzy
msgid "Create the `src/main/java/org/acme/hibernate/orm/panache/FruitResource.java` file with the following content:"
msgstr "Criar o ficheiro `src/main/java/org/acme/hibernate/orm/panache/FruitResource.java` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:189
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:193
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"@ApplicationScoped\n"
"public class FruitResource {\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:199
#, fuzzy
msgid "Let's start with the `getAll` method. The `getAll` method returns all the fruits stored in the database.  In the `FruitResource`, add the following code:"
msgstr "Vamos começar com o método `getAll`. O método `getAll` devolve todas as frutas armazenadas na base de dados. Em `FruitResource`, adicione o seguinte código:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:206
#, no-wrap
msgid ""
"@GET\n"
"public Uni<List<Fruit>> get() {\n"
"    return Fruit.listAll(Sort.by(\"name\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:209
#, fuzzy
msgid "Open http://localhost:8080/fruits to invoke this method:"
msgstr "Abrir  http://localhost:8080/fruits  para invocar este método:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:213
#, no-wrap
msgid "[{\"id\":2,\"name\":\"Apple\"},{\"id\":3,\"name\":\"Banana\"},{\"id\":1,\"name\":\"Cherry\"},{\"id\":4,\"name\":\"peach\"}]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:217
#, fuzzy
msgid "We get the expected JSON array.  RESTEasy Reactive automatically maps the list into a JSON Array, except if instructed otherwise."
msgstr "Obtemos o array JSON esperado. O RESTEasy Reactive mapeia automaticamente a lista em um array JSON, exceto se houver instruções em contrário."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:224
#, fuzzy
msgid "Look at the return type; it returns a `Uni` of `List<Fruit>`.  `Uni` is an asynchronous type.  It's a bit like a future.  It's a placeholder that will get its value (item) later.  When it receives the item (Mutiny says it _emits_ its item), you can attach some behavior.  That's how we express the continuation: get a uni, and when the uni emits its item, execute the rest of the processing."
msgstr "Observe o tipo de retorno; ele retorna um `Uni` de `List&amp;lt;Fruit&amp;gt;`. `Uni` é um tipo assíncrono. É um pouco como um futuro. É um espaço reservado que receberá seu valor (item) mais tarde. Quando ele recebe o item (Mutiny diz que ele _emite_ seu item), você pode anexar algum comportamento. É assim que expressamos a continuação: obter um uni, e quando o uni emite seu item, executar o resto do processamento."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:234
#, fuzzy
msgid "Reactive developers may wonder why we can't return a stream of fruits directly.  It tends to be a bad idea when dealing with a database.  Relational databases do not handle streaming well.  It’s a problem of protocols not designed for this use case.  So, to stream rows from the database, you need to keep a connection (and sometimes a transaction) open until all the rows are consumed.  If you have slow consumers, you break the golden rule of databases: don’t hold connections for too long.  Indeed, the number of connections is rather low, and having consumers keeping them for too long will dramatically reduce the concurrency of your application.  So, when possible, use a `Uni<List<T>>` and load the content.  If you have a large set of results, implement pagination."
msgstr "Os desenvolvedores reativos podem se perguntar por que não podemos retornar um fluxo de frutas diretamente. Isso tende a ser uma má ideia quando se lida com um banco de dados. Bancos de dados relacionais não lidam bem com streaming. É um problema de protocolos não projetados para este caso de uso. Assim, para transmitir linhas da base de dados, é necessário manter uma ligação (e por vezes uma transação) aberta até que todas as linhas sejam consumidas. Se tivermos consumidores lentos, quebramos a regra de ouro das bases de dados: não manter as ligações durante muito tempo. De facto, o número de ligações é bastante reduzido e o facto de os consumidores as manterem durante demasiado tempo reduzirá drasticamente a concorrência da sua aplicação. Por isso, sempre que possível, utilize um `Uni&amp;lt;List&amp;lt;T&amp;gt;&amp;gt;` e carregue o conteúdo. Se tiver um grande conjunto de resultados, implemente a paginação."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:236
#, fuzzy
msgid "Let's continue our API with `getSingle`:"
msgstr "Vamos continuar a nossa API com `getSingle`:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:244
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/{id}\")\n"
"public Uni<Fruit> getSingle(Long id) {\n"
"    return Fruit.findById(id);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:248
#, fuzzy
msgid "In this case, we use `Fruit.findById` to retrieve the fruit.  It returns a `Uni`, which will complete when the database has retrieved the row."
msgstr "Neste caso, utilizamos `Fruit.findById` para recuperar a fruta. Devolve um `Uni`, que será concluído quando a base de dados tiver recuperado a linha."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:250
#, fuzzy
msgid "The `create` method allows adding a new fruit to the database:"
msgstr "O método `create` permite acrescentar um novo fruto à base de dados:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:257
#, no-wrap
msgid ""
"@POST\n"
"public Uni<RestResponse<Fruit>> create(Fruit fruit) {\n"
"    return Panache.withTransaction(fruit::persist).replaceWith(RestResponse.status(CREATED, fruit));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:263
#, fuzzy
msgid "The code is a bit more involved.  To write to a database, we need a transaction, therefore we use `Panache.withTransaction` to obtain one (asynchronously) and proceed to call the `persist` method.  The `persist` method returns a `Uni` that emits the result of the insertion of the fruit in the database.  Once the insertion completes (which plays the role of the continuation), we create a `201 CREATED` HTTP response."
msgstr "O código é um pouco mais complexo. Para escrever numa base de dados, precisamos de uma transação, pelo que usamos `Panache.withTransaction` para obter uma (de forma assíncrona) e chamamos o método `persist`. O método `persist` devolve um `Uni` que emite o resultado da inserção da fruta na base de dados. Uma vez concluída a inserção (que desempenha o papel de continuação), criamos uma resposta HTTP `201 CREATED`."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:265
#, fuzzy
msgid "If you have https://curl.se/[curl] on your machine, you can try the endpoint using:"
msgstr "Se tiver  link:https://curl.se/[curl] na sua máquina, pode tentar o ponto final utilizando:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:272
#, no-wrap
msgid ""
"> curl --header \"Content-Type: application/json\" \\\n"
"  --request POST \\\n"
"  --data '{\"name\":\"peach\"}' \\\n"
"  http://localhost:8080/fruits\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:275
#, fuzzy
msgid "Following the same ideas, you can implement the other CRUD methods."
msgstr "Seguindo as mesmas ideias, pode implementar os outros métodos CRUD."

#. type: Title ==
#: upstream/_guides/getting-started-reactive.adoc:276
#, fuzzy, no-wrap
msgid "Testing and Running"
msgstr "Teste e execução"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:280
#, fuzzy
msgid "Testing a reactive application is similar to testing a non-reactive one: use the HTTP endpoint and verify the HTTP responses.  The fact that the application is reactive does not change anything."
msgstr "O teste de uma aplicação reactiva é semelhante ao teste de uma aplicação não reactiva: utilizar o ponto de extremidade HTTP e verificar as respostas HTTP. O facto de a aplicação ser reactiva não altera nada."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:282
#, fuzzy
msgid "In https://github.com/quarkusio/quarkus-quickstarts/blob/main/hibernate-reactive-panache-quickstart/src/test/java/org/acme/hibernate/orm/panache/FruitsEndpointTest.java[FruitsEndpointTest.java] you can see how the test for the fruit application can be implemented."
msgstr "Em  link:https://github.com/quarkusio/quarkus-quickstarts/blob/main/hibernate-reactive-panache-quickstart/src/test/java/org/acme/hibernate/orm/panache/FruitsEndpointTest.java[FruitsEndpointTest.java] pode ver como o teste para a aplicação de fruta pode ser implementado."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:284
#, fuzzy
msgid "Packaging and running the application does not change either."
msgstr "O empacotamento e a execução da aplicação também não mudam."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:286
#, fuzzy
msgid "You can use the following command as usual:"
msgstr "Pode utilizar o seguinte comando como habitualmente:"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:290
#, fuzzy
msgid "or to build a native executable:"
msgstr "ou para construir um executável nativo:"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:294
#, fuzzy
msgid "You can also package the application in a container."
msgstr "Também é possível empacotar a aplicação num contentor."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:296
#, fuzzy
msgid "To run the application, don’t forget to start a database and provide the configuration to your application."
msgstr "Para executar a aplicação, não se esqueça de iniciar uma base de dados e de fornecer a configuração à sua aplicação."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:298
#, fuzzy
msgid "For example, you can use Docker to run your database:"
msgstr "Por exemplo, pode utilizar o Docker para executar a sua base de dados:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:305
#, no-wrap
msgid ""
"docker run -it --rm=true \\\n"
"    --name postgres-quarkus -e POSTGRES_USER=quarkus \\\n"
"    -e POSTGRES_PASSWORD=quarkus -e POSTGRES_DB=fruits \\\n"
"    -p 5432:5432 postgres:14.1\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:308
#, fuzzy
msgid "Then, launch the application using:"
msgstr "Em seguida, inicie a aplicação utilizando:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:316
#, no-wrap
msgid ""
"java \\\n"
"   -Dquarkus.datasource.reactive.url=postgresql://localhost/fruits \\\n"
"   -Dquarkus.datasource.username=quarkus \\\n"
"   -Dquarkus.datasource.password=quarkus \\\n"
"   -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:319
#, fuzzy
msgid "Or, if you packaged your application as native executable, use:"
msgstr "Ou, se tiver empacotado a sua aplicação como executável nativo, utilize:"

#. type: delimited block -
#: upstream/_guides/getting-started-reactive.adoc:327
#, no-wrap
msgid ""
"./target/getting-started-with-reactive-runner \\\n"
"  -Dquarkus.datasource.reactive.url=postgresql://localhost/fruits \\\n"
"  -Dquarkus.datasource.username=quarkus \\\n"
"  -Dquarkus.datasource.password=quarkus\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:331
#, fuzzy
msgid "The parameters passed to the application are described in the datasource guide.  There are other ways to configure the application - please check the xref:config-reference.adoc#configuration-sources[configuration guide] to have an overview of the possibilities (such as env variable, .env files and so on)."
msgstr "Os parâmetros transmitidos à aplicação são descritos no guia da fonte de dados. Existem outras formas de configurar a aplicação - consulte o  link:config-reference.html#configuration-sources[guia de configuração] para ter uma visão geral das possibilidades (tais como variáveis env, ficheiros .env, etc.)."

#. type: Title ==
#: upstream/_guides/getting-started-reactive.adoc:332
#, fuzzy, no-wrap
msgid "Going further"
msgstr "Ir mais longe"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:336
#, fuzzy
msgid "This guide is a brief introduction to some reactive features offered by Quarkus.  Quarkus is a reactive framework, and so offers a lot of reactive features."
msgstr "Este guia é uma breve introdução a algumas funcionalidades reactivas oferecidas pelo Quarkus. O Quarkus é uma estrutura reactiva e, por isso, oferece muitas funcionalidades reactivas."

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:338
#, fuzzy
msgid "If you want to continue on this topic check:"
msgstr "Se quiser continuar a falar sobre este tema, consulte:"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:340
#, fuzzy
msgid "xref:quarkus-reactive-architecture.adoc[The Quarkus Reactive Architecture]"
msgstr "link:quarkus-reactive-architecture.html[A Arquitetura Reactiva Quarkus]"

#. type: Plain text
#: upstream/_guides/getting-started-reactive.adoc:341
#, fuzzy
msgid "xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]"
msgstr "link:mutiny-primer.html[Mutiny - uma biblioteca de programação reactiva intuitiva]"
