# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/kafka-streams.adoc:6
#, fuzzy, no-wrap
msgid "Using Apache Kafka Streams"
msgstr "Utilizar o Apache Kafka Streams"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:14
#, fuzzy
msgid "This guide demonstrates how your Quarkus application can utilize the Apache Kafka Streams API to implement stream processing applications based on Apache Kafka."
msgstr "Este guia demonstra como a sua aplicação Quarkus pode utilizar a API Apache Kafka Streams para implementar aplicações de processamento de fluxo baseadas no Apache Kafka."

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:15
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:22
#, fuzzy
msgid "It is recommended, that you have read the link:{quickstarts-tree-url}/kafka-quickstart[Kafka quickstart] before."
msgstr "Recomenda-se a leitura prévia do Guia  link:{quickstarts-tree-url}/kafka-quickstart[rápido do Kafka]."

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:27
#, fuzzy
msgid "The Quarkus extension for Kafka Streams allows for very fast turnaround times during development by supporting the Quarkus Dev Mode (e.g. via `./mvnw compile quarkus:dev`).  After changing the code of your Kafka Streams topology, the application will automatically be reloaded when the next input message arrives."
msgstr "A extensão Quarkus para Kafka Streams permite tempos de resposta muito rápidos durante o desenvolvimento, suportando o Quarkus Dev Mode (por exemplo, através de `./mvnw compile quarkus:dev`). Depois de alterar o código da sua topologia Kafka Streams, a aplicação será automaticamente recarregada quando chegar a próxima mensagem de entrada."

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:30
#, fuzzy
msgid "A recommended development set-up is to have some producer which creates test messages on the processed topic(s) in fixed intervals, e.g. every second and observe the streaming application's output topic(s) using a tool such as `kafkacat`.  Using the dev mode, you'll instantly see messages on the output topic(s) as produced by the latest version of your streaming application when saving."
msgstr "Uma configuração de desenvolvimento recomendada é ter algum produtor que crie mensagens de teste no(s) tópico(s) processado(s) em intervalos fixos, por exemplo, a cada segundo, e observar o(s) tópico(s) de saída da aplicação de fluxo contínuo usando uma ferramenta como `kafkacat`. Usando o modo dev, você verá instantaneamente as mensagens no(s) tópico(s) de saída como produzidas pela versão mais recente da sua aplicação de fluxo contínuo ao salvar."

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:32
#, fuzzy
msgid "For the best development experience, we recommend applying the following configuration settings to your Kafka broker:"
msgstr "Para obter a melhor experiência de desenvolvimento, recomendamos que aplique as seguintes definições de configuração ao seu corretor Kafka:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:36
#, no-wrap
msgid "group.min.session.timeout.ms=250\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:39
#, fuzzy
msgid "Also specify the following settings in your Quarkus `application.properties`:"
msgstr "Especifique também as seguintes definições no seu Quarkus `application.properties`:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:44
#, no-wrap
msgid ""
"kafka-streams.consumer.session.timeout.ms=250\n"
"kafka-streams.consumer.heartbeat.interval.ms=200\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:47
#, fuzzy
msgid "Together, these settings will ensure that the application can very quickly reconnect to the broker after being restarted in dev mode."
msgstr "Em conjunto, estas definições garantirão que a aplicação pode voltar a ligar-se muito rapidamente ao corretor depois de ser reiniciada no modo dev."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/kafka-streams.adoc:49
#: upstream/_guides/kafka-streams.adoc:811
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitetura"

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:54
#, fuzzy
msgid "In this guide, we are going to generate (random) temperature values in one component (named `generator`).  These values are associated to given weather stations and are written in a Kafka topic (`temperature-values`).  Another topic (`weather-stations`) contains just the main data about the weather stations themselves (id and name)."
msgstr "Neste guia, vamos gerar valores de temperatura (aleatórios) num componente (denominado `generator`). Esses valores estão associados a determinadas estações meteorológicas e são escritos num tópico do Kafka ( `temperature-values`). Outro tópico ( `weather-stations`) contém apenas os dados principais sobre as próprias estações meteorológicas (id e nome)."

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:56
#, fuzzy
msgid "A second component (`aggregator`) reads from the two Kafka topics and processes them in a streaming pipeline:"
msgstr "Um segundo componente ( `aggregator`) lê os dois tópicos do Kafka e processa-os num pipeline de fluxo contínuo:"

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:58
#, fuzzy
msgid "the two topics are joined on weather station id"
msgstr "os dois tópicos são unidos na identificação da estação meteorológica"

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:59
#, fuzzy
msgid "per weather station the min, max and average temperature is determined"
msgstr "por estação meteorológica é determinada a temperatura mínima, máxima e média"

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:60
#, fuzzy
msgid "this aggregated data is written out to a third topic (`temperatures-aggregated`)"
msgstr "estes dados agregados são escritos num terceiro tópico ( `temperatures-aggregated`)"

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:64
#, fuzzy
msgid "The data can be examined by inspecting the output topic.  By exposing a Kafka Streams https://kafka.apache.org/22/documentation/streams/developer-guide/interactive-queries.html[interactive query], the latest result for each weather station can alternatively be obtained via a simple REST query."
msgstr "Os dados podem ser examinados através da inspeção do tópico de saída. Ao expor uma  link:https://kafka.apache.org/22/documentation/streams/developer-guide/interactive-queries.html[consulta interactiva] Kafka Streams, o resultado mais recente para cada estação meteorológica pode, em alternativa, ser obtido através de uma simples consulta REST."

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:66
#, fuzzy
msgid "The overall architecture looks like so:"
msgstr "A arquitetura geral é a seguinte:"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/kafka-streams.adoc:67
#, fuzzy, no-wrap
msgid "Architecture,"
msgstr "Arquitetura,"

#. type: Target for macro image
#: upstream/_guides/kafka-streams.adoc:67
#, no-wrap
msgid "kafka-streams-guide-architecture.png"
msgstr ""

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:69
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:73
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas secções seguintes e crie a aplicação passo a passo. No entanto, pode ir diretamente para o exemplo completo."

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:75
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:77
#, fuzzy
msgid "The solution is located in the `kafka-streams-quickstart` link:{quickstarts-tree-url}/kafka-streams-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/kafka-streams-quickstart[diretório] `kafka-streams-quickstart`."

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:78
#, fuzzy, no-wrap
msgid "Creating the Producer Maven Project"
msgstr "Criar o Projeto Maven de Produtor"

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:82
#, fuzzy
msgid "First, we need a new project with the temperature value producer.  Create a new project with the following command:"
msgstr "Em primeiro lugar, precisamos de um novo projeto com o produtor de valores de temperatura. Crie um novo projeto com o seguinte comando:"

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:89
#, fuzzy
msgid "This command generates a Maven project, importing the Reactive Messaging and Kafka connector extensions."
msgstr "Este comando gera um projeto Maven, importando as extensões do Reactive Messaging e do conetor Kafka."

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:92
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `smallrye-reactive-messaging-kafka` extension to your project by running the following command in your project base directory:"
msgstr "Se já tiver o seu projeto Quarkus configurado, pode adicionar a extensão `smallrye-reactive-messaging-kafka` ao seu projeto executando o seguinte comando no diretório de base do seu projeto:"

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:97
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Isto irá adicionar o seguinte ao seu ficheiro de compilação:"

#. type: Block title
#: upstream/_guides/kafka-streams.adoc:99
#: upstream/_guides/kafka-streams.adoc:251
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:105
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/kafka-streams.adoc:108
#: upstream/_guides/kafka-streams.adoc:260
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:111
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-smallrye-reactive-messaging-kafka\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/kafka-streams.adoc:113
#, fuzzy, no-wrap
msgid "The Temperature Value Producer"
msgstr "O Produtor de Valor de Temperatura"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:117
#, fuzzy
msgid "Create the `producer/src/main/java/org/acme/kafka/streams/producer/generator/ValuesGenerator.java` file, with the following content:"
msgstr "Criar o ficheiro `producer/src/main/java/org/acme/kafka/streams/producer/generator/ValuesGenerator.java`, com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:121
#, no-wrap
msgid "package org.acme.kafka.streams.producer.generator;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:130
#, no-wrap
msgid ""
"import java.math.BigDecimal;\n"
"import java.math.RoundingMode;\n"
"import java.time.Duration;\n"
"import java.time.Instant;\n"
"import java.util.Arrays;\n"
"import java.util.Collections;\n"
"import java.util.List;\n"
"import java.util.Random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:132
#, no-wrap
msgid "import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:137
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"import io.smallrye.reactive.messaging.kafka.Record;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:146
#, no-wrap
msgid ""
"/**\n"
" * A bean producing random temperature data every second.\n"
" * The values are written to a Kafka topic (temperature-values).\n"
" * Another topic contains the name of weather stations (weather-stations).\n"
" * The Kafka configuration is specified in the application configuration.\n"
" */\n"
"@ApplicationScoped\n"
"public class ValuesGenerator {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:148
#, no-wrap
msgid "    private static final Logger LOG = Logger.getLogger(ValuesGenerator.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:150
#, no-wrap
msgid "    private Random random = new Random();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:161
#, no-wrap
msgid ""
"    private List<WeatherStation> stations = List.of(\n"
"                        new WeatherStation(1, \"Hamburg\", 13),\n"
"                        new WeatherStation(2, \"Snowdonia\", 5),\n"
"                        new WeatherStation(3, \"Boston\", 11),\n"
"                        new WeatherStation(4, \"Tokio\", 16),\n"
"                        new WeatherStation(5, \"Cusco\", 12),\n"
"                        new WeatherStation(6, \"Svalbard\", -7),\n"
"                        new WeatherStation(7, \"Porthsmouth\", 11),\n"
"                        new WeatherStation(8, \"Oslo\", 7),\n"
"                        new WeatherStation(9, \"Marrakesh\", 20));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:171
#, no-wrap
msgid ""
"    @Outgoing(\"temperature-values\")                                        // <1>\n"
"    public Multi<Record<Integer, String>> generate() {\n"
"        return Multi.createFrom().ticks().every(Duration.ofMillis(500))    // <2>\n"
"                .onOverflow().drop()\n"
"                .map(tick -> {\n"
"                    WeatherStation station = stations.get(random.nextInt(stations.size()));\n"
"                    double temperature = BigDecimal.valueOf(random.nextGaussian() * 15 + station.averageTemperature)\n"
"                            .setScale(1, RoundingMode.HALF_UP)\n"
"                            .doubleValue();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:176
#, no-wrap
msgid ""
"                    LOG.infov(\"station: {0}, temperature: {1}\", station.name, temperature);\n"
"                    return Record.of(station.id, Instant.now() + \";\" + temperature);\n"
"                });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:186
#, no-wrap
msgid ""
"    @Outgoing(\"weather-stations\")                                          // <3>\n"
"    public Multi<Record<Integer, String>> weatherStations() {\n"
"        return Multi.createFrom().items(stations.stream()\n"
"            .map(s -> Record.of(\n"
"                    s.id,\n"
"                    \"{ \\\"id\\\" : \" + s.id +\n"
"                    \", \\\"name\\\" : \\\"\" + s.name + \"\\\" }\"))\n"
"        );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:188
#, no-wrap
msgid "    private static class WeatherStation {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:192
#, no-wrap
msgid ""
"        int id;\n"
"        String name;\n"
"        int averageTemperature;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:200
#, no-wrap
msgid ""
"        public WeatherStation(int id, String name, int averageTemperature) {\n"
"            this.id = id;\n"
"            this.name = name;\n"
"            this.averageTemperature = averageTemperature;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:202
#, fuzzy
msgid "Instruct Reactive Messaging to dispatch the items from the returned `Multi` to `temperature-values`."
msgstr "Instruir o serviço Reactive Messaging para enviar os itens do `Multi` devolvido para `temperature-values`."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:203
#, fuzzy
msgid "The method returns a Mutiny _stream_ (`Multi`) emitting a random temperature value every 0.5 seconds."
msgstr "O método devolve um _fluxo_ Mutiny ( `Multi`) que emite um valor de temperatura aleatório a cada 0,5 segundos."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:204
#, fuzzy
msgid "Instruct Reactive Messaging to dispatch the items from the returned `Multi` (static list of weather stations) to `weather-stations`."
msgstr "Instruir o Reactive Messaging para enviar os itens da `Multi` (lista estática de estações meteorológicas) para `weather-stations`."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:206
#, fuzzy
msgid "The two methods each return a _reactive stream_ whose items are sent to the streams named `temperature-values` and `weather-stations`, respectively."
msgstr "Cada um dos dois métodos devolve um _fluxo reativo_ cujos itens são enviados para os fluxos designados `temperature-values` e `weather-stations`, respetivamente."

#. type: Title ===
#: upstream/_guides/kafka-streams.adoc:207
#, fuzzy, no-wrap
msgid "Topic Configuration"
msgstr "Configuração de tópicos"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:211
#, fuzzy
msgid "The two channels are mapped to Kafka topics using the Quarkus configuration file `application.properties`.  For that, add the following to the file `producer/src/main/resources/application.properties`:"
msgstr "Os dois canais são mapeados para tópicos do Kafka utilizando o ficheiro de configuração do Quarkus `application.properties`. Para tal, adicione o seguinte ao ficheiro `producer/src/main/resources/application.properties`:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:216
#, no-wrap
msgid ""
"# Configure the Kafka broker location\n"
"kafka.bootstrap.servers=localhost:9092\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:220
#, no-wrap
msgid ""
"mp.messaging.outgoing.temperature-values.connector=smallrye-kafka\n"
"mp.messaging.outgoing.temperature-values.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer\n"
"mp.messaging.outgoing.temperature-values.value.serializer=org.apache.kafka.common.serialization.StringSerializer\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:224
#, no-wrap
msgid ""
"mp.messaging.outgoing.weather-stations.connector=smallrye-kafka\n"
"mp.messaging.outgoing.weather-stations.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer\n"
"mp.messaging.outgoing.weather-stations.value.serializer=org.apache.kafka.common.serialization.StringSerializer\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:228
#, fuzzy
msgid "This configures the Kafka bootstrap server, the two topics and the corresponding (de-)serializers.  More details about the different configuration options are available on the https://kafka.apache.org/documentation/#producerconfigs[Producer configuration] and https://kafka.apache.org/documentation/#consumerconfigs[Consumer configuration] section from the Kafka documentation."
msgstr "Isto configura o servidor de arranque do Kafka, os dois tópicos e os (des)serializadores correspondentes. Mais detalhes sobre as diferentes opções de configuração estão disponíveis na secção  link:https://kafka.apache.org/documentation/#producerconfigs[Configuração do produtor] e  link:https://kafka.apache.org/documentation/#consumerconfigs[Configuração do consumidor] da documentação do Kafka."

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:229
#, fuzzy, no-wrap
msgid "Creating the Aggregator Maven Project"
msgstr "Criando o Projeto Maven do Agregador"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:234
#, fuzzy
msgid "With the producer application in place, it's time to implement the actual aggregator application, which will run the Kafka Streams pipeline.  Create another project like so:"
msgstr "Com a aplicação produtora implementada, é hora de implementar a aplicação agregadora real, que executará o pipeline Kafka Streams. Crie outro projeto como este:"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:241
#, fuzzy
msgid "This creates the `aggregator` project with the Quarkus extension for Kafka Streams and with the Jackson support for RESTEasy Reactive."
msgstr "Isto cria o projeto `aggregator` com a extensão Quarkus para Kafka Streams e com o suporte Jackson para RESTEasy Reactive."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:244
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `kafka-streams` extension to your project by running the following command in your project base directory:"
msgstr "Se já tiver o seu projeto Quarkus configurado, pode adicionar a extensão `kafka-streams` ao seu projeto executando o seguinte comando no diretório de base do seu projeto:"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:249
#, fuzzy
msgid "This will add the following to your `pom.xml`:"
msgstr "Isto irá adicionar o seguinte ao seu `pom.xml`:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:257
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kafka-streams</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:263
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-kafka-streams\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/kafka-streams.adoc:265
#, fuzzy, no-wrap
msgid "The Pipeline Implementation"
msgstr "A implementação do pipeline"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:269
#, fuzzy
msgid "Let's begin the implementation of the stream processing application by creating a few value objects for representing temperature measurements, weather stations and for keeping track of aggregated values."
msgstr "Vamos começar a implementação da aplicação de processamento de fluxos criando alguns objectos de valor para representar as medições de temperatura, as estações meteorológicas e para manter o registo dos valores agregados."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:272
#, fuzzy
msgid "First, create the file `aggregator/src/main/java/org/acme/kafka/streams/aggregator/model/WeatherStation.java`, representing a weather station, with the following content:"
msgstr "Primeiro, crie o ficheiro `aggregator/src/main/java/org/acme/kafka/streams/aggregator/model/WeatherStation.java`, que representa uma estação meteorológica, com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:276
#: upstream/_guides/kafka-streams.adoc:294
#: upstream/_guides/kafka-streams.adoc:320
#: upstream/_guides/kafka-streams.adoc:687
#, no-wrap
msgid "package org.acme.kafka.streams.aggregator.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:278
#: upstream/_guides/kafka-streams.adoc:325
#: upstream/_guides/kafka-streams.adoc:689
#, no-wrap
msgid "import io.quarkus.runtime.annotations.RegisterForReflection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:281
#, no-wrap
msgid ""
"@RegisterForReflection // <1>\n"
"public class WeatherStation {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:285
#, no-wrap
msgid ""
"    public int id;\n"
"    public String name;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:287
#, fuzzy
msgid "The `@RegisterForReflection` annotation instructs Quarkus to keep the class and its members during the native compilation. More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr "A anotação `@RegisterForReflection` instrui o Quarkus a manter a classe e seus membros durante a compilação nativa. Mais detalhes sobre a anotação `@RegisterForReflection` podem ser encontrados na página de  link:writing-native-applications-tips.html#registerForReflection[dicas de aplicações nativas]."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:290
#, fuzzy
msgid "Then the file `aggregator/src/main/java/org/acme/kafka/streams/aggregator/model/TemperatureMeasurement.java`, representing temperature measurements for a given station:"
msgstr "Em seguida, o ficheiro `aggregator/src/main/java/org/acme/kafka/streams/aggregator/model/TemperatureMeasurement.java`, que representa as medições de temperatura para uma determinada estação:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:296
#: upstream/_guides/kafka-streams.adoc:363
#, no-wrap
msgid "import java.time.Instant;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:298
#, no-wrap
msgid "public class TemperatureMeasurement {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:303
#, no-wrap
msgid ""
"    public int stationId;\n"
"    public String stationName;\n"
"    public Instant timestamp;\n"
"    public double value;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:312
#, no-wrap
msgid ""
"    public TemperatureMeasurement(int stationId, String stationName, Instant timestamp,\n"
"            double value) {\n"
"        this.stationId = stationId;\n"
"        this.stationName = stationName;\n"
"        this.timestamp = timestamp;\n"
"        this.value = value;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:316
#, fuzzy
msgid "And finally `aggregator/src/main/java/org/acme/kafka/streams/aggregator/model/Aggregation.java`, which will be used to keep track of the aggregated values while the events are processed in the streaming pipeline:"
msgstr "E finalmente `aggregator/src/main/java/org/acme/kafka/streams/aggregator/model/Aggregation.java`, que será utilizado para manter o registo dos valores agregados enquanto os eventos são processados no pipeline de fluxo contínuo:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:323
#, no-wrap
msgid ""
"import java.math.BigDecimal;\n"
"import java.math.RoundingMode;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:328
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class Aggregation {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:336
#, no-wrap
msgid ""
"    public int stationId;\n"
"    public String stationName;\n"
"    public double min = Double.MAX_VALUE;\n"
"    public double max = Double.MIN_VALUE;\n"
"    public int count;\n"
"    public double sum;\n"
"    public double avg;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:340
#, no-wrap
msgid ""
"    public Aggregation updateFrom(TemperatureMeasurement measurement) {\n"
"        stationId = measurement.stationId;\n"
"        stationName = measurement.stationName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:345
#, no-wrap
msgid ""
"        count++;\n"
"        sum += measurement.value;\n"
"        avg = BigDecimal.valueOf(sum / count)\n"
"                .setScale(1, RoundingMode.HALF_UP).doubleValue();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:348
#, no-wrap
msgid ""
"        min = Math.min(min, measurement.value);\n"
"        max = Math.max(max, measurement.value);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:352
#, no-wrap
msgid ""
"        return this;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:357
#, fuzzy
msgid "Next, let's create the actual streaming query implementation itself in the `aggregator/src/main/java/org/acme/kafka/streams/aggregator/streams/TopologyProducer.java` file.  All we need to do for that is to declare a CDI producer method which returns the Kafka Streams `Topology`; the Quarkus extension will take care of configuring, starting and stopping the actual Kafka Streams engine."
msgstr "Em seguida, vamos criar a própria implementação da consulta de fluxo contínuo no ficheiro `aggregator/src/main/java/org/acme/kafka/streams/aggregator/streams/TopologyProducer.java`. Para isso, basta declarar um método produtor CDI que devolve o Kafka Streams `Topology`; a extensão Quarkus encarregar-se-á de configurar, iniciar e parar o motor Kafka Streams."

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:361
#: upstream/_guides/kafka-streams.adoc:603
#: upstream/_guides/kafka-streams.adoc:650
#: upstream/_guides/kafka-streams.adoc:873
#: upstream/_guides/kafka-streams.adoc:927
#, no-wrap
msgid "package org.acme.kafka.streams.aggregator.streams;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:366
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.enterprise.inject.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:379
#, no-wrap
msgid ""
"import org.acme.kafka.streams.aggregator.model.Aggregation;\n"
"import org.acme.kafka.streams.aggregator.model.TemperatureMeasurement;\n"
"import org.acme.kafka.streams.aggregator.model.WeatherStation;\n"
"import org.apache.kafka.common.serialization.Serdes;\n"
"import org.apache.kafka.streams.StreamsBuilder;\n"
"import org.apache.kafka.streams.Topology;\n"
"import org.apache.kafka.streams.kstream.Consumed;\n"
"import org.apache.kafka.streams.kstream.GlobalKTable;\n"
"import org.apache.kafka.streams.kstream.Materialized;\n"
"import org.apache.kafka.streams.kstream.Produced;\n"
"import org.apache.kafka.streams.state.KeyValueBytesStoreSupplier;\n"
"import org.apache.kafka.streams.state.Stores;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:381
#, no-wrap
msgid "import io.quarkus.kafka.client.serialization.ObjectMapperSerde;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:384
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class TopologyProducer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:386
#, no-wrap
msgid "    static final String WEATHER_STATIONS_STORE = \"weather-stations-store\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:390
#, no-wrap
msgid ""
"    private static final String WEATHER_STATIONS_TOPIC = \"weather-stations\";\n"
"    private static final String TEMPERATURE_VALUES_TOPIC = \"temperature-values\";\n"
"    private static final String TEMPERATURES_AGGREGATED_TOPIC = \"temperatures-aggregated\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:394
#, no-wrap
msgid ""
"    @Produces\n"
"    public Topology buildTopology() {\n"
"        StreamsBuilder builder = new StreamsBuilder();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:398
#, no-wrap
msgid ""
"        ObjectMapperSerde<WeatherStation> weatherStationSerde = new ObjectMapperSerde<>(\n"
"                WeatherStation.class);\n"
"        ObjectMapperSerde<Aggregation> aggregationSerde = new ObjectMapperSerde<>(Aggregation.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:401
#, no-wrap
msgid ""
"        KeyValueBytesStoreSupplier storeSupplier = Stores.persistentKeyValueStore(\n"
"                WEATHER_STATIONS_STORE);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:405
#, no-wrap
msgid ""
"        GlobalKTable<Integer, WeatherStation> stations = builder.globalTable( // <1>\n"
"                WEATHER_STATIONS_TOPIC,\n"
"                Consumed.with(Serdes.Integer(), weatherStationSerde));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:432
#, no-wrap
msgid ""
"        builder.stream(                                                       // <2>\n"
"                        TEMPERATURE_VALUES_TOPIC,\n"
"                        Consumed.with(Serdes.Integer(), Serdes.String())\n"
"                )\n"
"                .join(                                                        // <3>\n"
"                        stations,\n"
"                        (stationId, timestampAndValue) -> stationId,\n"
"                        (timestampAndValue, station) -> {\n"
"                            String[] parts = timestampAndValue.split(\";\");\n"
"                            return new TemperatureMeasurement(station.id, station.name,\n"
"                                    Instant.parse(parts[0]), Double.valueOf(parts[1]));\n"
"                        }\n"
"                )\n"
"                .groupByKey()                                                 // <4>\n"
"                .aggregate(                                                   // <5>\n"
"                        Aggregation::new,\n"
"                        (stationId, value, aggregation) -> aggregation.updateFrom(value),\n"
"                        Materialized.<Integer, Aggregation> as(storeSupplier)\n"
"                            .withKeySerde(Serdes.Integer())\n"
"                            .withValueSerde(aggregationSerde)\n"
"                )\n"
"                .toStream()\n"
"                .to(                                                          // <6>\n"
"                        TEMPERATURES_AGGREGATED_TOPIC,\n"
"                        Produced.with(Serdes.Integer(), aggregationSerde)\n"
"                );\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:436
#, no-wrap
msgid ""
"        return builder.build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:438
#, fuzzy
msgid "The `weather-stations` table is read into a `GlobalKTable`, representing the current state of each weather station"
msgstr "A tabela `weather-stations` é lida num ficheiro `GlobalKTable`, que representa o estado atual de cada estação meteorológica"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:439
#, fuzzy
msgid "The `temperature-values` topic is read into a `KStream`; whenever a new message arrives to this topic, the pipeline will be processed for this measurement"
msgstr "O tópico `temperature-values` é lido num `KStream`; sempre que chegar uma nova mensagem a este tópico, o pipeline será processado para esta medição"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:440
#, fuzzy
msgid "The message from the `temperature-values` topic is joined with the corresponding weather station, using the topic's key (weather station id); the join result contains the data from the measurement and associated weather station message"
msgstr "A mensagem do tópico `temperature-values` é associada à estação meteorológica correspondente, utilizando a chave do tópico (id da estação meteorológica); o resultado da associação contém os dados da medição e a mensagem da estação meteorológica associada"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:441
#, fuzzy
msgid "The values are grouped by message key (the weather station id)"
msgstr "Os valores são agrupados por chave de mensagem (o ID da estação meteorológica)"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:442
#, fuzzy
msgid "Within each group, all the measurements of that station are aggregated, by keeping track of minimum and maximum values and calculating the average value of all measurements of that station (see the `Aggregation` type)"
msgstr "Dentro de cada grupo, todas as medições dessa estação são agregadas, registando os valores mínimos e máximos e calculando o valor médio de todas as medições dessa estação (ver o tipo `Aggregation` )"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:443
#, fuzzy
msgid "The results of the pipeline are written out to the `temperatures-aggregated` topic"
msgstr "Os resultados do pipeline são escritos no tópico `temperatures-aggregated`"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:446
#, fuzzy
msgid "The Kafka Streams extension is configured via the Quarkus configuration file `application.properties`.  Create the file `aggregator/src/main/resources/application.properties` with the following contents:"
msgstr "A extensão Kafka Streams é configurada através do ficheiro de configuração do Quarkus `application.properties`. Crie o ficheiro `aggregator/src/main/resources/application.properties` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:452
#, no-wrap
msgid ""
"quarkus.kafka-streams.bootstrap-servers=localhost:9092\n"
"quarkus.kafka-streams.application-server=${hostname}:8080\n"
"quarkus.kafka-streams.topics=weather-stations,temperature-values\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:459
#, no-wrap
msgid ""
"# pass-through options\n"
"kafka-streams.cache.max.bytes.buffering=10240\n"
"kafka-streams.commit.interval.ms=1000\n"
"kafka-streams.metadata.max.age.ms=500\n"
"kafka-streams.auto.offset.reset=earliest\n"
"kafka-streams.metrics.recording.level=DEBUG\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:466
#, fuzzy
msgid "The options with the `quarkus.kafka-streams` prefix can be changed dynamically at application startup, e.g. via environment variables or system properties.  `bootstrap-servers` and `application-server` are mapped to the Kafka Streams properties `bootstrap.servers` and `application.server`, respectively.  `topics` is specific to Quarkus: the application will wait for all the given topics to exist before launching the Kafka Streams engine.  This is to done to gracefully await the creation of topics that don't yet exist at application startup time."
msgstr "As opções com o prefixo `quarkus.kafka-streams` podem ser alteradas dinamicamente no arranque da aplicação, por exemplo, através de variáveis de ambiente ou de propriedades do sistema. `bootstrap-servers` e `application-server` são mapeadas para as propriedades Kafka Streams `bootstrap.servers` e `application.server`, respetivamente. `topics` é específico do Quarkus: a aplicação aguardará que todos os tópicos fornecidos existam antes de lançar o motor Kafka Streams. Isto é feito para aguardar graciosamente a criação de tópicos que ainda não existem no momento do arranque da aplicação."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:468
#, fuzzy
msgid "Alternatively, you can use `kafka.bootstrap.servers` instead of `quarkus.kafka-streams.bootstrap-servers` as you did in the _generator_ project above."
msgstr "Em alternativa, pode utilizar `kafka.bootstrap.servers` em vez de `quarkus.kafka-streams.bootstrap-servers`, como fez no projeto _gerador_ acima."

#. type: delimited block =
#: upstream/_guides/kafka-streams.adoc:472
#, fuzzy
msgid "Once you are ready to promote your application into production, consider changing the above configuration values. While `cache.max.bytes.buffering=10240` will move your records faster through the topology, the default value of `10485760` is more throughput-friendly. Also condider increasing `metadata.max.age.ms` from `500`, which will update cluster metadata quickly, but will generate a lot of redundant requests, to a value closer to the default of `300000`. A `commit.interval.ms` of `1000` is good for exactly-once processing, but might generate excessive load for the default at-least-once processing with the default value of `30000`."
msgstr "Quando estiver pronto para promover a sua aplicação para produção, considere alterar os valores de configuração acima. Embora `cache.max.bytes.buffering=10240` mova os seus registos mais rapidamente através da topologia, o valor predefinido de `10485760` é mais favorável ao rendimento. Considere também aumentar `metadata.max.age.ms` de `500`, que atualizará os metadados do cluster rapidamente, mas gerará muitas solicitações redundantes, para um valor mais próximo do padrão de `300000`. Um `commit.interval.ms` de `1000` é bom para o processamento exatamente uma vez, mas pode gerar carga excessiva para o processamento padrão ao menos uma vez com o valor padrão de `30000`."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:476
#, fuzzy
msgid "All the properties within the `kafka-streams` namespace are passed through as-is to the Kafka Streams engine.  Changing their values requires a rebuild of the application."
msgstr "Todas as propriedades no espaço de nomes `kafka-streams` são transmitidas como estão para o motor de fluxos do Kafka. A alteração dos seus valores requer uma reconstrução da aplicação."

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:477
#, fuzzy, no-wrap
msgid "Building and Running the Applications"
msgstr "Criar e executar as aplicações"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:480
#, fuzzy
msgid "We now can build the `producer` and `aggregator` applications:"
msgstr "Agora podemos criar as aplicações `producer` e `aggregator`:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:485
#, no-wrap
msgid ""
"./mvnw clean package -f producer/pom.xml\n"
"./mvnw clean package -f aggregator/pom.xml\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:490
#, fuzzy
msgid "Instead of running them directly on the host machine using the Quarkus dev mode, we're going to package them into container images and launch them via Docker Compose.  This is done in order to demonstrate scaling the `aggregator` aggregation to multiple nodes later on."
msgstr "Em vez de os executar diretamente na máquina anfitriã utilizando o modo de desenvolvimento Quarkus, vamos empacotá-los em imagens de contentores e lançá-los através do Docker Compose. Isso é feito para demonstrar o escalonamento da agregação `aggregator` para vários nós mais tarde."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:493
#, fuzzy
msgid "The `Dockerfile` created by Quarkus by default needs one adjustment for the `aggregator` application in order to run the Kafka Streams pipeline.  To do so, edit the file `aggregator/src/main/docker/Dockerfile.jvm` and replace the line `FROM fabric8/java-alpine-openjdk8-jre` with `FROM fabric8/java-centos-openjdk8-jdk`."
msgstr "O `Dockerfile` criado pelo Quarkus por defeito necessita de um ajuste para a aplicação `aggregator`, de modo a executar o pipeline Kafka Streams. Para isso, edite o ficheiro `aggregator/src/main/docker/Dockerfile.jvm` e substitua a linha `FROM fabric8/java-alpine-openjdk8-jre` por `FROM fabric8/java-centos-openjdk8-jdk`."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:495
#, fuzzy
msgid "Next create a Docker Compose file (`docker-compose.yaml`) for spinning up the two applications as well as Apache Kafka and ZooKeeper like so:"
msgstr "Em seguida, crie um ficheiro Docker Compose ( `docker-compose.yaml`) para rodar as duas aplicações, bem como o Apache Kafka e o ZooKeeper, da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:499
#, no-wrap
msgid "version: '3.5'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:531
#, no-wrap
msgid ""
"services:\n"
"  zookeeper:\n"
"    image: strimzi/kafka:0.19.0-kafka-2.5.0\n"
"    command: [\n"
"      \"sh\", \"-c\",\n"
"      \"bin/zookeeper-server-start.sh config/zookeeper.properties\"\n"
"    ]\n"
"    ports:\n"
"      - \"2181:2181\"\n"
"    environment:\n"
"      LOG_DIR: /tmp/logs\n"
"    networks:\n"
"      - kafkastreams-network\n"
"  kafka:\n"
"    image: strimzi/kafka:0.19.0-kafka-2.5.0\n"
"    command: [\n"
"      \"sh\", \"-c\",\n"
"      \"bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override num.partitions=$${KAFKA_NUM_PARTITIONS}\"\n"
"    ]\n"
"    depends_on:\n"
"      - zookeeper\n"
"    ports:\n"
"      - \"9092:9092\"\n"
"    environment:\n"
"      LOG_DIR: \"/tmp/logs\"\n"
"      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092\n"
"      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092\n"
"      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n"
"      KAFKA_NUM_PARTITIONS: 3\n"
"    networks:\n"
"      - kafkastreams-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:541
#, no-wrap
msgid ""
"  producer:\n"
"    image: quarkus-quickstarts/kafka-streams-producer:1.0\n"
"    build:\n"
"      context: producer\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      KAFKA_BOOTSTRAP_SERVERS: kafka:9092\n"
"    networks:\n"
"      - kafkastreams-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:551
#, no-wrap
msgid ""
"  aggregator:\n"
"    image: quarkus-quickstarts/kafka-streams-aggregator:1.0\n"
"    build:\n"
"      context: aggregator\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      QUARKUS_KAFKA_STREAMS_BOOTSTRAP_SERVERS: kafka:9092\n"
"    networks:\n"
"      - kafkastreams-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:555
#, no-wrap
msgid ""
"networks:\n"
"  kafkastreams-network:\n"
"    name: ks\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:559
#, fuzzy
msgid "To launch all the containers, building the `producer` and `aggregator` container images, run `docker-compose up --build`."
msgstr "Para lançar todos os contentores, construindo as imagens de contentor `producer` e `aggregator`, execute `docker-compose up --build`."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:561
#, fuzzy
msgid "Instead of `QUARKUS_KAFKA_STREAMS_BOOTSTRAP_SERVERS`, you can use `KAFKA_BOOTSTRAP_SERVERS`."
msgstr "Em vez de `QUARKUS_KAFKA_STREAMS_BOOTSTRAP_SERVERS`, pode utilizar `KAFKA_BOOTSTRAP_SERVERS`."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:563
#, fuzzy
msgid "You should see log statements from the `producer` application about messages being sent to the \"temperature-values\" topic."
msgstr "Deverá ver declarações de registo da aplicação `producer` sobre as mensagens enviadas para o tópico \"temperature-values\"."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:566
#, fuzzy
msgid "Now run an instance of the _debezium/tooling_ image, attaching to the same network all the other containers run in.  This image provides several useful tools such as _kafkacat_ and _httpie_:"
msgstr "Agora execute uma instância da imagem _debezium/tooling_, ligando-a à mesma rede em que todos os outros contentores são executados. Essa imagem fornece várias ferramentas úteis, como o _kafkacat_ e o _httpie_:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:570
#, no-wrap
msgid "docker run --tty --rm -i --network ks debezium/tooling:1.1\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:573
#, fuzzy
msgid "Within the tooling container, run _kafkacat_ to examine the results of the streaming pipeline:"
msgstr "No contêiner de ferramentas, execute _o kafkacat_ para examinar os resultados do pipeline de streaming:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:577
#, no-wrap
msgid "kafkacat -b kafka:9092 -C -o beginning -q -t temperatures-aggregated\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:582
#, no-wrap
msgid ""
"{\"avg\":34.7,\"count\":4,\"max\":49.4,\"min\":16.8,\"stationId\":9,\"stationName\":\"Marrakesh\",\"sum\":138.8}\n"
"{\"avg\":15.7,\"count\":1,\"max\":15.7,\"min\":15.7,\"stationId\":2,\"stationName\":\"Snowdonia\",\"sum\":15.7}\n"
"{\"avg\":12.8,\"count\":7,\"max\":25.5,\"min\":-13.8,\"stationId\":7,\"stationName\":\"Porthsmouth\",\"sum\":89.7}\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:586
#, fuzzy
msgid "You should see new values arrive as the producer continues to emit temperature measurements, each value on the outbound topic showing the minimum, maximum and average temperature values of the represented weather station."
msgstr "Deverá ver novos valores a chegar à medida que o produtor continua a emitir medições de temperatura, cada valor no tópico de saída mostrando os valores de temperatura mínima, máxima e média da estação meteorológica representada."

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:587
#, fuzzy, no-wrap
msgid "Interactive Queries"
msgstr "Consultas interactivas"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:595
#, fuzzy
msgid "Subscribing to the `temperatures-aggregated` topic is a great way to react to any new temperature values.  It's a bit wasteful though if you're just interested in the latest aggregated value for a given weather station.  This is where Kafka Streams interactive queries shine: they let you directly query the underlying state store of the pipeline for the value associated to a given key.  By exposing a simple REST endpoint which queries the state store, the latest aggregation result can be retrieved without having to subscribe to any Kafka topic."
msgstr "Subscrever o tópico `temperatures-aggregated` é uma óptima forma de reagir a quaisquer novos valores de temperatura. No entanto, é um pouco inútil se estiver interessado apenas no valor agregado mais recente de uma determinada estação meteorológica. É aqui que as consultas interativas do Kafka Streams brilham: elas permitem consultar diretamente o armazenamento de estado subjacente do pipeline para obter o valor associado a uma determinada chave. Ao expor um ponto de extremidade REST simples que consulta o armazenamento de estado, o resultado da agregação mais recente pode ser recuperado sem ter de se inscrever em qualquer tópico do Kafka."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:597
#, fuzzy
msgid "Let's begin by creating a new class `InteractiveQueries` in the file `aggregator/src/main/java/org/acme/kafka/streams/aggregator/streams/InteractiveQueries.java`:"
msgstr "Vamos começar por criar uma nova classe `InteractiveQueries` no ficheiro `aggregator/src/main/java/org/acme/kafka/streams/aggregator/streams/InteractiveQueries.java`:"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:599
#, fuzzy
msgid "one more method to the `KafkaStreamsPipeline` class which obtains the current state for a given key:"
msgstr "mais um método para a classe `KafkaStreamsPipeline` que obtém o estado atual para uma determinada chave:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:606
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.inject.Inject;\n"
msgstr ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.inject.Inject;\n"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:613
#, no-wrap
msgid ""
"import org.acme.kafka.streams.aggregator.model.Aggregation;\n"
"import org.acme.kafka.streams.aggregator.model.WeatherStationData;\n"
"import org.apache.kafka.streams.KafkaStreams;\n"
"import org.apache.kafka.streams.errors.InvalidStateStoreException;\n"
"import org.apache.kafka.streams.state.QueryableStoreTypes;\n"
"import org.apache.kafka.streams.state.ReadOnlyKeyValueStore;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:616
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class InteractiveQueries {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:619
#, no-wrap
msgid ""
"    @Inject\n"
"    KafkaStreams streams;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:622
#, no-wrap
msgid ""
"    public GetWeatherStationDataResult getWeatherStationData(int id) {\n"
"        Aggregation result = getWeatherStationStore().get(id);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:630
#, no-wrap
msgid ""
"        if (result != null) {\n"
"            return GetWeatherStationDataResult.found(WeatherStationData.from(result)); // <1>\n"
"        }\n"
"        else {\n"
"            return GetWeatherStationDataResult.notFound();                             // <2>\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:641
#, no-wrap
msgid ""
"    private ReadOnlyKeyValueStore<Integer, Aggregation> getWeatherStationStore() {\n"
"        while (true) {\n"
"            try {\n"
"                return streams.store(TopologyProducer.WEATHER_STATIONS_STORE, QueryableStoreTypes.keyValueStore());\n"
"            } catch (InvalidStateStoreException e) {\n"
"                // ignore, store not ready yet\n"
"            }\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:643
#, fuzzy
msgid "A value for the given station id was found, so that value will be returned"
msgstr "Foi encontrado um valor para o id de estação indicado, pelo que esse valor será devolvido"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:644
#, fuzzy
msgid "No value was found, either because a non-existing station was queried or no measurement exists yet for the given station"
msgstr "Não foi encontrado qualquer valor, quer porque foi consultada uma estação inexistente, quer porque ainda não existe qualquer medição para a estação em causa"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:646
#, fuzzy
msgid "Also create the method's return type in the file `aggregator/src/main/java/org/acme/kafka/streams/aggregator/streams/GetWeatherStationDataResult.java`:"
msgstr "Crie também o tipo de retorno do método no ficheiro `aggregator/src/main/java/org/acme/kafka/streams/aggregator/streams/GetWeatherStationDataResult.java`:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:653
#: upstream/_guides/kafka-streams.adoc:876
#, no-wrap
msgid ""
"import java.util.Optional;\n"
"import java.util.OptionalInt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:655
#: upstream/_guides/kafka-streams.adoc:878
#, no-wrap
msgid "import org.acme.kafka.streams.aggregator.model.WeatherStationData;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:657
#: upstream/_guides/kafka-streams.adoc:880
#, no-wrap
msgid "public class GetWeatherStationDataResult {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:660
#, no-wrap
msgid ""
"    private static GetWeatherStationDataResult NOT_FOUND =\n"
"            new GetWeatherStationDataResult(null);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:662
#, no-wrap
msgid "    private final WeatherStationData result;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:666
#, no-wrap
msgid ""
"    private GetWeatherStationDataResult(WeatherStationData result) {\n"
"        this.result = result;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:670
#, no-wrap
msgid ""
"    public static GetWeatherStationDataResult found(WeatherStationData data) {\n"
"        return new GetWeatherStationDataResult(data);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:674
#: upstream/_guides/kafka-streams.adoc:906
#, no-wrap
msgid ""
"    public static GetWeatherStationDataResult notFound() {\n"
"        return NOT_FOUND;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:679
#, no-wrap
msgid ""
"    public Optional<WeatherStationData> getResult() {\n"
"        return Optional.ofNullable(result);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:683
#, fuzzy
msgid "Also create `aggregator/src/main/java/org/acme/kafka/streams/aggregator/model/WeatherStationData.java`, which represents the actual aggregation result for a weather station:"
msgstr "Crie também `aggregator/src/main/java/org/acme/kafka/streams/aggregator/model/WeatherStationData.java`, que representa o resultado efetivo da agregação para uma estação meteorológica:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:692
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class WeatherStationData {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:699
#, no-wrap
msgid ""
"    public int stationId;\n"
"    public String stationName;\n"
"    public double min = Double.MAX_VALUE;\n"
"    public double max = Double.MIN_VALUE;\n"
"    public int count;\n"
"    public double avg;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:709
#, no-wrap
msgid ""
"    private WeatherStationData(int stationId, String stationName, double min, double max,\n"
"            int count, double avg) {\n"
"        this.stationId = stationId;\n"
"        this.stationName = stationName;\n"
"        this.min = min;\n"
"        this.max = max;\n"
"        this.count = count;\n"
"        this.avg = avg;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:720
#, no-wrap
msgid ""
"    public static WeatherStationData from(Aggregation aggregation) {\n"
"        return new WeatherStationData(\n"
"                aggregation.stationId,\n"
"                aggregation.stationName,\n"
"                aggregation.min,\n"
"                aggregation.max,\n"
"                aggregation.count,\n"
"                aggregation.avg);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:724
#, fuzzy
msgid "We now can add a simple REST endpoint (`aggregator/src/main/java/org/acme/kafka/streams/aggregator/rest/WeatherStationEndpoint.java`), which invokes `getWeatherStationData()` and returns the data to the client:"
msgstr "Agora podemos adicionar um ponto de extremidade REST simples ( `aggregator/src/main/java/org/acme/kafka/streams/aggregator/rest/WeatherStationEndpoint.java`), que invoca `getWeatherStationData()` e devolve os dados ao cliente:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:728
#: upstream/_guides/kafka-streams.adoc:947
#, no-wrap
msgid "package org.acme.kafka.streams.aggregator.rest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:732
#: upstream/_guides/kafka-streams.adoc:951
#, no-wrap
msgid ""
"import java.net.URI;\n"
"import java.net.URISyntaxException;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:740
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.core.MediaType;\n"
"import jakarta.ws.rs.core.Response;\n"
"import jakarta.ws.rs.core.Response.Status;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:743
#, no-wrap
msgid ""
"import org.acme.kafka.streams.aggregator.streams.GetWeatherStationDataResult;\n"
"import org.acme.kafka.streams.aggregator.streams.KafkaStreamsPipeline;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:747
#: upstream/_guides/kafka-streams.adoc:969
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"@Path(\"/weather-stations\")\n"
"public class WeatherStationEndpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:750
#: upstream/_guides/kafka-streams.adoc:972
#, no-wrap
msgid ""
"    @Inject\n"
"    InteractiveQueries interactiveQueries;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:755
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/data/{id}\")\n"
"    public Response getWeatherStationData(int id) {\n"
"        GetWeatherStationDataResult result = interactiveQueries.getWeatherStationData(id);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:765
#, no-wrap
msgid ""
"        if (result.getResult().isPresent()) {  // <1>\n"
"            return Response.ok(result.getResult().get()).build();\n"
"        }\n"
"        else {\n"
"            return Response.status(Status.NOT_FOUND.getStatusCode(),\n"
"                    \"No data found for weather station \" + id).build();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:767
#, fuzzy
msgid "Depending on whether a value was obtained, either return that value or a 404 response"
msgstr "Dependendo do facto de ter sido obtido um valor, devolver esse valor ou uma resposta 404"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:769
#, fuzzy
msgid "With this code in place, it's time to rebuild the application and the `aggregator` service in Docker Compose:"
msgstr "Com esse código no lugar, é hora de reconstruir o aplicativo e o serviço `aggregator` no Docker Compose:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:775
#, no-wrap
msgid ""
"./mvnw clean package -f aggregator/pom.xml\n"
"docker-compose stop aggregator\n"
"docker-compose up --build -d\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:780
#, fuzzy
msgid "This will rebuild the `aggregator` container and restart its service.  Once that's done, you can invoke the service's REST API to obtain the temperature data for one of the existing stations.  To do so, you can use `httpie` in the tooling container launched before:"
msgstr "Isto irá reconstruir o contentor `aggregator` e reiniciar o seu serviço. Uma vez feito isso, você pode invocar a API REST do serviço para obter os dados de temperatura de uma das estações existentes. Para o fazer, pode utilizar `httpie` no contentor de ferramentas lançado anteriormente:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:784
#, no-wrap
msgid "http aggregator:8080/weather-stations/data/1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:790
#, no-wrap
msgid ""
"HTTP/1.1 200 OK\n"
"Connection: keep-alive\n"
"Content-Length: 85\n"
"Content-Type: application/json\n"
"Date: Tue, 18 Jun 2019 19:29:16 GMT\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:799
#, no-wrap
msgid ""
"{\n"
"    \"avg\": 12.9,\n"
"    \"count\": 146,\n"
"    \"max\": 41.0,\n"
"    \"min\": -25.6,\n"
"    \"stationId\": 1,\n"
"    \"stationName\": \"Hamburg\"\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:801
#, fuzzy, no-wrap
msgid "Scaling Out"
msgstr "Escalonamento"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:808
#, fuzzy
msgid "A very interesting trait of Kafka Streams applications is that they can be scaled out, i.e. the load and state can be distributed amongst multiple application instances running the same pipeline.  Each node will then contain a subset of the aggregation results, but Kafka Streams provides you with https://kafka.apache.org/22/documentation/streams/developer-guide/interactive-queries.html#querying-remote-state-stores-for-the-entire-app[an API] to obtain the information which node is hosting a given key.  The application can then either fetch the data directly from the other instance, or simply point the client to the location of that other node."
msgstr "Uma caraterística muito interessante das aplicações Kafka Streams é o facto de poderem ser escaladas, ou seja, a carga e o estado podem ser distribuídos por várias instâncias de aplicação que executam o mesmo pipeline. Cada nó conterá então um subconjunto dos resultados da agregação, mas o Kafka Streams fornece  link:https://kafka.apache.org/22/documentation/streams/developer-guide/interactive-queries.html#querying-remote-state-stores-for-the-entire-app[uma API] para obter a informação de que nó está a alojar uma determinada chave. A aplicação pode então ir buscar os dados diretamente à outra instância, ou simplesmente apontar o cliente para a localização desse outro nó."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:810
#, fuzzy
msgid "Launching multiple instances of the `aggregator` application will make look the overall architecture like so:"
msgstr "O lançamento de várias instâncias da aplicação `aggregator` fará com que a arquitetura geral seja a seguinte:"

#. type: Target for macro image
#: upstream/_guides/kafka-streams.adoc:811
#, no-wrap
msgid "kafka-streams-guide-architecture-distributed.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:814
#, fuzzy
msgid "The `InteractiveQueries` class must be adjusted slightly for this distributed architecture:"
msgstr "A classe `InteractiveQueries` deve ser ligeiramente ajustada para esta arquitetura distribuída:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:823
#, no-wrap
msgid ""
"public GetWeatherStationDataResult getWeatherStationData(int id) {\n"
"    StreamsMetadata metadata = streams.metadataForKey(                  // <1>\n"
"            TopologyProducer.WEATHER_STATIONS_STORE,\n"
"            id,\n"
"            Serdes.Integer().serializer()\n"
"    );\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:831
#, no-wrap
msgid ""
"    if (metadata == null || metadata == StreamsMetadata.NOT_AVAILABLE) {\n"
"        LOG.warn(\"Found no metadata for key {}\", id);\n"
"        return GetWeatherStationDataResult.notFound();\n"
"    }\n"
"    else if (metadata.host().equals(host)) {                            // <2>\n"
"        LOG.info(\"Found data for key {} locally\", id);\n"
"        Aggregation result = getWeatherStationStore().get(id);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:849
#, no-wrap
msgid ""
"        if (result != null) {\n"
"            return GetWeatherStationDataResult.found(WeatherStationData.from(result));\n"
"        }\n"
"        else {\n"
"            return GetWeatherStationDataResult.notFound();\n"
"        }\n"
"    }\n"
"    else {                                                              // <3>\n"
"        LOG.info(\n"
"            \"Found data for key {} on remote host {}:{}\",\n"
"            id,\n"
"            metadata.host(),\n"
"            metadata.port()\n"
"        );\n"
"        return GetWeatherStationDataResult.foundRemotely(metadata.host(), metadata.port());\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:862
#, no-wrap
msgid ""
"public List<PipelineMetadata> getMetaData() {                           // <4>\n"
"    return streams.allMetadataForStore(TopologyProducer.WEATHER_STATIONS_STORE)\n"
"            .stream()\n"
"            .map(m -> new PipelineMetadata(\n"
"                    m.hostInfo().host() + \":\" + m.hostInfo().port(),\n"
"                    m.topicPartitions()\n"
"                        .stream()\n"
"                        .map(TopicPartition::toString)\n"
"                        .collect(Collectors.toSet()))\n"
"            )\n"
"            .collect(Collectors.toList());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:864
#, fuzzy
msgid "The streams metadata for the given weather station id is obtained"
msgstr "São obtidos os metadados dos fluxos para a identificação da estação meteorológica indicada"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:865
#, fuzzy
msgid "The given key (weather station id) is maintained by the local application node, i.e. it can answer the query itself"
msgstr "A chave fornecida (id da estação meteorológica) é mantida pelo nó de aplicação local, ou seja, ele próprio pode responder à consulta"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:866
#, fuzzy
msgid "The given key is maintained by another application node; in this case the information about that node (host and port) will be returned"
msgstr "A chave dada é mantida por outro nó de aplicação; neste caso, serão devolvidas as informações sobre esse nó (anfitrião e porta)"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:867
#, fuzzy
msgid "The `getMetaData()` method is added to provide callers with a list of all the nodes in the application cluster."
msgstr "O método `getMetaData()` é adicionado para fornecer aos chamadores uma lista de todos os nós do cluster de aplicações."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:869
#, fuzzy
msgid "The `GetWeatherStationDataResult` type must be adjusted accordingly:"
msgstr "O tipo de `GetWeatherStationDataResult` deve ser ajustado em conformidade:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:883
#, no-wrap
msgid ""
"    private static GetWeatherStationDataResult NOT_FOUND =\n"
"            new GetWeatherStationDataResult(null, null, null);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:887
#, no-wrap
msgid ""
"    private final WeatherStationData result;\n"
"    private final String host;\n"
"    private final Integer port;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:894
#, no-wrap
msgid ""
"    private GetWeatherStationDataResult(WeatherStationData result, String host,\n"
"            Integer port) {\n"
"        this.result = result;\n"
"        this.host = host;\n"
"        this.port = port;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:898
#, no-wrap
msgid ""
"    public static GetWeatherStationDataResult found(WeatherStationData data) {\n"
"        return new GetWeatherStationDataResult(data, null, null);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:902
#, no-wrap
msgid ""
"    public static GetWeatherStationDataResult foundRemotely(String host, int port) {\n"
"        return new GetWeatherStationDataResult(null, host, port);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:910
#, no-wrap
msgid ""
"    public Optional<WeatherStationData> getResult() {\n"
"        return Optional.ofNullable(result);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:914
#, no-wrap
msgid ""
"    public Optional<String> getHost() {\n"
"        return Optional.ofNullable(host);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:919
#, no-wrap
msgid ""
"    public OptionalInt getPort() {\n"
"        return port != null ? OptionalInt.of(port) : OptionalInt.empty();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:923
#, fuzzy
msgid "Also, the return type for `getMetaData()` must be defined (`aggregator/src/main/java/org/acme/kafka/streams/aggregator/streams/PipelineMetadata.java`):"
msgstr "Além disso, o tipo de retorno para `getMetaData()` deve ser definido ( `aggregator/src/main/java/org/acme/kafka/streams/aggregator/streams/PipelineMetadata.java`):"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:929
#, no-wrap
msgid "import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:931
#, no-wrap
msgid "public class PipelineMetadata {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:934
#, no-wrap
msgid ""
"    public String host;\n"
"    public Set<String> partitions;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:940
#, no-wrap
msgid ""
"    public PipelineMetadata(String host, Set<String> partitions) {\n"
"        this.host = host;\n"
"        this.partitions = partitions;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:943
#, fuzzy
msgid "Lastly, the REST endpoint class must be updated:"
msgstr "Por último, a classe do ponto de extremidade REST deve ser actualizada:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:961
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.Consumes;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
"import jakarta.ws.rs.core.Response;\n"
"import jakarta.ws.rs.core.Response.Status;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:965
#, no-wrap
msgid ""
"import org.acme.kafka.streams.aggregator.streams.GetWeatherStationDataResult;\n"
"import org.acme.kafka.streams.aggregator.streams.KafkaStreamsPipeline;\n"
"import org.acme.kafka.streams.aggregator.streams.PipelineMetadata;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:979
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/data/{id}\")\n"
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public Response getWeatherStationData(int id) {\n"
"        GetWeatherStationDataResult result = interactiveQueries.getWeatherStationData(id);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:993
#, no-wrap
msgid ""
"        if (result.getResult().isPresent()) {                     // <1>\n"
"            return Response.ok(result.getResult().get()).build();\n"
"        }\n"
"        else if (result.getHost().isPresent()) {                  // <2>\n"
"            URI otherUri = getOtherUri(result.getHost().get(), result.getPort().getAsInt(),\n"
"                    id);\n"
"            return Response.seeOther(otherUri).build();\n"
"        }\n"
"        else {                                                    // <3>\n"
"            return Response.status(Status.NOT_FOUND.getStatusCode(),\n"
"                    \"No data found for weather station \" + id).build();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1000
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/meta-data\")\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public List<PipelineMetadata> getMetaData() {                 // <4>\n"
"        return interactiveQueries.getMetaData();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1010
#, no-wrap
msgid ""
"    private URI getOtherUri(String host, int port, int id) {\n"
"        try {\n"
"            return new URI(\"http://\" + host + \":\" + port + \"/weather-stations/data/\" + id);\n"
"        }\n"
"        catch (URISyntaxException e) {\n"
"            throw new RuntimeException(e);\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1012
#, fuzzy
msgid "The data was found locally, so return it"
msgstr "Os dados foram encontrados localmente, por isso devolve-os"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1013
#, fuzzy
msgid "The data is maintained by another node, so reply with a redirect (HTTP status code 303) if the data for the given key is stored on one of the other nodes."
msgstr "Os dados são mantidos por outro nó, por isso responde com um redireccionamento (código de estado HTTP 303) se os dados para a chave dada estiverem armazenados num dos outros nós."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1014
#, fuzzy
msgid "No data was found for the given weather station id"
msgstr "Não foram encontrados dados para a identificação da estação meteorológica em causa"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1015
#, fuzzy
msgid "Exposes information about all the hosts forming the application cluster"
msgstr "Expõe informações sobre todos os anfitriões que formam o cluster de aplicações"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1018
#, fuzzy
msgid "Now stop the `aggregator` service again and rebuild it.  Then let's spin up three instances of it:"
msgstr "Agora pare o serviço `aggregator` novamente e reconstrua-o. Em seguida, vamos ativar três instâncias do mesmo:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1024
#, no-wrap
msgid ""
"./mvnw clean package -f aggregator/pom.xml\n"
"docker-compose stop aggregator\n"
"docker-compose up --build -d --scale aggregator=3\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1029
#, fuzzy
msgid "When invoking the REST API on any of the three instances, it might either be that the aggregation for the requested weather station id is stored locally on the node receiving the query, or it could be stored on one of the other two nodes."
msgstr "Ao invocar a API REST em qualquer uma das três instâncias, pode acontecer que a agregação para o ID da estação meteorológica solicitada seja armazenada localmente no nó que recebe a consulta, ou pode ser armazenada num dos outros dois nós."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1033
#, fuzzy
msgid "As the load balancer of Docker Compose will distribute requests to the `aggregator` service in a round-robin fashion, we'll invoke the actual nodes directly.  The application exposes information about all the host names via REST:"
msgstr "Como o balanceador de carga do Docker Compose distribuirá solicitações para o serviço `aggregator` de forma round-robin, invocaremos os nós reais diretamente. O aplicativo expõe informações sobre todos os nomes de host via REST:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1037
#, no-wrap
msgid "http aggregator:8080/weather-stations/meta-data\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1043
#, no-wrap
msgid ""
"HTTP/1.1 200 OK\n"
"Connection: keep-alive\n"
"Content-Length: 202\n"
"Content-Type: application/json\n"
"Date: Tue, 18 Jun 2019 20:00:23 GMT\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1064
#, no-wrap
msgid ""
"[\n"
"    {\n"
"        \"host\": \"2af13fe516a9:8080\",\n"
"        \"partitions\": [\n"
"            \"temperature-values-2\"\n"
"        ]\n"
"    },\n"
"    {\n"
"        \"host\": \"32cc8309611b:8080\",\n"
"        \"partitions\": [\n"
"            \"temperature-values-1\"\n"
"        ]\n"
"    },\n"
"    {\n"
"        \"host\": \"1eb39af8d587:8080\",\n"
"        \"partitions\": [\n"
"            \"temperature-values-0\"\n"
"        ]\n"
"    }\n"
"]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1068
#, fuzzy
msgid "Retrieve the data from one of the three hosts shown in the response (your actual host names will differ):"
msgstr "Recupere os dados de um dos três anfitriões apresentados na resposta (os nomes reais dos anfitriões serão diferentes):"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1072
#, no-wrap
msgid "http 2af13fe516a9:8080/weather-stations/data/1\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1075
#, fuzzy
msgid "If that node holds the data for key \"1\", you'll get a response like this:"
msgstr "Se esse nó tiver os dados da chave \"1\", obterá uma resposta como esta:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1083
#, no-wrap
msgid ""
"HTTP/1.1 200 OK\n"
"Connection: keep-alive\n"
"Content-Length: 74\n"
"Content-Type: application/json\n"
"Date: Tue, 11 Jun 2019 19:16:31 GMT\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1092
#, no-wrap
msgid ""
"{\n"
"  \"avg\": 11.9,\n"
"  \"count\": 259,\n"
"  \"max\": 50.0,\n"
"  \"min\": -30.1,\n"
"  \"stationId\": 1,\n"
"  \"stationName\": \"Hamburg\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1095
#, fuzzy
msgid "Otherwise, the service will send a redirect:"
msgstr "Caso contrário, o serviço enviará um redireccionamento:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1103
#, no-wrap
msgid ""
"HTTP/1.1 303 See Other\n"
"Connection: keep-alive\n"
"Content-Length: 0\n"
"Date: Tue, 18 Jun 2019 20:01:03 GMT\n"
"Location: http://1eb39af8d587:8080/weather-stations/data/1\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1106
#, fuzzy
msgid "You can also have _httpie_ automatically follow the redirect by passing the `--follow option`:"
msgstr "Também pode fazer com que _o httpie_ siga automaticamente o redireccionamento, passando o `--follow option`:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1110
#, no-wrap
msgid "http --follow 2af13fe516a9:8080/weather-stations/data/1\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:1112
#, fuzzy, no-wrap
msgid "Running Natively"
msgstr "Executar nativamente"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1116
#, fuzzy
msgid "The Quarkus extension for Kafka Streams enables the execution of stream processing applications natively via GraalVM without further configuration."
msgstr "A extensão Quarkus para Kafka Streams permite a execução de aplicações de processamento de fluxo nativamente através do GraalVM sem configuração adicional."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1119
#, fuzzy
msgid "To run both the `producer` and `aggregator` applications in native mode, the Maven builds can be executed using `-Dnative`:"
msgstr "Para executar as aplicações `producer` e `aggregator` em modo nativo, as compilações Maven podem ser executadas utilizando `-Dnative`:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1124
#, no-wrap
msgid ""
"./mvnw clean package -f producer/pom.xml -Dnative -Dnative-image.container-runtime=docker\n"
"./mvnw clean package -f aggregator/pom.xml -Dnative -Dnative-image.container-runtime=docker\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1127
#, fuzzy
msgid "Now create an environment variable named `QUARKUS_MODE` and with value set to \"native\":"
msgstr "Agora crie uma variável de ambiente chamada `QUARKUS_MODE` e com o valor definido como \"native\":"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1131
#, no-wrap
msgid "export QUARKUS_MODE=native\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1136
#, fuzzy
msgid "This is used by the Docker Compose file to use the correct `Dockerfile` when building the `producer` and `aggregator` images.  The Kafka Streams application can work with less than 50 MB RSS in native mode.  To do so, add the `Xmx` option to the program invocation in `aggregator/src/main/docker/Dockerfile.native`:"
msgstr "Isso é usado pelo arquivo Docker Compose para usar o `Dockerfile` correto ao criar as imagens `producer` e `aggregator`. A aplicação Kafka Streams pode funcionar com menos de 50 MB de RSS no modo nativo. Para fazer isso, adicione a opção `Xmx` à invocação do programa em `aggregator/src/main/docker/Dockerfile.native`:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1140
#, no-wrap
msgid "CMD [\"./application\", \"-Dquarkus.http.host=0.0.0.0\", \"-Xmx32m\"]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1144
#, fuzzy
msgid "Now start Docker Compose as described above (don't forget to rebuild the container images)."
msgstr "Agora inicie o Docker Compose conforme descrito acima (não se esqueça de reconstruir as imagens do contentor)."

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:1145
#, fuzzy, no-wrap
msgid "Kafka Streams Health Checks"
msgstr "Verificações de integridade dos fluxos Kafka"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1148
#, fuzzy
msgid "If you are using the `quarkus-smallrye-health` extension, `quarkus-kafka-streams` will automatically add:"
msgstr "Se estiver a utilizar a extensão `quarkus-smallrye-health`, `quarkus-kafka-streams` será automaticamente adicionado:"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1150
#, fuzzy
msgid "a readiness health check to validate that all topics declared in the `quarkus.kafka-streams.topics` property are created,"
msgstr "uma verificação do estado de preparação para validar se todos os tópicos declarados na propriedade `quarkus.kafka-streams.topics` foram criados,"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1151
#, fuzzy
msgid "a liveness health check based on the Kafka Streams state."
msgstr "uma verificação da integridade da vivacidade com base no estado dos fluxos Kafka."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1153
#, fuzzy
msgid "So when you access the `/q/health` endpoint of your application you will have information about the state of the Kafka Streams and the available and/or missing topics."
msgstr "Assim, quando aceder ao ponto de extremidade `/q/health` da sua aplicação, terá informações sobre o estado dos fluxos Kafka e os tópicos disponíveis e/ou em falta."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1155
#, fuzzy
msgid "This is an example of when the status is `DOWN`:"
msgstr "Este é um exemplo de quando o estado é `DOWN`:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1158
#, no-wrap
msgid "curl -i http://aggregator:8080/q/health\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1162
#, no-wrap
msgid ""
"HTTP/1.1 503 Service Unavailable\n"
"content-type: application/json; charset=UTF-8\n"
"content-length: 454\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1183
#, no-wrap
msgid ""
"{\n"
"    \"status\": \"DOWN\",\n"
"    \"checks\": [\n"
"        {\n"
"            \"name\": \"Kafka Streams state health check\",  <1>\n"
"            \"status\": \"DOWN\",\n"
"            \"data\": {\n"
"                \"state\": \"CREATED\"\n"
"            }\n"
"        },\n"
"        {\n"
"            \"name\": \"Kafka Streams topics health check\",  <2>\n"
"            \"status\": \"DOWN\",\n"
"            \"data\": {\n"
"                \"available_topics\": \"weather-stations,temperature-values\",\n"
"                \"missing_topics\": \"hygrometry-values\"\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1185
#, fuzzy
msgid "Liveness health check. Also available at `/q/health/live` endpoint."
msgstr "Controlo de saúde da vivacidade. Também disponível em `/q/health/live` endpoint."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1186
#, fuzzy
msgid "Readiness health check. Also available at `/q/health/ready` endpoint."
msgstr "Controlo do estado de preparação. Também disponível em `/q/health/ready` endpoint."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1188
#, fuzzy
msgid "So as you can see, the status is `DOWN` as soon as one of the `quarkus.kafka-streams.topics` is missing or the Kafka Streams `state` is not `RUNNING`."
msgstr "Como se pode ver, o estado é `DOWN` assim que um dos `quarkus.kafka-streams.topics` estiver em falta ou o Kafka Streams `state` não for `RUNNING`."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1191
#, fuzzy
msgid "If no topics are available, the `available_topics` key will not be present in the `data` field of the `Kafka Streams topics health check`.  As well as if no topics are missing, the `missing_topics` key will not be present in the `data` field of the `Kafka Streams topics health check`."
msgstr "Se não existirem tópicos disponíveis, a chave `available_topics` não estará presente no campo `data` do `Kafka Streams topics health check`. Da mesma forma, se não existirem tópicos, a chave `missing_topics` não estará presente no campo `data` do `Kafka Streams topics health check`."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1193
#, fuzzy
msgid "You can of course disable the health check of the `quarkus-kafka-streams` extension by setting the `quarkus.kafka-streams.health.enabled` property to `false` in your `application.properties`."
msgstr "É claro que pode desativar o controlo de saúde da extensão `quarkus-kafka-streams` definindo a propriedade `quarkus.kafka-streams.health.enabled` para `false` no seu `application.properties`."

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1195
#, fuzzy
msgid "Obviously you can create your liveness and readiness probes based on the respective endpoints `/q/health/live` and `/q/health/ready`."
msgstr "Obviamente, pode criar as suas sondas de prontidão e de vivacidade com base nos respectivos pontos de extremidade `/q/health/live` e `/q/health/ready`."

#. type: Title ===
#: upstream/_guides/kafka-streams.adoc:1196
#, fuzzy, no-wrap
msgid "Liveness health check"
msgstr "Controlo de saúde da vivacidade"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1199
#, fuzzy
msgid "Here is an example of the liveness check:"
msgstr "Eis um exemplo de verificação de vivacidade:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1203
#, no-wrap
msgid "curl -i http://aggregator:8080/q/health/live\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1207
#, no-wrap
msgid ""
"HTTP/1.1 503 Service Unavailable\n"
"content-type: application/json; charset=UTF-8\n"
"content-length: 225\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1220
#, no-wrap
msgid ""
"{\n"
"    \"status\": \"DOWN\",\n"
"    \"checks\": [\n"
"        {\n"
"            \"name\": \"Kafka Streams state health check\",\n"
"            \"status\": \"DOWN\",\n"
"            \"data\": {\n"
"                \"state\": \"CREATED\"\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1222
#, fuzzy
msgid "The `state` is coming from the `KafkaStreams.State` enum."
msgstr "O `state` é proveniente do enum `KafkaStreams.State`."

#. type: Title ===
#: upstream/_guides/kafka-streams.adoc:1223
#, fuzzy, no-wrap
msgid "Readiness health check"
msgstr "Controlo do estado de preparação"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1226
#, fuzzy
msgid "Here is an example of the readiness check:"
msgstr "Eis um exemplo do controlo de prontidão:"

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1230
#, no-wrap
msgid "curl -i http://aggregator:8080/q/health/ready\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1234
#, no-wrap
msgid ""
"HTTP/1.1 503 Service Unavailable\n"
"content-type: application/json; charset=UTF-8\n"
"content-length: 265\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-streams.adoc:1247
#, no-wrap
msgid ""
"{\n"
"    \"status\": \"DOWN\",\n"
"    \"checks\": [\n"
"        {\n"
"            \"name\": \"Kafka Streams topics health check\",\n"
"            \"status\": \"DOWN\",\n"
"            \"data\": {\n"
"                \"missing_topics\": \"weather-stations,temperature-values\"\n"
"            }\n"
"        }\n"
"    ]\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:1249
#, fuzzy, no-wrap
msgid "Going Further"
msgstr "Ir mais longe"

#. type: Plain text
#: upstream/_guides/kafka-streams.adoc:1255
#, fuzzy
msgid "This guide has shown how you can build stream processing applications using Quarkus and the Kafka Streams APIs, both in JVM and native modes.  For running your KStreams application in production, you could also add health checks and metrics for the data pipeline.  Refer to the Quarkus guides on xref:telemetry-micrometer.adoc[Micrometer], xref:smallrye-metrics.adoc[SmallRye Metrics], and xref:smallrye-health.adoc[SmallRye Health] to learn more."
msgstr "Este guia mostrou como é possível criar aplicações de processamento de fluxo usando o Quarkus e as APIs do Kafka Streams, tanto no modo JVM quanto no modo nativo. Para executar a aplicação KStreams em produção, também é possível adicionar verificações de integridade e métricas para o pipeline de dados. Consulte os guias do Quarkus sobre  link:telemetry-micrometer.html[Micrometer],  link:smallrye-metrics.html[SmallRye Metrics] e  link:smallrye-health.html[SmallRye Health] para saber mais."

#. type: Title ==
#: upstream/_guides/kafka-streams.adoc:1256
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referência de configuração"
