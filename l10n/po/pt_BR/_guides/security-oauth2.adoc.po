# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-oauth2.adoc:6
#, fuzzy, no-wrap
msgid "Using OAuth2 RBAC"
msgstr "Utilizar o OAuth2 RBAC"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:16
#, fuzzy
msgid "This guide explains how your Quarkus application can utilize OAuth2 tokens to provide secured access to the Jakarta REST (formerly known as JAX-RS) endpoints."
msgstr "Este guia explica como a sua aplicação Quarkus pode utilizar tokens OAuth2 para fornecer acesso seguro aos pontos de extremidade Jakarta REST (anteriormente conhecidos como JAX-RS)."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:19
#, fuzzy
msgid "OAuth2 is an authorization framework that enables applications to obtain access to an HTTP resource on behalf of a user.  It can be used to implement an application authentication mechanism based on tokens by delegating to an external server (the authentication server) the user authentication and providing a token for the authentication context."
msgstr "O OAuth2 é uma estrutura de autorização que permite às aplicações obterem acesso a um recurso HTTP em nome de um utilizador. Pode ser utilizado para implementar um mecanismo de autenticação de aplicações baseado em tokens, delegando a um servidor externo (o servidor de autenticação) a autenticação do utilizador e fornecendo um token para o contexto de autenticação."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:21
#, fuzzy
msgid "This extension provides a light-weight support for using the opaque Bearer Tokens and validating them by calling an introspection endpoint."
msgstr "Esta extensão fornece um suporte ligeiro para a utilização dos tokens de portador opacos e a sua validação através da chamada de um ponto final de introspeção."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:24
#, fuzzy
msgid "If the OAuth2 Authentication server provides JWT Bearer Tokens, consider using either xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] or xref:security-jwt.adoc[SmallRye JWT] extensions instead.  OpenID Connect extension has to be used if the Quarkus application needs to authenticate the users using OIDC Authorization Code Flow. For more information, see the xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications] guide."
msgstr "Se o servidor de autenticação OAuth2 fornecer tokens de portador JWT, considere utilizar a  link:security-oidc-bearer-token-authentication.html[autenticação de token de portador OIDC] ou as extensões  link:security-jwt.html[SmallRye JWT]. A extensão OpenID Connect tem de ser utilizada se a aplicação Quarkus precisar de autenticar os utilizadores utilizando o Fluxo de Código de Autorização OIDC. Para mais informações, consulte o guia do  link:security-oidc-code-flow-authentication.html[mecanismo de fluxo de código OIDC para proteção de aplicações Web]."

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:27
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:31
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas secções seguintes e crie a aplicação passo a passo. No entanto, pode ir diretamente para o exemplo completo."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:33
#, fuzzy
msgid "Clone the Git repository: git clone https://github.com/quarkusio/quarkus-quickstarts.git, or download an archive."
msgstr "Clonar o repositório Git: git clone  https://github.com/quarkusio/quarkus-quickstarts.git  ou descarregar um arquivo."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:36
#, fuzzy
msgid "The solution is located in the `security-oauth2-quickstart` link:{quickstarts-tree-url}/security-oauth2-quickstart[directory].  It contains a very simple UI to use the Jakarta REST resources created here, too."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/security-oauth2-quickstart[diretório] `security-oauth2-quickstart`. Ela contém uma interface de usuário muito simples para usar os recursos Jakarta REST criados aqui também."

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:37
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:40
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Em primeiro lugar, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:46
#, fuzzy
msgid "This command generates a project and imports the `elytron-security-oauth2` extension, which includes the OAuth2 opaque token support."
msgstr "Este comando gera um projeto e importa a extensão `elytron-security-oauth2`, que inclui o suporte do token opaco OAuth2."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:48
#, fuzzy
msgid "If you don't want to use the Maven plugin, you can just include the dependency in your build file:"
msgstr "Se não quiser utilizar o plug-in Maven, pode simplesmente incluir a dependência no seu ficheiro de compilação:"

#. type: Block title
#: upstream/_guides/security-oauth2.adoc:50
#: upstream/_guides/security-oauth2.adoc:335
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:56
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elytron-security-oauth2</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-oauth2.adoc:59
#: upstream/_guides/security-oauth2.adoc:347
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:62
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-elytron-security-oauth2\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oauth2.adoc:64
#, fuzzy, no-wrap
msgid "Examine the Jakarta REST resource"
msgstr "Examinar o recurso Jakarta REST"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:67
#, fuzzy
msgid "Create the `src/main/java/org/acme/security/oauth2/TokenSecuredResource.java` file with the following content:"
msgstr "Criar o ficheiro `src/main/java/org/acme/security/oauth2/TokenSecuredResource.java` com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:71
#: upstream/_guides/security-oauth2.adoc:95
#: upstream/_guides/security-oauth2.adoc:173
#, no-wrap
msgid "package org.acme.security.oauth2;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:76
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:79
#, no-wrap
msgid ""
"@Path(\"/secured\")\n"
"public class TokenSecuredResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:86
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:89
#, fuzzy
msgid "This is a basic REST endpoint that does not have any of the {extension-name} specific features, so let's add some."
msgstr "Este é um ponto de extremidade REST básico que não tem nenhuma das características específicas de {extension-name}, por isso vamos adicionar algumas."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:91
#, fuzzy
msgid "We will use the JSR 250 common security annotations, they are described in the xref:security-overview.adoc[Using Security] guide."
msgstr "Utilizaremos as anotações de segurança comuns da JSR 250, que são descritas no guia  link:security-overview.html[Utilizar segurança]."

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:97
#: upstream/_guides/security-oauth2.adoc:175
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:106
#, no-wrap
msgid ""
"import jakarta.annotation.security.PermitAll;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.MediaType;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:110
#: upstream/_guides/security-oauth2.adoc:189
#, no-wrap
msgid ""
"@Path(\"/secured\")\n"
"@ApplicationScoped\n"
"public class TokenSecuredResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:123
#, no-wrap
msgid ""
"    @GET()\n"
"    @Path(\"permit-all\")\n"
"    @PermitAll // <1>\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello(@Context SecurityContext ctx) { // <2>\n"
"        Principal caller =  ctx.getUserPrincipal(); <3>\n"
"        String name = caller == null ? \"anonymous\" : caller.getName();\n"
"        String helloReply = String.format(\"hello + %s, isSecure: %s, authScheme: %s\", name, ctx.isSecure(), ctx.getAuthenticationScheme());\n"
"        return helloReply; // <4>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:125
#, fuzzy
msgid "`@PermitAll` indicates that the given endpoint is accessible by any caller, authenticated or not."
msgstr "`@PermitAll` indica que o ponto de extremidade em causa é acessível a qualquer interlocutor, autenticado ou não."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:126
#, fuzzy
msgid "Here we inject the Jakarta REST `SecurityContext` to inspect the security state of the call."
msgstr "Aqui injectamos o Jakarta REST `SecurityContext` para inspecionar o estado de segurança da chamada."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:127
#, fuzzy
msgid "Here we obtain the current request user/caller `Principal`. For an unsecured call this will be null, so we build the username by checking `caller` against null."
msgstr "Aqui obtemos o utilizador/chamador do pedido atual `Principal`. Para uma chamada não segura, este valor será nulo, pelo que construímos o nome de utilizador comparando `caller` com null."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:128
#, fuzzy
msgid "The reply we build up makes use of the caller name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`."
msgstr "A resposta que construímos utiliza o nome do chamador, os estados `isSecure()` e `getAuthenticationScheme()` do pedido `SecurityContext`."

#. type: Title ===
#: upstream/_guides/security-oauth2.adoc:130
#, fuzzy, no-wrap
msgid "Setting up application.properties"
msgstr "Configuração do application.properties"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:133
#, fuzzy
msgid "You need to configure your application with the following minimal properties:"
msgstr "É necessário configurar a aplicação com as seguintes propriedades mínimas:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:139
#, no-wrap
msgid ""
"quarkus.oauth2.client-id=client_id\n"
"quarkus.oauth2.client-secret=secret\n"
"quarkus.oauth2.introspection-url=http://oauth-server/introspect\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:143
#, fuzzy
msgid "You need to specify the introspection URL of your authentication server and the `client-id` / `client-secret` that your application will use to authenticate itself to the authentication server. + The extension will then use this information to validate the token and recover the information associated with it."
msgstr "É necessário especificar o URL de introspeção do seu servidor de autenticação e o `client-id` / `client-secret` que a sua aplicação utilizará para se autenticar no servidor de autenticação. + A extensão utilizará então estas informações para validar o token e recuperar as informações associadas ao mesmo."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:145
#, fuzzy
msgid "For all configuration properties, see the xref:config-reference[Configuration Reference] section at the end of this guide."
msgstr "Para todas as propriedades de configuração, consulte a secção  link:#config-reference[Referência de configuração] no final deste guia."

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:146
#, fuzzy, no-wrap
msgid "Run the application"
msgstr "Executar a aplicação"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:149
#, fuzzy
msgid "Now we are ready to run our application. Use:"
msgstr "Agora estamos prontos para executar a nossa aplicação. Utilizar:"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:153
#, fuzzy
msgid "Now that the REST endpoint is running, we can access it using a command line tool like curl:"
msgstr "Agora que o ponto de extremidade REST está em execução, podemos acessá-lo usando uma ferramenta de linha de comando como curl:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:158
#, no-wrap
msgid ""
"$ curl http://127.0.0.1:8080/secured/permit-all; echo\n"
"hello + anonymous, isSecure: false, authScheme: null\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:161
#, fuzzy
msgid "We have not provided any token in our request, so we would not expect that there is any security state seen by the endpoint, and the response is consistent with that:"
msgstr "Não fornecemos qualquer token no nosso pedido, pelo que não esperamos que exista qualquer estado de segurança visto pelo ponto de extremidade, e a resposta é consistente com isso:"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:163
#, fuzzy
msgid "username is anonymous"
msgstr "o nome de utilizador é anónimo"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:164
#, fuzzy
msgid "`isSecure` is false as https is not used"
msgstr "`isSecure` é falso porque o https não é utilizado"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:165
#, fuzzy
msgid "`authScheme` is null"
msgstr "`authScheme` é nulo"

#. type: Title ===
#: upstream/_guides/security-oauth2.adoc:166
#, fuzzy, no-wrap
msgid "Securing the endpoint"
msgstr "Proteger o ponto de extremidade"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:169
#, fuzzy
msgid "So now let's actually secure something. Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "Então, agora vamos realmente proteger alguma coisa. Dê uma olhada no novo método de ponto de extremidade `helloRolesAllowed` no seguinte:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:185
#, no-wrap
msgid ""
"import jakarta.annotation.security.PermitAll;\n"
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.MediaType;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:200
#, no-wrap
msgid ""
"    @GET()\n"
"    @Path(\"permit-all\")\n"
"    @PermitAll\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello(@Context SecurityContext ctx) {\n"
"        Principal caller =  ctx.getUserPrincipal();\n"
"        String name = caller == null ? \"anonymous\" : caller.getName();\n"
"        String helloReply = String.format(\"hello + %s, isSecure: %s, authScheme: %s\", name, ctx.isSecure(), ctx.getAuthenticationScheme());\n"
"        return helloReply;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:212
#, no-wrap
msgid ""
"    @GET()\n"
"    @Path(\"roles-allowed\") // <1>\n"
"    @RolesAllowed({\"Echoer\", \"Subscriber\"}) // <2>\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String helloRolesAllowed(@Context SecurityContext ctx) {\n"
"        Principal caller =  ctx.getUserPrincipal();\n"
"        String name = caller == null ? \"anonymous\" : caller.getName();\n"
"        String helloReply = String.format(\"hello + %s, isSecure: %s, authScheme: %s\", name, ctx.isSecure(), ctx.getAuthenticationScheme());\n"
"        return helloReply;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:214
#, fuzzy
msgid "This new endpoint will be located at `/secured/roles-allowed`"
msgstr "Este novo ponto final estará localizado em `/secured/roles-allowed`"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:215
#, fuzzy
msgid "`@RolesAllowed` indicates that the given endpoint is accessible by a caller if they have either an \"Echoer\" or a \"Subscriber\" role assigned."
msgstr "`@RolesAllowed` indica que o ponto de extremidade em causa é acessível a um chamador se este tiver uma função \"Echoer\" ou \"Subscriber\" atribuída."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:217
#, fuzzy
msgid "After you make this addition to your `TokenSecuredResource`, try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint. Your output should be:"
msgstr "Depois de fazer esta adição ao seu `TokenSecuredResource`, tente `curl -v &lt;a href=\"http://127.0.0.1:8080/secured/roles-allowed\" class=\"bare\"&gt;http://127.0.0.1:8080/secured/roles-allowed&lt;/a&gt;; echo` para tentar aceder ao novo ponto final. O resultado deve ser:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:237
#, no-wrap
msgid ""
"$ curl -v http://127.0.0.1:8080/secured/roles-allowed; echo\n"
"*   Trying 127.0.0.1...\n"
"* TCP_NODELAY set\n"
"* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\n"
"> GET /secured/roles-allowed HTTP/1.1\n"
"> Host: 127.0.0.1:8080\n"
"> User-Agent: curl/7.54.0\n"
"> Accept: */*\n"
">\n"
"< HTTP/1.1 401 Unauthorized\n"
"< Connection: keep-alive\n"
"< Content-Type: text/html;charset=UTF-8\n"
"< Content-Length: 14\n"
"< Date: Sun, 03 Mar 2019 16:32:34 GMT\n"
"<\n"
"* Connection #0 to host 127.0.0.1 left intact\n"
"Not authorized\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:240
#, fuzzy
msgid "Excellent, we have not provided any OAuth2 token in the request, so we should not be able to access the endpoint, and we were not. Instead, we received an HTTP 401 Unauthorized error. We need to obtain and pass in a valid OAuth2 token to access that endpoint. There are two steps to this, 1) configuring our {extension-name} extension with information on how to validate the token, and 2) generating a matching token with the appropriate claims."
msgstr "Excelente, não fornecemos nenhum token OAuth2 na solicitação, portanto, não deveríamos ser capazes de acessar o ponto de extremidade, e não fomos. Em vez disso, recebemos um erro HTTP 401 Unauthorized. Precisamos obter e passar um token OAuth2 válido para acessar esse ponto de extremidade. Há duas etapas para isso: 1) configurar nossa extensão {extension-name} com informações sobre como validar o token e 2) gerar um token correspondente com as declarações apropriadas."

#. type: Title ===
#: upstream/_guides/security-oauth2.adoc:241
#, fuzzy, no-wrap
msgid "Generating a token"
msgstr "Geração de um token"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:244
#, fuzzy
msgid "You need to obtain the token from a standard OAuth2 authentication server (https://www.keycloak.org/[Keycloak] for example) using the token endpoint."
msgstr "É necessário obter o token de um servidor de autenticação OAuth2 padrão link:https://www.keycloak.org/[(Keycloak], por exemplo) usando o ponto de extremidade do token."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:246
#, fuzzy
msgid "You can find below a curl example of such call for a `client_credential` flow:"
msgstr "Segue-se um exemplo curl de uma chamada deste tipo para um fluxo `client_credential`:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:251
#, no-wrap
msgid ""
"curl -X POST \"http://oauth-server/token?grant_type=client_credentials\" \\\n"
"-H  \"Accept: application/json\" -H  \"Authorization: Basic Y2xpZW50X2lkOmNsaWVudF9zZWNyZXQ=\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:254
#, fuzzy
msgid "It should respond something like that..."
msgstr "Deveria responder mais ou menos assim..."

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:258
#, no-wrap
msgid "{\"access_token\":\"60acf56d-9daf-49ba-b3be-7a423d9c7288\",\"token_type\":\"bearer\",\"expires_in\":1799,\"scope\":\"READER\"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oauth2.adoc:261
#, fuzzy, no-wrap
msgid "Finally, make a secured request to /secured/roles-allowed"
msgstr "Por fim, faça um pedido seguro a /secured/roles-allowed"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:263
#, fuzzy
msgid "Now let's use this to make a secured request to the `/secured/roles-allowed` endpoint"
msgstr "Agora vamos utilizar isto para efetuar um pedido seguro ao ponto final `/secured/roles-allowed`"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:268
#, no-wrap
msgid ""
"$ curl -H \"Authorization: Bearer 60acf56d-9daf-49ba-b3be-7a423d9c7288\" http://127.0.0.1:8080/secured/roles-allowed; echo\n"
"hello + client_id isSecure: false, authScheme: OAuth2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:271
#, fuzzy
msgid "Success! We now have:"
msgstr "Sucesso! Agora temos:"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:273
#, fuzzy
msgid "a non-anonymous caller name of client_id"
msgstr "um nome de chamador não anónimo de client_id"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:274
#, fuzzy
msgid "an authentication scheme of OAuth2"
msgstr "um esquema de autenticação de OAuth2"

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:275
#, fuzzy, no-wrap
msgid "Roles mapping"
msgstr "Mapeamento de funções"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:278
#, fuzzy
msgid "Roles are mapped from one of the claims of the introspection endpoint response. By default, it's the `scope` claim. Roles are obtained by splitting the claim with a space separator. If the claim is an array, no splitting is done, the roles are obtained from the array."
msgstr "As funções são mapeadas a partir de uma das declarações da resposta do ponto de extremidade de introspeção. Por predefinição, é a afirmação `scope`. As funções são obtidas dividindo a declaração com um separador de espaço. Se a declaração for uma matriz, nenhuma divisão é feita, as funções são obtidas da matriz."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:280
#, fuzzy
msgid "You can customize the name of the claim to use for the roles with the `quarkus.oauth2.role-claim` property."
msgstr "É possível personalizar o nome da declaração a utilizar para as funções com a propriedade `quarkus.oauth2.role-claim`."

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:281
#, fuzzy, no-wrap
msgid "Package and run the application"
msgstr "Empacotar e executar a aplicação"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:284
#, fuzzy
msgid "As usual, the application can be packaged using:"
msgstr "Como de costume, a aplicação pode ser empacotada utilizando:"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:288
#, fuzzy
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`:"
msgstr "E executado com `java -jar target/quarkus-app/quarkus-run.jar`:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:296
#, no-wrap
msgid ""
"[INFO] Scanning for projects...\n"
"...\n"
"$ java -jar target/quarkus-app/quarkus-run.jar\n"
"2019-03-28 14:27:48,839 INFO  [io.quarkus] (main) Quarkus {quarkus-version} started in 0.796s. Listening on: http://[::]:8080\n"
"2019-03-28 14:27:48,841 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy-reactive, resteasy-reactive-jackson, security, security-oauth2]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:299
#, fuzzy
msgid "You can also generate the native executable with:"
msgstr "Também é possível gerar o executável nativo com:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:320
#, no-wrap
msgid ""
"[INFO] Scanning for projects...\n"
"...\n"
"[security-oauth2-quickstart-runner:25602]     universe:     493.17 ms\n"
"[security-oauth2-quickstart-runner:25602]      (parse):     660.41 ms\n"
"[security-oauth2-quickstart-runner:25602]     (inline):   1,431.10 ms\n"
"[security-oauth2-quickstart-runner:25602]    (compile):   7,301.78 ms\n"
"[security-oauth2-quickstart-runner:25602]      compile:  10,542.16 ms\n"
"[security-oauth2-quickstart-runner:25602]        image:   2,797.62 ms\n"
"[security-oauth2-quickstart-runner:25602]        write:     988.24 ms\n"
"[security-oauth2-quickstart-runner:25602]      [total]:  43,778.16 ms\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] BUILD SUCCESS\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Total time:  51.500 s\n"
"[INFO] Finished at: 2019-06-28T14:30:56-07:00\n"
"[INFO] ------------------------------------------------------------------------\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:324
#, no-wrap
msgid ""
"$ ./target/security-oauth2-quickstart-runner\n"
"2019-03-28 14:31:37,315 INFO  [io.quarkus] (main) Quarkus 0.20.0 started in 0.006s. Listening on: http://[::]:8080\n"
"2019-03-28 14:31:37,316 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy-reactive, resteasy-reactive-jackson, security, security-oauth2]\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:327
#, fuzzy, no-wrap
msgid "Integration testing"
msgstr "Ensaios de integração"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:331
#, fuzzy
msgid "If you don't want to use a real OAuth2 authorization server for your integration tests, you can use the xref:security-properties.adoc[Properties based security] extension for your test, or mock an authorization server using Wiremock."
msgstr "Se você não quiser usar um servidor de autorização OAuth2 real para seus testes de integração, poderá usar a extensão  link:security-properties.html[de segurança baseada em propriedades] para seu teste ou simular um servidor de autorização usando Wiremock."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:333
#, fuzzy
msgid "First, Wiremock needs to be added as a test dependency. For a Maven project that would happen like so:"
msgstr "Primeiro, o Wiremock precisa ser adicionado como uma dependência de teste. Para um projeto Maven, isso aconteceria da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:343
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.wiremock</groupId>\n"
"    <artifactId>wiremock</artifactId>\n"
"    <scope>test</scope>\n"
"    <version>${wiremock.version}</version> // <1>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:345
#: upstream/_guides/security-oauth2.adoc:352
#, fuzzy
msgid "Use a proper Wiremock version. All available versions can be found link:https://search.maven.org/artifact/org.wiremock/wiremock[here]."
msgstr "Utilize uma versão adequada do Wiremock. Todas as versões disponíveis podem ser encontradas  link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[aqui]."

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:350
#, no-wrap
msgid "testImplementation(\"org.wiremock:wiremock:${wiremock.version}\") <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:356
#, fuzzy
msgid "In Quarkus tests when some service needs to be started before the Quarkus tests are ran, we utilize the `@io.quarkus.test.common.QuarkusTestResource` annotation to specify a `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which can start the service and supply configuration values that Quarkus will use."
msgstr "Nos testes Quarkus, quando algum serviço precisa de ser iniciado antes de os testes Quarkus serem executados, utilizamos a anotação `@io.quarkus.test.common.QuarkusTestResource` para especificar um `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` que pode iniciar o serviço e fornecer valores de configuração que o Quarkus utilizará."

#. type: delimited block =
#: upstream/_guides/security-oauth2.adoc:360
#, fuzzy
msgid "For more details about `@QuarkusTestResource` refer to xref:getting-started-testing.adoc#quarkus-test-resource[this part of the documentation]."
msgstr "Para mais informações sobre `@QuarkusTestResource`, consulte  link:getting-started-testing.html#quarkus-test-resource[esta parte da documentação]."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:363
#, fuzzy
msgid "Let's create an implementation of `QuarkusTestResourceLifecycleManager` called `MockAuthorizationServerTestResource` like so:"
msgstr "Vamos criar uma implementação de `QuarkusTestResourceLifecycleManager` chamada `MockAuthorizationServerTestResource` desta forma:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:369
#, no-wrap
msgid ""
"import com.github.tomakehurst.wiremock.WireMockServer;\n"
"import com.github.tomakehurst.wiremock.client.WireMock;\n"
"import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:372
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:374
#, no-wrap
msgid "public class MockAuthorizationServerTestResource implements QuarkusTestResourceLifecycleManager {  // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:376
#, no-wrap
msgid "    private WireMockServer wireMockServer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:381
#, no-wrap
msgid ""
"    @Override\n"
"    public Map<String, String> start() {\n"
"        wireMockServer = new WireMockServer();\n"
"        wireMockServer.start(); // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:386
#, no-wrap
msgid ""
"        // define the mock for the introspect endpoint\n"
"        WireMock.stubFor(WireMock.post(\"/introspect\").willReturn(WireMock.aResponse() // <3>\n"
"                .withBody(\n"
"                        \"{\\\"active\\\":true,\\\"scope\\\":\\\"Echoer\\\",\\\"username\\\":null,\\\"iat\\\":1562315654,\\\"exp\\\":1562317454,\\\"expires_in\\\":1458,\\\"client_id\\\":\\\"my_client_id\\\"}\")));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:390
#, no-wrap
msgid ""
"        return Collections.singletonMap(\"quarkus.oauth2.introspection-url\", wireMockServer.baseUrl() + \"/introspect\"); // <4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:398
#, no-wrap
msgid ""
"    @Override\n"
"    public void stop() {\n"
"        if (null != wireMockServer) {\n"
"            wireMockServer.stop();  // <5>\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:401
#, fuzzy
msgid "The `start` method is invoked by Quarkus before any test is run and returns a `Map` of configuration properties that apply during the test execution."
msgstr "O método `start` é invocado pelo Quarkus antes de qualquer teste ser executado e devolve um `Map` de propriedades de configuração que se aplicam durante a execução do teste."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:402
#, fuzzy
msgid "Launch Wiremock."
msgstr "Iniciar o Wiremock."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:403
#, fuzzy
msgid "Configure Wiremock to stub the calls to `/introspect` by returning an OAuth2 introspect response. You need to customize this line to return what's needed for your application (at least the scope property as roles are derived from the scope)."
msgstr "Configure o Wiremock para fazer o stub das chamadas para `/introspect` retornando uma resposta de introspeção do OAuth2. Você precisa personalizar essa linha para retornar o que é necessário para seu aplicativo (pelo menos a propriedade de escopo, pois as funções são derivadas do escopo)."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:404
#, fuzzy
msgid "As the `start` method returns configuration that applies for tests, we set the `quarkus.oauth2.introspection-url` property that controls the URL of the introspect endpoint used by the OAuth2 extension."
msgstr "Como o método `start` devolve a configuração que se aplica aos testes, definimos a propriedade `quarkus.oauth2.introspection-url` que controla o URL do ponto final de introspeção utilizado pela extensão OAuth2."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:405
#, fuzzy
msgid "When all tests have finished, shutdown Wiremock."
msgstr "Quando todos os testes estiverem concluídos, encerre o Wiremock."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:408
#, fuzzy
msgid "Your test class needs to be annotated like with `@QuarkusTestResource(MockAuthorizationServerTestResource.class)` to use this `QuarkusTestResourceLifecycleManager`."
msgstr "A sua classe de teste precisa de ser anotada com `@QuarkusTestResource(MockAuthorizationServerTestResource.class)` para utilizar este `QuarkusTestResourceLifecycleManager`."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:410
#, fuzzy
msgid "Below is an example of a test that uses the `MockAuthorizationServerTestResource`."
msgstr "Segue-se um exemplo de um teste que utiliza o `MockAuthorizationServerTestResource`."

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:418
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(MockAuthorizationServerTestResource.class) // <1>\n"
"class TokenSecuredResourceTest {\n"
"    // use whatever token you want as the mock OAuth server will accept all tokens\n"
"    private static final String BEARER_TOKEN = \"337aab0f-b547-489b-9dbd-a54dc7bdf20d\"; // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:429
#, no-wrap
msgid ""
"    @Test\n"
"    void testPermitAll() {\n"
"        RestAssured.given()\n"
"                .when()\n"
"                .header(\"Authorization\", \"Bearer: \" + BEARER_TOKEN) // <3>\n"
"                .get(\"/secured/permit-all\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(containsString(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:441
#, no-wrap
msgid ""
"    @Test\n"
"    void testRolesAllowed() {\n"
"        RestAssured.given()\n"
"                .when()\n"
"                .header(\"Authorization\", \"Bearer: \" + BEARER_TOKEN)\n"
"                .get(\"/secured/roles-allowed\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(containsString(\"hello\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:444
#, fuzzy
msgid "Use the previously created `MockAuthorizationServerTestResource` as a Quarkus test resource."
msgstr "Utilize o site `MockAuthorizationServerTestResource` criado anteriormente como um recurso de teste Quarkus."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:445
#, fuzzy
msgid "Define whatever token you want, it will not be validated by the OAuth2 mock authorization server."
msgstr "Defina o token que quiser, ele não será validado pelo servidor de autorização simulada OAuth2."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:446
#, fuzzy
msgid "Use this token inside the `Authorization` header to trigger OAuth2 authentication."
msgstr "Utilize este token no cabeçalho `Authorization` para ativar a autenticação OAuth2."

#. type: delimited block =
#: upstream/_guides/security-oauth2.adoc:451
#, fuzzy
msgid "`@QuarkusTestResource` applies to all tests, not just `TokenSecuredResourceTest`."
msgstr "`@QuarkusTestResource` aplica-se a todos os testes, não apenas a `TokenSecuredResourceTest`."

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:454
#, fuzzy, no-wrap
msgid "References"
msgstr "Referências"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:457
#, fuzzy
msgid "https://tools.ietf.org/html/rfc6749[OAuth2]"
msgstr "link:https://tools.ietf.org/html/rfc6749[OAuth2]"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:458
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "link:security-overview.html[Visão geral do Quarkus Security]"

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:460
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referência de configuração"
