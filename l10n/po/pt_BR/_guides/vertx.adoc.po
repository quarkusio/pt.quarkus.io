# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/vertx.adoc
#, fuzzy, no-wrap
msgid "Using Eclipse Vert.x API from a Quarkus Application"
msgstr "Usando a API do Eclipse Vert.x a partir de um aplicativo Quarkus"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"https://vertx.io[Vert.x] is a toolkit for building reactive applications.\n"
"As described in the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture], Quarkus uses Vert.x underneath."
msgstr "link:https://vertx.io[O Vert.x] é um kit de ferramentas para a criação de aplicativos reativos. Conforme descrito na xref:quarkus-reactive-architecture.adoc[Arquitetura Reativa do Quarkus] , o Quarkus usa o Vert.x como base."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "Quarkus applications can access and use the Vert.x APIs."
msgstr "Os aplicativos Quarkus podem acessar e usar as APIs do Vert.x."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "This guide presents how you can build a Quarkus application using:"
msgstr "Este guia apresenta como o senhor pode criar um aplicativo Quarkus usando:"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "the managed instance of Vert.x"
msgstr "a instância gerenciada do Vert.x"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "the Vert.x event bus"
msgstr "o barramento de eventos Vert.x"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "the Vert.x Web Client"
msgstr "o Cliente Web Vert.x"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"It's an introductory guide.\n"
"The xref:vertx-reference.adoc[Vert.x reference guide] covers more advanced features such as verticles, and native transports."
msgstr "Trata-se de um guia introdutório. O xref:vertx-reference.adoc[guia de referência do Vert.x] aborda recursos mais avançados, como verticais e transportes nativos."

#. type: Title ==
#: _guides/vertx.adoc
#, no-wrap
msgid "Architecture"
msgstr "Arquitetura"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "We are going to build a simple application exposing four HTTP endpoints:"
msgstr "Vamos criar um aplicativo simples que expõe quatro endpoints HTTP:"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "`/vertx/lorem` returns the content from a small file"
msgstr "`/vertx/lorem` retorna o conteúdo de um pequeno arquivo"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "`/vertx/book` returns the content from a large file (a book)"
msgstr "`/vertx/book` retorna o conteúdo de um arquivo grande (um livro)"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "`/vertx/hello` uses the Vert.x event bus to produce the response"
msgstr "`/vertx/hello` usa o barramento de eventos Vert.x para produzir a resposta"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "`/vertx/web` uses the Vert.x Web Client to retrieve data from Wikipedia"
msgstr "`/vertx/web` usa o Vert.x Web Client para recuperar dados da Wikipédia"

#. type: Title ==
#: _guides/vertx.adoc
#, no-wrap
msgid "Solution"
msgstr "Solução"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"We recommend that you follow the instructions in the following sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "Recomendamos que o senhor siga as instruções nas seções a seguir e crie o aplicativo passo a passo. No entanto, o senhor pode ir direto para o exemplo concluído."

#. type: Plain text
#: _guides/vertx.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone o repositório Git: `git clone {quickstarts-clone-url}`, ou baixe um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "The solution is located in the `vertx-quickstart` link:{quickstarts-tree-url}/vertx-quickstart[directory]."
msgstr "A solução está localizada no link:{quickstarts-tree-url}/vertx-quickstart[diretório] `vertx-quickstart` ."

#. type: Block title
#: _guides/vertx.adoc
#, no-wrap
msgid "Mutiny"
msgstr "Mutiny"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"This guide uses the Mutiny API.\n"
"If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive, reactive programming library]."
msgstr "Este guia usa a API Mutiny. Se o senhor não estiver familiarizado com o Mutiny, consulte xref:mutiny-primer.adoc[Mutiny - uma biblioteca de programação intuitiva e reativa] ."

#. type: Title ==
#: _guides/vertx.adoc
#, fuzzy, no-wrap
msgid "Bootstrapping the application"
msgstr "Inicialização do aplicativo"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Click on https://code.quarkus.io/?a=quarkus-getting-started-vertx&nc=true&e=rest-jackson&e=vertx[this link] to configure your application.\n"
"It selected a few extensions:"
msgstr "Clique nesse link:https://code.quarkus.io/?a=quarkus-getting-started-vertx&nc=true&e=rest-jackson&e=vertx[link] para configurar seu aplicativo. Ele selecionou algumas extensões:"

#: _guides/vertx.adoc
#, fuzzy
msgid "`rest-jackson`, which also brings `rest`. We are going to use it to expose our HTTP endpoints."
msgstr "`rest-jackson` que também traz `rest` . Vamos usá-lo para expor nossos endpoints HTTP."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "`vertx`, which provides access to the underlying managed Vert.x"
msgstr "`vertx` que fornece acesso ao Vert.x gerenciado subjacente."

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Click on the `Generate your application` button, download the zip file and unzip it.\n"
"Then, open the project in your favorite IDE."
msgstr "Clique no botão `Generate your application` , faça o download do arquivo zip e descompacte-o. Em seguida, abra o projeto em seu IDE favorito."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "If you open the generated build file, you can see the selected extensions:"
msgstr "Se o senhor abrir o arquivo de compilação gerado, poderá ver as extensões selecionadas:"

#. type: Block title
#: _guides/vertx.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/vertx.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "While you are in your build file, add the following dependency:"
msgstr "Enquanto estiver em seu arquivo de compilação, adicione a seguinte dependência:"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "This dependency provides the Vert.x Web Client, which we will be using to implement the `/web` endpoint."
msgstr "Essa dependência fornece o Vert.x Web Client, que usaremos para implementar o endpoint `/web` ."

#. type: Title ==
#: _guides/vertx.adoc
#, fuzzy, no-wrap
msgid "Accessing the managed Vert.x instance"
msgstr "Acesso à instância gerenciada do Vert.x"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Create the `src/main/java/org/acme/VertxResource.java` file.\n"
"It will contain our HTTP endpoints."
msgstr "Crie o arquivo `src/main/java/org/acme/VertxResource.java` . Ele conterá nossos endpoints HTTP."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "In this file, copy the following code:"
msgstr "Nesse arquivo, copie o seguinte código:"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "Declare the root HTTP path."
msgstr "Declare o caminho HTTP raiz."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "We use constructor injection to receive the managed Vert.x instance. Field injection works too."
msgstr "Usamos a injeção de construtor para receber a instância gerenciada do Vert.x. A injeção de campo também funciona."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "Receives the Vert.x instance as a constructor parameter"
msgstr "Recebe a instância Vert.x como um parâmetro do construtor"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "Store the managed Vert.x instance into a field."
msgstr "Armazene a instância gerenciada do Vert.x em um campo."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "With this, we can start implementing the endpoints."
msgstr "Com isso, podemos começar a implementar os pontos de extremidade."

#. type: Title ==
#: _guides/vertx.adoc
#, fuzzy, no-wrap
msgid "Using Vert.x Core API"
msgstr "Usando o Vert.x Core API"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"The injected Vert.x instance provides a set of APIs you can use.\n"
"The one we are going to use in this section is the Vert.x File System.\n"
"It provides a non-blocking API to access files."
msgstr "A instância injetada do Vert.x fornece um conjunto de APIs que o senhor pode usar. A que usaremos nesta seção é o Vert.x File System. Ele fornece uma API sem bloqueio para acessar arquivos."

#: _guides/vertx.adoc
#, fuzzy
msgid "In the `src/main/resources` directory, create a `lorem.txt` file with the following content:"
msgstr "No diretório `src/main/resources` , crie um arquivo `lorem.txt` com o seguinte conteúdo:"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "Then, in the `VertxResource` file add the following method:"
msgstr "Em seguida, no arquivo `VertxResource` , adicione o seguinte método:"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "This endpoint handles HTTP `GET` request on path `/lorem` (so the full path will be `vertx/lorem`)"
msgstr "Esse endpoint processa a solicitação HTTP `GET` no caminho `/lorem` (portanto, o caminho completo será `vertx/lorem` )."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "As the Vert.x API is asynchronous, our method returns a `Uni`. The content is written into the HTTP response when the asynchronous operation represented by the Uni completes."
msgstr "Como a API do Vert.x é assíncrona, nosso método retorna um `Uni` . O conteúdo é gravado na resposta HTTP quando a operação assíncrona representada pelo Uni é concluída."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "We use the Vert.x file system API to read the created file"
msgstr "Usamos a API do sistema de arquivos Vert.x para ler o arquivo criado"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "Once the file is read, the content is stored in an in-memory buffer.  We transform this buffer into a String."
msgstr "Depois que o arquivo é lido, o conteúdo é armazenado em um buffer na memória. Transformamos esse buffer em um String."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "In a terminal, navigate to the root of the project and run:"
msgstr "Em um terminal, navegue até a raiz do projeto e execute:"

#. type: Plain text
#: _guides/vertx.adoc
msgid "In another terminal, run:"
msgstr "Em outro terminal, execute:"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "You should see the content of the file printed in the console."
msgstr "O senhor deve ver o conteúdo do arquivo impresso no console."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "Quarkus provides other ways to serve static files. This is an example made for the guide."
msgstr "O Quarkus oferece outras maneiras de servir arquivos estáticos. Este é um exemplo criado para o guia."

#. type: Title ==
#: _guides/vertx.adoc
#, fuzzy, no-wrap
msgid "Using Vert.x stream capability"
msgstr "Usando o recurso de fluxo do Vert.x"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Reading a file and storing the content in memory works for small files, but not big ones.\n"
"In this section, we will see how you can use Vert.x streaming capability."
msgstr "Ler um arquivo e armazenar o conteúdo na memória funciona para arquivos pequenos, mas não para os grandes. Nesta seção, veremos como o senhor pode usar o recurso de streaming do Vert.x."

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"First, download https://www.gutenberg.org/files/2600/2600-0.txt[War and Peace] and store it in `src/main/resources/book.txt`.\n"
"It's a 3.2 Mb file, which, while not being huge, illustrates the purpose of streams.\n"
"This time, we will not accumulate the file's content in memory and write it in one batch, but read it chunk by chunk and write these chunks into the HTTP response one by one."
msgstr "Primeiro, faça o download do link:https://www.gutenberg.org/files/2600/2600-0.txt[War and Peace] e armazene-o em `src/main/resources/book.txt` . É um arquivo de 3,2 Mb que, embora não seja enorme, ilustra a finalidade dos fluxos. Desta vez, não acumularemos o conteúdo do arquivo na memória e o escreveremos em um único lote, mas o leremos pedaço por pedaço e escreveremos esses pedaços na resposta HTTP um por um."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "So, you should have the following files in your project:"
msgstr "Portanto, o senhor deve ter os seguintes arquivos no seu projeto:"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "Add the following imports to the `src/main/java/org/acme/VertxResource.java` file:"
msgstr "Adicione as seguintes importações ao arquivo `src/main/java/org/acme/VertxResource.java` :"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "Add the following method to the `VertxResource` class:"
msgstr "Adicione o seguinte método à classe `VertxResource` :"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "This time, we return a Multi as we want to stream the chunks"
msgstr "Desta vez, retornamos um Multi, pois queremos transmitir os blocos"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "We open the file using the `open` method. It returns a `Uni<AsyncFile>`"
msgstr "Abrimos o arquivo usando o método `open` . Ele retorna um `Uni<AsyncFile>`"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "When the file is opened, we retrieve a `Multi` which will contain the chunks."
msgstr "Quando o arquivo é aberto, recuperamos um `Multi` que conterá os blocos."

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "For each chunk, we produce a String"
msgstr "Para cada pedaço, produzimos uma String"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "To visually see the chunks in the response, we append a separator"
msgstr "Para ver visualmente os blocos na resposta, anexamos um separador"

#. type: Plain text
#: _guides/vertx.adoc
#, fuzzy
msgid "Then, in a terminal, run:"
msgstr "Em seguida, em um terminal, execute:"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"It should retrieve the book content.\n"
"In the output you should see the separator like:"
msgstr "Ele deve recuperar o conteúdo do livro. Na saída, o senhor deve ver o separador como:"

#. type: Title ==
#: _guides/vertx.adoc
#, no-wrap
msgid "Using the event bus"
msgstr "Utilizar o barramento de eventos"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"One of the core features of Vert.x is the https://vertx.io/docs/vertx-core/java/#event_bus[event bus].\n"
"It provides a message-based backbone to your application.\n"
"So, you can have components interacting using asynchronous message passing, and so decouple your components.\n"
"You can send a message to a single consumer, or dispatch to multiple consumers, or implement a request-reply interaction, where you send a message (request) and expect a response.\n"
"This is what we are going to use in this section.\n"
"Our `VertxResource` will send a message containing a name to the `greetings` address.\n"
"Another component will receive the message and produce the \"hello $name\" response.\n"
"The `VertxResource` will receive the response and return it as the HTTP response."
msgstr "Um dos principais recursos do Vert.x é o link:https://vertx.io/docs/vertx-core/java/#event_bus[barramento de eventos] . Ele fornece um backbone baseado em mensagens para seu aplicativo. Assim, o senhor pode ter componentes interagindo usando a passagem assíncrona de mensagens e, dessa forma, desacoplar os componentes. O senhor pode enviar uma mensagem a um único consumidor, ou despachar para vários consumidores, ou implementar uma interação de solicitação-resposta, em que envia uma mensagem (solicitação) e espera uma resposta. É isso que usaremos nesta seção. Nosso `VertxResource` enviará uma mensagem contendo um nome para o endereço `greetings` . Outro componente receberá a mensagem e produzirá a resposta \"hello $name\". O `VertxResource` receberá a resposta e a retornará como resposta HTTP."

#. type: delimited block -
#: _guides/vertx.adoc
msgid "So, first, add the following imports to the `src/main/java/org/acme/VertxResource.java` file:"
msgstr "So, first, add the following imports to the `src/main/java/org/acme/VertxResource.java` file:"

#: _guides/vertx.adoc
#, fuzzy
msgid "Next, let's extend our `VertxResource` class with the following code:"
msgstr "Em seguida, vamos estender nossa classe `VertxResource` com o seguinte código:"

#: _guides/vertx.adoc
#, fuzzy
msgid "Inject the event bus. Alternatively you can use `vertx.eventBus()`."
msgstr "Injete o barramento de eventos. Como alternativa, o senhor pode usar `vertx.eventBus()` ."

#: _guides/vertx.adoc
#, fuzzy
msgid "We receive a _name_ as a query parameter"
msgstr "Recebemos um _nome_ como parâmetro de consulta"

#: _guides/vertx.adoc
#, fuzzy
msgid "We use the `request` method to initiate the request-reply interaction. We send the name to the \"greetings\" address."
msgstr "Usamos o método `request` para iniciar a interação entre solicitação e resposta. Enviamos o nome para o endereço \"greetings\"."

#: _guides/vertx.adoc
#, fuzzy
msgid "When the response is received, we extract the body and return it as the HTTP response"
msgstr "Quando a resposta é recebida, extraímos o corpo e o retornamos como a resposta HTTP"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Now, we need the other side: the component receiving the name and replying.\n"
"Create the `src/main/java/org/acme/GreetingService.java` file with the following content:"
msgstr "Agora, precisamos do outro lado: o componente que recebe o nome e responde. Crie o arquivo `src/main/java/org/acme/GreetingService.java` com o seguinte conteúdo:"

#: _guides/vertx.adoc
#, fuzzy
msgid "Declaring a CDI Bean in the Application scope. Quarkus will create a single instance of this class."
msgstr "Declarar um Bean CDI no escopo do aplicativo. O Quarkus criará uma única instância dessa classe."

#: _guides/vertx.adoc
#, fuzzy
msgid "Use the `@ConsumeEvent` annotation to declare a consumer. It is possible to use the Vert.x API https://vertx.io/docs/vertx-core/java/#_acknowledging_messages_sending_replies[directly] too."
msgstr "Use a anotação `@ConsumeEvent` para declarar um consumidor. Também é possível usar a API Vert.x link:https://vertx.io/docs/vertx-core/java/#_acknowledging_messages_sending_replies[diretamente] ."

#: _guides/vertx.adoc
#, fuzzy
msgid "Receive the message payload as a method parameter. The returned object will be the reply."
msgstr "Recebe o payload da mensagem como parâmetro do método. O objeto retornado será a resposta."

#: _guides/vertx.adoc
#, fuzzy
msgid "Return the response. This response is sent back to the `VertxResource` class"
msgstr "Retorna a resposta. Essa resposta é enviada de volta para a classe `VertxResource` "

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Let's try this.\n"
"In a terminal, run:"
msgstr "Vamos tentar isso. Em um terminal, execute:"

#: _guides/vertx.adoc
#, fuzzy
msgid "You should get the expected `Hello bob` message back."
msgstr "O senhor deve receber de volta a mensagem esperada `Hello bob` ."

#. type: Title ==
#: _guides/vertx.adoc
#, fuzzy, no-wrap
msgid "Using Vert.x Clients"
msgstr "Usando clientes Vert.x"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"So far, we have used the Vert.x Core API.\n"
"Vert.x offers much more.\n"
"It provides a vast ecosystem.\n"
"In this section, we will see how you can use the Vert.x Web Client, a reactive HTTP client."
msgstr "Até agora, usamos a API principal do Vert.x. A Vert.x oferece muito mais. Ele oferece um vasto ecossistema. Nesta seção, veremos como usar o Vert.x Web Client, um cliente HTTP reativo."

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Note that some Quarkus extensions are wrapping Vert.x clients and manage them for you.\n"
"That's the case for the reactive data sources, Redis, mail...\n"
"That's not the case with the Web Client."
msgstr "Observe que algumas extensões do Quarkus envolvem os clientes Vert.x e os gerenciam para o senhor. Esse é o caso das fontes de dados reativas, Redis, e-mail... Não é o caso do Web Client."

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Remember, at the beginning of the guide,  we added the `smallrye-mutiny-vertx-web-client` dependency to our `pom.xml` file.\n"
"It's now time to use it."
msgstr "Lembre-se de que, no início do guia, adicionamos a dependência `smallrye-mutiny-vertx-web-client` ao nosso arquivo `pom.xml` . Agora é hora de usá-la."

#. type: delimited block -
#: _guides/vertx.adoc
msgid "First, add the following imports to the `src/main/java/org/acme/VertxResource.java` file:"
msgstr "First, add the following imports to the `src/main/java/org/acme/VertxResource.java` file:"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Next, we need to create an instance of `WebClient`.\n"
"Extend the `VertxResource` class with the `client` field and the creation of the web client in the constructor:"
msgstr "Em seguida, precisamos criar uma instância de `WebClient` . Estenda a classe `VertxResource` com o campo `client` e a criação do cliente Web no construtor:"

#: _guides/vertx.adoc
#, fuzzy
msgid "Store the `WebClient`, so we will be able to use it in our HTTP endpoint"
msgstr "Armazene o endereço `WebClient` , para que possamos usá-lo em nosso endpoint HTTP"

#: _guides/vertx.adoc
#, fuzzy
msgid "Create the `WebClient`. Be sure to use the `io.vertx.mutiny.ext.web.client.WebClient` class"
msgstr "Crie o `WebClient` . Certifique-se de usar a classe `io.vertx.mutiny.ext.web.client.WebClient` "

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Let's now implement a new HTTP endpoint that queries the Wikipedia API to retrieve the pages about Quarkus in the different languages.\n"
"Add the following method to the `VertxResource` class:"
msgstr "Vamos agora implementar um novo ponto de extremidade HTTP que consulta a API da Wikipedia para recuperar as páginas sobre o Quarkus nos diferentes idiomas. Adicione o seguinte método à classe `VertxResource` :"

#: _guides/vertx.adoc
#, fuzzy
msgid "This endpoint returns a JSON Array. Vert.x provides a convenient way to manipulate JSON Object and Array. More details about these in xref:vertx-reference.adoc#using-vert-x-json[the reference guide]."
msgstr "Esse endpoint retorna uma matriz JSON. O Vert.x oferece uma maneira conveniente de manipular objetos e matrizes JSON. Para obter mais detalhes sobre isso, consulte xref:vertx-reference.adoc#using-vert-x-json[o guia de referência] ."

#: _guides/vertx.adoc
#, fuzzy
msgid "Send a `GET` request to the Wikipedia API"
msgstr "Enviar uma solicitação `GET` para a API da Wikipédia"

#: _guides/vertx.adoc
#, fuzzy
msgid "Once the response is received, extract it as a JSON Object"
msgstr "Quando a resposta for recebida, extraia-a como um objeto JSON"

#: _guides/vertx.adoc
#, fuzzy
msgid "Extract the `langlinks` array from the response."
msgstr "Extraia a matriz `langlinks` da resposta."

#: _guides/vertx.adoc
#, fuzzy
msgid "Then, invoke the endpoint using:"
msgstr "Em seguida, invoque o endpoint usando:"

#: _guides/vertx.adoc
#, fuzzy
msgid "The response indicates that, in addition to the English page, there are a German and a French page about Quarkus on wikipedia."
msgstr "A resposta indica que, além da página em inglês, há uma página em alemão e outra em francês sobre o Quarkus na wikipedia."

#. type: Title ==
#: _guides/vertx.adoc
#, fuzzy, no-wrap
msgid "Executing Asynchronous Code From a Blocking Thread"
msgstr "Execução de código assíncrono a partir de uma thread de bloqueio"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"Sometimes it's necessary to execute an asynchronous code from a blocking thread.\n"
"Specifically, to execute the code on a Vert.x thread with an isolated/duplicated Vert.x context.\n"
"A typical example is an asynchronous code that needs to leverage the Hibernate Reactive API during application startup.\n"
"Quarkus provides the `VertxContextSupport#subscribeAndAwait()` method which subscribes to the supplied `io.smallrye.mutiny.Uni` on a Vert.x duplicated context, then blocks the current thread and waits for the result."
msgstr "Às vezes, é necessário executar um código assíncrono a partir de uma thread de bloqueio. Especificamente, para executar o código em um thread Vert.x com um contexto Vert.x isolado/duplicado. Um exemplo típico é um código assíncrono que precisa aproveitar a API reativa do Hibernate durante a inicialização do aplicativo. O Quarkus fornece o método `VertxContextSupport#subscribeAndAwait()` que assina o `io.smallrye.mutiny.Uni` fornecido em um contexto Vert.x duplicado, bloqueia o thread atual e aguarda o resultado."

#: _guides/vertx.adoc
#, fuzzy
msgid "If necessary, the CDI request context is activated during execution of the asynchronous code."
msgstr "Se necessário, o contexto de solicitação CDI é ativado durante a execução do código assíncrono."

#: _guides/vertx.adoc
#, fuzzy
msgid "`VertxContextSupport#subscribeAndAwait()` must not be called on an event loop!"
msgstr "`VertxContextSupport#subscribeAndAwait()` não deve ser chamado em um loop de eventos!"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"It is also possible to subscribe to a supplied `io.smallrye.mutiny.Multi` on a Vert.x duplicated context.\n"
"In this case, the current thread is not blocked and the supplied subscription logic is used to consume the events."
msgstr "Também é possível assinar um `io.smallrye.mutiny.Multi` fornecido em um contexto duplicado Vert.x. Nesse caso, o thread atual não é bloqueado e a lógica de assinatura fornecida é usada para consumir os eventos."

#. type: Title ==
#: _guides/vertx.adoc
#, no-wrap
msgid "Going further"
msgstr "Indo mais longe"

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"This guide introduced how you can use Vert.x APIs from a Quarkus application.\n"
"It's just a brief overview.\n"
"If you want to know more, check the xref:vertx-reference.adoc[reference guide about Vert.x in Quarkus]."
msgstr "Este guia apresentou como o senhor pode usar as APIs do Vert.x em um aplicativo Quarkus. É apenas uma breve visão geral. Se o senhor quiser saber mais, consulte o xref:vertx-reference.adoc[guia de referência sobre o Vert.x no Quarkus] ."

#: _guides/vertx.adoc
#, fuzzy
msgid ""
"As we have seen, the event bus is the connecting tissue of Vert.x applications.\n"
"Quarkus integrates it so different beans can interact with asynchronous messages.\n"
"This part is covered in the xref:reactive-event-bus.adoc[event bus documentation]."
msgstr "Como vimos, o barramento de eventos é o tecido de conexão dos aplicativos Vert.x. O Quarkus o integra para que diferentes beans possam interagir com mensagens assíncronas. Essa parte é abordada na xref:reactive-event-bus.adoc[documentação do event bus] ."

#. type: delimited block -
#: _guides/vertx.adoc
msgid "Learn how to implement highly performant, low-overhead database applications on Quarkus with the xref:reactive-sql-clients.adoc[Reactive SQL Clients]."
msgstr "Learn how to implement highly performant, low-overhead database applications on Quarkus with the xref:reactive-sql-clients.adoc[Reactive SQL Clients]."
