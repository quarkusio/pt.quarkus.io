# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing Your Application"
msgstr "Testar a sua aplicação"

#: _guides/getting-started-testing.adoc
msgid ""
"Learn how to test your Quarkus Application.\n"
"This guide covers:"
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Testing in JVM mode"
msgstr "Testes no modo JVM"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Testing in native mode"
msgstr "Testes em modo nativo"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Injection of resources into tests"
msgstr "Injeção de recursos nos ensaios"

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The completed greeter application from the xref:getting-started.adoc[Getting Started Guide]"
msgstr "A aplicação de rececionista preenchida do  link:getting-started.html[Guia de Introdução]"

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitetura"

#: _guides/getting-started-testing.adoc
msgid ""
"In this guide, we expand on the initial test that was created as part of the Getting Started Guide.\n"
"We cover injection into tests and also how to test native executables."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Quarkus supports Continuous testing, but this is covered by the xref:continuous-testing.adoc[Continuous Testing Guide]."
msgstr "O Quarkus suporta testes contínuos, mas isso é abordado no  link:continuous-testing.html[Guia de testes contínuos]."

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#: _guides/getting-started-testing.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The solution is located in the `getting-started-testing` link:{quickstarts-tree-url}/getting-started-testing[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/getting-started-testing[diretório] `getting-started-testing`."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "This guide assumes you already have the completed application from the `getting-started` directory."
msgstr "Este guia parte do princípio de que já tem a aplicação preenchida no diretório `getting-started`."

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Recap of HTTP based Testing in JVM mode"
msgstr "Recapitulação dos testes baseados em HTTP no modo JVM"

#: _guides/getting-started-testing.adoc
msgid ""
"If you have started from the Getting Started example you should already have a completed test, including the correct\n"
"tooling setup."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "In your build file you should see 2 test dependencies:"
msgstr "No seu ficheiro de compilação, deve ver 2 dependências de teste:"

#. type: Block title
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: Block title
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Gradle"
msgstr "Gradle"

#: _guides/getting-started-testing.adoc
msgid ""
"`quarkus-junit5` is required for testing, as it provides the `@QuarkusTest` annotation that controls the testing framework.\n"
"`rest-assured` is not required but is a convenient way to test HTTP endpoints, we also provide integration that automatically\n"
"sets the correct URL so no configuration is required."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Because we are using JUnit 5, the version of the https://maven.apache.org/surefire/maven-surefire-plugin/[Surefire Maven Plugin]\n"
"must be set, as the default version does not support Junit 5:"
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"We also set the `java.util.logging.manager` system property to make sure tests will use the correct logmanager and `maven.home` to ensure that custom configuration\n"
"from `${maven.home}/conf/settings.xml` is applied (if any)."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The project should also contain a simple test:"
msgstr "O projeto deve também conter um teste simples:"

#: _guides/getting-started-testing.adoc
msgid ""
"This test uses HTTP to directly test our REST endpoint. When the test is run the application will be started before\n"
"the test is run."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Controlling the test port"
msgstr "Controlo da porta de ensaio"

#: _guides/getting-started-testing.adoc
msgid ""
"While Quarkus will listen on port `8080` by default, when running tests it defaults to `8081`. This allows you to run\n"
"tests while having the application running in parallel."
msgstr ""

#. type: Block title
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Changing the test port"
msgstr "Alterar a porta de teste"

#. type: delimited block =
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "You can configure the ports used by tests by configuring `quarkus.http.test-port` for HTTP and `quarkus.http.test-ssl-port` for HTTPS in your `application.properties`:"
msgstr "Pode configurar as portas utilizadas pelos testes configurando `quarkus.http.test-port` para HTTP e `quarkus.http.test-ssl-port` para HTTPS no seu `application.properties`:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`0` will result in the use of a random port (assigned by the operating system)."
msgstr "`0` resultará na utilização de uma porta aleatória (atribuída pelo sistema operativo)."

#: _guides/getting-started-testing.adoc
msgid ""
"Quarkus also provides RestAssured integration that updates the default port used by RestAssured before the tests are run,\n"
"so no additional configuration should be required."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Controlling HTTP interaction timeout"
msgstr "Controlo do tempo limite de interação HTTP"

#: _guides/getting-started-testing.adoc
msgid ""
"When using REST Assured in your test, the connection and response timeouts are set to 30 seconds.\n"
"You can override this setting with the `quarkus.http.test-timeout` property:"
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Injecting a URI"
msgstr "Injetar um URI"

#: _guides/getting-started-testing.adoc
msgid ""
"It is also possible to directly inject the URL into the test which can make is easy to use a different client. This is\n"
"done via the `@TestHTTPResource` annotation."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Let's write a simple test that shows this off to load some static resources. First create a simple HTML file in\n"
"`src/main/resources/META-INF/resources/index.html` :"
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "We will create a simple test to ensure that this is being served correctly:"
msgstr "Vamos criar um teste simples para garantir que este está a ser servido corretamente:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "This annotation allows you to directly inject the URL of the Quarkus instance, the value of the annotation will be the path component of the URL"
msgstr "Esta anotação permite-lhe injetar diretamente o URL da instância Quarkus, o valor da anotação será o componente do caminho do URL"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "For now `@TestHTTPResource` allows you to inject `URI`, `URL` and `String` representations of the URL."
msgstr "Por enquanto, `@TestHTTPResource` permite-lhe injetar `URI`, `URL` e `String` representações do URL."

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing a specific endpoint"
msgstr "Testar um ponto final específico"

#: _guides/getting-started-testing.adoc
msgid ""
"Both RESTassured and `@TestHTTPResource` allow you to specify the endpoint class you are testing rather than hard coding\n"
"a path. This currently supports both Jakarta REST endpoints, Servlets and Reactive Routes. This makes it a lot easier to see exactly which endpoints\n"
"a given test is testing."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "For the purposes of these examples I am going to assume we have an endpoint that looks like the following:"
msgstr "Para efeitos destes exemplos, vou assumir que temos um ponto final que se parece com o seguinte:"

#: _guides/getting-started-testing.adoc
msgid ""
"This currently does not support the `@ApplicationPath()` annotation to set the Jakarta REST context path. Use the\n"
"`quarkus.resteasy.path` config value instead if you want a custom context path."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "TestHTTPResource"
msgstr "TestHTTPResource"

#: _guides/getting-started-testing.adoc
msgid ""
"You can the use the `io.quarkus.test.common.http.TestHTTPEndpoint` annotation to specify the endpoint path, and the path\n"
"will be extracted from the provided endpoint. If you also specify a value for the `TestHTTPResource` endpoint it will\n"
"be appended to the end of the endpoint path."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Because `GreetingResource` is annotated with `@Path(\"/hello\")` the injected URL\n"
"will end with `/hello`."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "RESTassured"
msgstr "RESTassured"

#: _guides/getting-started-testing.adoc
msgid ""
"To control the RESTassured base path (i.e. the default path that serves as the root for every\n"
"request) you can use the `io.quarkus.test.common.http.TestHTTPEndpoint` annotation. This can\n"
"be applied at the class or method level. To test out greeting resource we would do:"
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "This tells RESTAssured to prefix all requests with `/hello`."
msgstr "Isto diz ao RESTAssured para prefixar todos os pedidos com `/hello`."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Note we don't need to specify a path here, as `/hello` is the default for this test"
msgstr "Note que não é necessário especificar um caminho aqui, pois `/hello` é o padrão para este teste"

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Injection into tests"
msgstr "Injeção nos ensaios"

#: _guides/getting-started-testing.adoc
msgid ""
"So far we have only covered integration style tests that test the app via HTTP endpoints, but what if we want to do unit\n"
"testing and test our beans directly?"
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Quarkus supports this by allowing you to inject CDI beans into your tests via the `@Inject` annotation (in fact, tests in\n"
"Quarkus are full CDI beans, so you can use all CDI functionality). Let's create a simple test that tests the greeting\n"
"service directly without using HTTP:"
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The `GreetingService` bean will be injected into the test"
msgstr "O feijão `GreetingService` será injetado no teste"

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Applying Interceptors to Tests"
msgstr "Aplicação de interceptores a testes"

#: _guides/getting-started-testing.adoc
msgid ""
"As mentioned above Quarkus tests are actually full CDI beans, and as such you can apply CDI interceptors as you would\n"
"normally. As an example, if you want a test method to run within the context of a transaction you can simply apply the\n"
"`@Transactional` annotation to the method and the transaction interceptor will handle it."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"In addition to this you can also create your own test stereotypes. For example, we could create a `@TransactionalQuarkusTest`\n"
"as follows:"
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"If we then apply this annotation to a test class it will act as if we had applied both the `@QuarkusTest` and\n"
"`@Transactional` annotations, e.g.:"
msgstr ""

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Tests and Transactions"
msgstr "Testes e transacções"

#: _guides/getting-started-testing.adoc
msgid ""
"You can use the standard Quarkus `@Transactional` annotation on tests, but this means that the changes your\n"
"test makes to the database will be persistent. If you want any changes made to be rolled back at the end of\n"
"the test you can use the `io.quarkus.test.TestTransaction` annotation. This will run the test method in a\n"
"transaction, but roll it back once the test method is complete to revert any database changes."
msgstr ""

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Enrichment via QuarkusTest*Callback"
msgstr "Enriquecimento através de QuarkusTest*Callback"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Alternatively or additionally to an interceptor, you can enrich *all* your `@QuarkusTest` classes by implementing the following callback interfaces:"
msgstr "Em alternativa ou adicionalmente a um intercetor, pode enriquecer *todas as* suas classes `@QuarkusTest` implementando as seguintes interfaces de retorno de chamada:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestBeforeClassCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestBeforeClassCallback`"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestAfterConstructCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestAfterConstructCallback`"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback`"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestBeforeTestExecutionCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestBeforeTestExecutionCallback`"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestAfterTestExecutionCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestAfterTestExecutionCallback`"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestAfterEachCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestAfterEachCallback`"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Optionally, you can enable these callbacks also for the `@QuarkusIntegrationTest` tests if the property `quarkus.test.enable-callbacks-for-integration-tests` is `true`."
msgstr "Opcionalmente, pode ativar estas chamadas de retorno também para os testes `@QuarkusIntegrationTest` se a propriedade `quarkus.test.enable-callbacks-for-integration-tests` for `true`."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Such a callback implementation has to be registered as a \"service provider\" as defined by `java.util.ServiceLoader`."
msgstr "Essa implementação de retorno de chamada tem de ser registada como um \"fornecedor de serviços\", tal como definido em `java.util.ServiceLoader`."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "E.g. the following sample callback:"
msgstr "Por exemplo, o seguinte exemplo de chamada de retorno:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "has to be registered via `src/main/resources/META-INF/services/io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback` as follows:"
msgstr "tem de ser registado em `src/main/resources/META-INF/services/io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback` da seguinte forma:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "It is possible to read annotations from the test class or method to control what the callback shall be doing."
msgstr "É possível ler anotações da classe ou método de teste para controlar o que a chamada de retorno deve fazer."

#: _guides/getting-started-testing.adoc
msgid ""
"While it is possible to use JUnit Jupiter callback interfaces like `BeforeEachCallback`, you might run into classloading issues because Quarkus has\n"
"         to run tests in a custom classloader which JUnit is not aware of."
msgstr ""

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing Different Profiles"
msgstr "Teste de perfis diferentes"

#: _guides/getting-started-testing.adoc
msgid ""
"So far in all our examples we only start Quarkus once for all tests. Before the first test is run Quarkus will boot,\n"
"then all tests will run, then Quarkus will shut down at the end. This makes for a very fast testing experience however\n"
"it is a bit limited as you can't test different configurations."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"To get around this Quarkus supports the idea of a test profile. If a test has a different profile to the previously\n"
"run test then Quarkus will be shut down and started with the new profile before running the tests. This is obviously\n"
"a bit slower, as it adds a shutdown/startup cycle to the test time, but gives a great deal of flexibility."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"To reduce the amount of times Quarkus needs to restart, `io.quarkus.test.junit.util.QuarkusTestProfileAwareClassOrderer`\n"
"is registered as a global `ClassOrderer` as described in the\n"
"link:https://junit.org/junit5/docs/current/user-guide/#writing-tests-test-execution-order-classes[JUnit 5 User Guide].\n"
"The behavior of this `ClassOrderer` is configurable via `junit-platform.properties` (see the source code or javadoc for more details).\n"
"It can also be disabled entirely by setting another `ClassOrderer` that is provided by JUnit 5 or even your own custom one. +\n"
"Please note that as of JUnit 5.8.2 link:https://github.com/junit-team/junit5/issues/2794[only a single `junit-platform.properties` is picked up and a warning is logged if more than one is found].\n"
"If you encounter such warnings, you can get rid of them by removing the Quarkus-supplied `junit-platform.properties` from the classpath via an exclusion:"
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Writing a Profile"
msgstr "Escrever um perfil"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "To implement a test profile we need to implement `io.quarkus.test.junit.QuarkusTestProfile`:"
msgstr "Para implementar um perfil de teste, precisamos de implementar `io.quarkus.test.junit.QuarkusTestProfile`:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "All these methods have default implementations so just override the ones you need to override."
msgstr "Todos estes métodos têm implementações predefinidas, pelo que basta substituir os que precisa de substituir."

#: _guides/getting-started-testing.adoc
msgid ""
"Now we have defined our profile we need to include it on our test class.\n"
"We do this by annotating the test class with `@TestProfile(MockGreetingProfile.class)`."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"All the test profile configuration is stored in a single class, which makes it easy to tell if the previous test ran with the\n"
"same configuration."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Running specific tests"
msgstr "Execução de testes específicos"

#: _guides/getting-started-testing.adoc
msgid ""
"Quarkus provides the ability to limit test execution to tests with specific  `@TestProfile` annotations.\n"
"This works by leveraging the `tags` method of `QuarkusTestProfile` in conjunction with the `quarkus.test.profile.tags` system property."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Essentially, any `QuarkusTestProfile` with at least one matching tag matching the value of `quarkus.test.profile.tags` will be considered active\n"
"and all the tests annotated with `@TestProfile` of active profiles, will be run while the rest will be skipped.\n"
"This is best shown in the following example."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "First let's define a few `QuarkusTestProfile` implementations like so:"
msgstr "Em primeiro lugar, vamos definir algumas implementações de `QuarkusTestProfile` da seguinte forma:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Now let's assume that we have the following tests:"
msgstr "Agora vamos supor que temos os seguintes testes:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Let's consider the following scenarios:"
msgstr "Consideremos os seguintes cenários:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`quarkus.test.profile.tags` is not set: All tests will be executed."
msgstr "`quarkus.test.profile.tags` não está definido: Todos os testes serão executados."

#: _guides/getting-started-testing.adoc
msgid ""
"`quarkus.test.profile.tags=foo`: In this case none of tests will be executed because none of the tags defined on the `QuarkusTestProfile` implementations match the value of `quarkus.test.profile.tags`.\n"
"Note that `NoQuarkusProfileTest` is not executed either because it is not annotated with `@TestProfile`."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"`quarkus.test.profile.tags=test1`: In this case `SingleTagTest` and `MultipleTagsTest` will be run because the tags on their respective `QuarkusTestProfile` implementations\n"
"match the value of `quarkus.test.profile.tags`."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`quarkus.test.profile.tags=test1,test3`: This case results in the same tests being executed as the previous case."
msgstr "`quarkus.test.profile.tags=test1,test3`: Este caso resulta na execução dos mesmos testes que o caso anterior."

#: _guides/getting-started-testing.adoc
msgid ""
"`quarkus.test.profile.tags=test2,test3`: In this case only `MultipleTagsTest` will be run because `MultipleTagsTest` is the only `QuarkusTestProfile` implementation whose `tags` method\n"
"matches the value of `quarkus.test.profile.tags`."
msgstr ""

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Mock Support"
msgstr "Suporte simulado"

#: _guides/getting-started-testing.adoc
msgid ""
"Quarkus supports the use of mock objects using two different approaches. You can either use CDI alternatives to\n"
"mock out a bean for all test classes, or use `QuarkusMock` to mock out beans on a per test basis."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "CDI `@Alternative` mechanism."
msgstr "CDI `@Alternative` mecanismo."

#: _guides/getting-started-testing.adoc
msgid ""
"To use this simply override the bean you wish to mock with a class in the `src/test/java` directory, and put the `@Alternative` and `@Priority(1)` annotations on the bean.\n"
"Alternatively, a convenient `io.quarkus.test.Mock` stereotype annotation could be used.\n"
"This built-in stereotype declares `@Alternative`, `@Priority(1)` and `@Dependent`.\n"
"For example if I have the following service:"
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "I could mock it with the following class in `src/test/java`:"
msgstr "Posso simulá-lo com a seguinte classe em `src/test/java`:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Overrides the `@Dependent` scope declared on the `@Mock` stereotype."
msgstr "Substitui o âmbito `@Dependent` declarado no estereótipo `@Mock`."

#: _guides/getting-started-testing.adoc
msgid ""
"It is important that the alternative be present in the `src/test/java` directory rather than `src/main/java`, as otherwise\n"
"it will take effect all the time, not just when testing."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Note that at present this approach does not work with native image testing, as this would require the test alternatives\n"
"to be baked into the native image."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Mocking using QuarkusMock"
msgstr "Simulação com o QuarkusMock"

#: _guides/getting-started-testing.adoc
msgid ""
"The `io.quarkus.test.junit.QuarkusMock` class can be used to temporarily mock out any normal scoped\n"
"bean. If you use this method in a `@BeforeAll` method the mock will take effect for all tests on the current class,\n"
"while if you use this in a test method the mock will only take effect for the duration of the current test."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"This method can be used for any normal scoped CDI bean (e.g. `@ApplicationScoped`, `@RequestScoped` etc, basically\n"
"every scope except `@Singleton` and `@Dependent`)."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "An example usage could look like:"
msgstr "Um exemplo de utilização poderia ser o seguinte:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "As the injected instance is not available here we use `installMockForType`, this mock is used for both test methods"
msgstr "Como a instância injectada não está disponível, utilizamos `installMockForType`, este mock é utilizado para ambos os métodos de teste"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "We use `installMockForInstance` to replace the injected bean, this takes effect for the duration of the test method."
msgstr "Utilizamos `installMockForInstance` para substituir o bean injetado, o que tem efeito durante a duração do método de teste."

#: _guides/getting-started-testing.adoc
msgid ""
"Note that there is no dependency on Mockito, you can use any mocking library you like, or even manually override the\n"
"objects to provide the behaviour you require."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Using `@Inject` will get you a CDI proxy to the mock instance you install, which is not suitable for passing to methods such as `Mockito.verify`\n"
"which want the mock instance itself.\n"
"So if you need to call methods such as `verify` you should hang on to the mock instance in your test, or use `@io.quarkus.test.InjectMock`."
msgstr ""

#. type: Title ====
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Further simplification with `@InjectMock`"
msgstr "Simplificação adicional com `@InjectMock`"

#: _guides/getting-started-testing.adoc
msgid ""
"Building on the features provided by `QuarkusMock`, Quarkus also allows users to effortlessly take advantage of link:https://site.mockito.org/[Mockito] for mocking the beans supported by `QuarkusMock`.\n"
"This functionality is available with the `@io.quarkus.test.InjectMock` annotation if the `quarkus-junit5-mockito` dependency is present."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Using `@InjectMock`, the previous example could be written as follows:"
msgstr "Utilizando `@InjectMock`, o exemplo anterior pode ser escrito da seguinte forma:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`@InjectMock` results in a Mockito mock being created, which is then available in test methods of the test class (other test classes are *not* affected by this)"
msgstr "`@InjectMock` resulta na criação de uma simulação do Mockito, que fica então disponível nos métodos de teste da classe de teste (outras classes de teste *não* são afectadas por isto)"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The `mockableBean1` is configured here for every test method of the class"
msgstr "O `mockableBean1` é configurado aqui para cada método de teste da classe"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Since the `mockableBean2` mock has not been configured, it will return the default Mockito response."
msgstr "Uma vez que a simulação `mockableBean2` não foi configurada, devolverá a resposta predefinida do Mockito."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "In this test the `mockableBean2` is configured, so it returns the configured response."
msgstr "Neste teste, o `mockableBean2` está configurado, pelo que devolve a resposta configurada."

#: _guides/getting-started-testing.adoc
msgid ""
"Although the test above is good for showing the capabilities of `@InjectMock`, it is not a good representation of a real test. In a real test\n"
"we would most likely configure a mock, but then test a bean that uses the mocked bean.\n"
"Here is an example:"
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Since we configured `greetingService` as a mock, the `GreetingResource` which uses the `GreetingService` bean, we get the mocked response instead of the response of the regular `GreetingService` bean"
msgstr "Uma vez que configurámos `greetingService` como uma simulação, o `GreetingResource` que utiliza o bean `GreetingService`, obtemos a resposta simulada em vez da resposta do bean normal `GreetingService`"

#: _guides/getting-started-testing.adoc
msgid ""
"By default, the `@InjectMock` annotation can be used for any normal CDI scoped bean (e.g. `@ApplicationScoped`, `@RequestScoped`).\n"
"Mocking `@Singleton` beans can be performed by adding the `@MockitoConfig(convertScopes = true)` annotation.\n"
"This will convert the `@Singleton` bean to an `@ApplicationScoped` bean for the test."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "This is considered an advanced option and should only be performed if you fully understand the consequences of changing the scope of the bean."
msgstr "Esta é considerada uma opção avançada e só deve ser executada se o utilizador compreender bem as consequências da alteração do âmbito do bean."

#. type: Title ====
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Using Spies instead of Mocks with `@InjectSpy`"
msgstr "Utilizar Spies em vez de Mocks com `@InjectSpy`"

#: _guides/getting-started-testing.adoc
msgid ""
"Building on the features provided by `InjectMock`, Quarkus also allows users to effortlessly take advantage of link:https://site.mockito.org/[Mockito] for spying on the beans supported by `QuarkusMock`.\n"
"This functionality is available via the `@io.quarkus.test.junit.mockito.InjectSpy` annotation which is available in the `quarkus-junit5-mockito` dependency."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Sometimes when testing you only need to verify that a certain logical path was taken, or you only need to stub out a single method's response while still executing the rest of the methods on the Spied clone. Please see link:https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#13[Mockito documentation - Spying on real objects] for more details on Spy partial mocks.\n"
"In either of those situations a Spy of the object is preferable.\n"
"Using `@InjectSpy`, the previous example could be written as follows:"
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Instead of overriding the value, we just want to ensure that the greet method on our `GreetingService` was called by this test."
msgstr "Em vez de substituir o valor, queremos apenas garantir que o método greet do nosso `GreetingService` foi chamado por este teste."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Here we are telling the Spy to return \"hi\" instead of \"hello\". When the `GreetingResource` requests the greeting from `GreetingService` we get the mocked response instead of the response of the regular `GreetingService` bean. Sometimes it's impossible or impractical to use `when(Object)` for stubbing spies. Therefore when using spies please consider `doReturn|Answer|Throw()` family of methods for stubbing."
msgstr "Aqui estamos a dizer ao Spy para devolver \"hi\" em vez de \"hello\". Quando o `GreetingResource` solicita a saudação de `GreetingService`, obtemos a resposta simulada em vez da resposta do bean `GreetingService` normal. Às vezes é impossível ou impraticável usar `when(Object)` para stubbing spies. Portanto, ao usar spies, considere a família de métodos `doReturn|Answer|Throw()` para stubbing."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "We are verifying that we get the mocked response from the Spy."
msgstr "Estamos a verificar se recebemos a resposta simulada do Spy."

#. type: Title ====
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Using `@InjectMock` with `@RestClient`"
msgstr "Utilizar `@InjectMock` com `@RestClient`"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The `@RegisterRestClient` registers the implementation of the rest-client at runtime, and because the bean needs to be a regular scope, you have to annotate your interface with `@ApplicationScoped`."
msgstr "O `@RegisterRestClient` regista a implementação do rest-client em tempo de execução e, uma vez que o bean tem de ser um âmbito regular, é necessário anotar a sua interface com `@ApplicationScoped`."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "For the test class here is an example:"
msgstr "Para a classe de teste, eis um exemplo:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Indicate that this injection point is meant to use an instance of `RestClient`."
msgstr "Indicar que este ponto de injeção se destina a utilizar uma instância de `RestClient`."

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Mocking with Panache"
msgstr "Zombar com elegância"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "If you are using the `quarkus-hibernate-orm-panache` or `quarkus-mongodb-panache` extensions, check out the xref:hibernate-orm-panache.adoc#mocking[Hibernate ORM with Panache Mocking] and xref:mongodb-panache.adoc#mocking[MongoDB with Panache Mocking] documentation for the easiest way to mock your data access."
msgstr "Se estiver a utilizar as extensões `quarkus-hibernate-orm-panache` ou `quarkus-mongodb-panache`, consulte a documentação  link:hibernate-orm-panache.html#mocking[Hibernate ORM with Panache Mocking] e  link:mongodb-panache.html#mocking[MongoDB with Panache Mocking] para obter a forma mais fácil de simular o acesso aos dados."

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing Security"
msgstr "Teste de segurança"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "If you are using Quarkus Security, check out the xref:security-testing.adoc[Testing Security] section for information on how to easily test security features of the application."
msgstr "Se estiver a utilizar o Quarkus Security, consulte a secção  link:security-testing.html[Teste de segurança] para obter informações sobre como testar facilmente as funcionalidades de segurança da aplicação."

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Starting services before the Quarkus application starts"
msgstr "Iniciar serviços antes do início da aplicação Quarkus"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "A very common need is to start some services on which your Quarkus application depends, before the Quarkus application starts for testing. To address this need, Quarkus provides `@io.quarkus.test.common.QuarkusTestResource` and `io.quarkus.test.common.QuarkusTestResourceLifecycleManager`."
msgstr "Uma necessidade muito comum é a de iniciar alguns serviços dos quais a sua aplicação Quarkus depende, antes de a aplicação Quarkus ser iniciada para testes. Para atender a essa necessidade, o Quarkus fornece `@io.quarkus.test.common.QuarkusTestResource` e `io.quarkus.test.common.QuarkusTestResourceLifecycleManager`."

#: _guides/getting-started-testing.adoc
msgid ""
"By simply annotating any test in the test suite with `@QuarkusTestResource`, Quarkus will run the corresponding `QuarkusTestResourceLifecycleManager` before any tests are run.\n"
"A test suite is also free to utilize multiple `@QuarkusTestResource` annotations, in which case all the corresponding `QuarkusTestResourceLifecycleManager` objects will be run before the tests. When using multiple test resources they can be started concurrently. For that you need to set `@QuarkusTestResource(parallel = true)`."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Test resources are global, even if they are defined on a test class or custom profile, which means they will all be activated for all tests, even though we do\n"
"remove duplicates. If you want to only enable a test resource on a single test class or test profile, you can use `@QuarkusTestResource(restrictToAnnotatedClass = true)`."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Quarkus provides a few implementations of `QuarkusTestResourceLifecycleManager` out of the box (see `io.quarkus.test.h2.H2DatabaseTestResource` which starts an H2 database, or `io.quarkus.test.kubernetes.client.KubernetesServerTestResource` which starts a mock Kubernetes API server),\n"
"but it is common to create custom implementations to address specific application needs.\n"
"Common cases include starting docker containers using https://www.testcontainers.org/[Testcontainers] (an example of which can be found https://github.com/quarkusio/quarkus/blob/main/test-framework/keycloak-server/src/main/java/io/quarkus/test/keycloak/server/KeycloakTestResourceLifecycleManager.java[here]),\n"
"or starting a mock HTTP server using https://wiremock.org/[Wiremock] (an example of which can be found https://github.com/geoand/quarkus-test-demo/blob/main/src/test/java/org/acme/getting/started/country/WiremockCountries.java[here])."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Altering the test class"
msgstr "Alterar a classe de teste"

#: _guides/getting-started-testing.adoc
msgid ""
"When creating a custom `QuarkusTestResourceLifecycleManager` that needs to inject the something into the test class, the `inject` methods can be used.\n"
"If for example you have a test like the following:"
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Making `MyWireMockResource` inject the `wireMockServer` field can be done as shown in the `inject` method of the following code snippet:"
msgstr "Fazer com que `MyWireMockResource` injete o campo `wireMockServer` pode ser feito como mostrado no método `inject` do seguinte trecho de código:"

#: _guides/getting-started-testing.adoc
msgid ""
"It is worth mentioning that this injection into the test class is not under the control of CDI and happens after CDI has performed\n"
"any necessary injections into the test class."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Annotation-based test resources"
msgstr "Recursos de teste baseados em anotações"

#: _guides/getting-started-testing.adoc
msgid ""
"It is possible to write test resources that are enabled and configured using annotations. This is enabled by placing the `@QuarkusTestResource`\n"
"on an annotation which will be used to enable and configure the test resource."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"For example, this defines the `@WithKubernetesTestServer` annotation, which you can use on your tests to activate the `KubernetesServerTestResource`,\n"
"but only for the annotated test class. You can also place them on your `QuarkusTestProfile` test profiles."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"The `KubernetesServerTestResource` class has to implement the\n"
"`QuarkusTestResourceConfigurableLifecycleManager` interface in order to be configured using the previous annotation:"
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"If you want to make the annotation repeatable, the containing annotation type must be annotated with `@QuarkusTestResourceRepeatable`.\n"
"For example, this would define a repeatable `@WithRepeatableTestResource` annotation."
msgstr ""

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Hang Detection"
msgstr "Deteção de enforcamento"

#: _guides/getting-started-testing.adoc
msgid ""
"`@QuarkusTest` has support for hang detection to help diagnose any unexpected hangs. If no progress is made for a specified\n"
"time (i.e. no JUnit callbacks are invoked) then Quarkus will print a stack trace to the console to help diagnose the hang.\n"
"The default value for this timeout is 10 minutes."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"No further action will be taken, and the tests will continue as normal (generally until CI times out), however the printed\n"
"stack traces should help diagnose why the build has failed. You can control this timeout with the\n"
"`quarkus.test.hang-detection-timeout` system property (you can also set this in application.properties, but this won't\n"
"be read until Quarkus has started, so the timeout for Quarkus start will be the default of 10 minutes)."
msgstr ""

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Native Executable Testing"
msgstr "Teste de executáveis nativos"

#: _guides/getting-started-testing.adoc
msgid ""
"It is also possible to test native executables using `@QuarkusIntegrationTest`. This supports all the features mentioned in this\n"
"guide except injecting into tests (and the native executable runs in a separate non-JVM process this is not really possible)."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "This is covered in the xref:building-native-image.adoc[Native Executable Guide]."
msgstr "Isto é abordado no  link:building-native-image.html[Guia do Executável Nativo]."

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Using `@QuarkusIntegrationTest`"
msgstr "Utilizar `@QuarkusIntegrationTest`"

#: _guides/getting-started-testing.adoc
msgid ""
"`@QuarkusIntegrationTest` should be used to launch and test the artifact produced by the Quarkus build, and supports testing a jar (of whichever type), a native image or container image.\n"
"Put simply, this means that if the result of a Quarkus build (`mvn package` or `gradle build`) is a jar, that jar will be launched as `java -jar ...` and tests run against it.\n"
"If instead a native image was built, then the application is launched as `./application ...` and again the tests run against the running application.\n"
"Finally, if a container image was created during the build (by including the `quarkus-container-image-jib` or `quarkus-container-image-docker` extensions and having the\n"
"`quarkus.container-image.build=true` property configured), then a container is created and run (this requires the `docker` executable being present)."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "This is a black box test that supports the same set features and has the same limitations."
msgstr "Trata-se de um teste de caixa negra que suporta o mesmo conjunto de funcionalidades e tem as mesmas limitações."

#: _guides/getting-started-testing.adoc
msgid ""
"As a test annotated with `@QuarkusIntegrationTest` tests the result of the build, it should be run as part of the integration test suite - i.e. by setting `-DskipITs=false` if using Maven or the `quarkusIntTest` task if using Gradle.\n"
"These tests will **not** work if run in the same phase as `@QuarkusTest` as Quarkus has not yet created the final artifact."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The `pom.xml` file contains:"
msgstr "O ficheiro `pom.xml` contém:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "This instructs the failsafe-maven-plugin to run integration-test."
msgstr "Isto dá instruções ao failsafe-maven-plugin para executar o teste de integração."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Then, open the `src/test/java/org/acme/quickstart/GreetingResourceIT.java`. It contains:"
msgstr "Em seguida, abra o sítio `src/test/java/org/acme/quickstart/GreetingResourceIT.java`. Este contém:"

#: _guides/getting-started-testing.adoc
msgid ""
"Use another test runner that starts the application from the native file before the tests.\n"
"The executable is retrieved by the _Failsafe Maven Plugin_."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "We extend our previous tests as a convenience, but you can also implement your tests."
msgstr "Por uma questão de conveniência, alargamos os nossos testes anteriores, mas também pode implementar os seus testes."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "More information can be found in the link:building-native-image#testing-the-native-executable[Testing the native executable Guide]."
msgstr "Para mais informações, consulte o  link:building-native-image#testing-the-native-executable[Guia de teste do executável nativo]."

#. type: delimited block =
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "When the application is tested using `@QuarkusIntegrationTest` it is launched using the `prod` configuration profile, but this can be changed using the `quarkus.test.integration-test-profile` property."
msgstr "Quando a aplicação é testada utilizando `@QuarkusIntegrationTest`, é lançada utilizando o perfil de configuração `prod`, mas este pode ser alterado utilizando a propriedade `quarkus.test.integration-test-profile`."

#: _guides/getting-started-testing.adoc
msgid ""
"While adding test-specific configuration properties using `src/test/resources/application.properties` (note there's `test`, not `main`)\n"
"is possible for unit tests, it's not possible for integration tests."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Launching containers"
msgstr "Lançamento de contentores"

#: _guides/getting-started-testing.adoc
msgid ""
"When `@QuarkusIntegrationTest` results in launching a container (because the application was built with `quarkus.container-image.build` set to `true`), the container is launched on a predictable container network. This facilitates writing integration tests that need to launch services to support the application.\n"
"This means that `@QuarkusIntegrationTest` works out of the box with containers launched via xref:dev-services.adoc[Dev Services], but it also means that it enables using xref:quarkus-test-resource[QuarkusTestLifecycleManager] resources that launch additional containers.\n"
"This can be achieved by having your `QuarkusTestLifecycleManager` implement `io.quarkus.test.common.DevServicesContext.ContextAware`. A simple example could be the following:"
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"The container running the resource to test against, for example PostgreSQL via Testcontainers, is assigned an IP address from the container's network.\n"
"Use the container's \"public\" IP from its network and the \"unmapped\" port number to connect to the service.\n"
"The Testcontainers library usually return connection strings without respecting the container network, so additional code is needed to provide Quarkus the \"correct\" connection string using the container's IP on the container network and the _unmapped_ port number."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The following example illustrates the use with PostgreSQL, but the approach is applicable to all containers."
msgstr "O exemplo seguinte ilustra a utilização com o PostgreSQL, mas a abordagem é aplicável a todos os contentores."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`CustomResource` would be activated on a `@QuarkusIntegrationTest` using `@QuarkusTestResource` as is described in the corresponding section of this doc."
msgstr "`CustomResource` seria ativado em `@QuarkusIntegrationTest` utilizando `@QuarkusTestResource`, tal como descrito na secção correspondente deste documento."

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Executing against a running application"
msgstr "Executar contra uma aplicação em execução"

#: _guides/getting-started-testing.adoc
msgid ""
"`@QuarkusIntegrationTest` supports executing tests against an already running instance of the application. This can be achieved by setting the\n"
"`quarkus.http.test-host` system property when running the tests."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "An example use of this could be the following Maven command, that forces `@QuarkusIntegrationTest` to execute against that is accessible at `http://1.2.3.4:4321`:"
msgstr "Um exemplo de utilização disto poderia ser o seguinte comando Maven, que força `@QuarkusIntegrationTest` a executar contra o que está acessível em `&lt;a href=\"http://1.2.3.4:4321\" class=\"bare\"&gt;http://1.2.3.4:4321&lt;/a&gt;`:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "To test against a running instance that only accepts SSL/TLS connection (example: `https://1.2.3.4:4321`) set the system property `quarkus.http.test-ssl-enabled` to `true`."
msgstr "Para testar contra uma instância em execução que só aceita ligação SSL/TLS (exemplo: `&lt;a href=\"https://1.2.3.4:4321\" class=\"bare\"&gt;https://1.2.3.4:4321&lt;/a&gt;`) defina a propriedade do sistema `quarkus.http.test-ssl-enabled` para `true`."

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Mixing `@QuarkusTest` with other type of tests"
msgstr "Mistura de `@QuarkusTest` com outro tipo de testes"

#: _guides/getting-started-testing.adoc
msgid ""
"Mixing tests annotated with `@QuarkusTest` with tests annotated with either `@QuarkusDevModeTest`, `@QuarkusProdModeTest` or `@QuarkusUnitTest`\n"
"is not allowed in a single execution run (in a single Maven Surefire Plugin execution, for instance),\n"
"while the latter three can coexist."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"The reason of this restriction is that `@QuarkusTest` starts a Quarkus server for the whole lifetime of the tests execution run,\n"
"thus preventing the other tests to start their own Quarkus server."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"To alleviate this restriction, the `@QuarkusTest` annotation defines a JUnit 5 `@Tag`: `io.quarkus.test.junit.QuarkusTest`.\n"
"You can use this tag to isolate the `@QuarkusTest` test in a specific execution run, for example with the Maven Surefire Plugin:"
msgstr ""

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Running `@QuarkusTest` from an IDE"
msgstr "Executando `@QuarkusTest` a partir de um IDE"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Most IDEs offer the possibility to run a selected class as a JUnit test directly. For this you should set a few properties in the settings of your chosen IDE:"
msgstr "A maioria dos IDEs oferece a possibilidade de executar diretamente uma classe selecionada como um teste JUnit. Para isso, é necessário definir algumas propriedades nas definições do IDE escolhido:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`java.util.logging.manager` (see xref:logging.adoc[Logging Guide])"
msgstr "`java.util.logging.manager` (ver  link:logging.html[Guia de registo])"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`maven.home` (only if there are any custom settings in `${maven.home}/conf/settings.xml`, see xref:maven-tooling.adoc[Maven Guide])"
msgstr "`maven.home` (apenas se existirem definições personalizadas em `${maven.home}/conf/settings.xml`, consulte  link:maven-tooling.html[o Guia Maven])"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`maven.settings` (in case a custom version of `settings.xml` file should be used for the tests)"
msgstr "`maven.settings` (no caso de ser utilizada uma versão personalizada do ficheiro `settings.xml` para os testes)"

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Eclipse separate JRE definition"
msgstr "Definição de JRE separado do Eclipse"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Copy your current \"Installed JRE\" definition into a new one, where you will add the properties as a new VM arguments:"
msgstr "Copie a sua definição atual de \"Installed JRE\" para uma nova definição, onde irá adicionar as propriedades como novos argumentos da VM:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`-Djava.util.logging.manager=org.jboss.logmanager.LogManager`"
msgstr "`-Djava.util.logging.manager=org.jboss.logmanager.LogManager`"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`-Dmaven.home=<path-to-your-maven-installation>`"
msgstr "`-Dmaven.home=&amp;lt;path-to-your-maven-installation&amp;gt;`"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Use this JRE definition as your Quarkus project targeted runtime and the workaround will be applied to any \"Run as JUnit\" configuration."
msgstr "Utilize esta definição de JRE como o tempo de execução de destino do seu projeto Quarkus e a solução alternativa será aplicada a qualquer configuração \"Run as JUnit\"."

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "VSCode \"run with\" configuration"
msgstr "Configuração \"executar com\" do VSCode"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The `settings.json` placed in the root of your project directory or in the workspace will need the following workaround in your test configuration:"
msgstr "O `settings.json` colocado na raiz do seu diretório de projeto ou no espaço de trabalho necessitará da seguinte solução alternativa na sua configuração de teste:"

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "IntelliJ IDEA JUnit template"
msgstr "Modelo JUnit do IntelliJ IDEA"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Nothing needed in IntelliJ IDEA because the IDE will pick the `systemPropertyVariables` from the surefire plugin configuration in `pom.xml`."
msgstr "Não é necessário nada no IntelliJ IDEA porque o IDE escolherá o `systemPropertyVariables` a partir da configuração do plug-in surefire em `pom.xml`."

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing Dev Services"
msgstr "Serviços de desenvolvimento de testes"

#: _guides/getting-started-testing.adoc
msgid ""
"By default, tests should just work with xref:dev-services.adoc[Dev Services], however from some use cases you may need access to\n"
"the automatically configured properties in your tests."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"You can do this with `io.quarkus.test.common.DevServicesContext`, which can be injected directly into any `@QuarkusTest`\n"
"or `@QuarkusIntegrationTest`. All you need to do is define a field of type `DevServicesContext` and it will be automatically\n"
"injected. Using this you can retrieve any properties that have been set. Generally this is used to directly connect to a\n"
"resource from the test itself, e.g. to connect to kafka to send messages to the application under test."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"Injection is also supported into objects that implement `io.quarkus.test.common.DevServicesContext.ContextAware`. If you\n"
"have a field that implements `io.quarkus.test.common.DevServicesContext.ContextAware` Quarkus will call the\n"
"`setIntegrationTestContext` method to pass the context into this object. This allows client logic to be encapsulated in\n"
"a utility class."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"`QuarkusTestResourceLifecycleManager` implementations can also implement `ContextAware` to get access to these properties,\n"
"which allows you to set up the resource before Quarkus starts (e.g. configure a KeyCloak instance, add data to a database etc)."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"For `@QuarkusIntegrationTest` tests that result in launcher the application as a container, `io.quarkus.test.common.DevServicesContext` also provides access to the id of the container network on which the application container was launched (via the `containerNetworkId` method).\n"
"This can be used by `QuarkusTestResourceLifecycleManager` that need to launch additional containers that the application will communicate with."
msgstr ""

#. type: Title ==
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing Components"
msgstr "Componentes de teste"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "This feature is experimental and the API may change in the future."
msgstr "Esta funcionalidade é experimental e a API pode ser alterada no futuro."

#: _guides/getting-started-testing.adoc
msgid ""
"In Quarkus, the component model is built on top CDI.\n"
"Therefore, Quarkus provides the `QuarkusComponentTestExtension`, a JUnit extension to ease the testing of components and mocking of their dependencies.\n"
"This extension is available in the `quarkus-junit5-component` dependency."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Let's have a component `Foo`:"
msgstr "Vamos ter um componente `Foo`:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`Foo` is an `@ApplicationScoped` CDI bean."
msgstr "`Foo` é um feijão CDI `@ApplicationScoped`."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`Foo` depends on `Charlie` which declares a method `ping()`."
msgstr "`Foo` depende de `Charlie` que declara um método `ping()`."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`Foo` depends on the config property `bar`."
msgstr "`Foo` depende da propriedade de configuração `bar`."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Then a component test could look like:"
msgstr "Então, um teste de componente poderia ter o seguinte aspeto:"

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The `QuarkusComponentTest` annotation registers the JUnit extension."
msgstr "A anotação `QuarkusComponentTest` regista a extensão JUnit."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Sets a configuration property for the test."
msgstr "Define uma propriedade de configuração para o teste."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The test injects the component under the test. The types of all fields annotated with `@Inject` are considered the component types under test. You can also specify additional component classes via `@QuarkusComponentTest#value()`. Furthermore, the static nested classes declared on the test class are components too."
msgstr "O teste injecta o componente a ser testado. Os tipos de todos os campos anotados com `@Inject` são considerados os tipos de componentes em teste. Também pode especificar classes de componentes adicionais através de `@QuarkusComponentTest#value()`. Além disso, as classes aninhadas estáticas declaradas na classe de teste também são componentes."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The test also injects `Charlie`, a dependency for which a synthetic `@Singleton` bean is registered automatically. The injected reference is an \"unconfigured\" Mockito mock."
msgstr "O teste também injeta `Charlie`, uma dependência para a qual um bean sintético `@Singleton` é registado automaticamente. A referência injectada é uma simulação \"não configurada\" do Mockito."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "We can leverage the Mockito API in a test method to configure the behavior."
msgstr "Podemos aproveitar a API do Mockito num método de teste para configurar o comportamento."

#: _guides/getting-started-testing.adoc
msgid ""
"If you need the full control over the `QuarkusComponentTestExtension` configuration then you can use the `@RegisterExtension` annotation and configure the extension programatically.\n"
"The test above could be rewritten like:"
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The `QuarkusComponentTestExtension` is configured in a static field of the test class."
msgstr "O `QuarkusComponentTestExtension` é configurado num campo estático da classe de teste."

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Lifecycle"
msgstr "Ciclo de vida"

#: _guides/getting-started-testing.adoc
msgid ""
"So what exactly does the `QuarkusComponentTest` do?\n"
"It starts the CDI container and registers a dedicated xref:config-reference.adoc[configuration object].\n"
"If the test instance lifecycle is `Lifecycle#PER_METHOD` (default) then the container is started during the `before each` test phase and stopped during the `after each` test phase.\n"
"However, if  the test instance lifecycle is `Lifecycle#PER_CLASS` then the container is started during the `before all` test phase and stopped during the `after all` test phase.\n"
"The fields annotated with `@Inject` and `@InjectMock` are injected after a test instance is created.\n"
"Finally, the CDI request context is activated and terminated per each test method."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Auto Mocking Unsatisfied Dependencies"
msgstr "Auto-micking de dependências insatisfeitas"

#: _guides/getting-started-testing.adoc
msgid ""
"Unlike in regular CDI environments the test does not fail if a component injects an unsatisfied dependency.\n"
"Instead, a synthetic bean is registered automatically for each combination of required type and qualifiers of an injection point that resolves to an unsatisfied dependency.\n"
"The bean has the `@Singleton` scope so it's shared across all injection points with the same required type and qualifiers.\n"
"The injected reference is an _unconfigured_ Mockito mock.\n"
"You can inject the mock in your test and leverage the Mockito API to configure the behavior."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Custom Mocks For Unsatisfied Dependencies"
msgstr "Mocks personalizados para dependências não satisfeitas"

#: _guides/getting-started-testing.adoc
msgid ""
"Sometimes you need the full control over the bean attributes and maybe even configure the default mock behavior.\n"
"You can use the mock configurator API via the `QuarkusComponentTestExtensionBuilder#mock()` method."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Configuration"
msgstr "Configuração"

#: _guides/getting-started-testing.adoc
msgid ""
"You can set the configuration properties for a test with the `@io.quarkus.test.component.TestConfigProperty` annotation or with the `QuarkusComponentTestExtensionBuilder#configProperty(String, String)` method.\n"
"If you only need to use the default values for missing config properties, then the `@QuarkusComponentTest#useDefaultConfigProperties()` or `QuarkusComponentTestExtensionBuilder#useDefaultConfigProperties()` might come in useful."
msgstr ""

#: _guides/getting-started-testing.adoc
msgid ""
"It is also possible to set configuration properties for a test method with the `@io.quarkus.test.component.TestConfigProperty` annotation.\n"
"However, if the test instance lifecycle is `Lifecycle#_PER_CLASS` this annotation can only be used on the test class and is ignored on test methods."
msgstr ""

#. type: Title ===
#: _guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Mocking CDI Interceptors"
msgstr "Simulação de interceptores CDI"

#: _guides/getting-started-testing.adoc
msgid ""
"If a tested component class declares an interceptor binding then you might need to mock the interception too.\n"
"There are two ways to accomplish this task.\n"
"First, you can define an interceptor class as a static nested class of the test class."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "`@SimpleBinding` is an interceptor binding."
msgstr "`@SimpleBinding` é uma ligação intercetora."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The interceptor class is automatically considered a tested component."
msgstr "A classe intercetora é automaticamente considerada um componente testado."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Static nested classed declared on a test class that is annotated with `@QuarkusComponentTest` are excluded from bean discovery when running a `@QuarkusTest` in order to prevent unintentional CDI conflicts."
msgstr "As classes aninhadas estáticas declaradas numa classe de teste anotada com `@QuarkusComponentTest` são excluídas da descoberta de feijões ao executar um `@QuarkusTest` para evitar conflitos CDI não intencionais."

#: _guides/getting-started-testing.adoc
msgid ""
"Furthermore, you can also declare a \"test interceptor method\" directly on the test class.\n"
"This method is then invoked in the relevant interception phase."
msgstr ""

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "The interceptor bindings of the resulting interceptor are specified by annotating the method with the interceptor binding types."
msgstr "As ligações de intercetor do intercetor resultante são especificadas anotando o método com os tipos de ligação de intercetor."

#. type: Plain text
#: _guides/getting-started-testing.adoc
#, fuzzy
msgid "Defines the interception type."
msgstr "Define o tipo de interceção."
