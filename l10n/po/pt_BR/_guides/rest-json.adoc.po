# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Writing JSON REST Services"
msgstr "Escrever serviços REST JSON"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "JSON is now the _lingua franca_ between microservices."
msgstr "O JSON é atualmente a _língua franca_ entre os microsserviços."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "In this guide, we see how you can get your REST services to consume and produce JSON payloads."
msgstr "Neste guia, veremos como pode fazer com que os seus serviços REST consumam e produzam cargas úteis JSON."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "there is another guide if you need a xref:rest-client-reactive.adoc[REST client] (including support for JSON)."
msgstr "existe outro guia se precisar de um  link:rest-client-reactive.html[cliente REST] (incluindo suporte para JSON)."

#: _guides/rest-json.adoc
msgid ""
"This is an introduction to writing JSON REST services with Quarkus.\n"
"A more detailed guide about RESTEasy Reactive is available xref:resteasy-reactive.adoc[here]."
msgstr ""

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitetura"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "The application built in this guide is quite simple: the user can add elements in a list using a form and the list is updated."
msgstr "A aplicação construída neste guia é bastante simples: o utilizador pode adicionar elementos a uma lista utilizando um formulário e a lista é actualizada."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "All the information between the browser and the server are formatted as JSON."
msgstr "Todas as informações entre o navegador e o servidor são formatadas como JSON."

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#: _guides/rest-json.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "The solution is located in the `rest-json-quickstart` link:{quickstarts-tree-url}/rest-json-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/rest-json-quickstart[diretório] `rest-json-quickstart`."

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Primeiro, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#: _guides/rest-json.adoc
msgid ""
"This command generates a new project importing the RESTEasy Reactive/Jakarta REST and https://github.com/FasterXML/jackson[Jackson] extensions,\n"
"and in particular adds the following dependency:"
msgstr ""

#. type: Block title
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block =
#: _guides/rest-json.adoc
#, fuzzy
msgid "To improve user experience, Quarkus registers the three Jackson https://github.com/FasterXML/jackson-modules-java8[Java 8 modules] so you don't need to do it manually."
msgstr "Para melhorar a experiência do utilizador, o Quarkus regista os três  link:https://github.com/FasterXML/jackson-modules-java8[módulos] Jackson  link:https://github.com/FasterXML/jackson-modules-java8[Java 8] para que não tenha de o fazer manualmente."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Quarkus also supports https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] so, if you prefer JSON-B over Jackson, you can create a project relying on the RESTEasy Reactive JSON-B extension instead:"
msgstr "O Quarkus também suporta  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B], pelo que, se preferir JSON-B em vez de Jackson, pode criar um projeto com base na extensão RESTEasy Reactive JSON-B:"

#: _guides/rest-json.adoc
msgid ""
"This command generates a new project importing the RESTEasy Reactive/Jakarta REST and https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] extensions,\n"
"and in particular adds the following dependency:"
msgstr ""

#. type: delimited block =
#: _guides/rest-json.adoc
#, fuzzy
msgid "While named \"reactive\", RESTEasy Reactive supports equally well both traditional blocking patterns and reactive patterns."
msgstr "Embora denominado \"reativo\", o RESTEasy Reactive suporta igualmente bem tanto os padrões tradicionais de bloqueio quanto os padrões reativos."

#. type: delimited block =
#: _guides/rest-json.adoc
#, fuzzy
msgid "For more information about RESTEasy Reactive, please refer to the xref:resteasy-reactive.adoc[dedicated guide]."
msgstr "Para obter mais informações sobre o RESTEasy Reactive, consulte o  link:resteasy-reactive.html[guia específico]."

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Creating your first JSON REST service"
msgstr "Criar o seu primeiro serviço JSON REST"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "Neste exemplo, vamos criar uma aplicação para gerir uma lista de frutos."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "First, let's create the `Fruit` bean as follows:"
msgstr "Primeiro, vamos criar o bean `Fruit` da seguinte forma:"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Nothing fancy. One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr "Nada de especial. Uma coisa importante a notar é que ter um construtor padrão é exigido pela camada de serialização JSON."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Now, create the `org.acme.rest.json.FruitResource` class as follows:"
msgstr "Agora, crie a classe `org.acme.rest.json.FruitResource` da seguinte forma:"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "The implementation is pretty straightforward, and you just need to define your endpoints using the Jakarta REST annotations."
msgstr "A implementação é bastante simples e só precisa de definir os seus pontos finais utilizando as anotações Jakarta REST."

#: _guides/rest-json.adoc
msgid ""
"The `Fruit` objects will be automatically serialized/deserialized by https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] or https://github.com/FasterXML/jackson[Jackson],\n"
"depending on the extension you chose when initializing the project."
msgstr ""

#: _guides/rest-json.adoc
msgid ""
"When a JSON extension is installed such as `quarkus-resteasy-reactive-jackson` or `quarkus-resteasy-reactive-jsonb`, Quarkus will use the `application/json` media type\n"
"by default for most return values, unless the media type is explicitly set via\n"
"`@Produces` or `@Consumes` annotations (there are some exceptions for well known types, such as `String` and `File`, which default to `text/plain` and `application/octet-stream`\n"
"respectively)."
msgstr ""

#. type: Title ===
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Configuring JSON support"
msgstr "Configuração do suporte JSON"

#. type: Title ====
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Jackson"
msgstr "Jackson"

#: _guides/rest-json.adoc
msgid ""
"In Quarkus, the default Jackson `ObjectMapper` obtained via CDI (and consumed by the Quarkus extensions) is configured to ignore unknown properties\n"
"(by disabling the `DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES` feature)."
msgstr ""

#: _guides/rest-json.adoc
msgid ""
"You can restore the default behavior of Jackson by setting `quarkus.jackson.fail-on-unknown-properties=true` in your `application.properties`\n"
"or on a per-class basis via `@JsonIgnoreProperties(ignoreUnknown = false)`."
msgstr ""

#: _guides/rest-json.adoc
msgid ""
"Furthermore, the `ObjectMapper` is configured to format dates and time in ISO-8601\n"
"(by disabling the `SerializationFeature.WRITE_DATES_AS_TIMESTAMPS` feature)."
msgstr ""

#: _guides/rest-json.adoc
msgid ""
"The default behaviour of Jackson can be restored by setting `quarkus.jackson.write-dates-as-timestamps=true`\n"
"in your `application.properties`. If you want to change the format for a single field, you can use the\n"
"`@JsonFormat` annotation."
msgstr ""

#: _guides/rest-json.adoc
msgid ""
"Also, Quarkus makes it very easy to configure various Jackson settings via CDI beans.\n"
"The simplest (and suggested) approach is to define a CDI bean of type `io.quarkus.jackson.ObjectMapperCustomizer`\n"
"inside of which any Jackson configuration can be applied."
msgstr ""

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "An example where a custom module needs to be registered would look like so:"
msgstr "Um exemplo em que é necessário registar um módulo personalizado seria o seguinte:"

#: _guides/rest-json.adoc
msgid ""
"Users can even provide their own `ObjectMapper` bean if they so choose.\n"
"If this is done, it is very important to manually inject and apply all `io.quarkus.jackson.ObjectMapperCustomizer` beans in the CDI producer that produces `ObjectMapper`.\n"
"Failure to do so will prevent Jackson specific customizations provided by various extensions from being applied."
msgstr ""

#. type: Title =====
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Mixin support"
msgstr "Suporte a misturas"

#: _guides/rest-json.adoc
msgid ""
"Quarkus automates the registration of Jackson's Mixin support, via the `io.quarkus.jackson.JacksonMixin` annotation.\n"
"This annotation can be placed on classes that are meant to be used as Jackson mixins while the classes they are meant to customize\n"
"are defined as the value of the annotation."
msgstr ""

#. type: Title ====
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "JSON-B"
msgstr "JSON-B"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "As stated above, Quarkus provides the option of using JSON-B instead of Jackson via the use of the `quarkus-resteasy-jsonb` extension."
msgstr "Tal como referido anteriormente, o Quarkus oferece a opção de utilizar JSON-B em vez de Jackson através da utilização da extensão `quarkus-resteasy-jsonb`."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Following the same approach as described in the previous section, JSON-B can be configured using a `io.quarkus.jsonb.JsonbConfigCustomizer` bean."
msgstr "Seguindo a mesma abordagem descrita na secção anterior, o JSON-B pode ser configurado utilizando um bean `io.quarkus.jsonb.JsonbConfigCustomizer`."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "If for example a custom serializer named `FooSerializer` for type `com.example.Foo` needs to be registered with JSON-B, the addition of a bean like the following would suffice:"
msgstr "Se, por exemplo, um serializador personalizado chamado `FooSerializer` para o tipo `com.example.Foo` precisar de ser registado com JSON-B, a adição de um bean como o seguinte será suficiente:"

#: _guides/rest-json.adoc
msgid ""
"A more advanced option would be to directly provide a bean of `jakarta.json.bind.JsonbConfig` (with a `Dependent` scope) or in the extreme case to provide a bean of type `jakarta.json.bind.Jsonb` (with a `Singleton` scope).\n"
"If the latter approach is leveraged it is very important to manually inject and apply all `io.quarkus.jsonb.JsonbConfigCustomizer` beans in the CDI producer that produces `jakarta.json.bind.Jsonb`.\n"
"Failure to do so will prevent JSON-B specific customizations provided by various extensions from being applied."
msgstr ""

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Creating a frontend"
msgstr "Criar um frontend"

#: _guides/rest-json.adoc
msgid ""
"Now let's add a simple web page to interact with our `FruitResource`.\n"
"Quarkus automatically serves static resources located under the `META-INF/resources` directory.\n"
"In the `src/main/resources/META-INF/resources` directory, add a `fruits.html` file with the content from this link:{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html] file in it."
msgstr ""

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "You can now interact with your REST service:"
msgstr "Pode agora interagir com o seu serviço REST:"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "start Quarkus with:"
msgstr "iniciar o Quarkus com:"

#: _guides/rest-json.adoc
msgid "CLI"
msgstr ""

#: _guides/rest-json.adoc
msgid "Maven"
msgstr ""

#: _guides/rest-json.adoc
msgid "Gradle"
msgstr ""

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "open a browser to `http://localhost:8080/fruits.html`"
msgstr "abrir um browser para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;`"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "add new fruits to the list via the form"
msgstr "adicionar novos frutos à lista através do formulário"

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Building a native executable"
msgstr "Construir um executável nativo"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "You can build a native executable with the usual command:"
msgstr "Pode construir um executável nativo com o comando habitual:"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Running it is as simple as executing `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "Executá-lo é tão simples quanto executar `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "Pode então apontar o seu browser para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;` e utilizar a sua aplicação."

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "About serialization"
msgstr "Acerca da serialização"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "JSON serialization libraries use Java reflection to get the properties of an object and serialize them."
msgstr "As bibliotecas de serialização JSON utilizam a reflexão Java para obter as propriedades de um objeto e serializá-las."

#: _guides/rest-json.adoc
msgid ""
"When using native executables with GraalVM, all classes that will be used with reflection need to be registered.\n"
"The good news is that Quarkus does that work for you most of the time.\n"
"So far, we haven't registered any class, not even `Fruit`, for reflection usage and everything is working fine."
msgstr ""

#: _guides/rest-json.adoc
msgid ""
"Quarkus performs some magic when it is capable of inferring the serialized types from the REST methods.\n"
"When you have the following REST method, Quarkus determines that `Fruit` will be serialized:"
msgstr ""

#: _guides/rest-json.adoc
msgid ""
"Quarkus does that for you automatically by analyzing the REST methods at build time\n"
"and that's why we didn't need any reflection registration in the first part of this guide."
msgstr ""

#: _guides/rest-json.adoc
msgid ""
"Another common pattern in the Jakarta REST world is to use the `Response` object.\n"
"`Response` comes with some nice perks:"
msgstr ""

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "you can return different entity types depending on what happens in your method (a `Legume` or an `Error` for instance);"
msgstr "pode devolver diferentes tipos de entidades, dependendo do que acontece no seu método (um `Legume` ou um `Error`, por exemplo);"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "you can set the attributes of the `Response` (the status comes to mind in the case of an error)."
msgstr "pode definir os atributos do `Response` (o estado vem à mente no caso de um erro)."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Your REST method then looks like this:"
msgstr "O seu método REST tem então o seguinte aspeto:"

#: _guides/rest-json.adoc
msgid ""
"It is not possible for Quarkus to determine at build time the type included in the `Response` as the information is not available.\n"
"In this case, Quarkus won't be able to automatically register for reflection the required classes."
msgstr ""

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "This leads us to our next section."
msgstr "Isto leva-nos à nossa próxima secção."

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Using Response"
msgstr "Utilizar a resposta"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Let's create the `Legume` class which will be serialized as JSON, following the same model as for our `Fruit` class:"
msgstr "Vamos criar a classe `Legume` que será serializada como JSON, seguindo o mesmo modelo da nossa classe `Fruit`:"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Now let's create a `LegumeResource` REST service with only one method which returns the list of legumes."
msgstr "Agora vamos criar um serviço `LegumeResource` REST com apenas um método que devolve a lista de leguminosas."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "This method returns a `Response` and not a list of `Legume`."
msgstr "Este método devolve um `Response` e não uma lista de `Legume`."

#: _guides/rest-json.adoc
msgid ""
"Now let's add a simple web page to display our list of legumes.\n"
"In the `src/main/resources/META-INF/resources` directory, add a `legumes.html` file with the content from this\n"
"{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/legumes.html[legumes.html] file in it."
msgstr ""

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Open a browser to http://localhost:8080/legumes.html, and you will see our list of legumes."
msgstr "Abra um browser em  http://localhost:8080/legumes.html  e verá a nossa lista de leguminosas."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "The interesting part starts when running the application as a native executable:"
msgstr "A parte interessante começa quando se executa a aplicação como um executável nativo:"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "create the native executable with:"
msgstr "criar o executável nativo com:"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "execute it with `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"
msgstr "executá-lo com `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "open a browser and go to http://localhost:8080/legumes.html"
msgstr "abrir um browser e ir para  http://localhost:8080/legumes.html"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "No legumes there."
msgstr "Não há leguminosas."

#: _guides/rest-json.adoc
msgid ""
"As mentioned above, the issue is that Quarkus was not able to determine the `Legume` class will require some reflection by analyzing the REST endpoints.\n"
"The JSON serialization library tries to get the list of fields of `Legume` and gets an empty list, so it does not serialize the fields' data."
msgstr ""

#: _guides/rest-json.adoc
msgid ""
"At the moment, when JSON-B or Jackson tries to get the list of fields of a class, if the class is not registered for reflection, no exception will be thrown.\n"
"GraalVM will simply return an empty list of fields."
msgstr ""

#. type: delimited block =
#: _guides/rest-json.adoc
#, fuzzy
msgid "Hopefully, this will change in the future and make the error more obvious."
msgstr "Esperemos que isto mude no futuro e que o erro seja mais óbvio."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "We can register `Legume` for reflection manually by adding the `@RegisterForReflection` annotation on our `Legume` class:"
msgstr "Podemos registar `Legume` para reflexão manualmente, adicionando a anotação `@RegisterForReflection` à nossa classe `Legume`:"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "The `@RegisterForReflection` annotation instructs Quarkus to keep the class and its members during the native compilation. More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr "A anotação `@RegisterForReflection` instrui o Quarkus a manter a classe e seus membros durante a compilação nativa. Mais detalhes sobre a anotação `@RegisterForReflection` podem ser encontrados na página de  link:writing-native-applications-tips.html#registerForReflection[dicas de aplicações nativas]."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Let's do that and follow the same steps as before:"
msgstr "Vamos fazer isso e seguir os mesmos passos que antes:"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "hit `Ctrl+C` to stop the application"
msgstr "prima `Ctrl+C` para parar a aplicação"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "This time, you can see our list of legumes."
msgstr "Desta vez, pode ver a nossa lista de leguminosas."

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Being reactive"
msgstr "Ser reativo"

#: _guides/rest-json.adoc
msgid ""
"You can return _reactive types_ to handle asynchronous processing.\n"
"Quarkus recommends the usage of https://smallrye.io/smallrye-mutiny[Mutiny] to write reactive and asynchronous code."
msgstr ""

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "RESTEasy Reactive is naturally integrated with Mutiny."
msgstr "O RESTEasy Reactive está naturalmente integrado com o Mutiny."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Your endpoints can return `Uni` or `Multi` instances:"
msgstr "Os seus pontos de extremidade podem devolver instâncias de `Uni` ou `Multi`:"

#: _guides/rest-json.adoc
msgid ""
"Use `Uni` when you have a single result.\n"
"Use `Multi` when you have multiple items that may be emitted asynchronously."
msgstr ""

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "You can use `Uni` and `Response` to return asynchronous HTTP responses: `Uni<Response>`."
msgstr "Pode utilizar `Uni` e `Response` para devolver respostas HTTP assíncronas: `Uni&amp;lt;Response&amp;gt;`."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "More details about Mutiny can be found in xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Mais detalhes sobre o Mutiny podem ser encontrados em  link:mutiny-primer.html[Mutiny - uma biblioteca de programação reactiva intuitiva]."

#. type: Title ==
#: _guides/rest-json.adoc
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "Creating JSON REST services with Quarkus is easy as it relies on proven and well known technologies."
msgstr "Criar serviços JSON REST com o Quarkus é fácil, uma vez que se baseia em tecnologias comprovadas e bem conhecidas."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "As usual, Quarkus further simplifies things under the hood when running your application as a native executable."
msgstr "Como de costume, o Quarkus simplifica ainda mais as coisas quando executa a sua aplicação como um executável nativo."

#. type: Plain text
#: _guides/rest-json.adoc
#, fuzzy
msgid "There is only one thing to remember: if you use `Response` and Quarkus can't determine the beans that are serialized, you need to annotate them with `@RegisterForReflection`."
msgstr "Há apenas um aspeto a ter em conta: se utilizar `Response` e o Quarkus não conseguir determinar os beans que são serializados, é necessário anotá-los com `@RegisterForReflection`."
