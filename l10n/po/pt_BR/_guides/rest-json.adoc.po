# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/rest-json.adoc:6
#, fuzzy, no-wrap
msgid "Writing JSON REST Services"
msgstr "Escrever serviços REST JSON"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:14
#, fuzzy
msgid "JSON is now the _lingua franca_ between microservices."
msgstr "O JSON é atualmente a _língua franca_ entre os microsserviços."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:16
#, fuzzy
msgid "In this guide, we see how you can get your REST services to consume and produce JSON payloads."
msgstr "Neste guia, veremos como pode fazer com que os seus serviços REST consumam e produzam cargas úteis JSON."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:18
#, fuzzy
msgid "there is another guide if you need a xref:rest-client-reactive.adoc[REST client] (including support for JSON)."
msgstr "existe outro guia se precisar de um  link:rest-client-reactive.html[cliente REST] (incluindo suporte para JSON)."

#. type: delimited block =
#: upstream/_guides/rest-json.adoc:23
#, fuzzy
msgid "This is an introduction to writing JSON REST services with Quarkus.  A more detailed guide about RESTEasy Reactive is available xref:resteasy-reactive.adoc[here]."
msgstr "Esta é uma introdução à escrita de serviços REST JSON com o Quarkus. Um guia mais detalhado sobre o RESTEasy Reactive está disponível  link:resteasy-reactive.html[aqui]."

#. type: Title ==
#: upstream/_guides/rest-json.adoc:25
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: upstream/_guides/rest-json.adoc:29
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitetura"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:32
#, fuzzy
msgid "The application built in this guide is quite simple: the user can add elements in a list using a form and the list is updated."
msgstr "A aplicação construída neste guia é bastante simples: o utilizador pode adicionar elementos a uma lista utilizando um formulário e a lista é actualizada."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:34
#, fuzzy
msgid "All the information between the browser and the server are formatted as JSON."
msgstr "Todas as informações entre o navegador e o servidor são formatadas como JSON."

#. type: Title ==
#: upstream/_guides/rest-json.adoc:35
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:39
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas secções seguintes e crie a aplicação passo a passo. No entanto, pode ir diretamente para o exemplo completo."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:41
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:43
#, fuzzy
msgid "The solution is located in the `rest-json-quickstart` link:{quickstarts-tree-url}/rest-json-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/rest-json-quickstart[diretório] `rest-json-quickstart`."

#. type: Title ==
#: upstream/_guides/rest-json.adoc:44
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:47
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Primeiro, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:54
#, fuzzy
msgid "This command generates a new project importing the RESTEasy Reactive/Jakarta REST and https://github.com/FasterXML/jackson[Jackson] extensions, and in particular adds the following dependency:"
msgstr "Este comando gera um novo projeto que importa as extensões RESTEasy Reactive/Jakarta REST e  link:https://github.com/FasterXML/jackson[Jackson] e, em particular, adiciona a seguinte dependência:"

#. type: Block title
#: upstream/_guides/rest-json.adoc:56 upstream/_guides/rest-json.adoc:85
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:62
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/rest-json.adoc:65 upstream/_guides/rest-json.adoc:94
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:68
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-reactive-jackson\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/rest-json.adoc:73
#, fuzzy
msgid "To improve user experience, Quarkus registers the three Jackson https://github.com/FasterXML/jackson-modules-java8[Java 8 modules] so you don't need to do it manually."
msgstr "Para melhorar a experiência do utilizador, o Quarkus regista os três  link:https://github.com/FasterXML/jackson-modules-java8[módulos] Jackson  link:https://github.com/FasterXML/jackson-modules-java8[Java 8] para que não tenha de o fazer manualmente."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:76
#, fuzzy
msgid "Quarkus also supports https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] so, if you prefer JSON-B over Jackson, you can create a project relying on the RESTEasy Reactive JSON-B extension instead:"
msgstr "O Quarkus também suporta  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B], pelo que, se preferir JSON-B em vez de Jackson, pode criar um projeto com base na extensão RESTEasy Reactive JSON-B:"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:83
#, fuzzy
msgid "This command generates a new project importing the RESTEasy Reactive/Jakarta REST and https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] extensions, and in particular adds the following dependency:"
msgstr "Este comando gera um novo projeto que importa as extensões RESTEasy Reactive/Jakarta REST e  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] e, em particular, adiciona a seguinte dependência:"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:91
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-jsonb</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:97
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-reactive-jsonb\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/rest-json.adoc:102
#, fuzzy
msgid "While named \"reactive\", RESTEasy Reactive supports equally well both traditional blocking patterns and reactive patterns."
msgstr "Embora denominado \"reativo\", o RESTEasy Reactive suporta igualmente bem tanto os padrões tradicionais de bloqueio quanto os padrões reativos."

#. type: delimited block =
#: upstream/_guides/rest-json.adoc:104
#, fuzzy
msgid "For more information about RESTEasy Reactive, please refer to the xref:resteasy-reactive.adoc[dedicated guide]."
msgstr "Para obter mais informações sobre o RESTEasy Reactive, consulte o  link:resteasy-reactive.html[guia específico]."

#. type: Title ==
#: upstream/_guides/rest-json.adoc:106
#, fuzzy, no-wrap
msgid "Creating your first JSON REST service"
msgstr "Criar o seu primeiro serviço JSON REST"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:109
#, fuzzy
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "Neste exemplo, vamos criar uma aplicação para gerir uma lista de frutos."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:111
#, fuzzy
msgid "First, let's create the `Fruit` bean as follows:"
msgstr "Primeiro, vamos criar o bean `Fruit` da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:115 upstream/_guides/rest-json.adoc:138
#: upstream/_guides/rest-json.adoc:397 upstream/_guides/rest-json.adoc:420
#, no-wrap
msgid "package org.acme.rest.json;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:117
#, no-wrap
msgid "public class Fruit {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:120 upstream/_guides/rest-json.adoc:402
#, no-wrap
msgid ""
"    public String name;\n"
"    public String description;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:123
#, no-wrap
msgid ""
"    public Fruit() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:129
#, no-wrap
msgid ""
"    public Fruit(String name, String description) {\n"
"        this.name = name;\n"
"        this.description = description;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-json.adoc:132
#, fuzzy
msgid "Nothing fancy. One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr "Nada de especial. Uma coisa importante a notar é que ter um construtor padrão é exigido pela camada de serialização JSON."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:134
#, fuzzy
msgid "Now, create the `org.acme.rest.json.FruitResource` class as follows:"
msgstr "Agora, crie a classe `org.acme.rest.json.FruitResource` da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:142
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.LinkedHashMap;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:147
#, no-wrap
msgid ""
"import jakarta.ws.rs.DELETE;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:150
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:152
#, no-wrap
msgid "    private Set<Fruit> fruits = Collections.newSetFromMap(Collections.synchronizedMap(new LinkedHashMap<>()));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:157
#, no-wrap
msgid ""
"    public FruitResource() {\n"
"        fruits.add(new Fruit(\"Apple\", \"Winter fruit\"));\n"
"        fruits.add(new Fruit(\"Pineapple\", \"Tropical fruit\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:162
#, no-wrap
msgid ""
"    @GET\n"
"    public Set<Fruit> list() {\n"
"        return fruits;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:168
#, no-wrap
msgid ""
"    @POST\n"
"    public Set<Fruit> add(Fruit fruit) {\n"
"        fruits.add(fruit);\n"
"        return fruits;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:175
#, no-wrap
msgid ""
"    @DELETE\n"
"    public Set<Fruit> delete(Fruit fruit) {\n"
"        fruits.removeIf(existingFruit -> existingFruit.name.contentEquals(fruit.name));\n"
"        return fruits;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-json.adoc:178
#, fuzzy
msgid "The implementation is pretty straightforward, and you just need to define your endpoints using the Jakarta REST annotations."
msgstr "A implementação é bastante simples e só precisa de definir os seus pontos finais utilizando as anotações Jakarta REST."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:181
#, fuzzy
msgid "The `Fruit` objects will be automatically serialized/deserialized by https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] or https://github.com/FasterXML/jackson[Jackson], depending on the extension you chose when initializing the project."
msgstr "Os objectos `Fruit` serão automaticamente serializados/deserializados por  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] ou  link:https://github.com/FasterXML/jackson[Jackson], dependendo da extensão que escolheu ao inicializar o projeto."

#. type: delimited block =
#: upstream/_guides/rest-json.adoc:188
#, fuzzy
msgid "When a JSON extension is installed such as `quarkus-resteasy-reactive-jackson` or `quarkus-resteasy-reactive-jsonb`, Quarkus will use the `application/json` media type by default for most return values, unless the media type is explicitly set via `@Produces` or `@Consumes` annotations (there are some exceptions for well known types, such as `String` and `File`, which default to `text/plain` and `application/octet-stream` respectively)."
msgstr "Quando uma extensão JSON é instalada, como `quarkus-resteasy-reactive-jackson` ou `quarkus-resteasy-reactive-jsonb`, o Quarkus utilizará o tipo de suporte `application/json` por predefinição para a maioria dos valores de retorno, a menos que o tipo de suporte seja explicitamente definido através das anotações `@Produces` ou `@Consumes` (existem algumas excepções para tipos bem conhecidos, como `String` e `File`, que são predefinidos para `text/plain` e `application/octet-stream` respetivamente)."

#. type: Title ===
#: upstream/_guides/rest-json.adoc:191
#, fuzzy, no-wrap
msgid "Configuring JSON support"
msgstr "Configuração do suporte JSON"

#. type: Title ====
#: upstream/_guides/rest-json.adoc:193
#, fuzzy, no-wrap
msgid "Jackson"
msgstr "Jackson"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:197
#, fuzzy
msgid "In Quarkus, the default Jackson `ObjectMapper` obtained via CDI (and consumed by the Quarkus extensions) is configured to ignore unknown properties (by disabling the `DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES` feature)."
msgstr "No Quarkus, a predefinição Jackson `ObjectMapper` obtida através do CDI (e consumida pelas extensões Quarkus) está configurada para ignorar propriedades desconhecidas (desactivando a funcionalidade `DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES` )."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:200
#, fuzzy
msgid "You can restore the default behavior of Jackson by setting `quarkus.jackson.fail-on-unknown-properties=true` in your `application.properties` or on a per-class basis via `@JsonIgnoreProperties(ignoreUnknown = false)`."
msgstr "Pode restaurar o comportamento predefinido da Jackson definindo `quarkus.jackson.fail-on-unknown-properties=true` no seu `application.properties` ou numa base por turma através de `@JsonIgnoreProperties(ignoreUnknown = false)`."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:203
#, fuzzy
msgid "Furthermore, the `ObjectMapper` is configured to format dates and time in ISO-8601 (by disabling the `SerializationFeature.WRITE_DATES_AS_TIMESTAMPS` feature)."
msgstr "Além disso, o `ObjectMapper` está configurado para formatar datas e horas em ISO-8601 (desactivando a funcionalidade `SerializationFeature.WRITE_DATES_AS_TIMESTAMPS` )."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:207
#, fuzzy
msgid "The default behaviour of Jackson can be restored by setting `quarkus.jackson.write-dates-as-timestamps=true` in your `application.properties`. If you want to change the format for a single field, you can use the `@JsonFormat` annotation."
msgstr "O comportamento predefinido da Jackson pode ser restaurado definindo `quarkus.jackson.write-dates-as-timestamps=true` na sua `application.properties`. Se pretender alterar o formato de um único campo, pode utilizar a anotação `@JsonFormat`."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:211
#, fuzzy
msgid "Also, Quarkus makes it very easy to configure various Jackson settings via CDI beans.  The simplest (and suggested) approach is to define a CDI bean of type `io.quarkus.jackson.ObjectMapperCustomizer` inside of which any Jackson configuration can be applied."
msgstr "Além disso, o Quarkus facilita muito a configuração de várias definições da Jackson através de beans CDI. A abordagem mais simples (e sugerida) é definir um feijão CDI do tipo `io.quarkus.jackson.ObjectMapperCustomizer` dentro do qual pode ser aplicada qualquer configuração Jackson."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:213
#, fuzzy
msgid "An example where a custom module needs to be registered would look like so:"
msgstr "Um exemplo em que é necessário registar um módulo personalizado seria o seguinte:"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:219
#, no-wrap
msgid ""
"import com.fasterxml.jackson.databind.ObjectMapper;\n"
"import io.quarkus.jackson.ObjectMapperCustomizer;\n"
"import jakarta.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:222
#, no-wrap
msgid ""
"@Singleton\n"
"public class RegisterCustomModuleCustomizer implements ObjectMapperCustomizer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:227
#, no-wrap
msgid ""
"    public void customize(ObjectMapper mapper) {\n"
"        mapper.registerModule(new CustomModule());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-json.adoc:232
#, fuzzy
msgid "Users can even provide their own `ObjectMapper` bean if they so choose.  If this is done, it is very important to manually inject and apply all `io.quarkus.jackson.ObjectMapperCustomizer` beans in the CDI producer that produces `ObjectMapper`.  Failure to do so will prevent Jackson specific customizations provided by various extensions from being applied."
msgstr "Os utilizadores podem até fornecer o seu próprio `ObjectMapper` bean, se assim o desejarem. Se tal for feito, é muito importante injetar e aplicar manualmente todos os feijões `io.quarkus.jackson.ObjectMapperCustomizer` no produtor CDI que produz `ObjectMapper`. Se isso não for feito, as personalizações específicas de Jackson fornecidas por várias extensões não serão aplicadas."

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:240
#, no-wrap
msgid ""
"import com.fasterxml.jackson.databind.ObjectMapper;\n"
"import io.quarkus.arc.All;\n"
"import io.quarkus.jackson.ObjectMapperCustomizer;\n"
"import java.util.List;\n"
"import jakarta.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:242
#, no-wrap
msgid "public class CustomObjectMapper {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:248
#, no-wrap
msgid ""
"    // Replaces the CDI producer for ObjectMapper built into Quarkus\n"
"    @Singleton\n"
"    @Produces\n"
"    ObjectMapper objectMapper(@All List<ObjectMapperCustomizer> customizers) {\n"
"        ObjectMapper mapper = myObjectMapper(); // Custom `ObjectMapper`\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:253
#, no-wrap
msgid ""
"        // Apply all ObjectMapperCustomizer beans (incl. Quarkus)\n"
"        for (ObjectMapperCustomizer customizer : customizers) {\n"
"            customizer.customize(mapper);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:257
#, no-wrap
msgid ""
"        return mapper;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/rest-json.adoc:259
#, fuzzy, no-wrap
msgid "Mixin support"
msgstr "Suporte a misturas"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:264
#, fuzzy
msgid "Quarkus automates the registration of Jackson's Mixin support, via the `io.quarkus.jackson.JacksonMixin` annotation.  This annotation can be placed on classes that are meant to be used as Jackson mixins while the classes they are meant to customize are defined as the value of the annotation."
msgstr "O Quarkus automatiza o registo do suporte de Mixin do Jackson, através da anotação `io.quarkus.jackson.JacksonMixin`. Esta anotação pode ser colocada em classes que se destinam a ser utilizadas como mixins Jackson, enquanto as classes que se destinam a personalizar são definidas como o valor da anotação."

#. type: Title ====
#: upstream/_guides/rest-json.adoc:265
#, fuzzy, no-wrap
msgid "JSON-B"
msgstr "JSON-B"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:268
#, fuzzy
msgid "As stated above, Quarkus provides the option of using JSON-B instead of Jackson via the use of the `quarkus-resteasy-jsonb` extension."
msgstr "Tal como referido anteriormente, o Quarkus oferece a opção de utilizar JSON-B em vez de Jackson através da utilização da extensão `quarkus-resteasy-jsonb`."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:270
#, fuzzy
msgid "Following the same approach as described in the previous section, JSON-B can be configured using a `io.quarkus.jsonb.JsonbConfigCustomizer` bean."
msgstr "Seguindo a mesma abordagem descrita na secção anterior, o JSON-B pode ser configurado utilizando um bean `io.quarkus.jsonb.JsonbConfigCustomizer`."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:272
#, fuzzy
msgid "If for example a custom serializer named `FooSerializer` for type `com.example.Foo` needs to be registered with JSON-B, the addition of a bean like the following would suffice:"
msgstr "Se, por exemplo, um serializador personalizado chamado `FooSerializer` para o tipo `com.example.Foo` precisar de ser registado com JSON-B, a adição de um bean como o seguinte será suficiente:"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:279
#, no-wrap
msgid ""
"import io.quarkus.jsonb.JsonbConfigCustomizer;\n"
"import jakarta.inject.Singleton;\n"
"import jakarta.json.bind.JsonbConfig;\n"
"import jakarta.json.bind.serializer.JsonbSerializer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:282
#, no-wrap
msgid ""
"@Singleton\n"
"public class FooSerializerRegistrationCustomizer implements JsonbConfigCustomizer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:287
#, no-wrap
msgid ""
"    public void customize(JsonbConfig config) {\n"
"        config.withSerializers(new FooSerializer());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-json.adoc:292
#, fuzzy
msgid "A more advanced option would be to directly provide a bean of `jakarta.json.bind.JsonbConfig` (with a `Dependent` scope) or in the extreme case to provide a bean of type `jakarta.json.bind.Jsonb` (with a `Singleton` scope).  If the latter approach is leveraged it is very important to manually inject and apply all `io.quarkus.jsonb.JsonbConfigCustomizer` beans in the CDI producer that produces `jakarta.json.bind.Jsonb`.  Failure to do so will prevent JSON-B specific customizations provided by various extensions from being applied."
msgstr "Uma opção mais avançada seria fornecer diretamente um bean de `jakarta.json.bind.JsonbConfig` (com um âmbito `Dependent` ) ou, no caso extremo, fornecer um bean do tipo `jakarta.json.bind.Jsonb` (com um âmbito `Singleton` ). Se for utilizada a última abordagem, é muito importante injetar e aplicar manualmente todos os feijões `io.quarkus.jsonb.JsonbConfigCustomizer` no produtor CDI que produz `jakarta.json.bind.Jsonb`. Se não o fizer, impedirá a aplicação de personalizações específicas do JSON-B fornecidas por várias extensões."

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:296
#, no-wrap
msgid "import io.quarkus.jsonb.JsonbConfigCustomizer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:300
#, no-wrap
msgid ""
"import jakarta.enterprise.context.Dependent;\n"
"import jakarta.enterprise.inject.Instance;\n"
"import jakarta.json.bind.JsonbConfig;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:302
#, no-wrap
msgid "public class CustomJsonbConfig {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:307
#, no-wrap
msgid ""
"    // Replaces the CDI producer for JsonbConfig built into Quarkus\n"
"    @Dependent\n"
"    JsonbConfig jsonConfig(Instance<JsonbConfigCustomizer> customizers) {\n"
"        JsonbConfig config = myJsonbConfig(); // Custom `JsonbConfig`\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:312
#, no-wrap
msgid ""
"        // Apply all JsonbConfigCustomizer beans (incl. Quarkus)\n"
"        for (JsonbConfigCustomizer customizer : customizers) {\n"
"            customizer.customize(config);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:316
#, no-wrap
msgid ""
"        return config;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-json.adoc:319
#, fuzzy, no-wrap
msgid "Creating a frontend"
msgstr "Criar um frontend"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:324
#, fuzzy
msgid "Now let's add a simple web page to interact with our `FruitResource`.  Quarkus automatically serves static resources located under the `META-INF/resources` directory.  In the `src/main/resources/META-INF/resources` directory, add a `fruits.html` file with the content from this link:{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html] file in it."
msgstr "Agora vamos adicionar uma página Web simples para interagir com o nosso `FruitResource`. O Quarkus serve automaticamente recursos estáticos localizados no diretório `META-INF/resources`. No diretório `src/main/resources/META-INF/resources`, adicione um ficheiro `fruits.html` com o conteúdo deste ficheiro  link:{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html]."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:326
#, fuzzy
msgid "You can now interact with your REST service:"
msgstr "Pode agora interagir com o seu serviço REST:"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:330
#, fuzzy
msgid "start Quarkus with:"
msgstr "iniciar o Quarkus com:"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:333
#, fuzzy
msgid "open a browser to `http://localhost:8080/fruits.html`"
msgstr "abrir um browser para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;`"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:334
#, fuzzy
msgid "add new fruits to the list via the form"
msgstr "adicionar novos frutos à lista através do formulário"

#. type: Title ==
#: upstream/_guides/rest-json.adoc:337
#, fuzzy, no-wrap
msgid "Building a native executable"
msgstr "Construir um executável nativo"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:340
#, fuzzy
msgid "You can build a native executable with the usual command:"
msgstr "Pode construir um executável nativo com o comando habitual:"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:344
#, fuzzy
msgid "Running it is as simple as executing `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "Executá-lo é tão simples quanto executar `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:346
#, fuzzy
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "Pode então apontar o seu browser para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;` e utilizar a sua aplicação."

#. type: Title ==
#: upstream/_guides/rest-json.adoc:347
#, fuzzy, no-wrap
msgid "About serialization"
msgstr "Acerca da serialização"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:350
#, fuzzy
msgid "JSON serialization libraries use Java reflection to get the properties of an object and serialize them."
msgstr "As bibliotecas de serialização JSON utilizam a reflexão Java para obter as propriedades de um objeto e serializá-las."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:354
#, fuzzy
msgid "When using native executables with GraalVM, all classes that will be used with reflection need to be registered.  The good news is that Quarkus does that work for you most of the time.  So far, we haven't registered any class, not even `Fruit`, for reflection usage and everything is working fine."
msgstr "Ao usar executáveis nativos com o GraalVM, todas as classes que serão usadas com reflexão precisam ser registradas. A boa notícia é que o Quarkus faz esse trabalho por ti na maioria das vezes. Até agora, não registámos nenhuma classe, nem mesmo `Fruit`, para uso de reflexão e tudo está a funcionar bem."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:357
#, fuzzy
msgid "Quarkus performs some magic when it is capable of inferring the serialized types from the REST methods.  When you have the following REST method, Quarkus determines that `Fruit` will be serialized:"
msgstr "O Quarkus faz alguma magia quando é capaz de inferir os tipos serializados a partir dos métodos REST. Quando se tem o seguinte método REST, o Quarkus determina que `Fruit` será serializado:"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:364
#, no-wrap
msgid ""
"@GET\n"
"public List<Fruit> list() {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-json.adoc:368
#, fuzzy
msgid "Quarkus does that for you automatically by analyzing the REST methods at build time and that's why we didn't need any reflection registration in the first part of this guide."
msgstr "O Quarkus faz isso automaticamente, analisando os métodos REST no momento da construção e é por isso que não precisamos de nenhum registo de reflexão na primeira parte deste guia."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:371
#, fuzzy
msgid "Another common pattern in the Jakarta REST world is to use the `Response` object.  `Response` comes with some nice perks:"
msgstr "Outro padrão comum no mundo Jakarta REST é usar o objeto `Response`. `Response` vem com algumas vantagens interessantes:"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:373
#, fuzzy
msgid "you can return different entity types depending on what happens in your method (a `Legume` or an `Error` for instance);"
msgstr "pode devolver diferentes tipos de entidades, dependendo do que acontece no seu método (um `Legume` ou um `Error`, por exemplo);"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:374
#, fuzzy
msgid "you can set the attributes of the `Response` (the status comes to mind in the case of an error)."
msgstr "pode definir os atributos do `Response` (o estado vem à mente no caso de um erro)."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:376
#, fuzzy
msgid "Your REST method then looks like this:"
msgstr "O seu método REST tem então o seguinte aspeto:"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:383
#, no-wrap
msgid ""
"@GET\n"
"public Response list() {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-json.adoc:387
#, fuzzy
msgid "It is not possible for Quarkus to determine at build time the type included in the `Response` as the information is not available.  In this case, Quarkus won't be able to automatically register for reflection the required classes."
msgstr "Não é possível ao Quarkus determinar no momento da construção o tipo incluído em `Response`, uma vez que a informação não está disponível. Neste caso, o Quarkus não poderá registar automaticamente as aulas de reflexão necessárias."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:389
#, fuzzy
msgid "This leads us to our next section."
msgstr "Isto leva-nos à nossa próxima secção."

#. type: Title ==
#: upstream/_guides/rest-json.adoc:390
#, fuzzy, no-wrap
msgid "Using Response"
msgstr "Utilizar a resposta"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:393
#, fuzzy
msgid "Let's create the `Legume` class which will be serialized as JSON, following the same model as for our `Fruit` class:"
msgstr "Vamos criar a classe `Legume` que será serializada como JSON, seguindo o mesmo modelo da nossa classe `Fruit`:"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:399
#, no-wrap
msgid "public class Legume {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:405
#, no-wrap
msgid ""
"    public Legume() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:411
#, no-wrap
msgid ""
"    public Legume(String name, String description) {\n"
"        this.name = name;\n"
"        this.description = description;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-json.adoc:414
#, fuzzy
msgid "Now let's create a `LegumeResource` REST service with only one method which returns the list of legumes."
msgstr "Agora vamos criar um serviço `LegumeResource` REST com apenas um método que devolve a lista de leguminosas."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:416
#, fuzzy
msgid "This method returns a `Response` and not a list of `Legume`."
msgstr "Este método devolve um `Response` e não uma lista de `Legume`."

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:424
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.LinkedHashSet;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:428
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:431
#, no-wrap
msgid ""
"@Path(\"/legumes\")\n"
"public class LegumeResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:433
#, no-wrap
msgid "    private Set<Legume> legumes = Collections.synchronizedSet(new LinkedHashSet<>());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:438
#, no-wrap
msgid ""
"    public LegumeResource() {\n"
"        legumes.add(new Legume(\"Carrot\", \"Root vegetable, usually orange\"));\n"
"        legumes.add(new Legume(\"Zucchini\", \"Summer squash\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:444
#, no-wrap
msgid ""
"    @GET\n"
"    public Response list() {\n"
"        return Response.ok(legumes).build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-json.adoc:449
#, fuzzy
msgid "Now let's add a simple web page to display our list of legumes.  In the `src/main/resources/META-INF/resources` directory, add a `legumes.html` file with the content from this {quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/legumes.html[legumes.html] file in it."
msgstr "Agora vamos adicionar uma página Web simples para apresentar a nossa lista de leguminosas. No diretório `src/main/resources/META-INF/resources`, adicione um ficheiro `legumes.html` com o conteúdo deste ficheiro {quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/legumes.html[legumes.html]."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:451
#, fuzzy
msgid "Open a browser to http://localhost:8080/legumes.html, and you will see our list of legumes."
msgstr "Abra um browser em  http://localhost:8080/legumes.html  e verá a nossa lista de leguminosas."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:453
#, fuzzy
msgid "The interesting part starts when running the application as a native executable:"
msgstr "A parte interessante começa quando se executa a aplicação como um executável nativo:"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:457 upstream/_guides/rest-json.adoc:496
#, fuzzy
msgid "create the native executable with:"
msgstr "criar o executável nativo com:"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:460 upstream/_guides/rest-json.adoc:499
#, fuzzy
msgid "execute it with `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"
msgstr "executá-lo com `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:461 upstream/_guides/rest-json.adoc:500
#, fuzzy
msgid "open a browser and go to http://localhost:8080/legumes.html"
msgstr "abrir um browser e ir para  http://localhost:8080/legumes.html"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:465
#, fuzzy
msgid "No legumes there."
msgstr "Não há leguminosas."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:468
#, fuzzy
msgid "As mentioned above, the issue is that Quarkus was not able to determine the `Legume` class will require some reflection by analyzing the REST endpoints.  The JSON serialization library tries to get the list of fields of `Legume` and gets an empty list, so it does not serialize the fields' data."
msgstr "Como mencionado acima, o problema é que o Quarkus não foi capaz de determinar a classe `Legume` exigirá alguma reflexão analisando os pontos de extremidade REST. A biblioteca de serialização JSON tenta obter a lista de campos de `Legume` e obtém uma lista vazia, pelo que não serializa os dados dos campos."

#. type: delimited block =
#: upstream/_guides/rest-json.adoc:473
#, fuzzy
msgid "At the moment, when JSON-B or Jackson tries to get the list of fields of a class, if the class is not registered for reflection, no exception will be thrown.  GraalVM will simply return an empty list of fields."
msgstr "Neste momento, quando JSON-B ou Jackson tentam obter a lista de campos de uma classe, se a classe não estiver registada para reflexão, não será lançada qualquer exceção. O GraalVM simplesmente retornará uma lista vazia de campos."

#. type: delimited block =
#: upstream/_guides/rest-json.adoc:475
#, fuzzy
msgid "Hopefully, this will change in the future and make the error more obvious."
msgstr "Esperemos que isto mude no futuro e que o erro seja mais óbvio."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:478
#, fuzzy
msgid "We can register `Legume` for reflection manually by adding the `@RegisterForReflection` annotation on our `Legume` class:"
msgstr "Podemos registar `Legume` para reflexão manualmente, adicionando a anotação `@RegisterForReflection` à nossa classe `Legume`:"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:481
#, no-wrap
msgid "import io.quarkus.runtime.annotations.RegisterForReflection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:486
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class Legume {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-json.adoc:489
#, fuzzy
msgid "The `@RegisterForReflection` annotation instructs Quarkus to keep the class and its members during the native compilation. More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr "A anotação `@RegisterForReflection` instrui o Quarkus a manter a classe e seus membros durante a compilação nativa. Mais detalhes sobre a anotação `@RegisterForReflection` podem ser encontrados na página de  link:writing-native-applications-tips.html#registerForReflection[dicas de aplicações nativas]."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:491
#, fuzzy
msgid "Let's do that and follow the same steps as before:"
msgstr "Vamos fazer isso e seguir os mesmos passos que antes:"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:495
#, fuzzy
msgid "hit `Ctrl+C` to stop the application"
msgstr "prima `Ctrl+C` para parar a aplicação"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:504
#, fuzzy
msgid "This time, you can see our list of legumes."
msgstr "Desta vez, pode ver a nossa lista de leguminosas."

#. type: Title ==
#: upstream/_guides/rest-json.adoc:506
#, fuzzy, no-wrap
msgid "Being reactive"
msgstr "Ser reativo"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:510
#, fuzzy
msgid "You can return _reactive types_ to handle asynchronous processing.  Quarkus recommends the usage of https://smallrye.io/smallrye-mutiny[Mutiny] to write reactive and asynchronous code."
msgstr "Pode devolver _tipos reactivos_ para lidar com o processamento assíncrono. A Quarkus recomenda a utilização do  link:https://smallrye.io/smallrye-mutiny[Mutiny] para escrever código reativo e assíncrono."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:512
#, fuzzy
msgid "RESTEasy Reactive is naturally integrated with Mutiny."
msgstr "O RESTEasy Reactive está naturalmente integrado com o Mutiny."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:514
#, fuzzy
msgid "Your endpoints can return `Uni` or `Multi` instances:"
msgstr "Os seus pontos de extremidade podem devolver instâncias de `Uni` ou `Multi`:"

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:523
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/{name}\")\n"
"public Uni<Fruit> getOne(String name) {\n"
"    return findByName(name);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-json.adoc:528
#, no-wrap
msgid ""
"@GET\n"
"public Multi<Fruit> getAll() {\n"
"    return findAll();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-json.adoc:532
#, fuzzy
msgid "Use `Uni` when you have a single result.  Use `Multi` when you have multiple items that may be emitted asynchronously."
msgstr "Utilize `Uni` quando tiver um único resultado. Utilize `Multi` quando tiver vários itens que possam ser emitidos de forma assíncrona."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:534
#, fuzzy
msgid "You can use `Uni` and `Response` to return asynchronous HTTP responses: `Uni<Response>`."
msgstr "Pode utilizar `Uni` e `Response` para devolver respostas HTTP assíncronas: `Uni&amp;lt;Response&amp;gt;`."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:536
#, fuzzy
msgid "More details about Mutiny can be found in xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Mais detalhes sobre o Mutiny podem ser encontrados em  link:mutiny-primer.html[Mutiny - uma biblioteca de programação reactiva intuitiva]."

#. type: Title ==
#: upstream/_guides/rest-json.adoc:537
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: upstream/_guides/rest-json.adoc:540
#, fuzzy
msgid "Creating JSON REST services with Quarkus is easy as it relies on proven and well known technologies."
msgstr "Criar serviços JSON REST com o Quarkus é fácil, uma vez que se baseia em tecnologias comprovadas e bem conhecidas."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:542
#, fuzzy
msgid "As usual, Quarkus further simplifies things under the hood when running your application as a native executable."
msgstr "Como de costume, o Quarkus simplifica ainda mais as coisas quando executa a sua aplicação como um executável nativo."

#. type: Plain text
#: upstream/_guides/rest-json.adoc:543
#, fuzzy
msgid "There is only one thing to remember: if you use `Response` and Quarkus can't determine the beans that are serialized, you need to annotate them with `@RegisterForReflection`."
msgstr "Há apenas um aspeto a ter em conta: se utilizar `Response` e o Quarkus não conseguir determinar os beans que são serializados, é necessário anotá-los com `@RegisterForReflection`."
