# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/context-propagation.adoc:6
#, fuzzy, no-wrap
msgid "Context Propagation in Quarkus"
msgstr "Propagação de contexto no Quarkus"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:16
#, fuzzy, no-wrap
msgid ""
"Traditional blocking code uses link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ThreadLocal.html[`ThreadLocal`]\n"
" variables to store contextual objects in order to avoid\n"
"passing them as parameters everywhere. Many Quarkus extensions require those contextual objects to operate\n"
"properly: xref:rest-json.adoc[RESTEasy Reactive], xref:cdi-reference.adoc[ArC] and xref:transaction.adoc[Transaction]\n"
"for example.\n"
msgstr "O código de bloqueio tradicional utiliza  link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ThreadLocal.html[`ThreadLocal`] para armazenar objectos contextuais, a fim de evitar passá-los como parâmetros em todo o lado. Muitas extensões Quarkus requerem esses objectos contextuais para funcionarem corretamente:  link:rest-json.html[RESTEasy Reactive],  link:cdi-reference.html[ArC] e  link:transaction.html[Transaction], por exemplo."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:21
#, fuzzy
msgid "If you write reactive/async code, you have to cut your work into a pipeline of code blocks that get executed \"later\", and in practice after the method you defined them in have returned. As such, `try/finally` blocks as well as `ThreadLocal` variables stop working, because your reactive code gets executed in another thread, after the caller ran its `finally` block."
msgstr "Se escrever código reativo/assíncrono, tem de dividir o seu trabalho numa cadeia de blocos de código que são executados \"mais tarde\" e, na prática, depois de o método em que os definiu ter regressado. Assim, os blocos `try/finally`, bem como as variáveis `ThreadLocal`, deixam de funcionar, porque o seu código reativo é executado noutra thread, depois de o chamador ter executado o seu bloco `finally`."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:26
#, fuzzy
msgid "link:https://github.com/smallrye/smallrye-context-propagation[SmallRye Context Propagation] an implementation of link:https://github.com/eclipse/microprofile-context-propagation[MicroProfile Context Propagation] was made to make those Quarkus extensions work properly in reactive/async settings. It works by capturing those contextual values that used to be in thread-locals, and restoring them when your code is called."
msgstr "link:https://github.com/smallrye/smallrye-context-propagation[SmallRye Context Propagation] uma implementação do  link:https://github.com/eclipse/microprofile-context-propagation[MicroProfile Context Propagation] foi feita para fazer com que essas extensões do Quarkus funcionem corretamente em configurações reativas/async. Funciona capturando os valores contextuais que costumavam estar nos locais das threads e restaurando-os quando o seu código é chamado."

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:27
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:31
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas secções seguintes e crie a aplicação passo a passo. No entanto, pode ir diretamente para o exemplo completo."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:33
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:35
#, fuzzy
msgid "The solution is located in the `context-propagation-quickstart` link:{quickstarts-tree-url}/context-propagation-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/context-propagation-quickstart[diretório] `context-propagation-quickstart`."

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:36
#, fuzzy, no-wrap
msgid "Setting it up"
msgstr "Configuração"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:40
#, fuzzy
msgid "If you are using link:https://smallrye.io/smallrye-mutiny[Mutiny] (the `quarkus-mutiny` extension), you just need to add the `quarkus-smallrye-context-propagation` extension to enable context propagation."
msgstr "Se estiver a utilizar  link:https://smallrye.io/smallrye-mutiny[o Mutiny] (a extensão `quarkus-mutiny` ), só precisa de adicionar a extensão `quarkus-smallrye-context-propagation` para ativar a propagação de contexto."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:42
#, fuzzy
msgid "In other words, add the following dependencies to your build file:"
msgstr "Por outras palavras, adicione as seguintes dependências ao seu ficheiro de compilação:"

#. type: Block title
#: upstream/_guides/context-propagation.adoc:44
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:56
#, no-wrap
msgid ""
"<!-- RESTEasy Reactive extension if not already included -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive</artifactId>\n"
"</dependency>\n"
"<!-- Context Propagation extension -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-context-propagation</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/context-propagation.adoc:59
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:65
#, no-wrap
msgid ""
"// RESTEasy Reactive extension if not already included\n"
"implementation(\"io.quarkus:quarkus-resteasy-reactive\")\n"
"// Context Propagation extension\n"
"implementation(\"io.quarkus:quarkus-smallrye-context-propagation\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:68
#, fuzzy
msgid "With this, you will get context propagation for ArC, RESTEasy Reactive and transactions, if you are using them."
msgstr "Com isto, obterá propagação de contexto para ArC, RESTEasy Reactive e transacções, se as estiver a utilizar."

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:69
#, fuzzy, no-wrap
msgid "Usage example with Mutiny"
msgstr "Exemplo de utilização com Mutiny"

#. type: Block title
#: upstream/_guides/context-propagation.adoc:72
#, fuzzy, no-wrap
msgid "Mutiny"
msgstr "Motim"

#. type: delimited block =
#: upstream/_guides/context-propagation.adoc:76
#, fuzzy
msgid "This section uses Mutiny reactive types.  If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Esta secção utiliza tipos reactivos Mutiny. Se não estiver familiarizado com o Mutiny, consulte  link:mutiny-primer.html[Mutiny - uma biblioteca de programação reactiva intuitiva]."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:81
#, fuzzy
msgid "Let's write a REST endpoint that reads the next 3 items from a xref:kafka.adoc[Kafka topic], stores them in a database using xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] (all in the same transaction) before returning them to the client, you can do it like this:"
msgstr "Vamos escrever um ponto de extremidade REST que lê os próximos 3 itens de um  link:kafka.html[tópico Kafka], armazena-os numa base de dados utilizando  link:hibernate-orm-panache.html[o Hibernate ORM com Panache] (tudo na mesma transação) antes de os devolver ao cliente, pode fazê-lo assim:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:87
#: upstream/_guides/context-propagation.adoc:238
#, no-wrap
msgid ""
"    // Get the prices stream\n"
"    @Inject\n"
"    @Channel(\"prices\") Publisher<Double> prices;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:110
#, no-wrap
msgid ""
"    @Transactional\n"
"    @GET\n"
"    @Path(\"/prices\")\n"
"    @RestStreamElementType(MediaType.TEXT_PLAIN)\n"
"    public Publisher<Double> prices() {\n"
"        // get the next three prices from the price stream\n"
"        return Multi.createFrom().publisher(prices)\n"
"                .select().first(3)\n"
"                // The items are received from the event loop, so cannot use Hibernate ORM (classic)\n"
"                // Switch to a worker thread, the transaction will be propagated\n"
"                .emitOn(Infrastructure.getDefaultExecutor())\n"
"                .map(price -> {\n"
"                    // store each price before we send them\n"
"                    Price priceEntity = new Price();\n"
"                    priceEntity.value = price;\n"
"                    // here we are all in the same transaction\n"
"                    // thanks to context propagation\n"
"                    priceEntity.persist();\n"
"                    return price;\n"
"                    // the transaction is committed once the stream completes\n"
"                });\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:114
#, fuzzy
msgid "Notice that thanks to Mutiny support for context propagation, this works out of the box.  The 3 items are persisted using the same transaction and this transaction is committed when the stream completes."
msgstr "Observe que, graças ao suporte do Mutiny para propagação de contexto, isso funciona imediatamente. Os 3 itens são persistidos usando a mesma transação e esta transação é confirmada quando o fluxo é concluído."

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:115
#, fuzzy, no-wrap
msgid "Usage example for `CompletionStage`"
msgstr "Exemplo de utilização para `CompletionStage`"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:123
#, fuzzy
msgid "If you are using link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletionStage.html[`CompletionStage`] you need manual context propagation. You can do that by injecting a `ThreadContext` or `ManagedExecutor` that will propagate every context. For example, here we use the xref:vertx.adoc[Vert.x Web Client] to get the list of Star Wars people, then store them in the database using xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] (all in the same transaction) before returning them to the client as JSON using xref:rest-json.adoc[Jackson or JSON-B]:"
msgstr "Se estiver a utilizar  link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletionStage.html[`CompletionStage`] precisa de propagação manual de contexto. Isso pode ser feito injetando um `ThreadContext` ou `ManagedExecutor` que propagará cada contexto. Por exemplo, aqui usamos o  link:vertx.html[cliente Web Vert.x] para obter a lista de pessoas do Star Wars e, em seguida, armazená-las no banco de dados usando  link:hibernate-orm-panache.html[o Hibernate ORM com Panache] (tudo na mesma transação) antes de devolvê-las ao cliente como JSON usando  link:rest-json.html[Jackson ou JSON-B]:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:129
#, no-wrap
msgid ""
"    @Inject ThreadContext threadContext;\n"
"    @Inject ManagedExecutor managedExecutor;\n"
"    @Inject Vertx vertx;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:156
#, no-wrap
msgid ""
"    @Transactional\n"
"    @GET\n"
"    @Path(\"/people\")\n"
"    public CompletionStage<List<Person>> people() throws SystemException {\n"
"        // Create a REST client to the Star Wars API\n"
"        WebClient client = WebClient.create(vertx,\n"
"                         new WebClientOptions()\n"
"                          .setDefaultHost(\"swapi.dev\")\n"
"                          .setDefaultPort(443)\n"
"                          .setSsl(true));\n"
"        // get the list of Star Wars people, with context capture\n"
"        return threadContext.withContextCapture(client.get(\"/api/people/\").send())\n"
"                .thenApplyAsync(response -> {\n"
"                    JsonObject json = response.bodyAsJsonObject();\n"
"                    List<Person> persons = new ArrayList<>(json.getInteger(\"count\"));\n"
"                    // Store them in the DB\n"
"                    // Note that we're still in the same transaction as the outer method\n"
"                    for (Object element : json.getJsonArray(\"results\")) {\n"
"                        Person person = new Person();\n"
"                        person.name = ((JsonObject) element).getString(\"name\");\n"
"                        person.persist();\n"
"                        persons.add(person);\n"
"                    }\n"
"                    return persons;\n"
"                }, managedExecutor);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:160
#, fuzzy
msgid "Using `ThreadContext` or `ManagedExecutor` you can wrap most useful functional types and `CompletionStage` in order to get context propagated."
msgstr "Utilizando `ThreadContext` ou `ManagedExecutor`, pode envolver os tipos funcionais mais úteis e `CompletionStage` para que o contexto seja propagado."

#. type: delimited block =
#: upstream/_guides/context-propagation.adoc:164
#, fuzzy
msgid "The injected `ManagedExecutor` uses the Quarkus thread pool."
msgstr "O `ManagedExecutor` injetado utiliza o conjunto de threads do Quarkus."

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:166
#, fuzzy, no-wrap
msgid "Overriding which contexts are propagated"
msgstr "Substituir os contextos que são propagados"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:169
#, fuzzy
msgid "By default, all available contexts are propagated. However, you can override this behaviour in several ways."
msgstr "Por defeito, todos os contextos disponíveis são propagados. No entanto, é possível substituir este comportamento de várias formas."

#. type: Title ===
#: upstream/_guides/context-propagation.adoc:170
#, fuzzy, no-wrap
msgid "Using configuration"
msgstr "Utilizar a configuração"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:173
#, fuzzy
msgid "The following configuration properties allow you to specify the default sets of propagated contexts:"
msgstr "As seguintes propriedades de configuração permitem-lhe especificar os conjuntos predefinidos de contextos propagados:"

#. type: Table
#: upstream/_guides/context-propagation.adoc:176
#, fuzzy, no-wrap
msgid "Configuration Key"
msgstr "Chave de configuração"

#. type: Table
#: upstream/_guides/context-propagation.adoc:176
#: upstream/_guides/context-propagation.adoc:198
#, fuzzy, no-wrap
msgid "Description"
msgstr "Descrição"

#. type: Table
#: upstream/_guides/context-propagation.adoc:178
#, fuzzy, no-wrap
msgid "Default Value"
msgstr "Valor por defeito"

#. type: Table
#: upstream/_guides/context-propagation.adoc:179
#, fuzzy, no-wrap
msgid "`mp.context.ThreadContext.propagated`"
msgstr "`mp.context.ThreadContext.propagated`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:180
#, fuzzy, no-wrap
msgid "The comma-separated set of propagated contexts"
msgstr "O conjunto de contextos propagados, separado por vírgulas"

#. type: Table
#: upstream/_guides/context-propagation.adoc:182
#, fuzzy, no-wrap
msgid "`Remaining` (all non-explicitly list contexts)"
msgstr "`Remaining` (todos os contextos de lista não explícita)"

#. type: Table
#: upstream/_guides/context-propagation.adoc:183
#, fuzzy, no-wrap
msgid "`mp.context.ThreadContext.cleared`"
msgstr "`mp.context.ThreadContext.cleared`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:184
#, fuzzy, no-wrap
msgid "The comma-separated set of cleared contexts"
msgstr "O conjunto de contextos apurados, separado por vírgulas"

#. type: Table
#: upstream/_guides/context-propagation.adoc:186
#, fuzzy, no-wrap
msgid "`None` (no context), unless neither the propagated nor cleared sets contain `Remaining`, in which case the default is `Remaining` (all non-explicitly listed contexts)"
msgstr "`None` (sem contexto), exceto se nem os conjuntos propagados nem os conjuntos apurados contiverem `Remaining`, caso em que a predefinição é `Remaining` (todos os contextos não explicitamente listados)"

#. type: Table
#: upstream/_guides/context-propagation.adoc:187
#, fuzzy, no-wrap
msgid "`mp.context.ThreadContext.unchanged`"
msgstr "`mp.context.ThreadContext.unchanged`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:188
#, fuzzy, no-wrap
msgid "The comma-separated set of unchanged contexts"
msgstr "O conjunto de contextos inalterados, separado por vírgulas"

#. type: Table
#: upstream/_guides/context-propagation.adoc:189
#, fuzzy, no-wrap
msgid "`None` (no context)"
msgstr "`None` (sem contexto)"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:193
#, fuzzy
msgid "The following contexts are available in Quarkus either out of the box, or depending on whether you include their extensions:"
msgstr "Os seguintes contextos estão disponíveis no Quarkus, quer de imediato, quer dependendo da inclusão das suas extensões:"

#. type: Table
#: upstream/_guides/context-propagation.adoc:196
#, fuzzy, no-wrap
msgid "Context Nam"
msgstr "Contexto Nam"

#. type: Table
#: upstream/_guides/context-propagation.adoc:196
#, fuzzy, no-wrap
msgid "Name Constant"
msgstr "Nome constante"

#. type: Table
#: upstream/_guides/context-propagation.adoc:199
#, fuzzy, no-wrap
msgid "`None`"
msgstr "`None`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:200
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#NONE[`ThreadContext.NONE`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#NONE[`ThreadContext.NONE`]"

#. type: Table
#: upstream/_guides/context-propagation.adoc:202
#, fuzzy, no-wrap
msgid "Can be used to specify an empty set of contexts, but setting the value to empty works too"
msgstr "Pode ser utilizado para especificar um conjunto vazio de contextos, mas a definição do valor como vazio também funciona"

#. type: Table
#: upstream/_guides/context-propagation.adoc:203
#, fuzzy, no-wrap
msgid "`Remaining`"
msgstr "`Remaining`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:204
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#ALL_REMAINING[`ThreadContext.ALL_REMAINING`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#ALL_REMAINING[`ThreadContext.ALL_REMAINING`]"

#. type: Table
#: upstream/_guides/context-propagation.adoc:206
#, fuzzy, no-wrap
msgid "All the contexts that are not explicitly listed in other sets"
msgstr "Todos os contextos que não estão explicitamente enumerados noutros conjuntos"

#. type: Table
#: upstream/_guides/context-propagation.adoc:207
#, fuzzy, no-wrap
msgid "`Transaction`"
msgstr "`Transaction`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:208
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#TRANSACTION[`ThreadContext.TRANSACTION`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#TRANSACTION[`ThreadContext.TRANSACTION`]"

#. type: Table
#: upstream/_guides/context-propagation.adoc:210
#, fuzzy, no-wrap
msgid "The JTA transaction context"
msgstr "O contexto de transação JTA"

#. type: Table
#: upstream/_guides/context-propagation.adoc:211
#, fuzzy, no-wrap
msgid "`CDI`"
msgstr "`CDI`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:212
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#CDI[`ThreadContext.CDI`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#CDI[`ThreadContext.CDI`]"

#. type: Table
#: upstream/_guides/context-propagation.adoc:214
#, fuzzy, no-wrap
msgid "The CDI (ArC) context"
msgstr "O contexto da CDI (ArC)"

#. type: Table
#: upstream/_guides/context-propagation.adoc:215
#, fuzzy, no-wrap
msgid "`Servlet`"
msgstr "`Servlet`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:216
#: upstream/_guides/context-propagation.adoc:220
#, fuzzy, no-wrap
msgid "N/A"
msgstr "N/A"

#. type: Table
#: upstream/_guides/context-propagation.adoc:218
#, fuzzy, no-wrap
msgid "The servlet context"
msgstr "O contexto do servlet"

#. type: Table
#: upstream/_guides/context-propagation.adoc:219
#, fuzzy, no-wrap
msgid "`Jakarta REST`"
msgstr "`Jakarta REST`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:222
#, fuzzy, no-wrap
msgid "The RESTEasy Reactive or RESTEasy Classic context"
msgstr "O contexto RESTEasy Reactive ou RESTEasy Classic"

#. type: Table
#: upstream/_guides/context-propagation.adoc:223
#, fuzzy, no-wrap
msgid "`Application`"
msgstr "`Application`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:224
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#APPLICATION[`ThreadContext.APPLICATION`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#APPLICATION[`ThreadContext.APPLICATION`]"

#. type: Table
#: upstream/_guides/context-propagation.adoc:225
#, fuzzy, no-wrap
msgid "The current `ThreadContextClassLoader`"
msgstr "O atual `ThreadContextClassLoader`"

#. type: Title ===
#: upstream/_guides/context-propagation.adoc:227
#, fuzzy, no-wrap
msgid "Overriding the propagated contexts using annotations"
msgstr "Substituir os contextos propagados utilizando anotações"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:232
#, fuzzy
msgid "In order for automatic context propagation, such as Mutiny uses, to be overridden in specific methods, you can use the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/CurrentThreadContext.html[`@CurrentThreadContext`] annotation:"
msgstr "Para que a propagação automática de contexto, como a que o Mutiny utiliza, seja substituída em métodos específicos, é possível utilizar a anotação  link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/CurrentThreadContext.html[`@CurrentThreadContext`] anotação:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:249
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/prices\")\n"
"    @RestStreamElementType(MediaType.TEXT_PLAIN)\n"
"    // Get rid of all context propagation, since we don't need it here\n"
"    @CurrentThreadContext(propagated = {}, unchanged = ThreadContext.ALL_REMAINING)\n"
"    public Publisher<Double> prices() {\n"
"        // get the next three prices from the price stream\n"
"        return Multi.createFrom().publisher(prices)\n"
"                .select().first(3);\n"
"    }\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/context-propagation.adoc:251
#, fuzzy, no-wrap
msgid "Overriding the propagated contexts using CDI injection"
msgstr "Substituir os contextos propagados utilizando a injeção CDI"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:254
#, fuzzy
msgid "You can also inject a custom-built `ThreadContext` using the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ThreadContextConfig.html[`@ThreadContextConfig`] annotation on your injection point:"
msgstr "Você também pode injetar um `ThreadContext` personalizado usando a anotação  link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ThreadContextConfig.html[`@ThreadContextConfig`] no seu ponto de injeção:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:264
#, no-wrap
msgid ""
"    // Get the prices stream\n"
"    @Inject\n"
"    @Channel(\"prices\") Publisher<Double> prices;\n"
"    // Get a ThreadContext that doesn't propagate context\n"
"    @Inject\n"
"    @ThreadContextConfig(unchanged = ThreadContext.ALL_REMAINING)\n"
"    SmallRyeThreadContext threadContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:276
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/prices\")\n"
"    @RestStreamElementType(MediaType.TEXT_PLAIN)\n"
"    public Publisher<Double> prices() {\n"
"        // Get rid of all context propagation, since we don't need it here\n"
"        try(CleanAutoCloseable ac = SmallRyeThreadContext.withThreadContext(threadContext)){\n"
"            // get the next three prices from the price stream\n"
"            return Multi.createFrom().publisher(prices)\n"
"                    .select().first(3);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:279
#, fuzzy
msgid "Likewise, there is a similar way to inject a configured instance of `ManagedExecutor` using the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ManagedExecutorConfig.html[`@ManagedExecutorConfig`] annotation:"
msgstr "Do mesmo modo, existe uma forma semelhante de injetar uma instância configurada de `ManagedExecutor` utilizando a anotação  link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ManagedExecutorConfig.html[`@ManagedExecutorConfig`] anotação:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:286
#, no-wrap
msgid ""
"    // Custom ManagedExecutor with different async limit, queue and no propagation\n"
"    @Inject\n"
"    @ManagedExecutorConfig(maxAsync = 2, maxQueued = 3, cleared = ThreadContext.ALL_REMAINING)\n"
"    ManagedExecutor configuredCustomExecutor;\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/context-propagation.adoc:288
#, fuzzy, no-wrap
msgid "Sharing configured CDI instances of ManagedExecutor and ThreadContext"
msgstr "Partilha de instâncias CDI configuradas de ManagedExecutor e ThreadContext"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:293
#, fuzzy
msgid "If you need to inject the same `ManagedExecutor` or `ThreadContext` into several places and share its capacity, you can name the instance with https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/NamedInstance.html[`@NamedInstance`] annotation.  `@NamedInstance` is a CDI qualifier and all injections of the same type and name will therefore share the same underlying instance.  If you also need to customize your instance, you can do so using `@ManagedExecutorConfig`/`ThreadContextConfig` annotation on one of its injection points:"
msgstr "Se precisar de injetar o mesmo `ManagedExecutor` ou `ThreadContext` em vários locais e partilhar a sua capacidade, pode nomear a instância com  link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/NamedInstance.html[`@NamedInstance`] annotation. `@NamedInstance` é um qualificador CDI e todas as injecções do mesmo tipo e nome partilharão, portanto, a mesma instância subjacente. Se também precisar de personalizar a sua instância, pode fazê-lo utilizando a anotação `@ManagedExecutorConfig`/ `ThreadContextConfig` num dos seus pontos de injeção:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:301
#, no-wrap
msgid ""
"    // Custom configured ManagedExecutor with name\n"
"    @Inject\n"
"    @ManagedExecutorConfig(maxAsync = 2, maxQueued = 3, cleared = ThreadContext.ALL_REMAINING)\n"
"    @NamedInstance(\"myExecutor\")\n"
"    ManagedExecutor sharedConfiguredExecutor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:306
#, no-wrap
msgid ""
"    // Since this executor has the same name, it will be the same instance as above\n"
"    @Inject\n"
"    @NamedInstance(\"myExecutor\")\n"
"    ManagedExecutor sameExecutor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:312
#, no-wrap
msgid ""
"    // Custom ThreadContext with a name\n"
"    @Inject\n"
"    @ThreadContextConfig(unchanged = ThreadContext.ALL_REMAINING)\n"
"    @NamedInstance(\"myContext\")\n"
"    ThreadContext sharedConfiguredThreadContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:317
#, no-wrap
msgid ""
"    // Given equal value of @NamedInstance, this ThreadContext will be the same as the above one\n"
"    @Inject\n"
"    @NamedInstance(\"myContext\")\n"
"    ThreadContext sameContext;\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:319
#, fuzzy, no-wrap
msgid "Context Propagation for CDI"
msgstr "Propagação de contexto para CDI"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:323
#, fuzzy
msgid "In terms of CDI, `@RequestScoped`, `@ApplicationScoped` and `@Singleton` beans get propagated and are available in other threads.  `@Dependent` beans as well as any custom scoped beans cannot be automatically propagated via CDI Context Propagation."
msgstr "Em termos de CDI, os beans `@RequestScoped`, `@ApplicationScoped` e `@Singleton` são propagados e estão disponíveis noutras threads. Os beans `@Dependent`, bem como quaisquer beans com âmbito personalizado, não podem ser propagados automaticamente através da propagação de contexto CDI."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:330
#, fuzzy
msgid "`@ApplicationScoped` and `@Singleton` beans are always active scopes and as such are easy to deal with - context propagation tasks can work with those beans so long as the CDI container is running.  However, `@RequestScoped` beans are a different story. They are only active for a short period of time which can be bound either to HTTP request or some other request/task when manually activated/deactivated.  In this case user must be aware that once the original thread gets to an end of a request, it will terminate the context, calling `@PreDestroy` on those beans and then clearing them from the context.  Subsequent attempts to access those beans from other threads can result in unexpected behaviour.  It is therefore recommended to make sure all tasks using request scoped beans via context propagation are performed in such a manner that they don't outlive the original request duration."
msgstr "`@ApplicationScoped` e `@Singleton` são sempre âmbitos activos e, como tal, são fáceis de lidar - as tarefas de propagação de contexto podem funcionar com esses beans enquanto o contentor CDI estiver em execução. No entanto, os beans `@RequestScoped` são uma história diferente. Só estão activos durante um curto período de tempo, que pode ser associado a um pedido HTTP ou a outro pedido/tarefa quando ativado/desativado manualmente. Neste caso, o utilizador deve estar ciente de que, assim que a thread original chegar ao fim de um pedido, encerrará o contexto, chamando `@PreDestroy` a esses beans e, em seguida, limpando-os do contexto. As tentativas subsequentes de aceder a esses beans a partir de outras threads podem resultar num comportamento inesperado. Por conseguinte, recomenda-se que todas as tarefas que utilizam beans com âmbito de pedido através da propagação de contexto sejam executadas de forma a não ultrapassarem a duração do pedido original."

#. type: delimited block =
#: upstream/_guides/context-propagation.adoc:335
#, fuzzy
msgid "Due to the above described behavior, it is recommended to avoid using `@PreDestroy` on `@RequestScoped` beans when working with Context Propagation in CDI."
msgstr "Devido ao comportamento descrito acima, recomenda-se que evite utilizar `@PreDestroy` em `@RequestScoped` beans quando trabalhar com a propagação de contexto em CDI."
