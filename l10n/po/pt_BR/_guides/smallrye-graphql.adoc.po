# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/smallrye-graphql.adoc:6
#, fuzzy, no-wrap
msgid "SmallRye GraphQL"
msgstr "SmallRye GraphQL"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:15
#, fuzzy
msgid "This guide demonstrates how your Quarkus application can use https://github.com/smallrye/smallrye-graphql/[SmallRye GraphQL], an implementation of the https://github.com/eclipse/microprofile-graphql/[MicroProfile GraphQL] specification."
msgstr "Este guia demonstra como a sua aplicação Quarkus pode utilizar o  link:https://github.com/smallrye/smallrye-graphql/[SmallRye GraphQL], uma implementação da especificação  link:https://github.com/eclipse/microprofile-graphql/[MicroProfile GraphQL]."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:17
#, fuzzy
msgid "As the https://www.graphql.org/[GraphQL] specification website states:"
msgstr "Como afirma o site de especificação  link:https://www.graphql.org/[GraphQL]:"

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:23
#, fuzzy
msgid "GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.  GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools."
msgstr "O GraphQL é uma linguagem de consulta para APIs e um tempo de execução para atender a essas consultas com seus dados existentes. O GraphQL fornece uma descrição completa e compreensível dos dados na sua API, dá aos clientes o poder de pedir exatamente o que precisam e nada mais, facilita a evolução das APIs ao longo do tempo e permite poderosas ferramentas de desenvolvimento."

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:26
#, fuzzy, no-wrap
msgid ""
"**GraphQL** was originally developed by **Facebook** in 2012 and has been\n"
"an open standard since 2015.\n"
msgstr "*O GraphQL* foi originalmente desenvolvido pelo *Facebook* em 2012 e tem sido um padrão aberto desde 2015."

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:29
#, fuzzy
msgid "GraphQL is not a replacement for REST API specification but merely an alternative. Unlike REST, GraphQL API's have the ability to benefit the client by:"
msgstr "O GraphQL não é um substituto para a especificação da API REST, mas apenas uma alternativa. Ao contrário do REST, as APIs GraphQL têm a capacidade de beneficiar o cliente ao"

#. type: Labeled list
#: upstream/_guides/smallrye-graphql.adoc:30
#, fuzzy, no-wrap
msgid "Preventing Over-fetching and Under-fetching"
msgstr "Prevenir o over-fetching e o under-fetching"

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:36
#, fuzzy
msgid "REST APIs are server-driven fixed data responses that cannot be determined by the client. Although the client does not require all the fields the client must retrieve all the data hence `Over-fetching`. A client may also require multiple REST API calls according to the first call (HATEOAS) to retrieve all the data that is required thereby `Under-fetching`."
msgstr "As API REST são respostas de dados fixos orientadas para o servidor que não podem ser determinadas pelo cliente. Embora o cliente não necessite de todos os campos, tem de obter todos os dados, pelo que `Over-fetching`. Um cliente pode também necessitar de várias chamadas à API REST, de acordo com a primeira chamada (HATEOAS), para obter todos os dados necessários, pelo que `Under-fetching`."

#. type: Labeled list
#: upstream/_guides/smallrye-graphql.adoc:37
#, fuzzy, no-wrap
msgid "API Evolution"
msgstr "Evolução da API"

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:41
#, fuzzy
msgid "Since GraphQL API's returns data that are requested by the client adding additional fields and capabilities to existing API will not create breaking changes to existing clients."
msgstr "Uma vez que as API GraphQL devolvem dados que são solicitados pelo cliente, a adição de campos e capacidades adicionais à API existente não criará alterações de rutura para os clientes existentes."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:42
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:46
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitetura"

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:50
#, fuzzy
msgid "In this guide, we build a simple GraphQL application that exposes a GraphQL API at `/graphql`."
msgstr "Neste guia, criamos um aplicativo GraphQL simples que expõe uma API GraphQL em `/graphql`."

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:52
#, fuzzy
msgid "This example was inspired by a popular GraphQL API."
msgstr "Este exemplo foi inspirado por uma API GraphQL popular."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:53
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:57
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas secções seguintes e crie a aplicação passo a passo. No entanto, pode ir diretamente para o exemplo completo."

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:59
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:61
#, fuzzy
msgid "The solution is located in the `microprofile-graphql-quickstart` link:{quickstarts-tree-url}/microprofile-graphql-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/microprofile-graphql-quickstart[diretório] `microprofile-graphql-quickstart`."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:62
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Criar o projeto Maven"

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:65
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Primeiro, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:71
#, fuzzy
msgid "This command generates a project, importing the `smallrye-graphql` extension."
msgstr "Este comando gera um projeto, importando a extensão `smallrye-graphql`."

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:74
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `smallrye-graphql` extension to your project by running the following command in your project base directory:"
msgstr "Se já tiver o seu projeto Quarkus configurado, pode adicionar a extensão `smallrye-graphql` ao seu projeto executando o seguinte comando no diretório de base do seu projeto:"

#. type: quote
#: upstream/_guides/smallrye-graphql.adoc:79
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Isto irá adicionar o seguinte ao seu ficheiro de compilação:"

#. type: Block title
#: upstream/_guides/smallrye-graphql.adoc:81
#: upstream/_guides/smallrye-graphql.adoc:1293
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:87
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-graphql</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/smallrye-graphql.adoc:90
#: upstream/_guides/smallrye-graphql.adoc:1302
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:93
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-smallrye-graphql\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:95
#, fuzzy, no-wrap
msgid "Preparing an Application: GraphQL API"
msgstr "Preparando um aplicativo: API GraphQL"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:98
#, fuzzy
msgid "In this section we will start creating the GraphQL API."
msgstr "Nesta secção, vamos começar a criar a API GraphQL."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:100
#, fuzzy
msgid "First, create the following entities representing a film from a galaxy far, far away:"
msgstr "Primeiro, crie as seguintes entidades que representam um filme de uma galáxia muito, muito distante:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:104
#: upstream/_guides/smallrye-graphql.adoc:702
#, no-wrap
msgid "package org.acme.microprofile.graphql;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:106
#, no-wrap
msgid "public class Film {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:111
#, no-wrap
msgid ""
"    public String title;\n"
"    public Integer episodeID;\n"
"    public String director;\n"
"    public LocalDate releaseDate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:113
#: upstream/_guides/smallrye-graphql.adoc:125
#: upstream/_guides/smallrye-graphql.adoc:709
#, no-wrap
msgid "}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:115
#, no-wrap
msgid "public class Hero {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:123
#, no-wrap
msgid ""
"    public String name;\n"
"    public String surname;\n"
"    public Double height;\n"
"    public Integer mass;\n"
"    public Boolean darkSide;\n"
"    public LightSaber lightSaber;\n"
"    public List<Integer> episodeIds = new ArrayList<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:129
#, no-wrap
msgid ""
"enum LightSaber {\n"
"    RED, BLUE, GREEN\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:132
#, fuzzy
msgid "For readability we use classes with public fields, but classes with private fields with public getters and setters will also work."
msgstr "Para facilitar a leitura, utilizamos classes com campos públicos, mas as classes com campos privados com getters e setters públicos também funcionam."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:135
#, fuzzy
msgid "The classes we have just created describe the GraphQL schema which is a set of possible data (objects, fields, relationships) that a client can access."
msgstr "As classes que acabámos de criar descrevem o esquema GraphQL, que é um conjunto de dados possíveis (objectos, campos, relações) a que um cliente pode aceder."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:137
#, fuzzy
msgid "Let's continue with an example CDI bean, that would work as a repository:"
msgstr "Vamos continuar com um exemplo de bean CDI, que funcionaria como um repositório:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:142
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class GalaxyService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:144
#, no-wrap
msgid "    private List<Hero> heroes = new ArrayList<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:146
#, no-wrap
msgid "    private List<Film> films = new ArrayList<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:148
#, no-wrap
msgid "    public GalaxyService() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:154
#, no-wrap
msgid ""
"        Film aNewHope = new Film();\n"
"        aNewHope.title = \"A New Hope\";\n"
"        aNewHope.releaseDate = LocalDate.of(1977, Month.MAY, 25);\n"
"        aNewHope.episodeID = 4;\n"
"        aNewHope.director = \"George Lucas\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:160
#, no-wrap
msgid ""
"        Film theEmpireStrikesBack = new Film();\n"
"        theEmpireStrikesBack.title = \"The Empire Strikes Back\";\n"
"        theEmpireStrikesBack.releaseDate = LocalDate.of(1980, Month.MAY, 21);\n"
"        theEmpireStrikesBack.episodeID = 5;\n"
"        theEmpireStrikesBack.director = \"George Lucas\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:166
#, no-wrap
msgid ""
"        Film returnOfTheJedi = new Film();\n"
"        returnOfTheJedi.title = \"Return Of The Jedi\";\n"
"        returnOfTheJedi.releaseDate = LocalDate.of(1983, Month.MAY, 25);\n"
"        returnOfTheJedi.episodeID = 6;\n"
"        returnOfTheJedi.director = \"George Lucas\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:170
#, no-wrap
msgid ""
"        films.add(aNewHope);\n"
"        films.add(theEmpireStrikesBack);\n"
"        films.add(returnOfTheJedi);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:179
#, no-wrap
msgid ""
"        Hero luke = new Hero();\n"
"        luke.name = \"Luke\";\n"
"        luke.surname = \"Skywalker\";\n"
"        luke.height = 1.7;\n"
"        luke.mass = 73;\n"
"        luke.lightSaber = LightSaber.GREEN;\n"
"        luke.darkSide = false;\n"
"        luke.episodeIds.addAll(Arrays.asList(4, 5, 6));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:187
#, no-wrap
msgid ""
"        Hero leia = new Hero();\n"
"        leia.name = \"Leia\";\n"
"        leia.surname = \"Organa\";\n"
"        leia.height = 1.5;\n"
"        leia.mass = 51;\n"
"        leia.darkSide = false;\n"
"        leia.episodeIds.addAll(Arrays.asList(4, 5, 6));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:197
#, no-wrap
msgid ""
"        Hero vader = new Hero();\n"
"        vader.name = \"Darth\";\n"
"        vader.surname = \"Vader\";\n"
"        vader.height = 1.9;\n"
"        vader.mass = 89;\n"
"        vader.darkSide = true;\n"
"        vader.lightSaber = LightSaber.RED;\n"
"        vader.episodeIds.addAll(Arrays.asList(4, 5, 6));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:201
#, no-wrap
msgid ""
"        heroes.add(luke);\n"
"        heroes.add(leia);\n"
"        heroes.add(vader);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:203
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:207
#, no-wrap
msgid ""
"    public List<Film> getAllFilms() {\n"
"        return films;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:211
#, no-wrap
msgid ""
"    public Film getFilm(int id) {\n"
"        return films.get(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:217
#, no-wrap
msgid ""
"    public List<Hero> getHeroesByFilm(Film film) {\n"
"        return heroes.stream()\n"
"                .filter(hero -> hero.episodeIds.contains(film.episodeID))\n"
"                .collect(Collectors.toList());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:221
#, no-wrap
msgid ""
"    public void addHero(Hero hero) {\n"
"        heroes.add(hero);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:225
#, no-wrap
msgid ""
"    public Hero deleteHero(int id) {\n"
"        return heroes.remove(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:232
#, no-wrap
msgid ""
"    public List<Hero> getHeroesBySurname(String surname) {\n"
"        return heroes.stream()\n"
"                .filter(hero -> hero.surname.equals(surname))\n"
"                .collect(Collectors.toList());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:235
#, fuzzy
msgid "Now, let's create our first GraphQL API."
msgstr "Agora, vamos criar nossa primeira API GraphQL."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:237
#, fuzzy
msgid "Edit the `org.acme.microprofile.graphql.FilmResource` class as following:"
msgstr "Editar a classe `org.acme.microprofile.graphql.FilmResource` da seguinte forma:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:242
#, no-wrap
msgid ""
"@GraphQLApi // <1>\n"
"public class FilmResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:245
#, no-wrap
msgid ""
"    @Inject\n"
"    GalaxyService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:252
#, no-wrap
msgid ""
"    @Query(\"allFilms\") // <2>\n"
"    @Description(\"Get all Films from a galaxy far far away\") // <3>\n"
"    public List<Film> getAllFilms() {\n"
"        return service.getAllFilms();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:255
#, fuzzy
msgid "`@GraphQLApi` annotation indicates that the CDI bean will be a GraphQL endpoint"
msgstr "`@GraphQLApi` indica que o bean CDI será um ponto de extremidade GraphQL"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:256
#, fuzzy
msgid "`@Query` annotation defines that this method will be queryable with the name `allFilms`"
msgstr "`@Query` define que este método será consultável com o nome `allFilms`"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:257
#, fuzzy
msgid "Documentation of the queryable method"
msgstr "Documentação do método queryable"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:260
#, fuzzy
msgid "The value of the `@Query` annotation is optional and would implicitly be defaulted to the method name if absent."
msgstr "O valor da anotação `@Query` é facultativo e, na sua ausência, será implicitamente atribuído por defeito ao nome do método."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:262
#, fuzzy
msgid "This way we have created our first queryable API which we will later expand."
msgstr "Desta forma, criámos a nossa primeira API consultável, que iremos expandir mais tarde."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:263
#, fuzzy, no-wrap
msgid "Launch"
msgstr "Lançamento"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:266
#, fuzzy
msgid "Launch the quarkus application in dev mode:"
msgstr "Lançar a aplicação quarkus em modo de desenvolvimento:"

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:269
#, fuzzy, no-wrap
msgid "Introspect"
msgstr "Introspeção"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:272
#, fuzzy
msgid "The full schema of the GraphQL API can be retrieved by calling the following:"
msgstr "O esquema completo da API GraphQL pode ser recuperado chamando o seguinte:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:276
#, no-wrap
msgid "curl http://localhost:8080/graphql/schema.graphql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:279
#, fuzzy
msgid "The server will return the complete schema of the GraphQL API."
msgstr "O servidor devolverá o esquema completo da API GraphQL."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:281
#, fuzzy, no-wrap
msgid "GraphQL UI"
msgstr "GraphQL UI"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:284
#: upstream/_guides/smallrye-graphql.adoc:692
#, fuzzy
msgid "Experimental - not included in the MicroProfile specification"
msgstr "Experimental - não incluído na especificação MicroProfile"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:286
#, fuzzy
msgid "GraphQL UI is a great tool permitting easy interaction with your GraphQL APIs."
msgstr "A GraphQL UI é uma excelente ferramenta que permite uma interação fácil com as suas APIs GraphQL."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:289
#, fuzzy
msgid "The Quarkus `smallrye-graphql` extension ships with https://github.com/graphql/graphiql/blob/main/packages/graphiql/README.md[GraphiQL] and enables it by default in `dev` and `test` modes, but it can also be explicitly configured for `production` mode as well, by setting the `quarkus.smallrye-graphql.ui.always-include` configuration property to `true`."
msgstr "A extensão Quarkus `smallrye-graphql` vem com o  link:https://github.com/graphql/graphiql/blob/main/packages/graphiql/README.md[GraphiQL] e o habilita por padrão nos modos `dev` e `test`, mas também pode ser configurada explicitamente para o modo `production`, definindo a propriedade de configuração `quarkus.smallrye-graphql.ui.always-include` como `true`."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:291
#, fuzzy
msgid "The GraphQL UI can be accessed from http://localhost:8080/q/graphql-ui/ ."
msgstr "A UI GraphQL pode ser acedida a partir de  http://localhost:8080/q/graphql-ui/ ."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:293
#, fuzzy
msgid "image:graphql-ui-screenshot01.png[alt=GraphQL UI]"
msgstr "image:graphql-ui-screenshot01.png[alt=GraphQL UI]"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:295
#, fuzzy
msgid "Have a look at the link:security-authorize-web-endpoints-reference[Authorization of Web Endpoints] Guide on how to add/remove security for the GraphQL UI."
msgstr "Dê uma olhada no Guia de  link:security-authorization[autorização de pontos de extremidade da Web] sobre como adicionar/remover a segurança para a interface do usuário do GraphQL."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:296
#, fuzzy, no-wrap
msgid "Query the GraphQL API"
msgstr "Consultar a API GraphQL"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:299
#, fuzzy
msgid "Now visit the GraphQL UI page that has been deployed in `dev` mode."
msgstr "Agora visite a página da interface do usuário do GraphQL que foi implantada no modo `dev`."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:301
#, fuzzy
msgid "Enter the following query to the GraphQL UI and press the `play` button:"
msgstr "Introduza a seguinte consulta na IU do GraphQL e prima o botão `play`:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:312
#, no-wrap
msgid ""
"query allFilms {\n"
"  allFilms {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:318
#, fuzzy
msgid "Since our query contains all the fields in the `Film` class we will retrieve all the fields in our response. Since GraphQL API responses are client determined, the client can choose which fields it will require."
msgstr "Como nossa consulta contém todos os campos na classe `Film`, recuperaremos todos os campos em nossa resposta. Como as respostas da API GraphQL são determinadas pelo cliente, o cliente pode escolher quais campos serão necessários."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:322
#, fuzzy
msgid "Let's assume that our client only requires `title` and `releaseDate` making the previous call to the API `Over-fetching` of unnecessary data."
msgstr "Vamos supor que o nosso cliente só precisa de `title` e `releaseDate`, o que faz com que a chamada anterior à API `Over-fetching` tenha dados desnecessários."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:324
#, fuzzy
msgid "Enter the following query into the GraphQL UI and hit the `play` button:"
msgstr "Introduza a seguinte consulta na IU do GraphQL e prima o botão `play`:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:333
#, no-wrap
msgid ""
"query allFilms {\n"
"  allFilms {\n"
"    title\n"
"    releaseDate\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:337
#, fuzzy
msgid "Notice in the response we have only retrieved the required fields.  Therefore, we have prevented `Over-fetching`."
msgstr "Repare que na resposta apenas recuperámos os campos obrigatórios. Portanto, evitámos `Over-fetching`."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:340
#, fuzzy
msgid "Let's continue to expand our GraphQL API by adding the following to the `FilmResource` class."
msgstr "Vamos continuar a expandir nossa API GraphQL adicionando o seguinte à classe `FilmResource`."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:348
#, no-wrap
msgid ""
"    @Query\n"
"    @Description(\"Get a Films from a galaxy far far away\")\n"
"    public Film getFilm(@Name(\"filmId\") int id) {\n"
"        return service.getFilm(id);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:353
#, fuzzy
msgid "Notice how we have excluded the value in the `@Query` annotation.  Therefore, the name of the query is implicitly set as the method name excluding the `get`."
msgstr "Observe como excluímos o valor na anotação `@Query`. Portanto, o nome da consulta é implicitamente definido como o nome do método, excluindo a anotação `get`."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:356
#, fuzzy
msgid "This query will allow the client to retrieve the film by id, and the `@Name` annotation on the parameter changes the parameter name to `filmId` rather than the default `id` that it would be if you omit the `@Name` annotation."
msgstr "Esta consulta permitirá ao cliente obter o filme por id, e a anotação `@Name` no parâmetro altera o nome do parâmetro para `filmId` em vez do nome predefinido `id` que seria se omitisse a anotação `@Name`."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:358
#: upstream/_guides/smallrye-graphql.adoc:559
#: upstream/_guides/smallrye-graphql.adoc:678
#: upstream/_guides/smallrye-graphql.adoc:768
#, fuzzy
msgid "Enter the following into the `GraphQL UI` and make a request."
msgstr "Introduza os seguintes dados no sítio `GraphQL UI` e faça um pedido."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:369
#, no-wrap
msgid ""
"query getFilm {\n"
"  film(filmId: 1) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:374
#, fuzzy
msgid "The `film` query method requested fields can be determined as such in our previous example. This way we can retrieve individual film information."
msgstr "Os campos solicitados pelo método de consulta `film` podem ser determinados como no nosso exemplo anterior. Desta forma, podemos obter informações individuais sobre os filmes."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:378
#, fuzzy
msgid "However, say our client requires both films with filmId `0` and `1`.  In a REST API the client would have to make two calls to the API.  Therefore, the client would be `Under-fetching`."
msgstr "No entanto, digamos que o nosso cliente necessita de ambos os filmes com filmId `0` e `1`. Numa API REST, o cliente teria de efetuar duas chamadas à API. Por conseguinte, o cliente seria `Under-fetching`."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:380
#, fuzzy
msgid "In GraphQL, it is possible to make multiple queries at once."
msgstr "No GraphQL, é possível fazer várias consultas ao mesmo tempo."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:382
#, fuzzy
msgid "Enter the following into the `GraphQL UI` to retrieve two films:"
msgstr "Introduza o seguinte em `GraphQL UI` para obter dois filmes:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:399
#, no-wrap
msgid ""
"query getFilms {\n"
"  film0: film(filmId: 0) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"  film1: film(filmId: 1) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:402
#, fuzzy
msgid "This enabled the client to fetch the required data in a single request."
msgstr "Isto permitiu ao cliente ir buscar os dados necessários num único pedido."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:403
#, fuzzy, no-wrap
msgid "Expanding the API"
msgstr "Expandir a API"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:407
#, fuzzy
msgid "Until now, we have created a GraphQL API to retrieve film data.  We now want to enable the clients to retrieve the `Hero` data of the `Film`."
msgstr "Até agora, criámos uma API GraphQL para recuperar dados de filmes. Agora queremos permitir que os clientes recuperem os dados `Hero` do `Film`."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:409
#: upstream/_guides/smallrye-graphql.adoc:667
#: upstream/_guides/smallrye-graphql.adoc:757
#: upstream/_guides/smallrye-graphql.adoc:794
#: upstream/_guides/smallrye-graphql.adoc:903
#, fuzzy
msgid "Add the following to our `FilmResource` class:"
msgstr "Adicione o seguinte à nossa classe `FilmResource`:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:415
#, no-wrap
msgid ""
"    public List<Hero> heroes(@Source Film film) { // <1>\n"
"        return service.getHeroesByFilm(film);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:418
#, fuzzy
msgid "Enable `List<Hero>` data to be added to queries that respond with `Film`"
msgstr "Permitir que os dados de `List&amp;lt;Hero&amp;gt;` sejam adicionados às consultas que respondem com `Film`"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:422
#, fuzzy
msgid "By adding this method we have effectively changed the schema of the GraphQL API.  Although the schema has changed the previous queries will still work.  Since we only expanded the API to be able to retrieve the `Hero` data of the `Film`."
msgstr "Ao adicionar este método, alterámos efetivamente o esquema da API GraphQL. Embora o esquema tenha sido alterado, as consultas anteriores ainda funcionarão. Como só expandimos a API para poder recuperar os dados `Hero` do site `Film`."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:424
#, fuzzy
msgid "Enter the following into the `GraphQL UI` to retrieve the film and hero data."
msgstr "Introduza o seguinte em `GraphQL UI` para obter os dados do filme e do herói."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:442
#, no-wrap
msgid ""
"query getFilmHeroes {\n"
"  film(filmId: 1) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"    heroes {\n"
"      name\n"
"      height\n"
"      mass\n"
"      darkSide\n"
"      lightSaber\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:445
#, fuzzy
msgid "The response now includes the heroes of the film."
msgstr "A resposta inclui agora os heróis do filme."

#. type: Title ===
#: upstream/_guides/smallrye-graphql.adoc:446
#, fuzzy, no-wrap
msgid "Batching"
msgstr "Loteamento"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:450
#, fuzzy
msgid "When you are exposing a `Collection` return like our `getAllFilms`, you might want to use the batch form of the above, to more efficiently fetch the heroes:"
msgstr "Quando está a expor um retorno `Collection` como o nosso `getAllFilms`, pode querer utilizar a forma de lote do acima referido, para obter os heróis de forma mais eficiente:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:456
#, no-wrap
msgid ""
"    public List<List<Hero>> heroes(@Source List<Film> films) { // <1>\n"
"        // Here fetch all hero lists\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:459
#, fuzzy
msgid "Here receive the films as a batch, allowing you to fetch the corresponding heroes."
msgstr "Aqui recebe os filmes em lote, o que lhe permite ir buscar os heróis correspondentes."

#. type: Title ===
#: upstream/_guides/smallrye-graphql.adoc:460
#, fuzzy, no-wrap
msgid "Non blocking"
msgstr "Sem bloqueio"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:463
#, fuzzy
msgid "Queries can be made reactive by using `Uni` as a return type, or adding `@NonBlocking` to the method:"
msgstr "As consultas podem ser tornadas reactivas utilizando `Uni` como um tipo de retorno ou adicionando `@NonBlocking` ao método:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:471
#, no-wrap
msgid ""
"    @Query\n"
"    @Description(\"Get a Films from a galaxy far far away\")\n"
"    public Uni<Film> getFilm(int filmId) {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:475
#, fuzzy
msgid "Or you can use `@NonBlocking`:"
msgstr "Ou pode utilizar `@NonBlocking`:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:484
#: upstream/_guides/smallrye-graphql.adoc:498
#, no-wrap
msgid ""
"    @Query\n"
"    @Description(\"Get a Films from a galaxy far far away\")\n"
"    @NonBlocking\n"
"    public Film getFilm(int filmId) {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:487
#, fuzzy
msgid "Using `Uni` or `@NonBlocking` means that the request will be executed on Event-loop threads rather than Worker threads."
msgstr "A utilização de `Uni` ou `@NonBlocking` significa que o pedido será executado em threads de Event-loop em vez de threads de Worker."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:489
#, fuzzy
msgid "You can mix Blocking and Non-blocking in one request,"
msgstr "É possível misturar Bloqueio e Não Bloqueio num único pedido,"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:502
#, no-wrap
msgid ""
"    public List<Hero> heroes(@Source Film film) {\n"
"        return service.getHeroesByFilm(film);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:505
#, fuzzy
msgid "Above will fetch the film on the event-loop threads, but switch to the worker thread to fetch the heroes."
msgstr "Acima vai buscar o filme nas threads do loop de eventos, mas muda para a thread de trabalho para buscar os heróis."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:506
#, fuzzy, no-wrap
msgid "Abstract Types"
msgstr "Tipos abstractos"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:511
#, fuzzy
msgid "The current schema is simple with only two concrete types, `Hero` and `Film`.  Now we want to expand our API with additional types and add some abstractions that make interacting with them easy for clients."
msgstr "O esquema atual é simples, com apenas dois tipos concretos, `Hero` e `Film`. Agora queremos expandir a nossa API com tipos adicionais e adicionar algumas abstracções que facilitem a interação com eles para os clientes."

#. type: Title ===
#: upstream/_guides/smallrye-graphql.adoc:512
#, fuzzy, no-wrap
msgid "Interfaces"
msgstr "Interfaces"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:515
#, fuzzy
msgid "Let's give our heroes some allies."
msgstr "Vamos dar aos nossos heróis alguns aliados."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:517
#, fuzzy
msgid "First, create a new entity to represent our `Ally`."
msgstr "Em primeiro lugar, crie uma nova entidade para representar o nosso `Ally`."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:521
#, no-wrap
msgid "public class Ally {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:526
#, no-wrap
msgid ""
"    public String name;\n"
"    public String surname;\n"
"    public Hero partner;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:529
#, fuzzy
msgid "Update the `GalaxyService` to have some allies."
msgstr "Atualizar o `GalaxyService` para ter alguns aliados."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:533
#, no-wrap
msgid "    private List<Ally> allies = new ArrayList();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:536
#, no-wrap
msgid ""
"    public GalaxyService() {\n"
"        // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:542
#, no-wrap
msgid ""
"        Ally jarjar = new Ally();\n"
"        jarjar.name = \"Jar Jar\";\n"
"        jarjar.surname = \"Binks\";\n"
"        allies.add(jarjar);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:546
#, no-wrap
msgid ""
"    public List<Ally> getAllAllies() {\n"
"        return allies;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:549
#, fuzzy
msgid "Let's also update `FilmResource` to allow clients to query for all allies:"
msgstr "Vamos também atualizar `FilmResource` para permitir que os clientes consultem todos os aliados:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:556
#, no-wrap
msgid ""
"    @Query\n"
"    public List<Ally> allies() {\n"
"        return service.getAllAllies();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:568
#, no-wrap
msgid ""
"query getAllies {\n"
"    allies {\n"
"        name\n"
"        surname\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:572
#, fuzzy
msgid "Notice that `Ally` has a some of the same fields as a `Hero`.  To better make queries easier for clients, let's create an abstraction for any character."
msgstr "Repare que `Ally` tem alguns dos mesmos campos que `Hero`. Para facilitar as consultas dos clientes, vamos criar uma abstração para qualquer carácter."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:574
#, fuzzy
msgid "Create a new Java interface that defines our common character traits."
msgstr "Criar uma nova interface Java que defina os nossos traços de carácter comuns."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:578
#, no-wrap
msgid "public interface Character {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:583
#, no-wrap
msgid ""
"    // <1>\n"
"    String getName();\n"
"    String getSurname();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:586
#, fuzzy
msgid "Getters defined in an interface will define the GraphQL fields that it contains"
msgstr "Os getters definidos em uma interface definirão os campos GraphQL que ela contém"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:588
#, fuzzy
msgid "Now, update our `Hero` and `Ally` entities to implement this interface."
msgstr "Agora, actualize as nossas entidades `Hero` e `Ally` para implementar esta interface."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:593
#, no-wrap
msgid ""
"public class Hero implements Character {\n"
"    // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:598
#: upstream/_guides/smallrye-graphql.adoc:612
#, no-wrap
msgid ""
"    // <1>\n"
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:604
#: upstream/_guides/smallrye-graphql.adoc:618
#, no-wrap
msgid ""
"    // <1>\n"
"    public String getSurname() {\n"
"        return surname;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:607
#, no-wrap
msgid ""
"public class Ally implements Character {\n"
"    // ...\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:621
#, fuzzy
msgid "Because interfaces can't define fields, we have to implement the getters"
msgstr "Como as interfaces não podem definir campos, temos de implementar os getters"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:624
#, fuzzy
msgid "By adding an interface and updating existing entities to implement it, we have effectively changed the schema.  The updated schema will now include the new `Ally` type and `Character` interface."
msgstr "Ao adicionar uma interface e atualizar as entidades existentes para a implementar, alterámos efetivamente o esquema. O esquema atualizado incluirá agora o novo tipo `Ally` e a interface `Character`."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:632
#, no-wrap
msgid ""
"# <1>\n"
"interface Character {\n"
"    name: String\n"
"    surname: String\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:639
#, no-wrap
msgid ""
"# <2>\n"
"type Ally implements Character {\n"
"    name: String\n"
"    surname: String\n"
"    partner: Hero\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:646
#, no-wrap
msgid ""
"# <3>\n"
"type Hero implements Character {\n"
"    name: String\n"
"    surname: String\n"
"    # ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:649
#, fuzzy
msgid "The `Character` interface was defined with the getters as fields"
msgstr "A interface `Character` foi definida com os getters como campos"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:650
#, fuzzy
msgid "The `Ally` type was added and it implements `Character`"
msgstr "O tipo `Ally` foi adicionado e implementa `Character`"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:651
#, fuzzy
msgid "The `Hero` type was updated to implement `Character`"
msgstr "O tipo `Hero` foi atualizado para implementar `Character`"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:653
#, fuzzy
msgid "Update our `GalaxyService` to provide all characters."
msgstr "Atualizar o nosso `GalaxyService` para fornecer todos os caracteres."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:662
#, no-wrap
msgid ""
"    public List<Character> getAllCharacters() {\n"
"        List<Character> characters = new ArrayList<>();\n"
"        characters.addAll(heroes);\n"
"        characters.addAll(allies);\n"
"        return characters;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:665
#, fuzzy
msgid "Now we can allow clients to query for all characters, not just heroes."
msgstr "Agora podemos permitir que os clientes consultem todos os personagens, não apenas os heróis."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:675
#, no-wrap
msgid ""
"    @Query\n"
"    @Description(\"Get all characters from a galaxy far far away\")\n"
"    public List<Character> characters() {\n"
"        return service.getAllCharacters();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:687
#, no-wrap
msgid ""
"query getCharacters {\n"
"    characters {\n"
"        name\n"
"        surname\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/smallrye-graphql.adoc:689
#, fuzzy, no-wrap
msgid "Unions"
msgstr "Sindicatos"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:696
#, fuzzy
msgid "So far, our API has only allowed us to query directly for an entity or list of entities.  Now we want to allow clients to search all of our entities.  While `Hero` and `Ally` have a shared abstract type of `Character`, there is no abstraction that also includes `Film`."
msgstr "Até agora, a nossa API só nos permitiu consultar diretamente uma entidade ou uma lista de entidades. Agora queremos permitir que os clientes pesquisem todas as nossas entidades. Embora `Hero` e `Ally` tenham um tipo abstrato partilhado de `Character`, não existe uma abstração que inclua também `Film`."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:698
#, fuzzy
msgid "First, create this new abstract type representing the possible return types for a search result."
msgstr "Primeiro, crie este novo tipo abstrato que representa os tipos de retorno possíveis para um resultado de pesquisa."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:704
#, no-wrap
msgid "import io.smallrye.graphql.api.Union;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:707
#, no-wrap
msgid ""
"@Union // <1>\n"
"public interface SearchResult {\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:712
#, fuzzy
msgid "`@Union` is required to indicate this Java interface represents a GraphQL union, not a GraphQL interface"
msgstr "`@Union` é necessário para indicar que esta interface Java representa uma união GraphQL e não uma interface GraphQL"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:715
#, fuzzy
msgid "The Java interface representing the GraphQL union does not have to be empty, but any getters defined will not explicitly change the GraphQL schema."
msgstr "A interface Java que representa a união GraphQL não precisa estar vazia, mas quaisquer getters definidos não alterarão explicitamente o esquema GraphQL."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:717
#, fuzzy
msgid "Update our entities to implement `SearchResult`:"
msgstr "Atualizar as nossas entidades para implementar `SearchResult`:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:723
#, no-wrap
msgid ""
"public class Film implements SearchResult {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:727
#, no-wrap
msgid ""
"public class Hero implements Character, SearchResult {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:731
#, no-wrap
msgid ""
"public class Ally implements Character, SearchResult {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:735
#, fuzzy
msgid "We can also leverage inheritance and have `interface Character extends SearchResult`.  This will result in all implementations of `Character` being added as members of the `SearchResult` union in the schema."
msgstr "Também podemos aproveitar a herança e ter `interface Character extends SearchResult`. Isto fará com que todas as implementações de `Character` sejam adicionadas como membros da união `SearchResult` no esquema."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:737
#, fuzzy
msgid "Update `GalaxyService` to provide search:"
msgstr "Atualizar `GalaxyService` para fornecer a pesquisa:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:754
#, no-wrap
msgid ""
"    public List<SearchResult> search(String query) {\n"
"        List<SearchResult> results = new ArrayList<>();\n"
"        List<Film> matchingFilms = films.stream()\n"
"            .filter(film -> film.title.contains(query)\n"
"                || film.director.contains(query))\n"
"            .collect(Collectors.toList());\n"
"        results.addAll(matchingFilms);\n"
"        List<Character> matchingCharacters = getAllCharacters().stream()\n"
"            .filter(character -> character.getName().contains(query)\n"
"                || character.getSurname().contains(query))\n"
"            .collect(Collectors.toList());\n"
"        results.addAll(matchingCharacters);\n"
"        return results;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:765
#, no-wrap
msgid ""
"    @Query\n"
"    @Description(\"Search for heroes or films\")\n"
"    public List<SearchResult> search(String query) {\n"
"        return service.search(query);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:783
#, no-wrap
msgid ""
"query searchTheGalaxy {\n"
"    search(query: \"a\") {\n"
"        ... on Film {\n"
"            title\n"
"            director\n"
"        }\n"
"        ... on Character {\n"
"            name\n"
"            surname\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:786
#, fuzzy
msgid "We are able to use the `Character` interface because the `SearchResult` union contains members that implement it."
msgstr "Podemos utilizar a interface `Character` porque o sindicato `SearchResult` contém membros que a implementam."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:787
#, fuzzy, no-wrap
msgid "Mutations"
msgstr "Mutações"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:790
#, fuzzy
msgid "Mutations are used when data is created, updated or deleted."
msgstr "As mutações são utilizadas quando os dados são criados, actualizados ou eliminados."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:792
#, fuzzy
msgid "Let's now add the ability to add and delete heroes to our GraphQL API."
msgstr "Vamos agora adicionar a capacidade de adicionar e eliminar heróis à nossa API GraphQL."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:802
#, no-wrap
msgid ""
"    @Mutation\n"
"    public Hero createHero(Hero hero) {\n"
"        service.addHero(hero);\n"
"        return hero;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:807
#, no-wrap
msgid ""
"    @Mutation\n"
"    public Hero deleteHero(int id) {\n"
"        return service.deleteHero(id);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:810
#, fuzzy
msgid "Enter the following into the `GraphQL UI` to insert a `Hero`:"
msgstr "Introduzir o seguinte no sítio `GraphQL UI` para inserir um `Hero`:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:828
#, no-wrap
msgid ""
"mutation addHero {\n"
"  createHero(hero: {\n"
"      name: \"Han\",\n"
"      surname: \"Solo\"\n"
"      height: 1.85\n"
"      mass: 80\n"
"      darkSide: false\n"
"      episodeIds: [4, 5, 6]\n"
"  \t}\n"
"  )\n"
"  {\n"
"    name\n"
"    surname\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:831
#, fuzzy
msgid "By using this mutation we have created a `Hero` entity in our service."
msgstr "Ao utilizar esta mutação, criámos uma entidade `Hero` no nosso serviço."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:836
#, fuzzy
msgid "Notice how in the response we have retrieved the `name` and `surname` of the created Hero. This is because we selected to retrieve these fields in the response within the `{ }` in the mutation query.  This can easily be a server side generated field that the client may require."
msgstr "Observe como, na resposta, recuperamos os campos `name` e `surname` do Hero criado. Isso ocorre porque selecionamos para recuperar esses campos na resposta dentro do `{ }` na consulta de mutação. Este pode ser facilmente um campo gerado do lado do servidor que o cliente pode exigir."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:838
#, fuzzy
msgid "Let's now try deleting an entry:"
msgstr "Vamos agora tentar apagar uma entrada:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:847
#, no-wrap
msgid ""
"mutation DeleteHero {\n"
"  deleteHero(id :3){\n"
"    name\n"
"    surname\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:851
#, fuzzy
msgid "Similar to the `createHero` mutation method we also retrieve the `name` and `surname` of the hero we have deleted which is defined in `{ }`."
msgstr "À semelhança do método de mutação `createHero`, também recuperamos os endereços `name` e `surname` do herói que eliminámos e que está definido em `{ }`."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:852
#, fuzzy, no-wrap
msgid "Subscriptions"
msgstr "Assinaturas"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:856
#, fuzzy
msgid "Subscriptions allow you to subscribe to a query. It allows you to receive events and is using web sockets.  See the https://github.com/enisdenjo/graphql-ws/blob/master/PROTOCOL.md[GraphQL over WebSocket Protocol] spec for more details."
msgstr "As subscrições permitem-lhe subscrever uma consulta. Ele permite que você receba eventos e está usando soquetes da Web. Consulte a especificação  link:https://github.com/enisdenjo/graphql-ws/blob/master/PROTOCOL.md[do protocolo GraphQL sobre WebSocket] para obter mais detalhes."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:858
#, fuzzy
msgid "Example: We want to know when new Heroes are being created:"
msgstr "Exemplo: Queremos saber quando estão a ser criados novos Heróis:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:863
#, no-wrap
msgid "    BroadcastProcessor<Hero> processor = BroadcastProcessor.create(); // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:870
#, no-wrap
msgid ""
"    @Mutation\n"
"    public Hero createHero(Hero hero) {\n"
"        service.addHero(hero);\n"
"        processor.onNext(hero); // <2>\n"
"        return hero;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:875
#, no-wrap
msgid ""
"    @Subscription\n"
"    public Multi<Hero> heroCreated(){\n"
"        return processor; // <3>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:879
#, fuzzy
msgid "The `Multi` processor that will broadcast any new ``Hero``es"
msgstr "O processador `Multi` que difundirá quaisquer novos `Hero`es"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:880
#, fuzzy
msgid "When adding a new `Hero`, also broadcast it"
msgstr "Ao adicionar um novo `Hero`, também o transmite"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:881
#, fuzzy
msgid "Make the stream available in the schema and as a WebSocket during runtime"
msgstr "Tornar o fluxo disponível no esquema e como um WebSocket durante o tempo de execução"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:884
#, fuzzy
msgid "Any client that now connect to the `/graphql` WebSocket connection will receive events on new Heroes being created:"
msgstr "Qualquer cliente que agora se ligue à ligação WebSocket `/graphql` receberá eventos sobre a criação de novos Heróis:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:894
#, no-wrap
msgid ""
"subscription ListenForNewHeroes {\n"
"  heroCreated {\n"
"    name\n"
"    surname\n"
"  }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:897
#, fuzzy, no-wrap
msgid "Creating Queries by fields"
msgstr "Criação de consultas por campos"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:901
#, fuzzy
msgid "Queries can also be done on individual fields. For example, let's create a method to query heroes by their last name."
msgstr "As consultas também podem ser efectuadas em campos individuais. Por exemplo, vamos criar um método para consultar os heróis pelo seu apelido."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:910
#, no-wrap
msgid ""
"    @Query\n"
"    public List<Hero> getHeroesWithSurname(@DefaultValue(\"Skywalker\") String surname) {\n"
"        return service.getHeroesBySurname(surname);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:914
#, fuzzy
msgid "By using the `@DefaultValue` annotation we have determined that the surname value will be `Skywalker` when the parameter is not provided."
msgstr "Ao utilizar a anotação `@DefaultValue`, determinámos que o valor do apelido será `Skywalker` quando o parâmetro não for fornecido."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:916
#, fuzzy
msgid "Test the following queries with the `GraphQL UI`:"
msgstr "Teste as seguintes consultas com o `GraphQL UI`:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:933
#, no-wrap
msgid ""
"query heroWithDefaultSurname {\n"
"  heroesWithSurname{\n"
"    name\n"
"    surname\n"
"    lightSaber\n"
"  }\n"
"}\n"
"query heroWithSurnames {\n"
"  heroesWithSurname(surname: \"Vader\") {\n"
"    name\n"
"    surname\n"
"    lightSaber\n"
"  }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:935
#, fuzzy, no-wrap
msgid "Context"
msgstr "Contexto"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:938
#, fuzzy
msgid "You can get information about the GraphQL request anywhere in your code, using this experimental, SmallRye specific feature:"
msgstr "Você pode obter informações sobre o pedido GraphQL em qualquer lugar do seu código, usando este recurso experimental, específico do SmallRye:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:943
#, no-wrap
msgid ""
"@Inject\n"
"Context context;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:946
#, fuzzy
msgid "or as a parameter in your method if you are in the `GraphQLApi` class, for instance:"
msgstr "ou como um parâmetro no seu método se estiver na classe `GraphQLApi`, por exemplo:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:954
#, no-wrap
msgid ""
"    @Query\n"
"    @Description(\"Get a Films from a galaxy far far away\")\n"
"    public Film getFilm(Context context, int filmId) {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:957
#, fuzzy
msgid "The context object allows you to get:"
msgstr "O objeto de contexto permite-lhe obter:"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:959
#, fuzzy
msgid "the original request (Query/Mutation)"
msgstr "o pedido original (Consulta/Mutação)"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:960
#, fuzzy
msgid "the arguments"
msgstr "os argumentos"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:961
#, fuzzy
msgid "the path"
msgstr "o caminho"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:962
#, fuzzy
msgid "the selected fields"
msgstr "os campos seleccionados"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:963
#, fuzzy
msgid "any variables"
msgstr "quaisquer variáveis"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:965
#, fuzzy
msgid "This allows you to optimize the downstream queries to the datastore."
msgstr "Isto permite-lhe otimizar as consultas a jusante para o datastore."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:967
#, fuzzy
msgid "See the https://javadoc.io/doc/io.smallrye/smallrye-graphql-api/latest/io/smallrye/graphql/api/Context.html[JavaDoc] for more details."
msgstr "Ver o  link:https://javadoc.io/doc/io.smallrye/smallrye-graphql-api/latest/io/smallrye/graphql/api/Context.html[JavaDoc] para mais pormenores."

#. type: Title ===
#: upstream/_guides/smallrye-graphql.adoc:968
#, fuzzy, no-wrap
msgid "GraphQL-Java"
msgstr "GraphQL-Java"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:971
#, fuzzy
msgid "This context object also allows you to fall down to the underlying https://www.graphql-java.com/[graphql-java] features by using the leaky abstraction:"
msgstr "Este objeto de contexto também permite aceder às funcionalidades subjacentes  link:https://www.graphql-java.com/[do graphql-java], utilizando a abstração leaky:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:975
#, no-wrap
msgid "DataFetchingEnvironment dfe = context.unwrap(DataFetchingEnvironment.class);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:978
#, fuzzy
msgid "You can also get access to the underlying `graphql-java` during schema generation, to add your own features directly:"
msgstr "Também pode ter acesso ao `graphql-java` subjacente durante a geração do esquema, para adicionar diretamente as suas próprias funcionalidades:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:982
#, no-wrap
msgid "public GraphQLSchema.Builder addMyOwnEnum(@Observes GraphQLSchema.Builder builder) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:989
#, no-wrap
msgid ""
"    // Here add your own features directly, example adding an Enum\n"
"    GraphQLEnumType myOwnEnum = GraphQLEnumType.newEnum()\n"
"            .name(\"SomeEnum\")\n"
"            .description(\"Adding some enum type\")\n"
"            .value(\"value1\")\n"
"            .value(\"value2\").build();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:992
#, no-wrap
msgid ""
"    return builder.additionalType(myOwnEnum);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:995
#, fuzzy
msgid "By using the `@Observer` you can add anything to the Schema builder."
msgstr "Utilizando o `@Observer`, pode adicionar qualquer coisa ao construtor de esquemas."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:997
#, fuzzy
msgid "For the Observer to work, you need to enable events. In `application.properties`, add the following: `quarkus.smallrye-graphql.events.enabled=true`."
msgstr "Para que o Observador funcione, é necessário ativar os eventos. Em `application.properties`, adicione o seguinte: `quarkus.smallrye-graphql.events.enabled=true`."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:998
#, fuzzy, no-wrap
msgid "Adapting"
msgstr "Adaptação"

#. type: Title ===
#: upstream/_guides/smallrye-graphql.adoc:1000
#, fuzzy, no-wrap
msgid "Adapt to Scalar"
msgstr "Adaptar-se ao Scalar"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1004
#, fuzzy
msgid "Another SmallRye specific experimental feature, allows you to map an existing scalar (that is mapped by the implementation to a certain Java type) to another type, or to map complex object, that would typically create a `Type` or `Input` in GraphQL, to an existing scalar."
msgstr "Outra funcionalidade experimental específica do SmallRye permite-lhe mapear um escalar existente (que é mapeado pela implementação para um determinado tipo Java) para outro tipo, ou mapear um objeto complexo, que normalmente criaria um `Type` ou `Input` em GraphQL, para um escalar existente."

#. type: Title ====
#: upstream/_guides/smallrye-graphql.adoc:1005
#, fuzzy, no-wrap
msgid "Adapting an existing Scalar to another type:"
msgstr "Adaptação de um Scalar existente a outro tipo:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1010
#, no-wrap
msgid "public class Movie {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1013
#, no-wrap
msgid ""
"    @AdaptToScalar(Scalar.Int.class)\n"
"    Long idLongThatShouldChangeToInt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1016
#: upstream/_guides/smallrye-graphql.adoc:1031
#, no-wrap
msgid ""
"    // ....\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1019
#, fuzzy
msgid "Above will adapt the `Long` java type to an `Int` Scalar type, rather than the https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html#scalars[default] `BigInteger`."
msgstr "Acima irá adaptar o tipo `Long` java a um tipo `Int` Scalar, em vez do tipo  link:https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html#scalars[predefinido] `BigInteger`."

#. type: Title ====
#: upstream/_guides/smallrye-graphql.adoc:1020
#, fuzzy, no-wrap
msgid "Adapting a complex object to a Scalar type:"
msgstr "Adaptação de um objeto complexo a um tipo Scalar:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1025
#, no-wrap
msgid "public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1028
#, no-wrap
msgid ""
"    @AdaptToScalar(Scalar.String.class)\n"
"    Phone phone;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1034
#, fuzzy
msgid "This will, rather than creating a `Type` or `Input` in GraphQL, map to a String scalar."
msgstr "Isso, em vez de criar um `Type` ou `Input` no GraphQL, mapeará para um escalar String."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1038
#, fuzzy
msgid "To be able to do the above, the `Phone` object needs to have a constructor that takes a String (or `Int` / `Date` / etc.), or have a setter method for the String (or `Int` / `Date` / etc.), or have a `fromString` (or `fromInt` / `fromDate` - depending on the Scalar type) static method."
msgstr "Para poder fazer o que precede, o objeto `Phone` tem de ter um construtor que receba uma String (ou `Int` / `Date` / etc.), ou ter um método setter para a String (ou `Int` / `Date` / etc.), ou ter um método estático `fromString` (ou `fromInt` / `fromDate` - dependendo do tipo de escalar)."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1040
#: upstream/_guides/smallrye-graphql.adoc:1066
#, fuzzy
msgid "For example:"
msgstr "Por exemplo:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1044
#, no-wrap
msgid "public class Phone {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1046
#, no-wrap
msgid "    private String number;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1048
#, no-wrap
msgid "    // Getters and setters....\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1055
#, no-wrap
msgid ""
"    public static Phone fromString(String number) {\n"
"        Phone phone = new Phone();\n"
"        phone.setNumber(number);\n"
"        return phone;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1058
#, fuzzy
msgid "See more about the `@AdaptToScalar` feature in the https://javadoc.io/static/io.smallrye/smallrye-graphql-api/1.5.0/io/smallrye/graphql/api/AdaptToScalar.html[JavaDoc]."
msgstr "Para mais informações sobre a funcionalidade `@AdaptToScalar`, consulte o  link:https://javadoc.io/static/io.smallrye/smallrye-graphql-api/1.5.0/io/smallrye/graphql/api/AdaptToScalar.html[JavaDoc]."

#. type: Title ===
#: upstream/_guides/smallrye-graphql.adoc:1059
#, fuzzy, no-wrap
msgid "Adapt with"
msgstr "Adaptar-se com"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1062
#, fuzzy
msgid "Another option for more complex cases is to provide an Adapter. You can then do the mapping yourself in the adapter."
msgstr "Outra opção para casos mais complexos é fornecer um adaptador. O utilizador pode então fazer o mapeamento no adaptador."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1064
#, fuzzy
msgid "See more about the `AdaptWith` feature in the https://javadoc.io/static/io.smallrye/smallrye-graphql-api/1.5.0/io/smallrye/graphql/api/AdaptWith.html[JavaDoc]."
msgstr "Para mais informações sobre a funcionalidade `AdaptWith`, consulte o  link:https://javadoc.io/static/io.smallrye/smallrye-graphql-api/1.5.0/io/smallrye/graphql/api/AdaptWith.html[JavaDoc]."

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1073
#, no-wrap
msgid ""
"    public class Profile {\n"
"        // Map this to an email address\n"
"        @AdaptWith(AddressAdapter.class)\n"
"        public Address address;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1076
#, no-wrap
msgid ""
"        // other getters/setters...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1078
#, no-wrap
msgid "    public class AddressAdapter implements Adapter<EmailAddress, Address> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1086
#, no-wrap
msgid ""
"        @Override\n"
"        public Address from(EmailAddress email) {\n"
"            Address a = new Address();\n"
"            a.addressType = AddressType.email;\n"
"            a.addLine(email.getValue());\n"
"            return a;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1095
#, no-wrap
msgid ""
"        @Override\n"
"        public EmailAddress to(Address address) {\n"
"            if (address != null && address.addressType != null && address.addressType.equals(AddressType.email)) {\n"
"                return new EmailAddress(address.lines.get(0));\n"
"            }\n"
"            return null;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1099
#, fuzzy
msgid "`@JsonbTypeAdapter` is also supported."
msgstr "`@JsonbTypeAdapter` também é suportado."

#. type: Title ===
#: upstream/_guides/smallrye-graphql.adoc:1100
#, fuzzy, no-wrap
msgid "Built-in support for Maps"
msgstr "Suporte integrado para Mapas"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1105
#, fuzzy
msgid "By default, due to the fact that maps are hard to model in a schema (as the keys and values can be dynamic at runtime) GraphQL does not support maps by default.  Using the above adaption, `Map` support is added for Quarkus and are mapped to an `Entry<Key,Value>` with an optional key parameter.  This allows you to return a map, and optionally query it by key."
msgstr "Por defeito, devido ao facto de os mapas serem difíceis de modelar num esquema (uma vez que as chaves e os valores podem ser dinâmicos em tempo de execução), o GraphQL não suporta mapas por defeito. Usando a adaptação acima, o suporte `Map` é adicionado para Quarkus e é mapeado para um `Entry&amp;lt;Key,Value&amp;gt;` com um parâmetro de chave opcional. Isso permite que você retorne um mapa e, opcionalmente, consulte-o por chave."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1107
#, fuzzy
msgid "Example:"
msgstr "Exemplo:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1115
#, no-wrap
msgid ""
"    @Query\n"
"    public Map<ISO6391, Language> language() {\n"
"        return languageService.getLanguages();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1122
#, no-wrap
msgid ""
"    public enum ISO6391 {\n"
"        af,\n"
"        en,\n"
"        de,\n"
"        fr\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1129
#, no-wrap
msgid ""
"    public class Language {\n"
"        private ISO6391 iso6391;\n"
"        private String nativeName;\n"
"        private String enName;\n"
"        private String please;\n"
"        private String thankyou;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1132
#, no-wrap
msgid ""
"        // Getters & Setters\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1136
#, fuzzy
msgid "The key and value object can be any of Enum, Scalar or Complex object"
msgstr "O objeto chave e o objeto valor podem ser qualquer um dos objectos Enum, Scalar ou Complex"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1138
#, fuzzy
msgid "You can now query the whole map with all the fields:"
msgstr "Agora pode consultar o mapa completo com todos os campos:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1153
#, no-wrap
msgid ""
"{\n"
"  language{\n"
"    key\n"
"    value {\n"
"      enName\n"
"      iso6391\n"
"      nativeName\n"
"      please\n"
"      thankyou\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1156
#, fuzzy
msgid "This will return a result like this for example:"
msgstr "Isto devolverá um resultado como este, por exemplo:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1205
#, no-wrap
msgid ""
"{\n"
"  \"data\": {\n"
"    \"language\": [\n"
"      {\n"
"        \"key\": \"fr\",\n"
"        \"value\": {\n"
"          \"enName\": \"french\",\n"
"          \"iso6391\": \"fr\",\n"
"          \"nativeName\": \"français\",\n"
"          \"please\": \"s'il te plaît\",\n"
"          \"thankyou\": \"merci\"\n"
"        }\n"
"      },\n"
"      {\n"
"        \"key\": \"af\",\n"
"        \"value\": {\n"
"          \"enName\": \"afrikaans\",\n"
"          \"iso6391\": \"af\",\n"
"          \"nativeName\": \"afrikaans\",\n"
"          \"please\": \"asseblief\",\n"
"          \"thankyou\": \"dankie\"\n"
"        }\n"
"      },\n"
"      {\n"
"        \"key\": \"de\",\n"
"        \"value\": {\n"
"          \"enName\": \"german\",\n"
"          \"iso6391\": \"de\",\n"
"          \"nativeName\": \"deutsch\",\n"
"          \"please\": \"bitte\",\n"
"          \"thankyou\": \"danke dir\"\n"
"        }\n"
"      },\n"
"      {\n"
"        \"key\": \"en\",\n"
"        \"value\": {\n"
"          \"enName\": \"english\",\n"
"          \"iso6391\": \"en\",\n"
"          \"nativeName\": \"english\",\n"
"          \"please\": \"please\",\n"
"          \"thankyou\": \"thank you\"\n"
"        }\n"
"      }\n"
"    ]\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1208
#, fuzzy
msgid "You can also query by key"
msgstr "Também é possível consultar por chave"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1219
#, no-wrap
msgid ""
"{\n"
"  language (key:af){\n"
"    value {\n"
"      please\n"
"      thankyou\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1222
#, fuzzy
msgid "That will return only that value in the map:"
msgstr "Isso devolverá apenas esse valor no mapa:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1237
#, no-wrap
msgid ""
"{\n"
"  \"data\": {\n"
"    \"language\": [\n"
"      {\n"
"        \"value\": {\n"
"          \"please\": \"asseblief\",\n"
"          \"thankyou\": \"dankie\"\n"
"        }\n"
"      }\n"
"    ]\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1240
#, fuzzy
msgid "The default map adapter can to overridden with our own implementation."
msgstr "O adaptador de mapas predefinido pode ser substituído pela nossa própria implementação."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:1241
#, fuzzy, no-wrap
msgid "Error code"
msgstr "Código de erro"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1244
#, fuzzy
msgid "You can add an error code on the error output in the GraphQL response by using the (SmallRye specific) `@ErrorCode`:"
msgstr "Você pode adicionar um código de erro na saída de erro na resposta GraphQL usando o (específico do SmallRye) `@ErrorCode`:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1251
#, no-wrap
msgid ""
"@ErrorCode(\"some-business-error-code\")\n"
"public class SomeBusinessException extends RuntimeException {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1254
#, fuzzy
msgid "When `SomeBusinessException` occurs, the error output will contain the Error code:"
msgstr "Quando `SomeBusinessException` ocorre, a saída de erro contém o código de erro:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1281
#, no-wrap
msgid ""
"{\n"
"    \"errors\": [\n"
"        {\n"
"            \"message\": \"Unexpected failure in the system. Jarvis is working to fix it.\",\n"
"            \"locations\": [\n"
"                {\n"
"                    \"line\": 2,\n"
"                    \"column\": 3\n"
"                }\n"
"            ],\n"
"            \"path\": [\n"
"                \"annotatedCustomBusinessException\"\n"
"            ],\n"
"            \"extensions\": {\n"
"                \"exception\": \"io.smallrye.graphql.test.apps.error.api.ErrorApi$AnnotatedCustomBusinessException\",\n"
"                \"classification\": \"DataFetchingException\",\n"
"                \"code\": \"some-business-error-code\" <1>\n"
"            }\n"
"        }\n"
"    ],\n"
"    \"data\": {\n"
"        ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1284
#, fuzzy
msgid "The error code"
msgstr "O código de erro"

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:1285
#, fuzzy, no-wrap
msgid "Additional Notes"
msgstr "Notas adicionais"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1291
#, fuzzy
msgid "If you are using the `smallrye-graphql` extension and the `micrometer` metrics extension is present and metrics are enabled, you may encounter a `java.lang.NoClassDefFoundError` as some versions of the `smallrye-graphql` extension have runtime requirements on the Microprofile Metrics API.  Add the following MicroProfile Metrics API dependency to resolve the issue:"
msgstr "Se estiver a utilizar a extensão `smallrye-graphql` e a extensão `micrometer` metrics estiver presente e as métricas estiverem activadas, poderá deparar-se com um problema `java.lang.NoClassDefFoundError`, uma vez que algumas versões da extensão `smallrye-graphql` têm requisitos de tempo de execução na API Microprofile Metrics. Adicione a seguinte dependência da API MicroProfile Metrics para resolver o problema:"

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1299
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.eclipse.microprofile.metrics</groupId>\n"
"    <artifactId>microprofile-metrics-api</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/smallrye-graphql.adoc:1305
#, no-wrap
msgid "implementation(\"org.eclipse.microprofile.metrics:microprofile-metrics-api\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:1307
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1311
#, fuzzy
msgid "SmallRye GraphQL enables clients to retrieve the exact data that is required preventing `Over-fetching` and `Under-fetching`."
msgstr "O SmallRye GraphQL permite que os clientes recuperem os dados exactos que são necessários, evitando `Over-fetching` e `Under-fetching`."

#. type: Plain text
#: upstream/_guides/smallrye-graphql.adoc:1314
#, fuzzy
msgid "The GraphQL API can be expanded without breaking previous queries enabling easy API `evolution`."
msgstr "A API GraphQL pode ser expandida sem quebrar as consultas anteriores, permitindo uma fácil API `evolution`."

#. type: Title ==
#: upstream/_guides/smallrye-graphql.adoc:1316
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referência de configuração"
