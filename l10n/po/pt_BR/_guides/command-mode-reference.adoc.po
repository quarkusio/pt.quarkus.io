# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-21 08:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/command-mode-reference.adoc:6
#, fuzzy, no-wrap
msgid "Command Mode Applications"
msgstr "Aplicações do modo de comando"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:12
#, fuzzy
msgid "This reference covers how to write applications that run and then exit."
msgstr "Esta referência aborda como escrever aplicações que são executadas e depois encerradas."

#. type: Title ==
#: upstream/_guides/command-mode-reference.adoc:13
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:17
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas secções seguintes e crie a aplicação passo a passo. No entanto, pode ir diretamente para o exemplo completo."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:19
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:21
#, fuzzy
msgid "The solution is located in the `getting-started-command-mode` link:{quickstarts-tree-url}/getting-started-command-mode[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/getting-started-command-mode[diretório] `getting-started-command-mode`."

#. type: Title ==
#: upstream/_guides/command-mode-reference.adoc:22
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:25
#, fuzzy
msgid "First, we need to create a new Quarkus project with the following command:"
msgstr "Em primeiro lugar, temos de criar um novo projeto Quarkus com o seguinte comando:"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:31
#, fuzzy
msgid "The suggested project creation command lines disable the codestarts to avoid including a REST server. Similarly, if you use code.quarkus.io to generate a project, you need to go to *MORE OPTIONS -> Starter Code* and select *No* to avoid adding the RESTEasy Reactive extension."
msgstr "As linhas de comando de criação de projeto sugeridas desabilitam o codestarts para evitar a inclusão de um servidor REST. Da mesma forma, se você usar code.quarkus.io para gerar um projeto, precisará ir para *MORE OPTIONS → Starter Code* e selecionar *No* para evitar a adição da extensão RESTEasy Reactive."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:33
#, fuzzy
msgid "The RESTEasy Reactive extension is added automatically only if you ask for codestarts and you didn't specify any extensions."
msgstr "A extensão RESTEasy Reactive só é adicionada automaticamente se pedir codestarts e não especificar quaisquer extensões."

#. type: Title ==
#: upstream/_guides/command-mode-reference.adoc:35
#, fuzzy, no-wrap
msgid "Writing Command Mode Applications"
msgstr "Escrever aplicações em modo de comando"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:39
#, fuzzy
msgid "There are two different approaches that can be used to implement applications that exit."
msgstr "Existem duas abordagens diferentes que podem ser utilizadas para implementar aplicações que saem."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:41
#, fuzzy
msgid "Implement `QuarkusApplication` and have Quarkus run this method automatically"
msgstr "Implementar `QuarkusApplication` e fazer com que o Quarkus execute este método automaticamente"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:42
#, fuzzy
msgid "Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus"
msgstr "Implementar `QuarkusApplication` e um método principal Java, e utilizar o método principal Java para lançar o Quarkus"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:45
#, fuzzy
msgid "In this document the `QuarkusApplication` instance is referred to as the application main, and a class with a Java main method is the Java main."
msgstr "Neste documento, a instância `QuarkusApplication` é referida como o main da aplicação e uma classe com um método main de Java é o main de Java."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:47
#, fuzzy
msgid "The simplest possible command mode application with access to Quarkus APIs might appear as follows:"
msgstr "A aplicação de modo de comando mais simples possível com acesso às APIs do Quarkus pode ser a seguinte"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:52
#, no-wrap
msgid ""
"import io.quarkus.runtime.QuarkusApplication;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:61
#, no-wrap
msgid ""
"@QuarkusMain    // <.>\n"
"public class HelloWorldMain implements QuarkusApplication {\n"
"  @Override\n"
"  public int run(String... args) throws Exception {   // <.>\n"
"    System.out.println(\"Hello \" + args[0]);\n"
"    return 0;\n"
" }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:64
#, fuzzy
msgid "<.> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.  <.> The `run` method is invoked once Quarkus starts, and the application stops when it finishes."
msgstr "<li> <p>A anotação `@QuarkusMain` indica ao Quarkus que este é o ponto de entrada principal. &lt;.&gt; O método `run` é invocado quando o Quarkus inicia e a aplicação pára quando termina.</p> </li>"

#. type: Title ===
#: upstream/_guides/command-mode-reference.adoc:65
#, fuzzy, no-wrap
msgid "Contexts"
msgstr "Contextos"

#. type: Block title
#: upstream/_guides/command-mode-reference.adoc:68
#, fuzzy, no-wrap
msgid "Got a `ContextNotActiveException`?"
msgstr "Tem um `ContextNotActiveException`?"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:73
#, fuzzy
msgid "A command mode application (like a CLI) is a bit different from say an HTTP service, there is a single call from the command line.  So the notion of _request_ let alone multiple requests does not exist per se.  Therefore, request scope is not the default."
msgstr "Uma aplicação em modo de comando (como um CLI) é um pouco diferente de, por exemplo, um serviço HTTP, pois existe uma única chamada a partir da linha de comando. Assim, a noção de _pedido_, quanto mais de múltiplos pedidos, não existe por si só. Por conseguinte, o âmbito do pedido não é a predefinição."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:76
#, fuzzy
msgid "To get access to your application beans and services, be aware that a `@QuarkusMain` instance is an application scoped bean by default.  It has access to singletons, application and dependent scoped beans."
msgstr "Para obter acesso aos beans e serviços da sua aplicação, tenha em atenção que uma instância de `@QuarkusMain` é, por defeito, um bean com âmbito de aplicação. Tem acesso a singletons, aplicações e beans com âmbito de aplicação dependente."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:80
#, fuzzy
msgid "If you want to interact with beans that requires a request scope, simply add the `@ActivateRequestContext` annotation on your `run()` method.  This let `run()` have access to methods like `listAll()` and `query*` methods on a Panache Entity.  Without it, you will eventually get a `ContextNotActiveException` when accessing such classes/beans."
msgstr "Se pretender interagir com beans que requerem um âmbito de pedido, basta adicionar a anotação `@ActivateRequestContext` ao seu método `run()`. Isso permite que `run()` tenha acesso a métodos como `listAll()` e `query*` em uma Entidade Panache. Sem ela, acabará por receber um `ContextNotActiveException` quando aceder a essas classes/beans."

#. type: Title ===
#: upstream/_guides/command-mode-reference.adoc:82
#, fuzzy, no-wrap
msgid "Main method"
msgstr "Método principal"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:84
#, fuzzy
msgid "If we want to use a Java main to run the application main it would look like:"
msgstr "Se quisermos usar um main de Java para executar o main da aplicação, ele terá o seguinte aspeto:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:89
#, no-wrap
msgid ""
"import io.quarkus.runtime.Quarkus;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:92
#, no-wrap
msgid ""
"@QuarkusMain\n"
"public class JavaMain {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:97
#, no-wrap
msgid ""
"    public static void main(String... args) {\n"
"        Quarkus.run(HelloWorldMain.class, args);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:101
#, fuzzy
msgid "This is effectively the same as running the `HelloWorldMain` application main directly, but has the advantage it can be run from the IDE."
msgstr "Isto é efetivamente o mesmo que executar diretamente a aplicação `HelloWorldMain` main, mas tem a vantagem de poder ser executada a partir do IDE."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:103
#, fuzzy
msgid "If a class that implements `QuarkusApplication` and has a Java main then the Java main will be run."
msgstr "Se uma classe que implementa `QuarkusApplication` e tem um Java main, então o Java main será executado."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:108
#, fuzzy
msgid "It is recommended that a Java main perform very little logic, and just launch the application main. In development mode the Java main will run in a different ClassLoader to the main application, so may not behave as you would expect."
msgstr "Recomenda-se que um Java main execute muito pouca lógica e apenas inicie o main da aplicação. No modo de desenvolvimento, o Java main será executado num ClassLoader diferente do da aplicação principal, pelo que poderá não se comportar como seria de esperar."

#. type: Title ====
#: upstream/_guides/command-mode-reference.adoc:109
#, fuzzy, no-wrap
msgid "Multiple Main Methods"
msgstr "Vários métodos principais"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:115
#, fuzzy
msgid "It is possible to have multiple main methods in an application, and select between them at build time.  The `@QuarkusMain` annotation takes an optional 'name' parameter, and this can be used to select the main to run using the `quarkus.package.main-class` build time configuration option. If you don't want to use annotations this can also be used to specify the fully qualified name of a main class."
msgstr "É possível ter vários métodos principais numa aplicação e selecionar entre eles em tempo de construção. A anotação `@QuarkusMain` recebe um parâmetro opcional 'name', que pode ser usado para selecionar o principal a ser executado usando a opção de configuração de tempo de construção `quarkus.package.main-class`. Se você não quiser usar anotações, isso também pode ser usado para especificar o nome totalmente qualificado de uma classe principal."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:119
#, fuzzy
msgid "By default, the `@QuarkusMain` with no name (i.e. the empty string) will be used, and if it is not present and `quarkus.package.main-class` is not specified then Quarkus will automatically generate a main class that just runs the application."
msgstr "Por defeito, o `@QuarkusMain` sem nome (ou seja, a string vazia) será utilizado e, se não estiver presente e `quarkus.package.main-class` não for especificado, o Quarkus irá gerar automaticamente uma classe principal que apenas executa a aplicação."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:123
#, fuzzy
msgid "The `name` of `@QuarkusMain` must be unique (including the default of the empty string). If you have multiple `@QuarkusMain` annotations in your application the build will fail if the names are not unique."
msgstr "O `name` de `@QuarkusMain` tem de ser único (incluindo a predefinição da cadeia vazia). Se você tiver várias anotações `@QuarkusMain` em seu aplicativo, a compilação falhará se os nomes não forem exclusivos."

#. type: Title ===
#: upstream/_guides/command-mode-reference.adoc:124
#, fuzzy, no-wrap
msgid "The command mode lifecycle"
msgstr "O ciclo de vida do modo de comando"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:127
#, fuzzy
msgid "When running a command mode application the basic lifecycle is as follows:"
msgstr "Ao executar uma aplicação em modo de comando, o ciclo de vida básico é o seguinte:"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:129
#, fuzzy
msgid "Start Quarkus"
msgstr "Iniciar o Quarkus"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:130
#, fuzzy
msgid "Run the `QuarkusApplication` main method"
msgstr "Executar o método `QuarkusApplication` main"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:131
#, fuzzy
msgid "Shut down Quarkus and exit the JVM after the main method returns"
msgstr "Desligue o Quarkus e saia da JVM após o retorno do método principal"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:135
#, fuzzy
msgid "Shutdown is always initiated by the application main thread returning. If you want to run some logic on startup, and then run like a normal application (i.e. not exit) then you should call `Quarkus.waitForExit` from the main thread (A non-command mode application is essentially just running an application that just calls `waitForExit`)."
msgstr "O encerramento é sempre iniciado pelo retorno da thread principal da aplicação. Se pretender executar alguma lógica no arranque e, em seguida, executar como uma aplicação normal (ou seja, não sair), então deve chamar `Quarkus.waitForExit` a partir da thread principal (uma aplicação de modo não-comando é essencialmente apenas executar uma aplicação que apenas chama `waitForExit`)."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:138
#, fuzzy
msgid "If you want to shut down a running application and you are not in the main thread, then you should call `Quarkus.asyncExit` in order to unblock the main thread and initiate the shutdown process."
msgstr "Se pretender encerrar uma aplicação em execução e não estiver na thread principal, deve chamar `Quarkus.asyncExit` para desbloquear a thread principal e iniciar o processo de encerramento."

#. type: Title ===
#: upstream/_guides/command-mode-reference.adoc:139
#, fuzzy, no-wrap
msgid "Development Mode"
msgstr "Modo de desenvolvimento"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:143
#, fuzzy
msgid "Also, for command mode applications, the dev mode is supported.  When you start your application in dev mode, the command mode application is executed:"
msgstr "Além disso, para as aplicações em modo de comando, é suportado o modo de desenvolvimento. Quando inicia a sua aplicação em modo de desenvolvimento, a aplicação em modo de comando é executada:"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:147
#, fuzzy
msgid "As command mode applications will often require arguments to be passed on the command line, this is also possible in dev mode:"
msgstr "Como as aplicações em modo de comando requerem frequentemente que sejam passados argumentos na linha de comando, isto também é possível no modo dev:"

#. type: Block title
#: upstream/_guides/command-mode-reference.adoc:149
#, fuzzy, no-wrap
msgid "CLI"
msgstr "CLI"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:152
#, no-wrap
msgid "quarkus dev '--help'\n"
msgstr ""

#. type: Block title
#: upstream/_guides/command-mode-reference.adoc:155
#, fuzzy, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:158
#, no-wrap
msgid "./mvnw quarkus:dev -Dquarkus.args='--help'\n"
msgstr ""

#. type: Block title
#: upstream/_guides/command-mode-reference.adoc:161
#, fuzzy, no-wrap
msgid "Gradle"
msgstr "Gradle"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:164
#, no-wrap
msgid "./gradlew quarkusDev --quarkus-args='--help'\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:167
#, fuzzy
msgid "You should see the following down the bottom of the screen after the application is stopped:"
msgstr "Deverá ver o seguinte na parte inferior do ecrã depois de a aplicação ser parada:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:170
#, no-wrap
msgid "--\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:172
msgid "Press [space] to restart, [e] to edit command line args (currently '-w --tags 1.0.1.Final'), [r] to resume testing, [o] Toggle test output, [h] for more options>"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:176
#, fuzzy
msgid "You can press the `Space bar` key and the application will be started again.  You can also use the `e` hotkey to edit the command line arguments and restart your application."
msgstr "Pode premir a tecla `Space bar` e a aplicação será novamente iniciada. Também pode utilizar a tecla de atalho `e` para editar os argumentos da linha de comandos e reiniciar a aplicação."

#. type: Title ==
#: upstream/_guides/command-mode-reference.adoc:177
#, fuzzy, no-wrap
msgid "Testing Command Mode Applications"
msgstr "Teste de aplicações do modo de comando"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:182
#, fuzzy
msgid "Command Mode applications can be tested using the `@QuarkusMainTest` and `@QuarkusMainIntegrationTest` annotations. These work in a similar way to `@QuarkusTest` and `@QuarkusIntegrationTest` where `@QuarkusMainTest` will run the CLI tests within the current JVM, while `QuarkusIntegrationTest` is used to run the generated executable (both jars and native)."
msgstr "As aplicações do modo de comando podem ser testadas usando as anotações `@QuarkusMainTest` e `@QuarkusMainIntegrationTest`. Estas funcionam de forma semelhante a `@QuarkusTest` e `@QuarkusIntegrationTest` onde `@QuarkusMainTest` irá executar os testes CLI dentro da JVM atual, enquanto `QuarkusIntegrationTest` é utilizado para executar o executável gerado (tanto jars como nativo)."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:184
#, fuzzy
msgid "We can write a simple test for our CLI application above as follows:"
msgstr "Podemos escrever um teste simples para a nossa aplicação CLI acima como se segue:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:193
#, no-wrap
msgid ""
"import io.quarkus.test.junit.main.Launch;\n"
"import io.quarkus.test.junit.main.LaunchResult;\n"
"import io.quarkus.test.junit.main.QuarkusMainLauncher;\n"
"import io.quarkus.test.junit.main.QuarkusMainTest;\n"
"import org.junit.jupiter.api.Assertions;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:196
#, no-wrap
msgid ""
"@QuarkusMainTest\n"
"public class HelloTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:202
#, no-wrap
msgid ""
"    @Test\n"
"    @Launch(\"World\")\n"
"    public void testLaunchCommand(LaunchResult result) {\n"
"        Assertions.assertTrue(result.getOutput().contains(\"Hello World\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:207
#, no-wrap
msgid ""
"    @Test\n"
"    @Launch(value = {}, exitCode = 1)\n"
"    public void testLaunchCommandFailed() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:215
#, no-wrap
msgid ""
"    @Test\n"
"    public void testManualLaunch(QuarkusMainLauncher launcher) {\n"
"        LaunchResult result = launcher.launch(\"Everyone\");\n"
"        Assertions.assertEquals(0, result.exitCode());\n"
"        Assertions.assertTrue(result.getOutput().contains(\"Hello Everyone\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:220
#, fuzzy
msgid "Each test method must be annotated with `@Launch` to automatically start the application or have a `QuarkusMainLauncher` parameter to manually launch the application."
msgstr "Cada método de teste deve ser anotado com `@Launch` para iniciar automaticamente a aplicação ou ter um parâmetro `QuarkusMainLauncher` para iniciar manualmente a aplicação."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:222
#, fuzzy
msgid "We can then extend this with an integration test that can be used to test the native executable or runnable jar:"
msgstr "Podemos então estender isso com um teste de integração que pode ser usado para testar o executável nativo ou o jar executável:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:226
#, no-wrap
msgid "import io.quarkus.test.junit.main.QuarkusMainIntegrationTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:230
#, no-wrap
msgid ""
"@QuarkusMainIntegrationTest\n"
"public class HelloIT extends HelloTest {\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/command-mode-reference.adoc:232
#, fuzzy, no-wrap
msgid "Mocking"
msgstr "Zombaria"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:236
#, fuzzy
msgid "CDI injection is not supported in the `@QuarkusMainTest` tests.  Consequently, mocking CDI beans with `QuarkusMock` or `@InjectMock` is not supported either."
msgstr "A injeção de CDI não é suportada nos testes `@QuarkusMainTest`. Consequentemente, a simulação de beans CDI com `QuarkusMock` ou `@InjectMock` também não é suportada."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:238
#, fuzzy
msgid "It is possible to mock CDI beans by leveraging xref:getting-started-testing.adoc#testing_different_profiles[test profiles] though."
msgstr "No entanto, é possível simular beans CDI utilizando  link:getting-started-testing.html#testing_different_profiles[perfis de teste]."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:240
#, fuzzy
msgid "For instance, in the following test, the singleton `CdiBean1` will be mocked by `MockedCdiBean1`:"
msgstr "Por exemplo, no teste seguinte, o singleton `CdiBean1` será simulado por `MockedCdiBean1`:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:244
#, no-wrap
msgid "package org.acme.commandmode.test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:246
#, no-wrap
msgid "import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:249
#, no-wrap
msgid ""
"import jakarta.enterprise.inject.Alternative;\n"
"import jakarta.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:252
#, no-wrap
msgid ""
"import org.junit.jupiter.api.Test;\n"
"import org.acme.commandmode.test.MyCommandModeTest.MyTestProfile;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:258
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTestProfile;\n"
"import io.quarkus.test.junit.TestProfile;\n"
"import io.quarkus.test.junit.main.Launch;\n"
"import io.quarkus.test.junit.main.LaunchResult;\n"
"import io.quarkus.test.junit.main.QuarkusMainTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:262
#, no-wrap
msgid ""
"@QuarkusMainTest\n"
"@TestProfile(MyTestProfile.class)\n"
"public class MyCommandModeTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:268
#, no-wrap
msgid ""
"    @Test\n"
"    @Launch(value = {})\n"
"    public void testLaunchCommand(LaunchResult result) {\n"
"        // ... assertions ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:270
#, no-wrap
msgid "    public static class MyTestProfile implements QuarkusTestProfile {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:276
#, no-wrap
msgid ""
"        @Override\n"
"        public Set<Class<?>> getEnabledAlternatives() {\n"
"            return Set.of(MockedCdiBean1.class); <1>\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:280
#, no-wrap
msgid ""
"    @Alternative <2>\n"
"    @Singleton <3>\n"
"    public static class MockedCdiBean1 implements CdiBean1 {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:287
#, no-wrap
msgid ""
"        @Override\n"
"        public String myMethod() {\n"
"            return \"mocked value\";\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:289
#, fuzzy
msgid "List all the CDI beans for which you want to enable an alternative mocked bean."
msgstr "Liste todos os beans CDI para os quais pretende ativar um bean simulado alternativo."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:290
#, fuzzy
msgid "Use `@Alternative` without a `@Priority`. Make sure you don't use `@Mock`."
msgstr "Utilize `@Alternative` sem `@Priority`. Certifique-se de que não utiliza `@Mock`."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:291
#, fuzzy
msgid "The scope of the mocked bean should be consistent with the original one."
msgstr "O âmbito do feijão simulado deve ser consistente com o original."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:292
#, fuzzy
msgid "Using this pattern, you can enable specific alternatives for any given test."
msgstr "Utilizando este padrão, é possível ativar alternativas específicas para um determinado teste."
