# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/funqy-knative-events.adoc:6
#, fuzzy, no-wrap
msgid "Funqy Knative Events Binding"
msgstr "Vinculação de eventos nativos da Funqy"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:16
#, fuzzy
msgid "Quarkus Funqy link:https://knative.dev/docs/eventing[Knative Events] builds off of the xref:funqy-http.adoc[Funqy HTTP] extension to allow you to route and process Knative Events within a Funqy function."
msgstr "O Quarkus Funqy  link:https://knative.dev/docs/eventing[Knative Events] baseia-se na extensão  link:funqy-http.html[HTTP do Funqy] para permitir o encaminhamento e o processamento de eventos Knative numa função Funqy."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:19
#, fuzzy
msgid "The guide walks through quickstart code to show you how you can deploy and invoke on Funqy functions with Knative Events."
msgstr "O guia apresenta um código de início rápido para mostrar como é possível implantar e invocar funções Funqy com eventos Knative."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:20
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:26
#, fuzzy
msgid "Read about xref:funqy.adoc[Funqy Basics].  This is a short read!"
msgstr "Ler sobre os  link:funqy.html[princípios básicos da Funqy]. Esta é uma leitura curta!"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:27
#, fuzzy
msgid "Have gone through the link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/index.html[Knative Tutorial], specifically link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/eventing/eventing-trigger-broker.html[Brokers and Triggers]"
msgstr "Percorreu o  link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/index.html[tutorial do Knative], especificamente  link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/eventing/eventing-trigger-broker.html[Brokers e Triggers]"

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:28
#, fuzzy, no-wrap
msgid "Setting up Knative"
msgstr "Configurar o Knative"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:33
#, fuzzy
msgid "Setting up Knative locally in a Minikube environment is beyond the scope of this guide.  It is advised to follow https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/index.html[this] Knative Tutorial put together by Red Hat.  It walks through how to set up Knative on Minikube or OpenShift in a local environment."
msgstr "Configurar o Knative localmente em um ambiente Minikube está além do escopo deste guia. É aconselhável seguir  link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/index.html[este] Tutorial do Knative elaborado pela Red Hat. Ele mostra como configurar o Knative no Minikube ou no OpenShift em um ambiente local."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:36
#, fuzzy
msgid "Specifically you should run the link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/eventing/eventing-trigger-broker.html[Brokers and Triggers] tutorial as this guide requires that you can invoke on a Broker to trigger the quickstart code."
msgstr "Especificamente, deve executar o tutorial  link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/eventing/eventing-trigger-broker.html[Brokers and Triggers], uma vez que este guia requer que possa invocar um Broker para acionar o código de arranque rápido."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:37
#, fuzzy, no-wrap
msgid "Read about Cloud Events"
msgstr "Ler sobre os eventos na nuvem"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:40
#, fuzzy
msgid "The Cloud Event link:https://cloudevents.io/[specification] is a good read to give you an even greater understanding of Knative Events."
msgstr "A  link:https://cloudevents.io/[especificação] do Cloud Event é uma boa leitura para que se tenha uma compreensão ainda maior dos Eventos Knative."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:41
#, fuzzy, no-wrap
msgid "The Quickstart"
msgstr "O início rápido"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:44
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:46
#, fuzzy
msgid "The solution is located in the `funqy-knative-events-quickstart` link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart[diretório] `funqy-knative-events-quickstart`."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:47
#, fuzzy, no-wrap
msgid "The Quickstart Flow"
msgstr "O fluxo de início rápido"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:53
#, fuzzy
msgid "The quickstart works by manually sending an HTTP request containing a Cloud Event to the Knative Broker using `curl`.  The Knative Broker receives the request and triggers the startup of the Funqy container built by the quickstart.  The event triggers the invocation of a chain of Funqy functions.  The output of one function triggers the invocation of another Funqy function."
msgstr "O quickstart funciona enviando manualmente uma solicitação HTTP contendo um evento de nuvem para o Knative Broker usando `curl`. O Knative Broker recebe a solicitação e aciona a inicialização do contêiner Funqy construído pelo quickstart. O evento aciona a invocação de uma cadeia de funções Funqy. A saída de uma função aciona a invocação de outra função Funqy."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:54
#, fuzzy, no-wrap
msgid "Funqy and Cloud Events"
msgstr "Eventos Funqy e Cloud"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:61
#, fuzzy
msgid "When living within a Knative Events environment, Funqy functions are triggered by a specific Cloud Event type.  You can have multiple Funqy functions within a single application/deployment, but they must be triggered by a specific Cloud Event Type.  The exception to this rule is if there is only one Funqy function in the application.  In that case, the event is pushed to that function irregardless of the Cloud Event type."
msgstr "Quando estão em um ambiente do Knative Events, as funções do Funqy são acionadas por um tipo específico de evento de nuvem. É possível ter várias funções Funqy em um único aplicativo/implantação, mas elas devem ser acionadas por um tipo específico de evento de nuvem. A exceção a essa regra é se houver apenas uma função Funqy no aplicativo. Nesse caso, o evento é enviado para essa função, independentemente do tipo de evento de nuvem."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:65
#, fuzzy
msgid "Currently, Funqy can only consume JSON-based data.  It supports both Binary and Structured mode of execution, but the data component of the Cloud Event message must be JSON.  This JSON must also be marshallable to and from the Java parameters and return types of your functions."
msgstr "Atualmente, o Funqy só pode consumir dados baseados em JSON. Ele suporta os modos de execução Binário e Estruturado, mas o componente de dados da mensagem do evento de nuvem deve ser JSON. Esse JSON também deve ser marshallable de e para os parâmetros Java e tipos de retorno de suas funções."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:66
#, fuzzy, no-wrap
msgid "The Code"
msgstr "O Código"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:70
#, fuzzy
msgid "Let's start looking at our quickstart code so that you can understand how Knative Events map to Funqy.  Open up link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/java/org/acme/funqy/SimpleFunctionChain.java[SimpleFunctionChain.java]"
msgstr "Vamos começar a analisar nosso código de início rápido para que você possa entender como os eventos Knative são mapeados para o Funqy. Abra  link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/java/org/acme/funqy/SimpleFunctionChain.java[SimpleFunctionChain.java]"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:72
#, fuzzy
msgid "The first function we'll look at is `defaultChain`."
msgstr "A primeira função que vamos analisar é `defaultChain`."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:76
#: upstream/_guides/funqy-knative-events.adoc:99
#, no-wrap
msgid "import io.quarkus.funqy.Funq;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:83
#, no-wrap
msgid ""
"public class SimpleFunctionChain {\n"
"    @Funq\n"
"    public String defaultChain(String input) {\n"
"        log.info(\"*** defaultChain ***\");\n"
"        return input + \"::\" + \"defaultChain\";\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:89
#, fuzzy
msgid "As is, a Funqy function has a default Cloud Event mapping.  By default, the Cloud Event type must match the function name for the function to trigger.  If the function returns output, the response is converted into a Cloud Event and returned to the Broker to be routed to other triggers.  The default Cloud Event type for this response is the function name + `.output`.  The default Cloud Event source is the function name."
msgstr "Como está, uma função Funqy tem um mapeamento de evento de nuvem padrão. Por padrão, o tipo de evento de nuvem deve corresponder ao nome da função para que a função seja acionada. Se a função retornar uma saída, a resposta será convertida em um evento de nuvem e retornará ao agente para ser encaminhada a outros acionadores. O tipo de evento de nuvem padrão para essa resposta é o nome da função + `.output`. A origem padrão do evento de nuvem é o nome da função."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:92
#, fuzzy
msgid "So, for the `defaultChain` function, the Cloud Event type that triggers the function is `defaultChain`.  It generates a response that triggers a new Cloud Event whose type is `defaultChain.output` and the event source is `defaultChain`."
msgstr "Assim, para a função `defaultChain`, o tipo de Evento na Nuvem que desencadeia a função é `defaultChain`. Gera uma resposta que desencadeia um novo Evento na Nuvem cujo tipo é `defaultChain.output` e a fonte do evento é `defaultChain`."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:95
#, fuzzy
msgid "While the default mapping is simple, it might not always be feasible.  You can change this default mapping through configuration.  Let's look at the next function:"
msgstr "Embora o mapeamento predefinido seja simples, pode nem sempre ser viável. É possível alterar este mapeamento predefinido através da configuração. Vejamos a função seguinte:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:106
#, no-wrap
msgid ""
"public class SimpleFunctionChain {\n"
"    @Funq\n"
"    public String configChain(String input) {\n"
"        log.info(\"*** configChain ***\");\n"
"        return input + \"::\" + \"configChain\";\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:109
#, fuzzy
msgid "The `configChain` function has its Cloud Event mapping changed by configuration within link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/resources/application.properties[application.properties]."
msgstr "A função `configChain` tem seu mapeamento de evento de nuvem alterado pela configuração em  link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/resources/application.properties[application.properties]."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:116
#, no-wrap
msgid ""
"quarkus.funqy.knative-events.mapping.configChain.trigger=defaultChain.output\n"
"quarkus.funqy.knative-events.mapping.configChain.response-type=annotated\n"
"quarkus.funqy.knative-events.mapping.configChain.response-source=configChain\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:120
#, fuzzy
msgid "In this case, the configuration maps the incoming Cloud Event type `defaultChain.output` to the `configChain` function.  The `configChain` function maps its response to the `annotated` Cloud Event type, and the Cloud Event source `configChain`."
msgstr "Nesse caso, a configuração mapeia o tipo de Evento na Nuvem de entrada `defaultChain.output` para a função `configChain`. A função `configChain` mapeia sua resposta para o tipo de evento na nuvem `annotated` e a origem do evento na nuvem `configChain`."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:122
#, fuzzy
msgid "`quarkus.funqy.knative-events.mapping.{function name}.trigger` sets the Cloud Event type that triggers a specific function. It is possible to use the special value `*` as a catch-all value. The function will in this case be used for all event types."
msgstr "`quarkus.funqy.knative-events.mapping.{function name}.trigger` define o tipo de evento de nuvem que aciona uma função específica. É possível usar o valor especial `*` como um valor abrangente. Neste caso, a função será utilizada para todos os tipos de eventos."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:123
#, fuzzy
msgid "`quarkus.funqy.knative-events.mapping.{function name}.response-type` sets the Cloud Event type of the response"
msgstr "`quarkus.funqy.knative-events.mapping.{function name}.response-type` define o tipo de evento de nuvem da resposta"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:124
#, fuzzy
msgid "`quarkus.funqy.knative-events.mapping.{function name}.resource-source` sets the Cloud Event source of the response"
msgstr "`quarkus.funqy.knative-events.mapping.{function name}.resource-source` define a origem do evento de nuvem da resposta"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:127
#, fuzzy
msgid "The Funqy Knative Events extension also has annotations to do this Cloud Event mapping to your functions.  Take a look at the `annotatedChain` method"
msgstr "A extensão Funqy Knative Events também tem anotações para fazer esse mapeamento do Cloud Event para suas funções. Dê uma olhada no método `annotatedChain`"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:132
#, no-wrap
msgid ""
"import io.quarkus.funqy.Funq;\n"
"import io.quarkus.funqy.knative.events.CloudEventMapping;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:140
#, no-wrap
msgid ""
"public class SimpleFunctionChain {\n"
"    @Funq\n"
"    @CloudEventMapping(trigger = \"annotated\", responseSource = \"annotated\", responseType = \"lastChainLink\")\n"
"    public String annotatedChain(String input) {\n"
"        log.info(\"*** annotatedChain ***\");\n"
"        return input + \"::\" + \"annotatedChain\";\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:146
#, fuzzy
msgid "If you use the `@CloudEventMapping` annotation on your function you can map the Cloud Event type trigger and the Cloud Event response.  In this example the `annotatedChain` function will be triggered by the `annotated` Cloud Event type and the response will be mapped to a `lastChainLink` type and `annotated` Cloud Event source."
msgstr "Se você usar a anotação `@CloudEventMapping` na sua função, poderá mapear o acionador do tipo de evento na nuvem e a resposta do evento na nuvem. Neste exemplo, a função `annotatedChain` será acionada pelo tipo de evento de nuvem `annotated` e a resposta será mapeada para um tipo `lastChainLink` e uma fonte de evento de nuvem `annotated`."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:149
#, fuzzy
msgid "So, if you look at all the functions defined within `SimpleFunctionChain` you'll notice that one function triggers the next.  The last function that is triggered is `lastChainLink`."
msgstr "Assim, se olhar para todas as funções definidas em `SimpleFunctionChain`, verá que uma função acciona a seguinte. A última função que é accionada é `lastChainLink`."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:154
#, no-wrap
msgid ""
"import io.quarkus.funqy.Context;\n"
"import io.quarkus.funqy.Funq;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:162
#, no-wrap
msgid ""
"public class SimpleFunctionChain {\n"
"    @Funq\n"
"    public void lastChainLink(String input, @Context CloudEvent event) {\n"
"        log.info(\"*** lastChainLink ***\");\n"
"        log.info(input + \"::\" + \"lastChainLink\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:166
#, fuzzy
msgid "There are two things to notice about this function.  One, it has no output.  Your functions are not required to return output.  Second, there is an additional `event` parameter to the function."
msgstr "Há duas coisas a notar sobre esta função. Primeiro, ela não tem saída. As suas funções não são obrigadas a devolver resultados. Segundo, há um parâmetro adicional `event` para a função."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:170
#, fuzzy
msgid "If you want to know additional information about the incoming Cloud Event, you can inject the `io.quarkus.funqy.knative.events.CloudEvent` interface using the Funqy `@Context` annotation.  The `CloudEvent` interface exposes information about the triggering event."
msgstr "Se quiser saber informações adicionais sobre o evento de entrada do Cloud Event, é possível injetar a interface `io.quarkus.funqy.knative.events.CloudEvent` usando a anotação Funqy `@Context`. A interface `CloudEvent` expõe informações sobre o evento de disparo."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:180
#, no-wrap
msgid ""
"public interface CloudEvent {\n"
"    String id();\n"
"    String specVersion();\n"
"    String source();\n"
"    String subject();\n"
"    OffsetDateTime time();\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:182
#, fuzzy, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:186
#, fuzzy
msgid "If you look at the link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/pom.xml[POM], you'll see that it is a typical Quarkus POM that pulls in one Funqy dependency:"
msgstr "Se olhar para o  link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/pom.xml[POM], verá que é um POM típico do Quarkus que puxa uma dependência Funqy:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:193
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-funqy-knative-events</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:195
#, fuzzy, no-wrap
msgid "Dev mode and Testing"
msgstr "Modo de desenvolvimento e teste"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:201
#, fuzzy
msgid "Funqy Knative Events support dev mode and unit testing using RestAssured.  You can invoke on Funqy Knative Events functions using the same invocation model as xref:funqy-http.adoc[Funqy HTTP] using normal HTTP requests, or Cloud Event Binary mode, or Structured Mode.  All invocation modes are supported at the same time."
msgstr "Os Funqy Knative Events suportam o modo de desenvolvimento e testes unitários usando o RestAssured. É possível invocar as funções do Funqy Knative Events usando o mesmo modelo de invocação do  link:funqy-http.html[Funqy HTTP], usando solicitações HTTP normais, ou o modo binário do Cloud Event, ou o modo estruturado. Todos os modos de invocação são suportados ao mesmo tempo."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:204
#, fuzzy
msgid "So, if you open up the unit test code in link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/test/java/org/acme/funqy/FunqyTest.java[FunqyTest.java] you'll see that its simply using RestAssured to make HTTP invocations to test the functions."
msgstr "Portanto, se abrir o código de teste unitário em  link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/test/java/org/acme/funqy/FunqyTest.java[FunqyTest.java], verá que ele simplesmente usa o RestAssured para fazer invocações HTTP para testar as funções."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:206
#, fuzzy
msgid "Funqy also works with Quarkus Dev mode!"
msgstr "O Funqy também funciona com o modo Quarkus Dev!"

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:207
#, fuzzy, no-wrap
msgid "Build the Project"
msgstr "Construir o projeto"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:210
#, fuzzy
msgid "First build the Java artifacts:"
msgstr "Primeiro, construa os artefactos Java:"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:214
#, fuzzy
msgid "Next, a docker image is required by Knative, so you'll need to build that next:"
msgstr "Em seguida, uma imagem docker é exigida pelo Knative, então você precisará construí-la a seguir:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:218
#, no-wrap
msgid "docker build -f src/main/docker/Dockerfile.jvm -t yourAccountName/funqy-knative-events-quickstart .\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:222
#, fuzzy
msgid "Make sure to replace `yourAccountName` with your docker or quay account name when you run `docker build`.  The Dockerfile is a standard Quarkus dockerfile.  No special Knative magic."
msgstr "Certifique-se de que substitui `yourAccountName` pelo nome da sua conta docker ou quay quando executar `docker build`. O Dockerfile é um dockerfile padrão do Quarkus. Nenhuma mágica especial do Knative."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:224
#, fuzzy
msgid "Push your image to docker hub or quay"
msgstr "Envie sua imagem para o docker hub ou quay"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:228
#, no-wrap
msgid "docker push yourAccountName/funqy-knative-events-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:231
#, fuzzy
msgid "Again, make sure to replace `yourAccountName` with your docker or quay account name when you run `docker push`."
msgstr "Mais uma vez, certifique-se de que substitui `yourAccountName` pelo nome da sua conta docker ou quay quando executar `docker push`."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:232
#, fuzzy, no-wrap
msgid "Deploy to Kubernetes/OpenShift"
msgstr "Implantar no Kubernetes/OpenShift"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:236
#, fuzzy
msgid "The first step is to set up the broker in our namespace.  Following is an example command from the Knative cli."
msgstr "O primeiro passo é configurar o broker no nosso namespace. A seguir, um exemplo de comando do cli do Knative."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:241
#, no-wrap
msgid ""
"kn broker create default \\\n"
"  --namespace knativetutorial\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:245
#, fuzzy
msgid "The broker we have created is called `default`, this broker will receive the cloud events.  The broker is also referenced in the function YAML files."
msgstr "O corretor que criámos chama-se `default`, este corretor receberá os eventos da nuvem. O corretor também é referenciado nos ficheiros YAML da função."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:248
#, fuzzy
msgid "The second step is to define a Kubernetes/OpenShift service to point to the Docker image you created and pushed during build. Take a look at link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/k8s/funqy-service.yaml[funqy-service.yaml]"
msgstr "A segunda etapa é definir um serviço Kubernetes/OpenShift para apontar para a imagem do Docker que você criou e enviou durante a compilação. Dê uma olhada no  link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/k8s/funqy-service.yaml[funqy-service.yaml]"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:264
#, no-wrap
msgid ""
"apiVersion: serving.knative.dev/v1\n"
"kind: Service\n"
"metadata:\n"
"  name: funqy-knative-events-quickstart\n"
"spec:\n"
"  template:\n"
"    metadata:\n"
"      name: funqy-knative-events-quickstart-v1\n"
"      annotations:\n"
"        autoscaling.knative.dev/target: \"1\"\n"
"    spec:\n"
"      containers:\n"
"        - image: docker.io/yourAccountName/funqy-knative-events-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:267
#, fuzzy
msgid "This is a standard Kubernetes service definition YAML file."
msgstr "Este é um ficheiro YAML de definição de serviço Kubernetes padrão."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:269
#, fuzzy
msgid "Make sure you change the image URL to point to the image you built and pushed earlier!"
msgstr "Certifique-se de que altera o URL da imagem para apontar para a imagem que criou e enviou anteriormente!"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:273
#, fuzzy
msgid "For our quickstart, one Kubernetes service will contain all functions. There's no reason you couldn't break up this quickstart into multiple different projects and deploy a service for each function.  For simplicity, and to show that you don't have to have a deployment per function, the quickstart combines everything into one project, image, and service."
msgstr "Para o nosso início rápido, um serviço Kubernetes conterá todas as funções. Não há motivo para não dividir esse início rápido em vários projetos diferentes e implantar um serviço para cada função. Para simplificar e mostrar que você não precisa ter uma implantação por função, o início rápido combina tudo em um projeto, imagem e serviço."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:275
#, fuzzy
msgid "Deploy the service:"
msgstr "Implementar o serviço:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:279
#, no-wrap
msgid "kubectl apply -n knativetutorial -f src/main/k8s/funqy-service.yaml\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:284
#, fuzzy
msgid "The next step is to deploy Knative Event triggers for each of the event types. As noted in the code section, each Funqy function is mapped to a specific Cloud Event type.  You must create Knative Event triggers that map a Cloud Event and route it to a specific Kubernetes service.  We have 4 different triggers."
msgstr "A próxima etapa é implantar os acionadores do Knative Event para cada um dos tipos de evento. Conforme observado na seção de código, cada função Funqy é mapeada para um tipo específico de evento de nuvem. Você deve criar acionadores do Knative Event que mapeiam um Cloud Event e o encaminham para um serviço específico do Kubernetes. Temos 4 acionadores diferentes."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:287
#, fuzzy
msgid "{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/k8s/defaultChain-trigger.yaml[defaultChain-trigger.yaml]"
msgstr "{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/k8s/defaultChain-trigger.yaml[defaultChain-trigger.yaml]"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:303
#, no-wrap
msgid ""
"apiVersion: eventing.knative.dev/v1alpha1\n"
"kind: Trigger\n"
"metadata:\n"
"  name: defaultchain\n"
"spec:\n"
"  broker: default\n"
"  filter:\n"
"    attributes:\n"
"      type: defaultChain\n"
"  subscriber:\n"
"    ref:\n"
"      apiVersion: serving.knative.dev/v1\n"
"      kind: Service\n"
"      name: funqy-knative-events-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:307
#, fuzzy
msgid "The `spec:filter:attributes:type` maps a Cloud Event type to the Kubernetes service defined in `spec:subscriber:ref`.  When a Cloud Event is pushed to the Broker, it will trigger the spin up of the service mapped to that event."
msgstr "O `spec:filter:attributes:type` mapeia um tipo de evento de nuvem para o serviço do Kubernetes definido em `spec:subscriber:ref`. Quando um evento de nuvem é enviado para o intermediário, ele acionará a ativação do serviço mapeado para esse evento."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:309
#, fuzzy
msgid "There's a trigger YAML file for each of our 4 Funqy functions.  Deploy them all:"
msgstr "Existe um ficheiro YAML de trigger para cada uma das nossas 4 funções Funqy. Implante todos eles:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:316
#, no-wrap
msgid ""
"kubectl apply -n knativetutorial -f src/main/k8s/defaultChain-trigger.yaml\n"
"kubectl apply -n knativetutorial -f src/main/k8s/configChain-trigger.yaml\n"
"kubectl apply -n knativetutorial -f src/main/k8s/annotatedChain-trigger.yaml\n"
"kubectl apply -n knativetutorial -f src/main/k8s/lastChainLink-trigger.yaml\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:318
#, fuzzy, no-wrap
msgid "Run the demo"
msgstr "Executar a demonstração"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:322
#, fuzzy
msgid "You'll need two different terminal windows.  One to do a curl request to the Broker, the other to watch the pod log files, so you can see the messages flowing through the Funqy function event chain."
msgstr "Você precisará de duas janelas de terminal diferentes. Uma para fazer um pedido curl ao Broker, a outra para ver os ficheiros de registo do pod, para que possa ver as mensagens a fluir através da cadeia de eventos da função Funqy."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:325
#, fuzzy
msgid "Make sure you have the `stern` tool installed.  See the Knative Tutorial setup for information on that.  Run stern to look for logs outputted by our Funqy deployment"
msgstr "Certifique-se de que tem a ferramenta `stern` instalada. Veja a configuração do Tutorial Knative para obter informações sobre isso. Execute o stern para procurar os logs emitidos pela nossa implantação do Funqy"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:329
#, no-wrap
msgid "stern funq user-container\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:332
#, fuzzy
msgid "Open a separate terminal.  You'll first need to learn the URL of the broker.  Execute this command to find it."
msgstr "Abra um terminal separado. Primeiro, precisa de saber o URL do corretor. Execute este comando para o encontrar."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:336
#, no-wrap
msgid "kubectl get broker default -o jsonpath='{.status.address.url}'\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:339
#, fuzzy
msgid "This will provide you a URL similar to e.g.: `http://broker-ingress.knative-eventing.svc.cluster.local/knativetutorial/default`. Remember this URL."
msgstr "Isto fornecer-lhe-á um URL semelhante a, por exemplo: `&lt;a href=\"http://broker-ingress.knative-eventing.svc.cluster.local/knativetutorial/default\" class=\"bare\"&gt;http://broker-ingress.knative-eventing.svc.cluster.local/knativetutorial/default&lt;/a&gt;`. Lembre-se deste URL."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:342
#, fuzzy
msgid "Next thing we need to do is ssh into our Kubernetes cluster so that we can send a curl request to our broker.  The following command will create a simple OS pod so we can curl into our functions."
msgstr "A próxima coisa que precisamos fazer é ssh em nosso cluster Kubernetes para que possamos enviar uma solicitação curl para nosso corretor. O comando a seguir criará um pod simples do sistema operacional para que possamos entrar em nossas funções."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:346
#, no-wrap
msgid "kubectl -n knativetutorial apply -f src/main/k8s/curler.yaml\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:349
#, fuzzy
msgid "You might need to wait a couple of seconds until the curler pod comes up. Run the following to get bash access to the curler pod:"
msgstr "Pode ser necessário esperar alguns segundos até que o curler pod apareça. Execute o seguinte para obter acesso bash ao curler pod:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:353
#, no-wrap
msgid "kubectl -n knativetutorial exec -it curler -- /bin/bash\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:357
#, fuzzy
msgid "You will now be in a shell within the Kubernetes cluster.  Within the shell, execute this curl command , the broker address is an example and might differ based on your project or broker name."
msgstr "Agora você estará em um shell dentro do cluster do Kubernetes. Dentro do shell, execute este comando curl , o endereço do broker é um exemplo e pode diferir com base no seu projeto ou nome do broker."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:368
#, no-wrap
msgid ""
"curl -v \"http://default-broker.knativetutorial.svc.cluster.local\" \\\n"
"-X POST \\\n"
"-H \"Ce-Id: 1234\" \\\n"
"-H \"Ce-Specversion: 1.0\" \\\n"
"-H \"Ce-Type: defaultChain\" \\\n"
"-H \"Ce-Source: curl\" \\\n"
"-H \"Content-Type: application/json\" \\\n"
"-d '\"Start\"'\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:374
#, fuzzy
msgid "This posts a Knative Event to the broker, which will trigger the `defaultChain` function.  As discussed earlier, the output of `defaultChain` triggers an event that is posted to `configChain` which triggers an event posted to `annotatedChain` then finally to the `lastChainLink` function.  You can see this flow in your `stern` window.  Something like this should be outputted."
msgstr "Isto lança um evento Knative no corretor, que accionará a função `defaultChain`. Como discutido anteriormente, a saída de `defaultChain` aciona um evento que é postado em `configChain`, que aciona um evento postado em `annotatedChain` e, finalmente, na função `lastChainLink`. Você pode ver esse fluxo na janela `stern`. A saída deve ser algo parecido com isto."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:382
#, no-wrap
msgid ""
"funqy-knative-events-quickstart-v1-deployment-59bb88bcf4-9jwdx user-container 2020-05-12 13:44:02,256 INFO  [org.acm.fun.SimpleFunctionChain] (executor-thread-1) *** defaultChain ***\n"
"funqy-knative-events-quickstart-v1-deployment-59bb88bcf4-9jwdx user-container 2020-05-12 13:44:02,365 INFO  [org.acm.fun.SimpleFunctionChain] (executor-thread-2) *** configChain ***\n"
"funqy-knative-events-quickstart-v1-deployment-59bb88bcf4-9jwdx user-container 2020-05-12 13:44:02,394 INFO  [org.acm.fun.SimpleFunctionChain] (executor-thread-1) *** annotatedChain ***\n"
"funqy-knative-events-quickstart-v1-deployment-59bb88bcf4-9jwdx user-container 2020-05-12 13:44:02,466 INFO  [org.acm.fun.SimpleFunctionChain] (executor-thread-2) *** lastChainLink ***\n"
"funqy-knative-events-quickstart-v1-deployment-59bb88bcf4-9jwdx user-container 2020-05-12 13:44:02,467 INFO  [org.acm.fun.SimpleFunctionChain] (executor-thread-2) Start::defaultChain::configChain::annotatedChain::lastChainLink\n"
msgstr ""
