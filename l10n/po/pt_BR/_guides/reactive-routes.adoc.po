# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Using Reactive Routes"
msgstr "Utilização de rotas reactivas"

#: _guides/reactive-routes.adoc
msgid ""
"Reactive routes propose an alternative approach to implement HTTP endpoints where you declare and chain _routes_.\n"
"This approach became very popular in the JavaScript world, with frameworks like Express.Js or Hapi.\n"
"Quarkus also offers the possibility to use reactive routes.\n"
"You can implement REST API with routes only or combine them with Jakarta REST resources and servlets."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The code presented in this guide is available in this {quickstarts-base-url}[GitHub repository] under the link:{quickstarts-tree-url}/reactive-routes-quickstart[`reactive-routes-quickstart` directory]"
msgstr "O código apresentado neste guia está disponível neste {quickstarts-base-url}[repositório GitHub] sob o  link:{quickstarts-tree-url}/reactive-routes-quickstart[diretório `reactive-routes-quickstart`]"

#: _guides/reactive-routes.adoc
msgid ""
"Reactive Routes were initially introduced to provide a reactive execution model for HTTP APIs on top of the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture].\n"
"With the introduction of xref:resteasy-reactive.adoc[RESTEasy Reactive], you can now implement reactive HTTP APIs and still use Jakarta REST annotations.\n"
"Reactive Routes are still supported, especially if you want a more _route-based_ approach, and something closer to the underlying reactive engine."
msgstr ""

#. type: Title ==
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Quarkus HTTP"
msgstr "Quarkus HTTP"

#: _guides/reactive-routes.adoc
msgid ""
"Before going further, let's have a look at the HTTP layer of Quarkus.\n"
"Quarkus HTTP support is based on a non-blocking and reactive engine (Eclipse Vert.x and Netty).\n"
"All the HTTP requests your application receive are handled by _event loops_ (I/O Thread) and then are routed towards the code that manages the request.\n"
"Depending on the destination, it can invoke the code managing the request on a worker thread (Servlet, Jax-RS) or use the IO Thread (reactive route).\n"
"Note that because of this, a reactive route must be non-blocking or explicitly declare its blocking nature (which would result by being called on a worker thread)."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "image:http-architecture.png[alt=Quarkus HTTP Architecture]"
msgstr "image:http-architecture.png[alt=Quarkus HTTP Architecture]"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "See the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture documentation] for further details on this topic."
msgstr "Consulte a  link:quarkus-reactive-architecture.html[documentação da Arquitetura Reactiva do Quarkus] para obter mais informações sobre este tópico."

#. type: Title ==
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Declaring reactive routes"
msgstr "Declarar rotas reactivas"

#: _guides/reactive-routes.adoc
msgid ""
"The first way to use reactive routes is to use the `@Route` annotation.\n"
"To have access to this annotation, you need to add the `quarkus-reactive-routes` extension by running this command:"
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Isto irá adicionar o seguinte ao seu ficheiro de compilação:"

#. type: Block title
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Then in a _bean_, you can use the `@Route` annotation as follows:"
msgstr "Depois, num _bean_, pode utilizar a anotação `@Route` da seguinte forma:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "If there is a reactive route found on a class with no scope annotation then `@jakarta.inject.Singleton` is added automatically."
msgstr "Se for encontrada uma rota reactiva numa classe sem anotação de âmbito, então `@jakarta.inject.Singleton` é adicionado automaticamente."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `@Route` annotation indicates that the method is a reactive route. Again, by default, the code contained in the method must not block."
msgstr "A anotação `@Route` indica que o método é uma rota reactiva. Mais uma vez, por defeito, o código contido no método não deve bloquear."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The method gets a https://vertx.io/docs/apidocs/io/vertx/ext/web/RoutingContext.html[`RoutingContext`] as a parameter. From the `RoutingContext` you can retrieve the HTTP request (using `request()`) and write the response using `response().end(...)`."
msgstr "O método recebe um  link:https://vertx.io/docs/apidocs/io/vertx/ext/web/RoutingContext.html[`RoutingContext`] como parâmetro. A partir de `RoutingContext` pode obter o pedido HTTP (utilizando `request()`) e escrever a resposta utilizando `response().end(…​)`."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "If the annotated method does not return `void` the arguments are optional."
msgstr "Se o método anotado não devolver `void`, os argumentos são opcionais."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "`RoutingExchange` is a convenient wrapper of `RoutingContext` which provides some useful methods."
msgstr "`RoutingExchange` é um invólucro conveniente de `RoutingContext` que fornece alguns métodos úteis."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `RoutingExchange` is used to retrieve the request query parameter `name`."
msgstr "O endereço `RoutingExchange` é utilizado para obter o parâmetro de consulta do pedido `name`."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The path defines a parameter `name` which can be injected inside the method parameters using the annotation `@Param`."
msgstr "O caminho define um parâmetro `name` que pode ser injetado dentro dos parâmetros do método utilizando a anotação `@Param`."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "More details about using the `RoutingContext` is available in the https://vertx.io/docs/vertx-web/java/[Vert.x Web documentation]."
msgstr "Estão disponíveis mais pormenores sobre a utilização do `RoutingContext` na  link:https://vertx.io/docs/vertx-web/java/[documentação Web do Vert.x]."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `@Route` annotation allows you to configure:"
msgstr "A anotação `@Route` permite-lhe configurar:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `path` - for routing by path, using the https://vertx.io/docs/vertx-web/java/#_capturing_path_parameters[Vert.x Web format]"
msgstr "O `path` - para encaminhamento por caminho, utilizando  link:https://vertx.io/docs/vertx-web/java/#_capturing_path_parameters[o formato Vert.x Web]"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `regex` - for routing with regular expressions, see https://vertx.io/docs/vertx-web/java/#_routing_with_regular_expressions[for more details]"
msgstr "O `regex` - para o encaminhamento com expressões regulares, ver  link:https://vertx.io/docs/vertx-web/java/#_routing_with_regular_expressions[para mais pormenores]"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `methods` - the HTTP verbs triggering the route such as `GET`, `POST`..."
msgstr "O `methods` - os verbos HTTP que accionam a rota, tais como `GET`, `POST`..."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `type` - it can be _normal_ (non-blocking), _blocking_ (method dispatched on a worker thread), or _failure_ to indicate that this route is called on failures"
msgstr "O endereço `type` - pode ser _normal_ (não bloqueante), _bloqueante_ (método enviado num thread de trabalho) ou _falha_ para indicar que este itinerário é chamado em caso de falhas"

#: _guides/reactive-routes.adoc
msgid ""
"The `order` - the order of the route when several routes are involved in handling the incoming request.\n"
"Must be positive for regular user routes."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The produced and consumed mime types using `produces`, and `consumes`"
msgstr "Os tipos de mime produzidos e consumidos utilizando `produces`, e `consumes`"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "For instance, you can declare a blocking route as follows:"
msgstr "Por exemplo, é possível declarar uma rota de bloqueio da seguinte forma:"

#. type: delimited block =
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Alternatively, you can use `@io.smallrye.common.annotation.Blocking` and omit the `type = Route.HandlerType.BLOCKING`:"
msgstr "Em alternativa, pode utilizar `@io.smallrye.common.annotation.Blocking` e omitir `type = Route.HandlerType.BLOCKING`:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "When `@Blocking` is used, it ignores the `type` attribute of `@Route`."
msgstr "Quando `@Blocking` é utilizado, ignora o atributo `type` de `@Route`."

#. type: delimited block =
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `@Route` annotation is repeatable and so you can declare several routes for a single method:"
msgstr "A anotação `@Route` é repetível, pelo que é possível declarar vários itinerários para um único método:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Each route can use different paths, methods..."
msgstr "Cada rota pode utilizar diferentes caminhos, métodos..."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "If no content-type header is set, then we will try to use the most acceptable content type by matching the accept header with the value of the `Route` produces attribute as defined by `io.vertx.ext.web.RoutingContext.getAcceptableContentType()`."
msgstr "Se não for definido um cabeçalho content-type, tentaremos utilizar o tipo de conteúdo mais aceitável, fazendo corresponder o cabeçalho accept ao valor do atributo `Route` produces, tal como definido por `io.vertx.ext.web.RoutingContext.getAcceptableContentType()`."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "If the `accept` header matches `text/html`, we set the content type automatically to `text/html`."
msgstr "Se o cabeçalho `accept` corresponder a `text/html`, definimos automaticamente o tipo de conteúdo para `text/html`."

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Handling conflicting routes"
msgstr "Gestão de itinerários contraditórios"

#: _guides/reactive-routes.adoc
msgid ""
"You may end up with multiple routes matching a given path.\n"
"In the following example, both route matches `/accounts/me`:"
msgstr ""

#: _guides/reactive-routes.adoc
msgid ""
"As a consequence, the result is not the expected one as the first route is called with the path parameter `id` set to `me`.\n"
"To avoid the conflict, use the `order` attribute:"
msgstr ""

#: _guides/reactive-routes.adoc
msgid ""
"By giving a lower order to the second route, it gets evaluated first.\n"
"If the request path matches, it is invoked, otherwise the other routes are evaluated."
msgstr ""

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`@RouteBase`"
msgstr "`@RouteBase`"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "This annotation can be used to configure some defaults for reactive routes declared on a class."
msgstr "Esta anotação pode ser utilizada para configurar algumas predefinições para percursos reactivos declarados numa classe."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `path` value is used as a prefix for any route method declared on the class where `Route#path()` is used."
msgstr "O valor `path` é utilizado como um prefixo para qualquer método de itinerário declarado na classe em que `Route#path()` é utilizado."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The value of `produces()` is used for content-based routing for all routes where `Route#produces()` is empty."
msgstr "O valor de `produces()` é utilizado para o encaminhamento baseado em conteúdos para todas as rotas em que `Route#produces()` está vazio."

#. type: Title ==
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Reactive Route Methods"
msgstr "Métodos reactivos de encaminhamento"

#: _guides/reactive-routes.adoc
msgid ""
"A route method must be a non-private non-static method of a CDI bean.\n"
"If the annotated method returns `void` then it has to accept at least one argument - see the supported types below.\n"
"If the annotated method does not return `void` then the arguments are optional."
msgstr ""

#: _guides/reactive-routes.adoc
msgid ""
"Methods that return `void` must __end__ the response or the HTTP request to this route will never end.\n"
"Some methods of `RoutingExchange` do it for you, others not and you must call the `end()` method of the response by yourself, please refer to its JavaDoc for more information."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "A route method can accept arguments of the following types:"
msgstr "Um método de rota pode aceitar argumentos dos seguintes tipos:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "`io.vertx.ext.web.RoutingContext`"
msgstr "`io.vertx.ext.web.RoutingContext`"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "`io.quarkus.vertx.web.RoutingExchange`"
msgstr "`io.quarkus.vertx.web.RoutingExchange`"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "`io.vertx.core.http.HttpServerRequest`"
msgstr "`io.vertx.core.http.HttpServerRequest`"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "`io.vertx.core.http.HttpServerResponse`"
msgstr "`io.vertx.core.http.HttpServerResponse`"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "`io.vertx.mutiny.core.http.HttpServerRequest`"
msgstr "`io.vertx.mutiny.core.http.HttpServerRequest`"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "`io.vertx.mutiny.core.http.HttpServerResponse`"
msgstr "`io.vertx.mutiny.core.http.HttpServerResponse`"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Furthermore, it is possible to inject the `HttpServerRequest` parameters into method parameters annotated with `@io.quarkus.vertx.web.Param` using the following types:"
msgstr "Além disso, é possível injetar os parâmetros `HttpServerRequest` em parâmetros de métodos anotados com `@io.quarkus.vertx.web.Param` utilizando os seguintes tipos:"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Parameter Type"
msgstr "Tipo de parâmetro"

#: _guides/reactive-routes.adoc
msgid "Obtained via"
msgstr ""

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`java.lang.String`"
msgstr "`java.lang.String`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`routingContext.request().getParam()`"
msgstr "`routingContext.request().getParam()`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`java.util.Optional<String>`"
msgstr "`java.util.Optional&amp;lt;String&amp;gt;`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`java.util.List<String>`"
msgstr "`java.util.List&amp;lt;String&amp;gt;`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`routingContext.request().params().getAll()`"
msgstr "`routingContext.request().params().getAll()`"

#. type: Block title
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Request Parameter Example"
msgstr "Exemplo de parâmetro de pedido"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `HttpServerRequest` headers can be injected into method parameters annotated with `@io.quarkus.vertx.web.Header` using the following types:"
msgstr "Os cabeçalhos `HttpServerRequest` podem ser injectados em parâmetros de métodos anotados com `@io.quarkus.vertx.web.Header` utilizando os seguintes tipos:"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`routingContext.request().getHeader()`"
msgstr "`routingContext.request().getHeader()`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`routingContext.request().headers().getAll()`"
msgstr "`routingContext.request().headers().getAll()`"

#. type: Block title
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Request Header Example"
msgstr "Exemplo de cabeçalho de pedido"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The request body can be injected into a method parameter annotated with `@io.quarkus.vertx.web.Body` using the following types:"
msgstr "O corpo do pedido pode ser injetado num parâmetro de método anotado com `@io.quarkus.vertx.web.Body` utilizando os seguintes tipos:"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`routingContext.getBodyAsString()`"
msgstr "`routingContext.getBodyAsString()`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`io.vertx.core.buffer.Buffer`"
msgstr "`io.vertx.core.buffer.Buffer`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`routingContext.getBody()`"
msgstr "`routingContext.getBody()`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`io.vertx.core.json.JsonObject`"
msgstr "`io.vertx.core.json.JsonObject`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`routingContext.getBodyAsJson()`"
msgstr "`routingContext.getBodyAsJson()`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`io.vertx.core.json.JsonArray`"
msgstr "`io.vertx.core.json.JsonArray`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`routingContext.getBodyAsJsonArray()`"
msgstr "`routingContext.getBodyAsJsonArray()`"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "any other type"
msgstr "qualquer outro tipo"

#. type: Table
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "`routingContext.getBodyAsJson().mapTo(MyPojo.class)`"
msgstr "`routingContext.getBodyAsJson().mapTo(MyPojo.class)`"

#. type: Block title
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Request Body Example"
msgstr "Exemplo de corpo de pedido"

#: _guides/reactive-routes.adoc
msgid ""
"A failure handler can declare a single method parameter whose type extends `Throwable`.\n"
"The type of the parameter is used to match the result of `RoutingContext#failure()`."
msgstr ""

#. type: Block title
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Failure Handler Example"
msgstr "Exemplo de tratamento de falhas"

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Returning Unis"
msgstr "Unidades que regressam"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "In a reactive route, you can return a `Uni` directly:"
msgstr "Numa rota reactiva, é possível devolver um `Uni` diretamente:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Returning `Unis` is convenient when using a reactive client:"
msgstr "O regresso a `Unis` é conveniente quando se utiliza um cliente reativo:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The item produced by the returned `Uni` can be:"
msgstr "O item produzido pelo `Uni` devolvido pode ser:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "A string - written into the HTTP response directly."
msgstr "Uma cadeia de caracteres - escrita diretamente na resposta HTTP."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "A `io.vertx.core.buffer.Buffer` - written into the HTTP response directly."
msgstr "Um `io.vertx.core.buffer.Buffer` - escrito diretamente na resposta HTTP."

#: _guides/reactive-routes.adoc
msgid ""
"An object - written into the HTTP response after having been encoded into JSON.\n"
"The `content-type` header is set to `application/json` if not already set."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "If the returned `Uni` produces a failure (or is `null`), an HTTP 500 response is written."
msgstr "Se o `Uni` devolvido produzir uma falha (ou for `null`), é escrita uma resposta HTTP 500."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Returning a `Uni<Void>` produces a 204 response (no content)."
msgstr "O retorno de um `Uni&amp;lt;Void&amp;gt;` produz uma resposta 204 (sem conteúdo)."

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Returning results"
msgstr "Resultados de retorno"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "You can also return a result directly:"
msgstr "Também é possível devolver um resultado diretamente:"

#: _guides/reactive-routes.adoc
msgid ""
"Be aware, the processing must be **non-blocking** as reactive routes are invoked on the IO Thread.\n"
"Otherwise, set the `type` attribute of the `@Route` annotation to `Route.HandlerType.BLOCKING`, or use the `@io.smallrye.common.annotation.Blocking` annotation."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The method can return:"
msgstr "O método pode devolver:"

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Returning Multis"
msgstr "Multis que regressam"

#: _guides/reactive-routes.adoc
msgid ""
"A reactive route can return a `Multi`.\n"
"The items are written one by one, in the response.\n"
"The response `Transfer-Encoding` header is set to `chunked`."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Produces `helloworld!`"
msgstr "Produz `helloworld!`"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "A `Multi<String>` - the items are written one by one (one per _chunk_) in the response."
msgstr "A `Multi&amp;lt;String&amp;gt;` - os itens são escritos um a um (um por _bloco_) na resposta."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "A `Multi<Buffer>` - the buffers are written one by one (one per _chunk_) without any processing."
msgstr "A `Multi&amp;lt;Buffer&amp;gt;` - os buffers são escritos um a um (um por cada _fração_) sem qualquer processamento."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "A `Multi<Object>` - the items are encoded to JSON written one by one in the response."
msgstr "A `Multi&amp;lt;Object&amp;gt;` - os itens são codificados em JSON e escritos um a um na resposta."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The previous snippet produces:"
msgstr "O snippet anterior produz:"

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Streaming JSON Array items"
msgstr "Transmissão de itens de matriz JSON"

#: _guides/reactive-routes.adoc
msgid ""
"You can return a `Multi` to produce a JSON Array, where every item is an item from this array.\n"
"The response is written item by item to the client.\n"
"To do that set the `produces` attribute to `\"application/json\"` (or `ReactiveRoutes.APPLICATION_JSON`)."
msgstr ""

#: _guides/reactive-routes.adoc
msgid ""
"The `produces` attribute is an array.\n"
"When you pass a single value you can omit the \"{\" and \"}\".\n"
"Note that `\"application/json\"` must be the first value in the array."
msgstr ""

#: _guides/reactive-routes.adoc
msgid ""
"Only `Multi<String>`, `Multi<Object>` and `Multi<Void>` can be written into the JSON Array.\n"
"Using a `Multi<Void>` produces an empty array.\n"
"You cannot use `Multi<Buffer>`.\n"
"If you need to use `Buffer`, transform the content into a JSON or String representation first."
msgstr ""

#. type: Block title
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Deprecation of `asJsonArray`"
msgstr "Depreciação de `asJsonArray`"

#. type: delimited block =
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `ReactiveRoutes.asJsonArray` has been deprecated as it is not compatible with the security layer of Quarkus."
msgstr "O endereço `ReactiveRoutes.asJsonArray` foi descontinuado por não ser compatível com a camada de segurança do Quarkus."

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Event Stream and Server-Sent Event support"
msgstr "Suporte para fluxo de eventos e eventos enviados pelo servidor"

#: _guides/reactive-routes.adoc
msgid ""
"You can return a `Multi` to produce an event source (stream of server sent events).\n"
"To enable this feature, set the `produces` attribute to `\"text/event-stream\"` (or `ReactiveRoutes.EVENT_STREAM`), such as in:"
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "This method would produce:"
msgstr "Este método produziria:"

#: _guides/reactive-routes.adoc
msgid ""
"The `produces` attribute is an array.\n"
"When you pass a single value you can omit the \"{\" and \"}\".\n"
"Note that `\"text/event-stream\"` must be the first value in the array."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "You can also implement the `io.quarkus.vertx.web.ReactiveRoutes.ServerSentEvent` interface to customize the `event` and `id` section of the server sent event:"
msgstr "Também é possível implementar a interface `io.quarkus.vertx.web.ReactiveRoutes.ServerSentEvent` para personalizar as secções `event` e `id` do evento enviado pelo servidor:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Using a `Multi<PersonEvent>` would produce:"
msgstr "A utilização de um `Multi&amp;lt;PersonEvent&amp;gt;` produziria:"

#. type: Block title
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Deprecation of `asEventStream`"
msgstr "Depreciação de `asEventStream`"

#. type: delimited block =
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `ReactiveRoutes.asEventStream` has been deprecated as it is not compatible with the security layer of Quarkus."
msgstr "O endereço `ReactiveRoutes.asEventStream` foi descontinuado por não ser compatível com a camada de segurança do Quarkus."

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Json Stream in NDJSON format"
msgstr "Json Stream no formato NDJSON"

#: _guides/reactive-routes.adoc
msgid ""
"You can return a `Multi` to produce a newline delimited stream of JSON values.\n"
"To enable this feature, set the `produces` attribute of the `@Route` annotation to `\"application/x-ndjson\"` (or `ReactiveRoutes.ND_JSON`):"
msgstr ""

#: _guides/reactive-routes.adoc
msgid ""
"The `produces` attribute is an array. When you pass a single value you can omit the \"{\" and \"}\".\n"
"Note that `\"application/x-ndjson\"` must be the first value in the array."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "You can also provide strings instead of objects, in that case the strings will be wrapped in quotes to become valid JSON values:"
msgstr "Também pode fornecer cadeias de caracteres em vez de objectos; nesse caso, as cadeias de caracteres serão envolvidas em aspas para se tornarem valores JSON válidos:"

#. type: Block title
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Deprecation of `asJsonStream`"
msgstr "Depreciação de `asJsonStream`"

#. type: delimited block =
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `ReactiveRoutes.asJsonStream` has been deprecated as it is not compatible with the security layer of Quarkus."
msgstr "O endereço `ReactiveRoutes.asJsonStream` foi descontinuado por não ser compatível com a camada de segurança do Quarkus."

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Using Bean Validation"
msgstr "Utilizar a validação de feijões"

#: _guides/reactive-routes.adoc
msgid ""
"You can combine reactive routes and Bean Validation.\n"
"First, don't forget to add the `quarkus-hibernate-validator` extension to your project.\n"
"Then, you can add constraints to your route parameter (annotated with `@Param` or `@Body`):"
msgstr ""

#: _guides/reactive-routes.adoc
msgid ""
"If the parameters do not pass the tests, it returns an HTTP 400 response.\n"
"If the request accepts JSON payload, the response follows the https://opensource.zalando.com/problem/constraint-violation/[Problem] format."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "When returning an object or a `Uni`, you can also use the `@Valid` annotation:"
msgstr "Ao devolver um objeto ou um `Uni`, pode também utilizar a anotação `@Valid`:"

#: _guides/reactive-routes.adoc
msgid ""
"If the item produced by the route does not pass the validation, it returns an HTTP 500 response.\n"
"If the request accepts JSON payload, the response follows the https://opensource.zalando.com/problem/constraint-violation/[Problem] format."
msgstr ""

#: _guides/reactive-routes.adoc
msgid ""
"Note that only `@Valid` is supported on the return type.\n"
"The returned class can use any constraint.\n"
"In the case of `Uni`, it checks the item produced asynchronously."
msgstr ""

#. type: Title ==
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Using the Vert.x Web Router"
msgstr "Utilizar o Router Web Vert.x"

#: _guides/reactive-routes.adoc
msgid ""
"You can also register your route directly on the _HTTP routing layer_ by registering routes directly on the `Router` object.\n"
"To retrieve the `Router` instance at startup:"
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Check the https://vertx.io/docs/vertx-web/java/#_basic_vert_x_web_concepts[Vert.x Web documentation] to know more about the route registration, options, and available handlers."
msgstr "Consulte a  link:https://vertx.io/docs/vertx-web/java/#_basic_vert_x_web_concepts[documentação do Vert.x Web] para saber mais sobre o registo de itinerários, as opções e os manipuladores disponíveis."

#: _guides/reactive-routes.adoc
msgid ""
"`Router` access is provided by the `quarkus-vertx-http` extension.\n"
"If you use `quarkus-resteasy-reactive` or `quarkus-reactive-routes`, the extension will be added automatically."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "You can also receive the Mutiny variant of the Router (`io.vertx.mutiny.ext.web.Router`):"
msgstr "Também pode receber a variante Mutiny do Router ( `io.vertx.mutiny.ext.web.Router`):"

#. type: Title ==
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Intercepting HTTP requests"
msgstr "Interceção de pedidos HTTP"

#: _guides/reactive-routes.adoc
msgid ""
"You can also register filters that would intercept incoming HTTP requests.\n"
"Note that these filters are also applied for servlets, Jakarta REST resources, and reactive routes."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "For example, the following code snippet registers a filter adding an HTTP header:"
msgstr "Por exemplo, o seguinte trecho de código regista um filtro que adiciona um cabeçalho HTTP:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The `RouteFilter#value()` defines the priority used to sort the filters - filters with higher priority are called first."
msgstr "O endereço `RouteFilter#value()` define a prioridade utilizada para ordenar os filtros - os filtros com prioridade mais elevada são chamados em primeiro lugar."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The filter is likely required to call the `next()` method to continue the chain."
msgstr "É provável que o filtro tenha de chamar o método `next()` para continuar a cadeia."

#. type: Title ==
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "HTTP Compression"
msgstr "Compressão HTTP"

#: _guides/reactive-routes.adoc
msgid ""
"The body of an HTTP response is not compressed by default.\n"
"You can enable the HTTP compression support by means of `quarkus.http.enable-compression=true`."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "If compression support is enabled then the response body is compressed if:"
msgstr "Se o suporte de compressão estiver ativado, o corpo da resposta é comprimido se:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "the route method is annotated with `@io.quarkus.vertx.http.Compressed`, or"
msgstr "o método de encaminhamento é anotado com `@io.quarkus.vertx.http.Compressed`, ou"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "the `Content-Type` header is set and the value is a compressed media type as configured via `quarkus.http.compress-media-types`."
msgstr "o cabeçalho `Content-Type` é definido e o valor é um tipo de suporte comprimido, tal como configurado através de `quarkus.http.compress-media-types`."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "The response body is never compressed if:"
msgstr "O corpo da resposta nunca é comprimido se:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "the route method is annotated with `@io.quarkus.vertx.http.Uncompressed`, or"
msgstr "o método de encaminhamento é anotado com `@io.quarkus.vertx.http.Uncompressed`, ou"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "the `Content-Type` header is not set."
msgstr "o cabeçalho `Content-Type` não está definido."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "By default, the following list of media types is compressed: `text/html`, `text/plain`, `text/xml`, `text/css`, `text/javascript` and `application/javascript`."
msgstr "Por predefinição, é comprimida a seguinte lista de tipos de media: `text/html`, `text/plain`, `text/xml`, `text/css`, `text/javascript` e `application/javascript`."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "If the client does not support HTTP compression then the response body is not compressed."
msgstr "Se o cliente não suportar a compressão HTTP, o corpo da resposta não é comprimido."

#. type: Title ==
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Adding OpenAPI and Swagger UI"
msgstr "Adicionar OpenAPI e Swagger UI"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger UI] by using the `quarkus-smallrye-openapi` extension."
msgstr "Pode adicionar suporte para  link:https://www.openapis.org/[OpenAPI] e  link:https://swagger.io/tools/swagger-ui/[Swagger UI] utilizando a extensão `quarkus-smallrye-openapi`."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Add the extension by running this command:"
msgstr "Adicione a extensão executando este comando:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "This is enough to generate a basic OpenAPI schema document from your Vert.x Routes:"
msgstr "Isto é suficiente para gerar um documento de esquema OpenAPI básico a partir das suas rotas Vert.x:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "You will see the generated OpenAPI schema document:"
msgstr "Verá o documento de esquema OpenAPI gerado:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Also see xref:openapi-swaggerui.adoc[the OpenAPI Guide]."
msgstr "Consulte também  link:openapi-swaggerui.html[o Guia OpenAPI]."

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Adding MicroProfile OpenAPI Annotations"
msgstr "Adição de anotações MicroProfile OpenAPI"

#: _guides/reactive-routes.adoc
msgid ""
"You can use link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] to better document your schema,\n"
"for instance, adding header info, or specifying the return type on `void` methods might be useful:"
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Header information about your API."
msgstr "Informações de cabeçalho sobre a sua API."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Defining the response."
msgstr "Definir a resposta."

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "This will generate this OpenAPI schema:"
msgstr "Isto irá gerar este esquema OpenAPI:"

#. type: Title ===
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Using Swagger UI"
msgstr "Utilizar a IU do Swagger"

#: _guides/reactive-routes.adoc
msgid ""
"Swagger UI is included by default when running in `dev` or `test` mode, and can optionally be added to `prod` mode.\n"
"For more information, see the xref:openapi-swaggerui.adoc#dev-mode[Swagger UI] guide."
msgstr ""

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "Navigate to link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] and observe the Swagger UI screen:"
msgstr "Navegue até  link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] e observe o ecrã da IU do Swagger:"

#. type: Plain text
#: _guides/reactive-routes.adoc
#, fuzzy
msgid "image:reactive-routes-guide-screenshot01.png[alt=Swagger UI]"
msgstr "image:reactive-routes-guide-screenshot01.png[alt=Swagger UI]"

#. type: Title ==
#: _guides/reactive-routes.adoc
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusão"

#: _guides/reactive-routes.adoc
msgid ""
"This guide has introduced how you can use reactive routes to define an HTTP endpoint.\n"
"It also describes the structure of the Quarkus HTTP layer and how to write filters."
msgstr ""
