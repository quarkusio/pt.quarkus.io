# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/kafka-schema-registry-avro.adoc:6
#, fuzzy, no-wrap
msgid "Using Apache Kafka with Schema Registry and Avro"
msgstr "Utilização do Apache Kafka com o Schema Registry e o Avro"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:15
#, fuzzy
msgid "This guide shows how your Quarkus application can use Apache Kafka, https://avro.apache.org/docs/current/[Avro] serialized records, and connect to a schema registry (such as the https://docs.confluent.io/platform/current/schema-registry/index.html[Confluent Schema Registry] or https://www.apicur.io/registry/[Apicurio Registry])."
msgstr "Este guia mostra como a sua aplicação Quarkus pode utilizar o Apache Kafka, registos serializados  link:https://avro.apache.org/docs/current/[Avro] e ligar-se a um registo de esquemas (como o  link:https://docs.confluent.io/platform/current/schema-registry/index.html[Confluent Schema Registry] ou o  link:https://www.apicur.io/registry/[Apicurio Registry])."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:18
#, fuzzy
msgid "If you are not familiar with Kafka and Kafka in Quarkus in particular, consider first going through the xref:kafka.adoc[Using Apache Kafka with Reactive Messaging] guide."
msgstr "Se não estiver familiarizado com o Kafka e com o Kafka no Quarkus em particular, considere primeiro consultar o guia  link:kafka.html[Usando o Apache Kafka com mensagens reativas]."

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:19
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:25
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitetura"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:29
#, fuzzy
msgid "In this guide we are going to implement a REST resource, namely `MovieResource`, that will consume movie DTOs and put them in a Kafka topic."
msgstr "Neste guia, vamos implementar um recurso REST, nomeadamente `MovieResource`, que irá consumir DTOs de filmes e colocá-los num tópico do Kafka."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:33
#, fuzzy
msgid "Then, we will implement a consumer that will consume and collect messages from the same topic.  The collected messages will be then exposed by another resource, `ConsumedMovieResource`, via https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events[Server-Sent Events]."
msgstr "De seguida, implementaremos um consumidor que consumirá e recolherá mensagens do mesmo tópico. As mensagens recolhidas serão então expostas por outro recurso, `ConsumedMovieResource`, através de  link:https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events[eventos enviados pelo servidor]."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:37
#, fuzzy
msgid "The _Movies_ will be serialized and deserialized using Avro.  The schema, describing the _Movie_, is stored in Apicurio Registry.  The same concept applies if you are using the Confluent Avro _serde_ and Confluent Schema Registry."
msgstr "Os _Filmes_ serão serializados e deserializados utilizando Avro. O esquema, que descreve o _filme_, é armazenado no Apicurio Registry. O mesmo conceito aplica-se se estiver a utilizar o _serde_ Confluent Avro e o Confluent Schema Registry."

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:38
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solução"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:42
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Recomendamos que siga as instruções nas secções seguintes e crie a aplicação passo a passo. No entanto, pode ir diretamente para o exemplo completo."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:44
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clonar o repositório Git: `git clone {quickstarts-clone-url}`, ou descarregar um {quickstarts-archive-url}[arquivo]."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:46
#, fuzzy
msgid "The solution is located in the `kafka-avro-schema-quickstart` link:{quickstarts-tree-url}/kafka-avro-schema-quickstart[directory]."
msgstr "A solução está localizada no  link:{quickstarts-tree-url}/kafka-avro-schema-quickstart[diretório] `kafka-avro-schema-quickstart`."

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:47
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Criar o projeto Maven"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:50
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "Primeiro, precisamos de um novo projeto. Crie um novo projeto com o seguinte comando:"

#. type: delimited block =
#: upstream/_guides/kafka-schema-registry-avro.adoc:60
#, fuzzy
msgid "If you use Confluent Schema Registry, you don't need the `quarkus-apicurio-registry-avro` extension.  Instead, you need the `quarkus-confluent-registry-avro` extension and a few more dependencies.  See xref:confluent[Using the Confluent Schema Registry] for details."
msgstr "Se utilizar o Confluent Schema Registry, não precisa da extensão `quarkus-apicurio-registry-avro`. Em vez disso, você precisa da extensão `quarkus-confluent-registry-avro` e de mais algumas dependências. Consulte  link:#confluent[Usar o Confluent Schema Registry] para obter detalhes."

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:62
#, fuzzy, no-wrap
msgid "Avro schema"
msgstr "Esquema Avro"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:67
#, fuzzy
msgid "Apache Avro is a data serialization system. Data structures are described using schemas.  The first thing we need to do is to create a schema describing the `Movie` structure.  Create a file called `src/main/avro/movie.avsc` with the schema for our record (Kafka message):"
msgstr "O Apache Avro é um sistema de serialização de dados. As estruturas de dados são descritas através de esquemas. A primeira coisa que precisamos de fazer é criar um esquema que descreva a estrutura `Movie`. Crie um ficheiro chamado `src/main/avro/movie.avsc` com o esquema para o nosso registo (mensagem Kafka):"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:84
#, no-wrap
msgid ""
"{\n"
"  \"namespace\": \"org.acme.kafka.quarkus\",\n"
"  \"type\": \"record\",\n"
"  \"name\": \"Movie\",\n"
"  \"fields\": [\n"
"    {\n"
"      \"name\": \"title\",\n"
"      \"type\": \"string\"\n"
"    },\n"
"    {\n"
"      \"name\": \"year\",\n"
"      \"type\": \"int\"\n"
"    }\n"
"  ]\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:87
#, fuzzy
msgid "If you build the project with:"
msgstr "Se construir o projeto com:"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:92
#, fuzzy
msgid "the `movies.avsc` will get compiled to a `Movie.java` file placed in the `target/generated-sources/avsc` directory."
msgstr "o `movies.avsc` será compilado para um ficheiro `Movie.java` colocado no diretório `target/generated-sources/avsc`."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:95
#, fuzzy
msgid "Take a look at the https://avro.apache.org/docs/current/spec.html#schemas[Avro specification] to learn more about the Avro syntax and supported types."
msgstr "Consulte a  link:https://avro.apache.org/docs/current/spec.html#schemas[especificação Avro] para saber mais sobre a sintaxe Avro e os tipos suportados."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:97
#, fuzzy
msgid "With Quarkus, there's no need to use a specific Maven plugin to process the Avro schema, this is all done for you by the `quarkus-avro` extension!"
msgstr "Com o Quarkus, não há necessidade de utilizar um plugin Maven específico para processar o esquema Avro, tudo isto é feito pela extensão `quarkus-avro`!"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:99
#, fuzzy
msgid "If you run the project with:"
msgstr "Se o projeto for executado com:"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:104
#, fuzzy
msgid "the changes you do to the schema file will be automatically applied to the generated Java files."
msgstr "as alterações que fizer ao ficheiro de esquema serão automaticamente aplicadas aos ficheiros Java gerados."

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:105
#, fuzzy, no-wrap
msgid "The `Movie` producer"
msgstr "O produtor `Movie`"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:108
#, fuzzy
msgid "Having defined the schema, we can now jump to implementing the `MovieResource`."
msgstr "Uma vez definido o esquema, podemos agora passar à implementação do `MovieResource`."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:111
#, fuzzy
msgid "Let's open the `MovieResource`, inject an https://quarkus.io/blog/reactive-messaging-emitter/[`Emitter`] of `Movie` DTO and implement a `@POST` method that consumes `Movie` and sends it through the `Emitter`:"
msgstr "Vamos abrir o `MovieResource`, injetar um  link:https://quarkus.io/blog/reactive-messaging-emitter/[`Emitter`] de `Movie` DTO e implementar um método `@POST` que consome `Movie` e o envia através do `Emitter`:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:115
#: upstream/_guides/kafka-schema-registry-avro.adoc:182
#: upstream/_guides/kafka-schema-registry-avro.adoc:442
#: upstream/_guides/kafka-schema-registry-avro.adoc:570
#, no-wrap
msgid "package org.acme.kafka;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:120
#, no-wrap
msgid ""
"import org.acme.kafka.quarkus.Movie;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Emitter;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:124
#, no-wrap
msgid ""
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:128
#, no-wrap
msgid ""
"@Path(\"/movies\")\n"
"public class MovieResource {\n"
"    private static final Logger LOGGER = Logger.getLogger(MovieResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:131
#, no-wrap
msgid ""
"    @Channel(\"movies\")\n"
"    Emitter<Movie> emitter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:138
#, no-wrap
msgid ""
"    @POST\n"
"    public Response enqueueMovie(Movie movie) {\n"
"        LOGGER.infof(\"Sending movie %s to Kafka\", movie.getTitle());\n"
"        emitter.send(movie);\n"
"        return Response.accepted().build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:140
#: upstream/_guides/kafka-schema-registry-avro.adoc:530
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:144
#, fuzzy
msgid "Now, we need to _map_ the `movies` channel (the `Emitter` emits to this channel) to a Kafka topic.  To achieve this, edit the `application.properties` file, and add the following content:"
msgstr "Agora, precisamos _mapear_ o canal `movies` (o `Emitter` emite para esse canal) para um tópico do Kafka. Para isso, edite o arquivo `application.properties` e adicione o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:149
#, no-wrap
msgid ""
"# set the connector for the outgoing channel to `smallrye-kafka`\n"
"mp.messaging.outgoing.movies.connector=smallrye-kafka\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:152
#, no-wrap
msgid ""
"# set the topic name for the channel to `movies`\n"
"mp.messaging.outgoing.movies.topic=movies\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:155
#, no-wrap
msgid ""
"# automatically register the schema with the registry, if not present\n"
"mp.messaging.outgoing.movies.apicurio.registry.auto-register=true\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/kafka-schema-registry-avro.adoc:162
#, fuzzy
msgid "You might have noticed that we didn't define the `value.serializer`.  That's because Quarkus can xref:kafka.adoc#serialization-autodetection[autodetect] that `io.apicurio.registry.serde.avro.AvroKafkaSerializer` is appropriate here, based on the `@Channel` declaration, structure of the `Movie` type, and presence of the Apicurio Registry libraries.  We still have to define the `apicurio.registry.auto-register` property."
msgstr "Deve ter reparado que não definimos a propriedade `value.serializer`. Isto porque o Quarkus pode  link:kafka.html#serialization-autodetection[detetar automaticamente] que `io.apicurio.registry.serde.avro.AvroKafkaSerializer` é apropriado aqui, com base na declaração `@Channel`, na estrutura do tipo `Movie` e na presença das bibliotecas do Registo do Apicurio. Ainda temos de definir a propriedade `apicurio.registry.auto-register`."

#. type: delimited block =
#: upstream/_guides/kafka-schema-registry-avro.adoc:168
#, fuzzy
msgid "If you use Confluent Schema Registry, you don't have to configure `value.serializer` either.  It is also detected automatically.  The Confluent Schema Registry analogue of `apicurio.registry.auto-register` is called `auto.register.schemas`.  It defaults to `true`, so it doesn't have to be configured in this example.  It can be explicitly set to `false` if you want to disable automatic schema registration."
msgstr "Se utilizar o Confluent Schema Registry, também não tem de configurar `value.serializer`. Este também é detectado automaticamente. O análogo do Confluent Schema Registry de `apicurio.registry.auto-register` chama-se `auto.register.schemas`. A predefinição é `true`, pelo que não tem de ser configurado neste exemplo. Pode ser definido explicitamente para `false` se pretender desativar o registo automático do esquema."

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:170
#, fuzzy, no-wrap
msgid "The `Movie` consumer"
msgstr "O consumidor `Movie`"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:175
#, fuzzy
msgid "So, we can write records into Kafka containing our `Movie` data.  That data is serialized using Avro.  Now, it's time to implement a consumer for them."
msgstr "Assim, podemos escrever registos no Kafka que contêm os nossos dados `Movie`. Esses dados são serializados usando o Avro. Agora, é hora de implementar um consumidor para eles."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:178
#, fuzzy
msgid "Let's create `ConsumedMovieResource` that will consume `Movie` messages from the `movies-from-kafka` channel and will expose it via Server-Sent Events:"
msgstr "Vamos criar `ConsumedMovieResource` que consumirá mensagens `Movie` do canal `movies-from-kafka` e as exporá por meio de eventos enviados pelo servidor:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:188
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:192
#, no-wrap
msgid ""
"import org.acme.kafka.quarkus.Movie;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.jboss.resteasy.reactive.RestStreamElementType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:194
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:198
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"@Path(\"/consumed-movies\")\n"
"public class ConsumedMovieResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:201
#, no-wrap
msgid ""
"    @Channel(\"movies-from-kafka\")\n"
"    Multi<Movie> movies;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:209
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.SERVER_SENT_EVENTS)\n"
"    @RestStreamElementType(MediaType.TEXT_PLAIN)\n"
"    public Multi<String> stream() {\n"
"        return movies.map(movie -> String.format(\"'%s' from %s\", movie.getTitle(), movie.getYear()));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:213
#, fuzzy
msgid "The last bit of the application's code is the configuration of the `movies-from-kafka` channel in `application.properties`:"
msgstr "A última parte do código da aplicação é a configuração do canal `movies-from-kafka` em `application.properties`:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:218
#, no-wrap
msgid ""
"# set the connector for the incoming channel to `smallrye-kafka`\n"
"mp.messaging.incoming.movies-from-kafka.connector=smallrye-kafka\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:221
#, no-wrap
msgid ""
"# set the topic name for the channel to `movies`\n"
"mp.messaging.incoming.movies-from-kafka.topic=movies\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:224
#, no-wrap
msgid ""
"# disable auto-commit, Reactive Messaging handles it itself\n"
"mp.messaging.incoming.movies-from-kafka.enable.auto.commit=false\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:226
#, no-wrap
msgid "mp.messaging.incoming.movies-from-kafka.auto.offset.reset=earliest\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/kafka-schema-registry-avro.adoc:233
#, fuzzy
msgid "You might have noticed that we didn't define the `value.deserializer`.  That's because Quarkus can xref:kafka.adoc#serialization-autodetection[autodetect] that `io.apicurio.registry.serde.avro.AvroKafkaDeserializer` is appropriate here, based on the `@Channel` declaration, structure of the `Movie` type, and presence of the Apicurio Registry libraries.  We don't have to define the `apicurio.registry.use-specific-avro-reader` property either, that is also configured automatically."
msgstr "Deve ter reparado que não definimos a propriedade `value.deserializer`. Isto porque o Quarkus pode  link:kafka.html#serialization-autodetection[detetar automaticamente] que `io.apicurio.registry.serde.avro.AvroKafkaDeserializer` é apropriado aqui, com base na declaração `@Channel`, na estrutura do tipo `Movie` e na presença das bibliotecas do Registo do Apicurio. Também não é necessário definir a propriedade `apicurio.registry.use-specific-avro-reader`, que também é configurada automaticamente."

#. type: delimited block =
#: upstream/_guides/kafka-schema-registry-avro.adoc:236
#, fuzzy
msgid "If you use Confluent Schema Registry, you don't have to configure `value.deserializer` or `specific.avro.reader` either.  They are both detected automatically."
msgstr "Se utilizar o Confluent Schema Registry, também não tem de configurar `value.deserializer` ou `specific.avro.reader`. Ambos são detectados automaticamente."

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:238
#, fuzzy, no-wrap
msgid "Running the application"
msgstr "Executar a aplicação"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:241
#, fuzzy
msgid "Start the application in dev mode:"
msgstr "Iniciar a aplicação em modo de desenvolvimento:"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:246
#, fuzzy
msgid "Kafka broker and Apicurio Registry instance are started automatically thanks to Dev Services.  See xref:kafka-dev-services.adoc[Dev Services for Kafka] and xref:apicurio-registry-dev-services.adoc[Dev Services for Apicurio Registry] for more details."
msgstr "O broker Kafka e a instância do Apicurio Registry são iniciados automaticamente graças aos Dev Services. Consulte Dev  link:kafka-dev-services.html[Services for Kafka] e Dev  link:apicurio-registry-dev-services.html[Services for Apicurio Registry] para obter mais detalhes."

#. type: delimited block =
#: upstream/_guides/kafka-schema-registry-avro.adoc:251
#, fuzzy
msgid "You might have noticed that we didn't configure the schema registry URL anywhere.  This is because Dev Services for Apicurio Registry configures all Kafka channels in SmallRye Reactive Messaging to use the automatically started registry instance."
msgstr "Você deve ter notado que não configuramos a URL do registro do esquema em nenhum lugar. Isso ocorre porque o Dev Services for Apicurio Registry configura todos os canais Kafka no SmallRye Reactive Messaging para usar a instância de registro iniciada automaticamente."

#. type: delimited block =
#: upstream/_guides/kafka-schema-registry-avro.adoc:254
#, fuzzy
msgid "Apicurio Registry, in addition to its native API, also exposes an endpoint that is API-compatible with Confluent Schema Registry.  Therefore, this automatic configuration works both for Apicurio Registry serde and Confluent Schema Registry serde."
msgstr "O Apicurio Registry, para além da sua API nativa, também expõe um endpoint que é compatível com a API do Confluent Schema Registry. Portanto, esta configuração automática funciona tanto para o Apicurio Registry serde como para o Confluent Schema Registry serde."

#. type: delimited block =
#: upstream/_guides/kafka-schema-registry-avro.adoc:257
#, fuzzy
msgid "However, note that there's no Dev Services support for running Confluent Schema Registry itself.  If you want to use a running instance of Confluent Schema Registry, configure its URL, together with the URL of a Kafka broker:"
msgstr "No entanto, tenha em atenção que não existe suporte dos Dev Services para executar o próprio Confluent Schema Registry. Se pretender utilizar uma instância em execução do Confluent Schema Registry, configure o seu URL, juntamente com o URL de um corretor Kafka:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:262
#, no-wrap
msgid ""
"kafka.bootstrap.servers=PLAINTEXT://localhost:9092\n"
"mp.messaging.connector.smallrye-kafka.schema.registry.url=http://localhost:8081\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/kafka-schema-registry-avro.adoc:266
#, fuzzy
msgid "In the second terminal, query the `ConsumedMovieResource` resource with `curl`:"
msgstr "No segundo terminal, consultar o recurso `ConsumedMovieResource` com `curl`:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:270
#, no-wrap
msgid "curl -N http://localhost:8080/consumed-movies\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:273
#, fuzzy
msgid "In the third one, post a few movies:"
msgstr "Na terceira, publique alguns filmes:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:280
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"  --request POST \\\n"
"  --data '{\"title\":\"The Shawshank Redemption\",\"year\":1994}' \\\n"
"  http://localhost:8080/movies\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:285
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"  --request POST \\\n"
"  --data '{\"title\":\"The Godfather\",\"year\":1972}' \\\n"
"  http://localhost:8080/movies\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:290
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"  --request POST \\\n"
"  --data '{\"title\":\"The Dark Knight\",\"year\":2008}' \\\n"
"  http://localhost:8080/movies\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:295
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"  --request POST \\\n"
"  --data '{\"title\":\"12 Angry Men\",\"year\":1957}' \\\n"
"  http://localhost:8080/movies\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:298
#, fuzzy
msgid "Observe what is printed in the second terminal. You should see something along the lines of:"
msgstr "Observe o que é impresso no segundo terminal. Deverá ver algo do género de:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:302
#, no-wrap
msgid "data:'The Shawshank Redemption' from 1994\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:304
#, no-wrap
msgid "data:'The Godfather' from 1972\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:306
#, no-wrap
msgid "data:'The Dark Knight' from 2008\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:308
#, no-wrap
msgid "data:'12 Angry Men' from 1957\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:310
#, fuzzy, no-wrap
msgid "Running in JVM or Native mode"
msgstr "Execução em modo JVM ou nativo"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:314
#, fuzzy
msgid "When not running in dev or test mode, you will need to start your own Kafka broker and Apicurio Registry.  The easiest way to get them running is to use `docker-compose` to start the appropriate containers."
msgstr "Quando não estiver a correr em modo de desenvolvimento ou teste, terá de iniciar o seu próprio corretor Kafka e o Registo Apicurio. A forma mais fácil de os pôr a funcionar é utilizar `docker-compose` para iniciar os contentores apropriados."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:317
#, fuzzy
msgid "If you use Confluent Schema Registry, you already have a Kafka broker and Confluent Schema Registry instance running and configured.  You can ignore the `docker-compose` instructions here, as well as the Apicurio Registry configuration."
msgstr "Se utilizar o Confluent Schema Registry, já tem um corretor Kafka e uma instância do Confluent Schema Registry em execução e configurados. Pode ignorar as instruções de `docker-compose` aqui, bem como a configuração do Apicurio Registry."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:319
#, fuzzy
msgid "Create a `docker-compose.yaml` file at the root of the project with the following content:"
msgstr "Crie um ficheiro `docker-compose.yaml` na raiz do projeto com o seguinte conteúdo:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:323
#, no-wrap
msgid "version: '2'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:325
#, no-wrap
msgid "services:\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:336
#, no-wrap
msgid ""
"  zookeeper:\n"
"    image: quay.io/strimzi/kafka:0.22.1-kafka-2.7.0\n"
"    command: [\n"
"        \"sh\", \"-c\",\n"
"        \"bin/zookeeper-server-start.sh config/zookeeper.properties\"\n"
"    ]\n"
"    ports:\n"
"      - \"2181:2181\"\n"
"    environment:\n"
"      LOG_DIR: /tmp/logs\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:352
#, no-wrap
msgid ""
"  kafka:\n"
"    image: quay.io/strimzi/kafka:0.22.1-kafka-2.7.0\n"
"    command: [\n"
"        \"sh\", \"-c\",\n"
"        \"bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}\"\n"
"    ]\n"
"    depends_on:\n"
"      - zookeeper\n"
"    ports:\n"
"      - \"9092:9092\"\n"
"    environment:\n"
"      LOG_DIR: \"/tmp/logs\"\n"
"      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092\n"
"      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092\n"
"      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:361
#, no-wrap
msgid ""
"  schema-registry:\n"
"    image: apicurio/apicurio-registry-mem:2.4.2.Final\n"
"    ports:\n"
"      - 8081:8080\n"
"    depends_on:\n"
"      - kafka\n"
"    environment:\n"
"      QUARKUS_PROFILE: prod\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:364
#, fuzzy
msgid "Before starting the application, let's first start the Kafka broker and Apicurio Registry:"
msgstr "Antes de iniciar a aplicação, vamos primeiro iniciar o broker Kafka e o Apicurio Registry:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:368
#, no-wrap
msgid "docker-compose up\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:372
#, fuzzy
msgid "To stop the containers, use `docker-compose down`. You can also clean up the containers with `docker-compose rm`"
msgstr "Para parar os contentores, utilize `docker-compose down`. Também é possível limpar os contentores com `docker-compose rm`"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:374
#, fuzzy
msgid "You can build the application with:"
msgstr "Pode construir a aplicação com:"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:378
#, fuzzy
msgid "And run it in JVM mode with:"
msgstr "E execute-o no modo JVM com:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:382
#, no-wrap
msgid "java -Dmp.messaging.connector.smallrye-kafka.apicurio.registry.url=http://localhost:8081/apis/registry/v2 -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:386
#, fuzzy
msgid "By default, the application tries to connect to a Kafka broker listening at `localhost:9092`.  You can configure the bootstrap server using: `java -Dkafka.bootstrap.servers=\\... -jar target/quarkus-app/quarkus-run.jar`"
msgstr "Por predefinição, a aplicação tenta ligar-se a um corretor Kafka que está a ouvir em `localhost:9092`. Pode configurar o servidor bootstrap utilizando: `java -Dkafka.bootstrap.servers=... -jar target/quarkus-app/quarkus-run.jar`"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:388
#, fuzzy
msgid "Specifying the registry URL on the command line is not very convenient, so you can add a configuration property only for the `prod` profile:"
msgstr "Especificar o URL do registo na linha de comandos não é muito conveniente, pelo que pode adicionar uma propriedade de configuração apenas para o perfil `prod`:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:392
#, no-wrap
msgid "%prod.mp.messaging.connector.smallrye-kafka.apicurio.registry.url=http://localhost:8081/apis/registry/v2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:395
#, fuzzy
msgid "You can build a native executable with:"
msgstr "Pode construir um executável nativo com:"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:399
#, fuzzy
msgid "and run it with:"
msgstr "e executá-lo com:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:403
#, no-wrap
msgid "./target/kafka-avro-schema-quickstart-1.0.0-SNAPSHOT-runner -Dkafka.bootstrap.servers=localhost:9092\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:405
#, fuzzy, no-wrap
msgid "Testing the application"
msgstr "Testar a aplicação"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:410
#, fuzzy
msgid "As mentioned above, Dev Services for Kafka and Apicurio Registry automatically start and configure a Kafka broker and Apicurio Registry instance in dev mode and for tests.  Hence, we don't have to set up Kafka and Apicurio Registry ourselves.  We can just focus on writing the test."
msgstr "Como mencionado acima, os Dev Services for Kafka e Apicurio Registry iniciam e configuram automaticamente um broker Kafka e uma instância do Apicurio Registry em modo de desenvolvimento e para testes. Portanto, não precisamos configurar o Kafka e o Apicurio Registry nós mesmos. Podemos nos concentrar apenas em escrever o teste."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:412
#, fuzzy
msgid "First, let's add test dependencies on REST Client and Awaitility to the build file:"
msgstr "Primeiro, vamos adicionar as dependências de teste do Cliente REST e do Awaitility ao ficheiro de compilação:"

#. type: Block title
#: upstream/_guides/kafka-schema-registry-avro.adoc:414
#: upstream/_guides/kafka-schema-registry-avro.adoc:543
#: upstream/_guides/kafka-schema-registry-avro.adoc:634
#: upstream/_guides/kafka-schema-registry-avro.adoc:733
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:427
#, no-wrap
msgid ""
"<!-- we'll use Jakarta REST Client for talking to the SSE endpoint -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-rest-client-reactive</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>org.awaitility</groupId>\n"
"    <artifactId>awaitility</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/kafka-schema-registry-avro.adoc:430
#: upstream/_guides/kafka-schema-registry-avro.adoc:560
#: upstream/_guides/kafka-schema-registry-avro.adoc:687
#: upstream/_guides/kafka-schema-registry-avro.adoc:773
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:434
#, no-wrap
msgid ""
"testImplementation(\"io.quarkus:quarkus-rest-client-reactive\")\n"
"testImplementation(\"org.awaitility:awaitility\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:438
#, fuzzy
msgid "In the test, we will send movies in a loop and check if the `ConsumedMovieResource` returns what we send."
msgstr "No teste, enviaremos filmes num ciclo e verificaremos se o `ConsumedMovieResource` devolve o que enviámos."

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:449
#, no-wrap
msgid ""
"import io.quarkus.test.common.QuarkusTestResource;\n"
"import io.quarkus.test.common.http.TestHTTPResource;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.restassured.http.ContentType;\n"
"import org.hamcrest.Matchers;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:459
#, no-wrap
msgid ""
"import jakarta.ws.rs.client.Client;\n"
"import jakarta.ws.rs.client.ClientBuilder;\n"
"import jakarta.ws.rs.client.WebTarget;\n"
"import jakarta.ws.rs.sse.SseEventSource;\n"
"import java.net.URI;\n"
"import java.util.List;\n"
"import java.util.concurrent.CopyOnWriteArrayList;\n"
"import java.util.concurrent.ExecutorService;\n"
"import java.util.concurrent.Executors;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:465
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static java.util.concurrent.TimeUnit.MILLISECONDS;\n"
"import static java.util.concurrent.TimeUnit.SECONDS;\n"
"import static org.awaitility.Awaitility.await;\n"
"import static org.hamcrest.MatcherAssert.assertThat;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:468
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class MovieResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:471
#, no-wrap
msgid ""
"    @TestHTTPResource(\"/consumed-movies\")\n"
"    URI consumedMovies;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:477
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() throws InterruptedException {\n"
"        // create a client for `ConsumedMovieResource` and collect the consumed resources in a list\n"
"        Client client = ClientBuilder.newClient();\n"
"        WebTarget target = client.target(consumedMovies);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:479
#, no-wrap
msgid "        List<String> received = new CopyOnWriteArrayList<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:482
#, no-wrap
msgid ""
"        SseEventSource source = SseEventSource.target(target).build();\n"
"        source.register(inboundSseEvent -> received.add(inboundSseEvent.readData()));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:485
#, no-wrap
msgid ""
"        // in a separate thread, feed the `MovieResource`\n"
"        ExecutorService movieSender = startSendingMovies();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:487
#, no-wrap
msgid "        source.open();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:493
#, no-wrap
msgid ""
"        // check if, after at most 5 seconds, we have at least 2 items collected, and they are what we expect\n"
"        await().atMost(5, SECONDS).until(() -> received.size() >= 2);\n"
"        assertThat(received, Matchers.hasItems(\"'The Shawshank Redemption' from 1994\",\n"
"                \"'12 Angry Men' from 1957\"));\n"
"        source.close();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:498
#, no-wrap
msgid ""
"        // shutdown the executor that is feeding the `MovieResource`\n"
"        movieSender.shutdownNow();\n"
"        movieSender.awaitTermination(5, SECONDS);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:510
#, no-wrap
msgid ""
"    private ExecutorService startSendingMovies() {\n"
"        ExecutorService executorService = Executors.newSingleThreadExecutor();\n"
"        executorService.execute(() -> {\n"
"            while (true) {\n"
"                given()\n"
"                        .contentType(ContentType.JSON)\n"
"                        .body(\"{\\\"title\\\":\\\"The Shawshank Redemption\\\",\\\"year\\\":1994}\")\n"
"                .when()\n"
"                        .post(\"/movies\")\n"
"                .then()\n"
"                        .statusCode(202);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:518
#, no-wrap
msgid ""
"                given()\n"
"                        .contentType(ContentType.JSON)\n"
"                        .body(\"{\\\"title\\\":\\\"12 Angry Men\\\",\\\"year\\\":1957}\")\n"
"                .when()\n"
"                        .post(\"/movies\")\n"
"                .then()\n"
"                        .statusCode(202);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:528
#, no-wrap
msgid ""
"                try {\n"
"                    Thread.sleep(200L);\n"
"                } catch (InterruptedException e) {\n"
"                    break;\n"
"                }\n"
"            }\n"
"        });\n"
"        return executorService;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:535
#, fuzzy
msgid "We modified the `MovieResourceTest` that was generated together with the project. This test class has a subclass, `NativeMovieResourceIT`, that runs the same test against the native executable.  To run it, execute:"
msgstr "Modificámos o `MovieResourceTest` que foi gerado juntamente com o projeto. Essa classe de teste possui uma subclasse, `NativeMovieResourceIT`, que executa o mesmo teste contra o executável nativo. Para executá-la, execute:"

#. type: Title ===
#: upstream/_guides/kafka-schema-registry-avro.adoc:538
#, fuzzy, no-wrap
msgid "Manual setup"
msgstr "Configuração manual"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:541
#, fuzzy
msgid "If we couldn't use Dev Services and wanted to start a Kafka broker and Apicurio Registry instance manually, we would define a xref:getting-started-testing.adoc#quarkus-test-resource[QuarkusTestResourceLifecycleManager]."
msgstr "Se não pudéssemos utilizar os Dev Services e quiséssemos iniciar manualmente um corretor Kafka e uma instância do Apicurio Registry, definiríamos um  link:getting-started-testing.html#quarkus-test-resource[QuarkusTestResourceLifecycleManager]."

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:557
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.strimzi</groupId>\n"
"    <artifactId>strimzi-test-container</artifactId>\n"
"    <version>0.22.1</version>\n"
"    <scope>test</scope>\n"
"    <exclusions>\n"
"        <exclusion>\n"
"            <groupId>org.apache.logging.log4j</groupId>\n"
"            <artifactId>log4j-core</artifactId>\n"
"        </exclusion>\n"
"    </exclusions>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:565
#, no-wrap
msgid ""
"testImplementation(\"io.strimzi:strimzi-test-container:0.22.1\") {\n"
"    exclude group: \"org.apache.logging.log4j\", module: \"log4j-core\"\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:573
#, no-wrap
msgid ""
"import java.util.HashMap;\n"
"import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:575
#, no-wrap
msgid "import org.testcontainers.containers.GenericContainer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:578
#, no-wrap
msgid ""
"import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n"
"import io.strimzi.StrimziKafkaContainer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:580
#, no-wrap
msgid "public class KafkaAndSchemaRegistryTestResource implements QuarkusTestResourceLifecycleManager {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:582
#, no-wrap
msgid "    private final StrimziKafkaContainer kafka = new StrimziKafkaContainer();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:584
#, no-wrap
msgid "    private GenericContainer<?> registry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:598
#, no-wrap
msgid ""
"    @Override\n"
"    public Map<String, String> start() {\n"
"        kafka.start();\n"
"        registry = new GenericContainer<>(\"apicurio/apicurio-registry-mem:2.4.2.Final\")\n"
"                .withExposedPorts(8080)\n"
"                .withEnv(\"QUARKUS_PROFILE\", \"prod\");\n"
"        registry.start();\n"
"        Map<String, String> properties = new HashMap<>();\n"
"        properties.put(\"mp.messaging.connector.smallrye-kafka.apicurio.registry.url\",\n"
"                \"http://\" + registry.getHost() + \":\" + registry.getMappedPort(8080) + \"/apis/registry/v2\");\n"
"        properties.put(\"kafka.bootstrap.servers\", kafka.getBootstrapServers());\n"
"        return properties;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:605
#, no-wrap
msgid ""
"    @Override\n"
"    public void stop() {\n"
"        registry.stop();\n"
"        kafka.stop();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:614
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(KafkaAndSchemaRegistryTestResource.class)\n"
"public class MovieResourceTest {\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:617
#, fuzzy, no-wrap
msgid "Using compatible versions of the Apicurio Registry"
msgstr "Utilizar versões compatíveis do Registo Apicurio"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:622
#, fuzzy
msgid "The `quarkus-apicurio-registry-avro` extension depends on recent versions of Apicurio Registry client, and most versions of Apicurio Registry server and client are backwards compatible.  For some you need to make sure that the client used by Serdes is compatible with the server."
msgstr "A extensão `quarkus-apicurio-registry-avro` depende de versões recentes do cliente Apicurio Registry, e a maioria das versões do servidor e do cliente Apicurio Registry são compatíveis com as versões anteriores. Para algumas versões, é necessário certificar-se de que o cliente utilizado pelo Serdes é compatível com o servidor."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:624
#, fuzzy
msgid "For example, with Apicurio dev service if you set the image name to use version `2.1.5.Final`:"
msgstr "Por exemplo, com o serviço Apicurio dev, se definir o nome da imagem para utilizar a versão `2.1.5.Final`:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:628
#, no-wrap
msgid "quarkus.apicurio-registry.devservices.image-name=quay.io/apicurio/apicurio-registry-mem:2.1.5.Final\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:632
#, fuzzy
msgid "You need to make sure that `apicurio-registry-serdes-avro-serde` dependency and the REST client `apicurio-common-rest-client-vertx` dependency are set to compatible versions:"
msgstr "É necessário certificar-se de que a dependência `apicurio-registry-serdes-avro-serde` e a dependência do cliente REST `apicurio-common-rest-client-vertx` estão definidas para versões compatíveis:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:684
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-apicurio-registry-avro</artifactId>\n"
"    <exclusions>\n"
"        <exclusion>\n"
"            <groupId>io.apicurio</groupId>\n"
"            <artifactId>apicurio-common-rest-client-vertx</artifactId>\n"
"        </exclusion>\n"
"        <exclusion>\n"
"            <groupId>io.apicurio</groupId>\n"
"            <artifactId>apicurio-registry-serdes-avro-serde</artifactId>\n"
"        </exclusion>\n"
"    </exclusions>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.apicurio</groupId>\n"
"    <artifactId>apicurio-registry-client</artifactId>\n"
"    <version>2.1.5.Final</version>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.apicurio</groupId>\n"
"    <artifactId>apicurio-registry-common</artifactId>\n"
"    <version>2.1.5.Final</version>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.apicurio</groupId>\n"
"    <artifactId>apicurio-registry-serdes-avro-serde</artifactId>\n"
"    <version>2.1.5.Final</version>\n"
"    <exclusions>\n"
"        <exclusion>\n"
"            <groupId>io.apicurio</groupId>\n"
"            <artifactId>apicurio-common-rest-client-jdk</artifactId>\n"
"        </exclusion>\n"
"        <exclusion>\n"
"            <groupId>io.apicurio</groupId>\n"
"            <artifactId>apicurio-registry-client</artifactId>\n"
"        </exclusion>\n"
"        <exclusion>\n"
"            <groupId>io.apicurio</groupId>\n"
"            <artifactId>apicurio-registry-common</artifactId>\n"
"        </exclusion>\n"
"    </exclusions>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.apicurio</groupId>\n"
"    <artifactId>apicurio-common-rest-client-vertx</artifactId>\n"
"    <version>0.1.5.Final</version>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:691
#, no-wrap
msgid ""
"dependencies {\n"
"    implementation(platform(\"{quarkus-platform-groupid}:quarkus-bom:2.12.3.Final\"))\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:693
#, no-wrap
msgid "    ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:719
#, no-wrap
msgid ""
"    implementation(\"io.quarkus:quarkus-apicurio-registry-avro\")\n"
"    implementation(\"io.apicurio:apicurio-registry-serdes-avro-serde\") {\n"
"        exclude group: \"io.apicurio\", module: \"apicurio-common-rest-client-jdk\"\n"
"        exclude group: \"io.apicurio\", module: \"apicurio-registry-client\"\n"
"        exclude group: \"io.apicurio\", module: \"apicurio-registry-common\"\n"
"        version {\n"
"            strictly \"2.1.5.Final\"\n"
"        }\n"
"    }\n"
"    implementation(\"io.apicurio:apicurio-registry-client\") {\n"
"        version {\n"
"            strictly \"2.1.5.Final\"\n"
"        }\n"
"    }\n"
"    implementation(\"io.apicurio:apicurio-registry-common\") {\n"
"        version {\n"
"            strictly \"2.1.5.Final\"\n"
"        }\n"
"    }\n"
"    implementation(\"io.apicurio:apicurio-common-rest-client-vertx\") {\n"
"        version {\n"
"            strictly \"0.1.5.Final\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:722
#, fuzzy
msgid "Known previous compatible versions for `apicurio-registry-client` and `apicurio-common-rest-client-vertx` are the following"
msgstr "As versões anteriores compatíveis conhecidas para `apicurio-registry-client` e `apicurio-common-rest-client-vertx` são as seguintes"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:724
#, fuzzy
msgid "`apicurio-registry-client` 2.1.5.Final with `apicurio-common-rest-client-vertx` 0.1.5.Final"
msgstr "`apicurio-registry-client` 2.1.5.Final com `apicurio-common-rest-client-vertx` 0.1.5.Final"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:725
#, fuzzy
msgid "`apicurio-registry-client` 2.3.1.Final with `apicurio-common-rest-client-vertx` 0.1.13.Final"
msgstr "`apicurio-registry-client` 2.3.1.Final com `apicurio-common-rest-client-vertx` 0.1.13.Final"

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:727
#, fuzzy, no-wrap
msgid "Using the Confluent Schema Registry"
msgstr "Utilizar o Registo de Esquemas Confluentes"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:731
#, fuzzy
msgid "If you want to use the Confluent Schema Registry, you need the `quarkus-confluent-registry-avro` extension, instead of the `quarkus-apicurio-registry-avro` extension.  Also, you need to add a few dependencies and a custom Maven repository to your `pom.xml` / `build.gradle` file:"
msgstr "Se pretender utilizar o Confluent Schema Registry, necessita da extensão `quarkus-confluent-registry-avro`, em vez da extensão `quarkus-apicurio-registry-avro`. Além disso, é necessário adicionar algumas dependências e um repositório Maven personalizado ao seu ficheiro `pom.xml` / `build.gradle`:"

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:759
#, no-wrap
msgid ""
"<dependencies>\n"
"    ...\n"
"    <!-- the extension -->\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-confluent-registry-avro</artifactId>\n"
"    </dependency>\n"
"    <!-- Confluent registry libraries use Jakarta REST client -->\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-rest-client-reactive</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"        <groupId>io.confluent</groupId>\n"
"        <artifactId>kafka-avro-serializer</artifactId>\n"
"        <version>7.2.0</version>\n"
"        <exclusions>\n"
"            <exclusion>\n"
"                <groupId>jakarta.ws.rs</groupId>\n"
"                <artifactId>jakarta.ws.rs-api</artifactId>\n"
"            </exclusion>\n"
"        </exclusions>\n"
"    </dependency>\n"
"</dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:770
#, no-wrap
msgid ""
"<repositories>\n"
"    <!-- io.confluent:kafka-avro-serializer is only available from this repository: -->\n"
"    <repository>\n"
"        <id>confluent</id>\n"
"        <url>https://packages.confluent.io/maven/</url>\n"
"        <snapshots>\n"
"            <enabled>false</enabled>\n"
"        </snapshots>\n"
"    </repository>\n"
"</repositories>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:777
#, no-wrap
msgid ""
"repositories {\n"
"    ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:782
#, no-wrap
msgid ""
"    maven {\n"
"        url \"https://packages.confluent.io/maven/\"\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:785
#, no-wrap
msgid ""
"dependencies {\n"
"    ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:787
#, no-wrap
msgid "    implementation(\"io.quarkus:quarkus-confluent-registry-avro\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:790
#, no-wrap
msgid ""
"    // Confluent registry libraries use Jakarta REST client\n"
"    implementation(\"io.quarkus:quarkus-rest-client-reactive\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-schema-registry-avro.adoc:795
#, no-wrap
msgid ""
"    implementation(\"io.confluent:kafka-avro-serializer:7.2.0\") {\n"
"        exclude group: \"jakarta.ws.rs\", module: \"jakarta.ws.rs-api\"\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:799
#, fuzzy
msgid "In JVM mode, any version of `io.confluent:kafka-avro-serializer` can be used.  In native mode, Quarkus only supports the following versions:"
msgstr "No modo JVM, qualquer versão de `io.confluent:kafka-avro-serializer` pode ser usada. No modo nativo, o Quarkus suporta apenas as seguintes versões:"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:801
#, fuzzy
msgid "6.2.x"
msgstr "6.2.x"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:802
#, fuzzy
msgid "7.0.x"
msgstr "7.0.x"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:803
#, fuzzy
msgid "7.1.x"
msgstr "7.1.x"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:804
#, fuzzy
msgid "7.2.x"
msgstr "7.2.x"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:806
#, fuzzy
msgid "For any other versions, the native configuration may need to be adjusted."
msgstr "Para quaisquer outras versões, poderá ser necessário ajustar a configuração nativa."

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:807
#, fuzzy, no-wrap
msgid "Avro code generation details"
msgstr "Detalhes da geração do código Avro"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:811
#, fuzzy
msgid "In this guide we used the Quarkus code generation mechanism to generate Java files from Avro schema."
msgstr "Neste guia, utilizámos o mecanismo de geração de código do Quarkus para gerar ficheiros Java a partir do esquema Avro."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:813
#, fuzzy
msgid "Under the hood, the mechanism uses `org.apache.avro:avro-compiler`."
msgstr "Na parte inferior, o mecanismo utiliza `org.apache.avro:avro-compiler`."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:815
#, fuzzy
msgid "You can use the following configuration properties to alter how it works:"
msgstr "Pode utilizar as seguintes propriedades de configuração para alterar o seu funcionamento:"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:819
#, fuzzy
msgid "`avro.codegen.[avsc|avdl|avpr].imports` - a list of files or directories that should be compiled first thus making them importable by subsequently compiled schemas. Note that imported files should not reference each other. All paths should be relative to the `src/[main|test]/avro` directory, or `avro` sub-directory in any source directory configured by the build system. Passed as a comma-separated list."
msgstr "`avro.codegen.[avsc|avdl|avpr].imports` - uma lista de ficheiros ou directórios que devem ser compilados primeiro, tornando-os assim importáveis por esquemas compilados subsequentemente. Note-se que os ficheiros importados não devem fazer referência uns aos outros. Todos os caminhos devem ser relativos ao diretório `src/[main|test]/avro`, ou ao sub-diretório `avro` em qualquer diretório de origem configurado pelo sistema de compilação. Passado como uma lista separada por vírgulas."

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:821
#, fuzzy
msgid "`avro.codegen.stringType` - the Java type to use for Avro strings. May be one of `CharSequence`, `String` or `Utf8`. Defaults to `String`"
msgstr "`avro.codegen.stringType` - o tipo Java a utilizar para as cadeias Avro. Pode ser um de `CharSequence`, `String` ou `Utf8`. A predefinição é `String`"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:823
#, fuzzy
msgid "`avro.codegen.createOptionalGetters` - enables generating the `getOptional...` methods that return an Optional of the requested type. Defaults to `false`"
msgstr "`avro.codegen.createOptionalGetters` - permite gerar os métodos `getOptional…​` que devolvem um Optional do tipo solicitado. A predefinição é `false`"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:824
#, fuzzy
msgid "`avro.codegen.enableDecimalLogicalType` - determines whether to use Java classes for decimal types, defaults to `false`"
msgstr "`avro.codegen.enableDecimalLogicalType` - determina se devem ser utilizadas classes Java para tipos decimais; a predefinição é `false`"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:826
#, fuzzy
msgid "`avro.codegen.createSetters` - determines whether to create setters for the fields of the record.  Defaults to `false`"
msgstr "`avro.codegen.createSetters` - determina se devem ser criados setters para os campos do registo. A predefinição é `false`"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:828
#, fuzzy
msgid "`avro.codegen.gettersReturnOptional` - enables generating `get...` methods that return an Optional of the requested type. Defaults to `false`"
msgstr "`avro.codegen.gettersReturnOptional` - permite gerar métodos `get…​` que devolvem um Optional do tipo solicitado. A predefinição é `false`"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:831
#, fuzzy
msgid "`avro.codegen.optionalGettersForNullableFieldsOnly`, works in conjunction with `gettersReturnOptional` option.  If it is set, `Optional` getters will be generated only for fields that are nullable. If the field is mandatory, regular getter will be generated. Defaults to `false`"
msgstr "`avro.codegen.optionalGettersForNullableFieldsOnly`funciona em conjunto com a opção `gettersReturnOptional`. Se estiver definida, os getters `Optional` serão gerados apenas para campos que são anuláveis. Se o campo for obrigatório, será gerado um getter regular. O padrão é `false`"

#. type: Title ==
#: upstream/_guides/kafka-schema-registry-avro.adoc:832
#, fuzzy, no-wrap
msgid "Further reading"
msgstr "Ler mais"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:835
#, fuzzy
msgid "link:https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.4/kafka/kafka.html[SmallRye Reactive Messaging Kafka] documentation"
msgstr "Documentação do  link:https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.4/kafka/kafka.html[SmallRye Reactive Messaging Kafka]"

#. type: Plain text
#: upstream/_guides/kafka-schema-registry-avro.adoc:836
#, fuzzy
msgid "link:https://quarkus.io/blog/kafka-avro/[How to Use Kafka, Schema Registry and Avro with Quarkus] - a blog post on which the guide is based. It gives a good introduction to Avro and the concept of schema registry"
msgstr "link:https://quarkus.io/blog/kafka-avro/[How to Use Kafka, Schema Registry and Avro with Quarkus] - uma publicação no blogue em que o guia se baseia. Dá uma boa introdução ao Avro e ao conceito de registo de esquemas"
